// Copyright 2010 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};
export default Module;

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

var arguments_ = [];
var thisProgram = './this.program';
var quit_ = function(status, toThrow) {
  throw toThrow;
};

// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).

var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_HAS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
ENVIRONMENT_IS_WEB = typeof window === 'object';
ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
// A web environment like Electron.js can have Node enabled, so we must
// distinguish between Node-enabled environments and Node environments per se.
// This will allow the former to do things like mount NODEFS.
// Extended check using process.versions fixes issue #8816.
// (Also makes redundant the original check that 'require' is a function.)
ENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';
ENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module['ENVIRONMENT']) {
  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');
}


// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)




// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory = '';
function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  }
  return scriptDirectory + path;
}

// Hooks that are implemented differently in different runtime environments.
var read_,
    readAsync,
    readBinary,
    setWindowTitle;

if (ENVIRONMENT_IS_NODE) {
  scriptDirectory = __dirname + '/';

  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  var nodeFS;
  var nodePath;

  read_ = function shell_read(filename, binary) {
    var ret;
    ret = tryParseAsDataURI(filename);
    if (!ret) {
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    }
    return binary ? ret : ret.toString();
  };

  readBinary = function readBinary(filename) {
    var ret = read_(filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (process['argv'].length > 1) {
    thisProgram = process['argv'][1].replace(/\\/g, '/');
  }

  arguments_ = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  process['on']('unhandledRejection', abort);

  quit_ = function(status) {
    process['exit'](status);
  };

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
} else
if (ENVIRONMENT_IS_SHELL) {


  if (typeof read != 'undefined') {
    read_ = function shell_read(f) {
      var data = tryParseAsDataURI(f);
      if (data) {
        return intArrayToString(data);
      }
      return read(f);
    };
  }

  readBinary = function readBinary(f) {
    var data;
    data = tryParseAsDataURI(f);
    if (data) {
      return data;
    }
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    arguments_ = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    arguments_ = arguments;
  }

  if (typeof quit === 'function') {
    quit_ = function(status) {
      quit(status);
    };
  }

  if (typeof print !== 'undefined') {
    // Prefer to use print/printErr where they exist, as they usually work better.
    if (typeof console === 'undefined') console = {};
    console.log = print;
    console.warn = console.error = typeof printErr !== 'undefined' ? printErr : print;
  }
} else
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled
    scriptDirectory = self.location.href;
  } else if (document.currentScript) { // web
    scriptDirectory = document.currentScript.src;
  }
  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
  // otherwise, slice off the final part of the url to find the script directory.
  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,
  // and scriptDirectory will correctly be replaced with an empty string.
  if (scriptDirectory.indexOf('blob:') !== 0) {
    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);
  } else {
    scriptDirectory = '';
  }


  read_ = function shell_read(url) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
    } catch (err) {
      var data = tryParseAsDataURI(url);
      if (data) {
        return intArrayToString(data);
      }
      throw err;
    }
  };

  if (ENVIRONMENT_IS_WORKER) {
    readBinary = function readBinary(url) {
      try {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
      } catch (err) {
        var data = tryParseAsDataURI(url);
        if (data) {
          return data;
        }
        throw err;
      }
    };
  }

  readAsync = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      var data = tryParseAsDataURI(url);
      if (data) {
        onload(data.buffer);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  setWindowTitle = function(title) { document.title = title };
} else
{
  throw new Error('environment detection error');
}

// Set up the out() and err() hooks, which are how we can print to stdout or
// stderr, respectively.
var out = Module['print'] || console.log.bind(console);
var err = Module['printErr'] || console.warn.bind(console);

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = null;

// Emit code to handle expected values on the Module object. This applies Module.x
// to the proper local x. This has two benefits: first, we only emit it if it is
// expected to arrive, and second, by using a local everywhere else that can be
// minified.
if (Module['arguments']) arguments_ = Module['arguments'];if (!Object.getOwnPropertyDescriptor(Module, 'arguments')) Object.defineProperty(Module, 'arguments', { get: function() { abort('Module.arguments has been replaced with plain arguments_') } });
if (Module['thisProgram']) thisProgram = Module['thisProgram'];if (!Object.getOwnPropertyDescriptor(Module, 'thisProgram')) Object.defineProperty(Module, 'thisProgram', { get: function() { abort('Module.thisProgram has been replaced with plain thisProgram') } });
if (Module['quit']) quit_ = Module['quit'];if (!Object.getOwnPropertyDescriptor(Module, 'quit')) Object.defineProperty(Module, 'quit', { get: function() { abort('Module.quit has been replaced with plain quit_') } });

// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
// Assertions on removed incoming Module JS APIs.
assert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['read'] === 'undefined', 'Module.read option was removed (modify read_ in JS)');
assert(typeof Module['readAsync'] === 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');
assert(typeof Module['readBinary'] === 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');
assert(typeof Module['setWindowTitle'] === 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');
if (!Object.getOwnPropertyDescriptor(Module, 'read')) Object.defineProperty(Module, 'read', { get: function() { abort('Module.read has been replaced with plain read_') } });
if (!Object.getOwnPropertyDescriptor(Module, 'readAsync')) Object.defineProperty(Module, 'readAsync', { get: function() { abort('Module.readAsync has been replaced with plain readAsync') } });
if (!Object.getOwnPropertyDescriptor(Module, 'readBinary')) Object.defineProperty(Module, 'readBinary', { get: function() { abort('Module.readBinary has been replaced with plain readBinary') } });
// TODO: add when SDL2 is fixed if (!Object.getOwnPropertyDescriptor(Module, 'setWindowTitle')) Object.defineProperty(Module, 'setWindowTitle', { get: function() { abort('Module.setWindowTitle has been replaced with plain setWindowTitle') } });


// TODO remove when SDL2 is fixed (also see above)



// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;

// stack management, and other functionality that is provided by the compiled code,
// should not be used before it is ready
stackSave = stackRestore = stackAlloc = function() {
  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');
};

function staticAlloc(size) {
  abort('staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)');
}

function dynamicAlloc(size) {
  assert(DYNAMICTOP_PTR);
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  if (end > _emscripten_get_heap_size()) {
    abort('failure to dynamicAlloc - memory growth etc. is not supported there, call malloc/sbrk directly');
  }
  HEAP32[DYNAMICTOP_PTR>>2] = end;
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  return Math.ceil(size / factor) * factor;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
}

var asm2wasmImports = { // special asm2wasm imports
    "f64-rem": function(x, y) {
        return x % y;
    },
    "debugger": function() {
        debugger;
    }
};



var jsCallStartIndex = 1;
var functionPointers = new Array(0);


// 'sig' parameter is required for the llvm backend but only when func is not
// already a WebAssembly function.
function addFunction(func, sig) {


  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';

}

function removeFunction(index) {

  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    assert(args.length == sig.length-1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    assert(sig.length == 1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].call(null, ptr);
  }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
  tempRet0 = value;
};

var getTempRet0 = function() {
  return tempRet0;
};

function getCompilerSetting(name) {
  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';
}

var Runtime = {
  // helpful errors
  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 8;




// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html


var wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];if (!Object.getOwnPropertyDescriptor(Module, 'wasmBinary')) Object.defineProperty(Module, 'wasmBinary', { get: function() { abort('Module.wasmBinary has been replaced with plain wasmBinary') } });
var noExitRuntime;if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];if (!Object.getOwnPropertyDescriptor(Module, 'noExitRuntime')) Object.defineProperty(Module, 'noExitRuntime', { get: function() { abort('Module.noExitRuntime has been replaced with plain noExitRuntime') } });




// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.
// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}





// Wasm globals

var wasmMemory;

// Potentially used for direct table calls.
var wasmTable;


//========================================
// Runtime essentials
//========================================

// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT = false;

// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

// C calling interface.
function ccall(ident, returnType, argTypes, args, opts) {
  // For fast lookup of conversion functions
  var toC = {
    'string': function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    },
    'array': function(arr) {
      var ret = stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }
  };

  function convertReturnValue(ret) {
    if (returnType === 'string') return UTF8ToString(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);

  ret = convertReturnValue(ret);
  if (stack !== 0) stackRestore(stack);
  return ret;
}

function cwrap(ident, returnType, argTypes, opts) {
  return function() {
    return ccall(ident, returnType, argTypes, arguments, opts);
  }
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk
var ALLOC_NONE = 3; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc,
    stackAlloc,
    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}




/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  abort("this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!");
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAPU8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}


// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;

/**
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
  var endIdx = idx + maxBytesToRead;
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)
  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var str = '';
    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that
    while (idx < endPtr) {
      // For UTF8 byte structure, see:
      // http://en.wikipedia.org/wiki/UTF-8#Description
      // https://www.ietf.org/rfc/rfc2279.txt
      // https://tools.ietf.org/html/rfc3629
      var u0 = u8Array[idx++];
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      var u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      var u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);
      }

      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
  return str;
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a
// copy of that string as a Javascript String object.
// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit
//                 this parameter to scan the string until the first \0 byte. If maxBytesToRead is
//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the
//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will
//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)
//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may
//                 throw JS JIT optimizations off, so it is worth to consider consistently using one
//                 style or the other.
/**
 * @param {number} ptr
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ToString(ptr, maxBytesToRead) {
  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array.
//                    This count should include the null terminator,
//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) {
      var u1 = str.charCodeAt(++i);
      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);
    }
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 3 >= endIdx) break;
      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.
function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) ++len;
    else if (u <= 0x7FF) len += 2;
    else if (u <= 0xFFFF) len += 3;
    else len += 4;
  }
  return len;
}


// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}




// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBufferAndViews(buf) {
  buffer = buf;
  Module['HEAP8'] = HEAP8 = new Int8Array(buf);
  Module['HEAP16'] = HEAP16 = new Int16Array(buf);
  Module['HEAP32'] = HEAP32 = new Int32Array(buf);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);
}


var STATIC_BASE = 8,
    STACK_BASE = 37904,
    STACKTOP = STACK_BASE,
    STACK_MAX = 5280784,
    DYNAMIC_BASE = 5280784,
    DYNAMICTOP_PTR = 37872;

assert(STACK_BASE % 16 === 0, 'stack must start aligned');
assert(DYNAMIC_BASE % 16 === 0, 'heap must start aligned');



var TOTAL_STACK = 5242880;
if (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')

var INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 167772160;if (!Object.getOwnPropertyDescriptor(Module, 'TOTAL_MEMORY')) Object.defineProperty(Module, 'TOTAL_MEMORY', { get: function() { abort('Module.TOTAL_MEMORY has been replaced with plain INITIAL_TOTAL_MEMORY') } });

assert(INITIAL_TOTAL_MEMORY >= TOTAL_STACK, 'TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');







  if (Module['buffer']) {
    buffer = Module['buffer'];
  }
  else {
    buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
  }


// If the user provides an incorrect length, just use that length instead rather than providing the user to
// specifically provide the memory length with Module['TOTAL_MEMORY'].
INITIAL_TOTAL_MEMORY = buffer.byteLength;
updateGlobalBufferAndViews(buffer);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  var cookie1 = HEAPU32[(STACK_MAX >> 2)-1];
  var cookie2 = HEAPU32[(STACK_MAX >> 2)-2];
  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + cookie2.toString(16) + ' ' + cookie1.toString(16));
  }
  // Also test the global address 0 for integrity.
  // We don't do this with ASan because ASan does its own checks for this.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');
}


  HEAP32[0] = 0x63736d65; /* 'emsc' */



// Endianness check (note: assumes compiler arch was little-endian)
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

function abortFnPtrError(ptr, sig) {
	abort("Invalid function pointer " + ptr + " called with signature '" + sig + "'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.");
}



function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {

  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPRERUN__);
}

function initRuntime() {
  checkStackCookie();
  assert(!runtimeInitialized);
  runtimeInitialized = true;
  if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
TTY.init();
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  FS.ignorePermissions = false;
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();

  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }

  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;



// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            err('still waiting on run dependencies:');
          }
          err('dependency: ' + dep);
        }
        if (shown) {
          err('(end of list)');
        }
      }, 10000);
    }
  } else {
    err('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;

  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }

  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    err('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;







// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}





// Globals used by JS i64 conversions
var tempDouble;
var tempI64;

// === Body ===

var ASM_CONSTS = [];





// STATICTOP = STATIC_BASE + 37896;
/* global initializers */  __ATINIT__.push({ func: function() { globalCtors() } });


memoryInitializer = "data:application/octet-stream;base64,";





/* no memory initializer */
var tempDoublePtr = 37888
assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}

function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}

// {{PRE_LIBRARY}}


  function demangle(func) {
      warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
      return func;
    }

  function demangleAll(text) {
      var regex =
        /\b__Z[\w\d_]+/g;
      return text.replace(regex,
        function(x) {
          var y = demangle(x);
          return x === y ? x : (y + ' [' + x + ']');
        });
    }

  function jsStackTrace() {
      var err = new Error();
      if (!err.stack) {
        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
        // so try that as a special-case.
        try {
          throw new Error(0);
        } catch(e) {
          err = e;
        }
        if (!err.stack) {
          return '(no stack trace available)';
        }
      }
      return err.stack.toString();
    }

  function stackTrace() {
      var js = jsStackTrace();
      if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
      return demangleAll(js);
    }

  function ___assert_fail(condition, filename, line, func) {
      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }


  var ___exception_infos={};

  var ___exception_caught= [];

  function ___exception_addRef(ptr) {
      if (!ptr) return;
      var info = ___exception_infos[ptr];
      info.refcount++;
    }

  function ___exception_deAdjust(adjusted) {
      if (!adjusted || ___exception_infos[adjusted]) return adjusted;
      for (var key in ___exception_infos) {
        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for
        var adj = ___exception_infos[ptr].adjusted;
        var len = adj.length;
        for (var i = 0; i < len; i++) {
          if (adj[i] === adjusted) {
            return ptr;
          }
        }
      }
      return adjusted;
    }function ___cxa_begin_catch(ptr) {
      var info = ___exception_infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exceptions--;
      }
      if (info) info.rethrown = false;
      ___exception_caught.push(ptr);
      ___exception_addRef(___exception_deAdjust(ptr));
      return ptr;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;

      throw 'Pure virtual function called!';
    }


  var ___exception_last=0;function ___cxa_throw(ptr, type, destructor) {
      ___exception_infos[ptr] = {
        ptr: ptr,
        adjusted: [ptr],
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      ___exception_last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exceptions++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___cxa_uncaught_exceptions() {
      return __ZSt18uncaught_exceptionv.uncaught_exceptions;
    }

  function ___gxx_personality_v0() {
    }

  function ___lock() {}


  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else err('failed to set errno from JS');
      return value;
    }function ___map_file(pathname, size) {
      ___setErrNo(1);
      return -1;
    }






  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      }};


  var PATH_FS={resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH_FS.resolve(from).substr(1);
        to = PATH_FS.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};

  var TTY={ttys:[],init:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(19);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(6);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(5);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(11);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(6);
          }
          try {
            for (var i = 0; i < length; i++) {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            }
          } catch (e) {
            throw new FS.ErrnoError(5);
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);
              var bytesRead = 0;

              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion

              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }

              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }

              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
            } else
            if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};

  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(1);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        var prevCapacity = node.contents ? node.contents.length : 0;
        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
        // avoid overshooting the allocation cap by a very large margin.
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
        var oldContents = node.contents;
        node.contents = new Uint8Array(newCapacity); // Allocate new storage.
        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
        return;
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[2];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(39);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(39);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(22);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {

          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();

          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }

          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(19);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            // malloc() can lead to growing the heap. If targeting the heap, we need to
            // re-acquire the heap buffer object in case growth had occurred.
            var fromHeap = (buffer.buffer == HEAP8.buffer);
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(12);
            }
            (fromHeap ? HEAP8 : buffer).set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(19);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }

          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};

  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);

          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);

            var src = populate ? remote : local;
            var dst = populate ? local : remote;

            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }

        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;

          var fileStore;

          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }

          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;

          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};

        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };

        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));

        while (check.length) {
          var path = check.pop();
          var stat;

          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }

          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }

          entries[path] = { timestamp: stat.mtime };
        }

        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};

        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);

          try {
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
            transaction.onerror = function(e) {
              callback(this.error);
              e.preventDefault();
            };

            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index('timestamp');

            index.openKeyCursor().onsuccess = function(event) {
              var cursor = event.target.result;

              if (!cursor) {
                return callback(null, { type: 'remote', db: db, entries: entries });
              }

              entries[cursor.primaryKey] = { timestamp: cursor.key };

              cursor.continue();
            };
          } catch (e) {
            return callback(e);
          }
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;

        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }

        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }

          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }

        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);

          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }

        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;

        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });

        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });

        if (!total) {
          return callback(null);
        }

        var errored = false;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);

        function done(err) {
          if (err && !errored) {
            errored = true;
            return callback(err);
          }
        };

        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };

        transaction.oncomplete = function(e) {
          if (!errored) {
            callback(null);
          }
        };

        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });

        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};

  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
        var flags = process["binding"]("constants");
        // Node.js 4 compatibility: it has no namespaces for constants
        if (flags["fs"]) {
          flags = flags["fs"];
        }
        NODEFS.flagsForNodeMap = {
          "1024": flags["O_APPEND"],
          "64": flags["O_CREAT"],
          "128": flags["O_EXCL"],
          "0": flags["O_RDONLY"],
          "2": flags["O_RDWR"],
          "4096": flags["O_SYNC"],
          "512": flags["O_TRUNC"],
          "1": flags["O_WRONLY"]
        };
      },bufferFrom:function (arrayBuffer) {
        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer
        // Buffer.from before 4.5 was just a method inherited from Uint8Array
        // Buffer.alloc has been added with Buffer.from together, so check it instead
        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
      },mount:function (mount) {
        assert(ENVIRONMENT_HAS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(22);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // Node.js on Windows never represents permission bit 'x', so
            // propagate read bits to execute bits
            stat.mode = stat.mode | ((stat.mode & 292) >> 2);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(-e.errno); // syscall errnos are negated, node's are not
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsForNode:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        var newFlags = 0;
        for (var k in NODEFS.flagsForNodeMap) {
          if (flags & k) {
            newFlags |= NODEFS.flagsForNodeMap[k];
            flags ^= k;
          }
        }

        if (!flags) {
          return newFlags;
        } else {
          throw new FS.ErrnoError(22);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },read:function (stream, buffer, offset, length, position) {
          // Node.js < 6 compatibility: node errors on 0 length reads
          if (length === 0) return 0;
          try {
            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(-e.errno);
          }
        },write:function (stream, buffer, offset, length, position) {
          try {
            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(-e.errno);
          }
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(-e.errno);
              }
            }
          }

          if (position < 0) {
            throw new FS.ErrnoError(22);
          }

          return position;
        }}};

  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(2);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(1);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(1);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(1);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(1);
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(1);
        },readlink:function (node) {
          throw new FS.ErrnoError(1);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(5);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
          return position;
        }}};

  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};

  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH_FS.resolve(FS.cwd(), path);
        opts = opts || {};

        if (!path) return { path: '', node: null };

        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }

        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(40);
        }

        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);

        // start at the root
        var current = FS.root;
        var current_path = '/';

        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }

          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);

          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }

          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);

              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;

              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(40);
              }
            }
          }
        }

        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;


        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };

          FS.FSNode.prototype = {};

          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;

          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }

        var node = new FS.FSNode(parent, name, mode, rdev);

        FS.hashAddNode(node);

        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return 13;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return 13;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return 13;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return 13;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return 17;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return 20;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return 16;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return 21;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return 2;
        }
        if (FS.isLink(node.mode)) {
          return 40;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return 21;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(24);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(29);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];

        while (check.length) {
          var m = check.pop();

          mounts.push(m);

          check.push.apply(check, m.mounts);
        }

        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }

        FS.syncFSRequests++;

        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }

        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;

        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }

        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };

        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;

        if (root && FS.root) {
          throw new FS.ErrnoError(16);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });

          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;

          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(16);
          }

          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(20);
          }
        }

        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };

        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;

        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;

          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }

        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });

        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(22);
        }

        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);

        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];

          while (current) {
            var next = current.name_next;

            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }

            current = next;
          }
        });

        // no longer a mountpoint
        node.mounted = null;

        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(22);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(1);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != 17) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH_FS.resolve(oldpath)) {
          throw new FS.ErrnoError(2);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(2);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(1);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(16);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(2);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(18);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH_FS.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(22);
        }
        // new path should not be an ancestor of the old path
        relative = PATH_FS.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(39);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(16);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(16);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(20);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(16);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(2);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(22);
        }
        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(2);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(1);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(22);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(22);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(22);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(2);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(17);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(2);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(20);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);

        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            console.log("FS.trackingDelegate error on read file: " + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },isClosed:function (stream) {
        return stream.fd === null;
      },llseek:function (stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(29);
        }
        if (whence != 0 /* SEEK_SET */ && whence != 1 /* SEEK_CUR */ && whence != 2 /* SEEK_END */) {
          throw new FS.ErrnoError(22);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(22);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(9);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(22);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(29);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(22);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(9);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(22);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(29);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(22);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(9);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(19);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(95);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // User requests writing to file (prot & PROT_WRITE != 0).
        // Checking if we have permissions to write to the file unless
        // MAP_PRIVATE flag is set. According to POSIX spec it is possible
        // to write to file opened in read-only mode with MAP_PRIVATE flag,
        // as all modifications will be visible only in the memory of
        // the current process.
        if ((prot & 2) !== 0
            && (flags & 2) === 0
            && (stream.flags & 2097155) !== 2) {
          throw new FS.ErrnoError(13);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(13);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(19);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(25);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data === 'string') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
        } else if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(2);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(20);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto === 'object' && typeof crypto['getRandomValues'] === 'function') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else
        if (ENVIRONMENT_IS_NODE) {
          // for nodejs with or without crypto support included
          try {
            var crypto_module = require('crypto');
            // nodejs has crypto support
            random_device = function() { return crypto_module['randomBytes'](1)[0]; };
          } catch (e) {
            // nodejs doesn't have crypto support
          }
        } else
        {}
        if (!random_device) {
          // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096
          random_device = function() { abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };"); };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(9);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops

        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }

        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        var stdout = FS.open('/dev/stdout', 'w');
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];

          // Try to get a maximally helpful stack trace. On Node.js, getting Error.stack
          // now ensures it shows what we want.
          if (this.stack) {
            // Define the stack property for Node.js 4, which otherwise errors on the next line.
            Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
            this.stack = demangleAll(this.stack);
          }
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [2].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();

        FS.nameTable = new Array(4096);

        FS.mount(MEMFS, {}, '/');

        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();

        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;

        FS.ensureErrnoError();

        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];

        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH_FS.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(5);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(11);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(5);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (read_) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(read_(obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(5);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        };
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        };
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";

          var chunkSize = 1024*1024; // Chunk size in bytes

          if (!hasByteServing) chunkSize = datalength;

          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");

            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);

            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }

            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });

          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }

          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        };
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });

          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }

        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(5);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(5);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(9);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -20;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(40))>>2)]=tempI64[0],HEAP32[(((buf)+(44))>>2)]=tempI64[1]);
        HEAP32[(((buf)+(48))>>2)]=4096;
        HEAP32[(((buf)+(52))>>2)]=stat.blocks;
        HEAP32[(((buf)+(56))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(76))>>2)]=0;
        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[(((buf)+(80))>>2)]=tempI64[0],HEAP32[(((buf)+(84))>>2)]=tempI64[1]);
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -22;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -22;
        var ret = FS.readlink(path);

        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;

        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -22;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        if (!node) {
          return -2;
        }
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -13;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = UTF8ToString(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(9);
        return stream;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var HIGH_OFFSET = 0x100000000; // 2^32
      // use an unsigned operator on low and shift high by 32-bits
      var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);

      var DOUBLE_LIMIT = 0x20000000000000; // 2^53
      // we also check for equality since DOUBLE_LIMIT + 1 == DOUBLE_LIMIT
      if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {
        return -75;
      }

      FS.llseek(stream, offset, whence);
      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((result)>>2)]=tempI64[0],HEAP32[(((result)+(4))>>2)]=tempI64[1]);
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21509:
        case 21505: {
          if (!stream.tty) return -25;
          return 0;
        }
        case 21510:
        case 21511:
        case 21512:
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -25;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -25;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -25;
          return -22; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -25;
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -25;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


  function __emscripten_syscall_munmap(addr, len) {
      if (addr === -1 || len === 0) {
        return -22;
      }
      // TODO: support unmmap'ing parts of allocations
      var info = SYSCALLS.mappings[addr];
      if (!info) return 0;
      if (len === info.len) {
        var stream = FS.getStream(info.fd);
        SYSCALLS.doMsync(addr, stream, len, info.flags);
        FS.munmap(stream);
        SYSCALLS.mappings[addr] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    }function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // munmap
      var addr = SYSCALLS.get(), len = SYSCALLS.get();
      return __emscripten_syscall_munmap(addr, len);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }









  function ___unlock() {}


  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }



  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }


  var awaitingDependencies={};

  var registeredTypes={};

  var typeDependencies={};






  var char_0=48;

  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;

          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };

      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }



  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });

      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }

      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};

      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }

      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }

      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];

      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);

      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }




  function ClassHandle_isAliasOf(other) {
      if (!(this instanceof ClassHandle)) {
          return false;
      }
      if (!(other instanceof ClassHandle)) {
          return false;
      }

      var leftClass = this.$$.ptrType.registeredClass;
      var left = this.$$.ptr;
      var rightClass = other.$$.ptrType.registeredClass;
      var right = other.$$.ptr;

      while (leftClass.baseClass) {
          left = leftClass.upcast(left);
          leftClass = leftClass.baseClass;
      }

      while (rightClass.baseClass) {
          right = rightClass.upcast(right);
          rightClass = rightClass.baseClass;
      }

      return leftClass === rightClass && left === right;
    }


  function shallowCopyInternalPointer(o) {
      return {
          count: o.count,
          deleteScheduled: o.deleteScheduled,
          preservePointerOnDelete: o.preservePointerOnDelete,
          ptr: o.ptr,
          ptrType: o.ptrType,
          smartPtr: o.smartPtr,
          smartPtrType: o.smartPtrType,
      };
    }

  function throwInstanceAlreadyDeleted(obj) {
      function getInstanceTypeName(handle) {
        return handle.$$.ptrType.registeredClass.name;
      }
      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');
    }


  var finalizationGroup=false;

  function detachFinalizer(handle) {}


  function runDestructor($$) {
      if ($$.smartPtr) {
          $$.smartPtrType.rawDestructor($$.smartPtr);
      } else {
          $$.ptrType.registeredClass.rawDestructor($$.ptr);
      }
    }function releaseClassHandle($$) {
      $$.count.value -= 1;
      var toDelete = 0 === $$.count.value;
      if (toDelete) {
          runDestructor($$);
      }
    }function attachFinalizer(handle) {
      if ('undefined' === typeof FinalizationGroup) {
          attachFinalizer = function (handle) { return handle; };
          return handle;
      }
      // If the running environment has a FinalizationGroup (see
      // https://github.com/tc39/proposal-weakrefs), then attach finalizers
      // for class handles.  We check for the presence of FinalizationGroup
      // at run-time, not build-time.
      finalizationGroup = new FinalizationGroup(function (iter) {
          for (var result = iter.next(); !result.done; result = iter.next()) {
              var $$ = result.value;
              if (!$$.ptr) {
                  console.warn('object already deleted: ' + $$.ptr);
              } else {
                  releaseClassHandle($$);
              }
          }
      });
      attachFinalizer = function(handle) {
          finalizationGroup.register(handle, handle.$$, handle.$$);
          return handle;
      };
      detachFinalizer = function(handle) {
          finalizationGroup.unregister(handle.$$);
      };
      return attachFinalizer(handle);
    }function ClassHandle_clone() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }

      if (this.$$.preservePointerOnDelete) {
          this.$$.count.value += 1;
          return this;
      } else {
          var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {
              $$: {
                  value: shallowCopyInternalPointer(this.$$),
              }
          }));

          clone.$$.count.value += 1;
          clone.$$.deleteScheduled = false;
          return clone;
      }
    }

  function ClassHandle_delete() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }

      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }

      detachFinalizer(this);
      releaseClassHandle(this.$$);

      if (!this.$$.preservePointerOnDelete) {
          this.$$.smartPtr = undefined;
          this.$$.ptr = undefined;
      }
    }

  function ClassHandle_isDeleted() {
      return !this.$$.ptr;
    }


  var delayFunction=undefined;

  var deletionQueue=[];

  function flushPendingDeletes() {
      while (deletionQueue.length) {
          var obj = deletionQueue.pop();
          obj.$$.deleteScheduled = false;
          obj['delete']();
      }
    }function ClassHandle_deleteLater() {
      if (!this.$$.ptr) {
          throwInstanceAlreadyDeleted(this);
      }
      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
          throwBindingError('Object already scheduled for deletion');
      }
      deletionQueue.push(this);
      if (deletionQueue.length === 1 && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
      this.$$.deleteScheduled = true;
      return this;
    }function init_ClassHandle() {
      ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;
      ClassHandle.prototype['clone'] = ClassHandle_clone;
      ClassHandle.prototype['delete'] = ClassHandle_delete;
      ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;
      ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;
    }function ClassHandle() {
    }

  var registeredPointers={};


  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }

          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }

  function RegisteredClass(
      name,
      constructor,
      instancePrototype,
      rawDestructor,
      baseClass,
      getActualType,
      upcast,
      downcast
    ) {
      this.name = name;
      this.constructor = constructor;
      this.instancePrototype = instancePrototype;
      this.rawDestructor = rawDestructor;
      this.baseClass = baseClass;
      this.getActualType = getActualType;
      this.upcast = upcast;
      this.downcast = downcast;
      this.pureVirtualFunctions = [];
    }



  function upcastPointer(ptr, ptrClass, desiredClass) {
      while (ptrClass !== desiredClass) {
          if (!ptrClass.upcast) {
              throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
          }
          ptr = ptrClass.upcast(ptr);
          ptrClass = ptrClass.baseClass;
      }
      return ptr;
    }function constNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }

      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }

  function genericPointerToWireType(destructors, handle) {
      var ptr;
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }

          if (this.isSmartPointer) {
              ptr = this.rawConstructor();
              if (destructors !== null) {
                  destructors.push(this.rawDestructor, ptr);
              }
              return ptr;
          } else {
              return 0;
          }
      }

      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (!this.isConst && handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);

      if (this.isSmartPointer) {
          // TODO: this is not strictly true
          // We could support BY_EMVAL conversions from raw pointers to smart pointers
          // because the smart pointer can hold a reference to the handle
          if (undefined === handle.$$.smartPtr) {
              throwBindingError('Passing raw pointer to smart pointer is illegal');
          }

          switch (this.sharingPolicy) {
              case 0: // NONE
                  // no upcasting
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);
                  }
                  break;

              case 1: // INTRUSIVE
                  ptr = handle.$$.smartPtr;
                  break;

              case 2: // BY_EMVAL
                  if (handle.$$.smartPtrType === this) {
                      ptr = handle.$$.smartPtr;
                  } else {
                      var clonedHandle = handle['clone']();
                      ptr = this.rawShare(
                          ptr,
                          __emval_register(function() {
                              clonedHandle['delete']();
                          })
                      );
                      if (destructors !== null) {
                          destructors.push(this.rawDestructor, ptr);
                      }
                  }
                  break;

              default:
                  throwBindingError('Unsupporting sharing policy');
          }
      }
      return ptr;
    }

  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
          if (this.isReference) {
              throwBindingError('null is not a valid ' + this.name);
          }
          return 0;
      }

      if (!handle.$$) {
          throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }
      if (!handle.$$.ptr) {
          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);
      }
      if (handle.$$.ptrType.isConst) {
          throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);
      }
      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }


  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }

  function RegisteredPointer_getPointee(ptr) {
      if (this.rawGetPointee) {
          ptr = this.rawGetPointee(ptr);
      }
      return ptr;
    }

  function RegisteredPointer_destructor(ptr) {
      if (this.rawDestructor) {
          this.rawDestructor(ptr);
      }
    }

  function RegisteredPointer_deleteObject(handle) {
      if (handle !== null) {
          handle['delete']();
      }
    }


  function downcastPointer(ptr, ptrClass, desiredClass) {
      if (ptrClass === desiredClass) {
          return ptr;
      }
      if (undefined === desiredClass.baseClass) {
          return null; // no conversion
      }

      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
      if (rv === null) {
          return null;
      }
      return desiredClass.downcast(rv);
    }




  function getInheritedInstanceCount() {
      return Object.keys(registeredInstances).length;
    }

  function getLiveInheritedInstances() {
      var rv = [];
      for (var k in registeredInstances) {
          if (registeredInstances.hasOwnProperty(k)) {
              rv.push(registeredInstances[k]);
          }
      }
      return rv;
    }

  function setDelayFunction(fn) {
      delayFunction = fn;
      if (deletionQueue.length && delayFunction) {
          delayFunction(flushPendingDeletes);
      }
    }function init_embind() {
      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;
      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;
      Module['flushPendingDeletes'] = flushPendingDeletes;
      Module['setDelayFunction'] = setDelayFunction;
    }var registeredInstances={};

  function getBasestPointer(class_, ptr) {
      if (ptr === undefined) {
          throwBindingError('ptr should not be undefined');
      }
      while (class_.baseClass) {
          ptr = class_.upcast(ptr);
          class_ = class_.baseClass;
      }
      return ptr;
    }function getInheritedInstance(class_, ptr) {
      ptr = getBasestPointer(class_, ptr);
      return registeredInstances[ptr];
    }

  function makeClassHandle(prototype, record) {
      if (!record.ptrType || !record.ptr) {
          throwInternalError('makeClassHandle requires ptr and ptrType');
      }
      var hasSmartPtrType = !!record.smartPtrType;
      var hasSmartPtr = !!record.smartPtr;
      if (hasSmartPtrType !== hasSmartPtr) {
          throwInternalError('Both smartPtrType and smartPtr must be specified');
      }
      record.count = { value: 1 };
      return attachFinalizer(Object.create(prototype, {
          $$: {
              value: record,
          },
      }));
    }function RegisteredPointer_fromWireType(ptr) {
      // ptr is a raw pointer (or a raw smartpointer)

      // rawPointer is a maybe-null raw pointer
      var rawPointer = this.getPointee(ptr);
      if (!rawPointer) {
          this.destructor(ptr);
          return null;
      }

      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
      if (undefined !== registeredInstance) {
          // JS object has been neutered, time to repopulate it
          if (0 === registeredInstance.$$.count.value) {
              registeredInstance.$$.ptr = rawPointer;
              registeredInstance.$$.smartPtr = ptr;
              return registeredInstance['clone']();
          } else {
              // else, just increment reference count on existing object
              // it already has a reference to the smart pointer
              var rv = registeredInstance['clone']();
              this.destructor(ptr);
              return rv;
          }
      }

      function makeDefaultHandle() {
          if (this.isSmartPointer) {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this.pointeeType,
                  ptr: rawPointer,
                  smartPtrType: this,
                  smartPtr: ptr,
              });
          } else {
              return makeClassHandle(this.registeredClass.instancePrototype, {
                  ptrType: this,
                  ptr: ptr,
              });
          }
      }

      var actualType = this.registeredClass.getActualType(rawPointer);
      var registeredPointerRecord = registeredPointers[actualType];
      if (!registeredPointerRecord) {
          return makeDefaultHandle.call(this);
      }

      var toType;
      if (this.isConst) {
          toType = registeredPointerRecord.constPointerType;
      } else {
          toType = registeredPointerRecord.pointerType;
      }
      var dp = downcastPointer(
          rawPointer,
          this.registeredClass,
          toType.registeredClass);
      if (dp === null) {
          return makeDefaultHandle.call(this);
      }
      if (this.isSmartPointer) {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
              smartPtrType: this,
              smartPtr: ptr,
          });
      } else {
          return makeClassHandle(toType.registeredClass.instancePrototype, {
              ptrType: toType,
              ptr: dp,
          });
      }
    }function init_RegisteredPointer() {
      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
      RegisteredPointer.prototype['argPackAdvance'] = 8;
      RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;
      RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;
      RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;
    }function RegisteredPointer(
      name,
      registeredClass,
      isReference,
      isConst,

      // smart pointer properties
      isSmartPointer,
      pointeeType,
      sharingPolicy,
      rawGetPointee,
      rawConstructor,
      rawShare,
      rawDestructor
    ) {
      this.name = name;
      this.registeredClass = registeredClass;
      this.isReference = isReference;
      this.isConst = isConst;

      // smart pointer properties
      this.isSmartPointer = isSmartPointer;
      this.pointeeType = pointeeType;
      this.sharingPolicy = sharingPolicy;
      this.rawGetPointee = rawGetPointee;
      this.rawConstructor = rawConstructor;
      this.rawShare = rawShare;
      this.rawDestructor = rawDestructor;

      if (!isSmartPointer && registeredClass.baseClass === undefined) {
          if (isConst) {
              this['toWireType'] = constNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          } else {
              this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;
              this.destructorFunction = null;
          }
      } else {
          this['toWireType'] = genericPointerToWireType;
          // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns
          // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.
          // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in
          //       craftInvokerFunction altogether.
      }
    }

  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }

  function embind__requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);

      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }

          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';

          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }

      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = Module['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = Module['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }

      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }


  var UnboundTypeError=undefined;

  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);

      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_class(
      rawType,
      rawPointerType,
      rawConstPointerType,
      baseClassRawType,
      getActualTypeSignature,
      getActualType,
      upcastSignature,
      upcast,
      downcastSignature,
      downcast,
      name,
      destructorSignature,
      rawDestructor
    ) {
      name = readLatin1String(name);
      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);
      if (upcast) {
          upcast = embind__requireFunction(upcastSignature, upcast);
      }
      if (downcast) {
          downcast = embind__requireFunction(downcastSignature, downcast);
      }
      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
      var legalFunctionName = makeLegalFunctionName(name);

      exposePublicSymbol(legalFunctionName, function() {
          // this code cannot run if baseClassRawType is zero
          throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);
      });

      whenDependentTypesAreResolved(
          [rawType, rawPointerType, rawConstPointerType],
          baseClassRawType ? [baseClassRawType] : [],
          function(base) {
              base = base[0];

              var baseClass;
              var basePrototype;
              if (baseClassRawType) {
                  baseClass = base.registeredClass;
                  basePrototype = baseClass.instancePrototype;
              } else {
                  basePrototype = ClassHandle.prototype;
              }

              var constructor = createNamedFunction(legalFunctionName, function() {
                  if (Object.getPrototypeOf(this) !== instancePrototype) {
                      throw new BindingError("Use 'new' to construct " + name);
                  }
                  if (undefined === registeredClass.constructor_body) {
                      throw new BindingError(name + " has no accessible constructor");
                  }
                  var body = registeredClass.constructor_body[arguments.length];
                  if (undefined === body) {
                      throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
                  }
                  return body.apply(this, arguments);
              });

              var instancePrototype = Object.create(basePrototype, {
                  constructor: { value: constructor },
              });

              constructor.prototype = instancePrototype;

              var registeredClass = new RegisteredClass(
                  name,
                  constructor,
                  instancePrototype,
                  rawDestructor,
                  baseClass,
                  getActualType,
                  upcast,
                  downcast);

              var referenceConverter = new RegisteredPointer(
                  name,
                  registeredClass,
                  true,
                  false,
                  false);

              var pointerConverter = new RegisteredPointer(
                  name + '*',
                  registeredClass,
                  false,
                  false,
                  false);

              var constPointerConverter = new RegisteredPointer(
                  name + ' const*',
                  registeredClass,
                  false,
                  true,
                  false);

              registeredPointers[rawType] = {
                  pointerType: pointerConverter,
                  constPointerType: constPointerConverter
              };

              replacePublicSymbol(legalFunctionName, constructor);

              return [referenceConverter, pointerConverter, constPointerConverter];
          }
      );
    }


  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }

  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }function __embind_register_class_constructor(
      rawClassType,
      argCount,
      rawArgTypesAddr,
      invokerSignature,
      invoker,
      rawConstructor
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      invoker = embind__requireFunction(invokerSignature, invoker);

      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = 'constructor ' + classType.name;

          if (undefined === classType.registeredClass.constructor_body) {
              classType.registeredClass.constructor_body = [];
          }
          if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
              throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount-1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
          }
          classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
              throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);
          };

          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {
              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
                  if (arguments.length !== argCount - 1) {
                      throwBindingError(humanName + ' called with ' + arguments.length + ' arguments, expected ' + (argCount-1));
                  }
                  var destructors = [];
                  var args = new Array(argCount);
                  args[0] = rawConstructor;
                  for (var i = 1; i < argCount; ++i) {
                      args[i] = argTypes[i]['toWireType'](destructors, arguments[i - 1]);
                  }

                  var ptr = invoker.apply(null, args);
                  runDestructors(destructors);

                  return argTypes[0]['fromWireType'](ptr);
              };
              return [];
          });
          return [];
      });
    }



  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }

      /*
       * Previously, the following line was just:

       function dummy() {};

       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;

      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;

      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }

      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);

      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }


      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;

      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }

      var returns = (argTypes[0].name !== "void");

      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }

      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";


      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }

      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];


      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }

      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }

      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }

      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";

      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }

      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";

      args1.push(invokerFnBody);

      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }function __embind_register_class_function(
      rawClassType,
      methodName,
      argCount,
      rawArgTypesAddr, // [ReturnType, ThisType, Args...]
      invokerSignature,
      rawInvoker,
      context,
      isPureVirtual
    ) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      methodName = readLatin1String(methodName);
      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);

      whenDependentTypesAreResolved([], [rawClassType], function(classType) {
          classType = classType[0];
          var humanName = classType.name + '.' + methodName;

          if (isPureVirtual) {
              classType.registeredClass.pureVirtualFunctions.push(methodName);
          }

          function unboundTypesHandler() {
              throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);
          }

          var proto = classType.registeredClass.instancePrototype;
          var method = proto[methodName];
          if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {
              // This is the first overload to be registered, OR we are replacing a function in the base class with a function in the derived class.
              unboundTypesHandler.argCount = argCount - 2;
              unboundTypesHandler.className = classType.name;
              proto[methodName] = unboundTypesHandler;
          } else {
              // There was an existing function with the same name registered. Set up a function overload routing table.
              ensureOverloadTable(proto, methodName, humanName);
              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
          }

          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {

              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);

              // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types
              // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.
              if (undefined === proto[methodName].overloadTable) {
                  // Set argCount in case an overload is registered later
                  memberFunction.argCount = argCount - 2;
                  proto[methodName] = memberFunction;
              } else {
                  proto[methodName].overloadTable[argCount - 2] = memberFunction;
              }

              return [];
          });
          return [];
      });
    }



  var emval_free_list=[];

  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }



  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }

  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {

      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;

          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor

          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }


  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }

  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }


  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }

      var shift = getShiftFromSize(size);

      var fromWireType = function(value) {
          return value;
      };

      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }

      var isUnsignedType = (name.indexOf('unsigned') != -1);

      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return isUnsignedType ? (value >>> 0) : (value | 0);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];

      var TA = typeMapping[dataTypeIndex];

      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }

      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      var stdStringIsUTF8
      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>
      = (name === "std::string");

      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];

              var str;
              if(stdStringIsUTF8) {
                  //ensure null termination at one-past-end byte if not present yet
                  var endChar = HEAPU8[value + 4 + length];
                  var endCharSwap = 0;
                  if(endChar != 0)
                  {
                    endCharSwap = endChar;
                    HEAPU8[value + 4 + length] = 0;
                  }

                  var decodeStartPtr = value + 4;
                  //looping here to support possible embedded '0' bytes
                  for (var i = 0; i <= length; ++i) {
                    var currentBytePtr = value + 4 + i;
                    if(HEAPU8[currentBytePtr] == 0)
                    {
                      var stringSegment = UTF8ToString(decodeStartPtr);
                      if(str === undefined)
                        str = stringSegment;
                      else
                      {
                        str += String.fromCharCode(0);
                        str += stringSegment;
                      }
                      decodeStartPtr = currentBytePtr + 1;
                    }
                  }

                  if(endCharSwap != 0)
                    HEAPU8[value + 4 + length] = endCharSwap;
              } else {
                  var a = new Array(length);
                  for (var i = 0; i < length; ++i) {
                      a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
                  }
                  str = a.join('');
              }

              _free(value);

              return str;
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }

              var getLength;
              var valueIsOfTypeString = (typeof value === 'string');

              if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
                  throwBindingError('Cannot pass non-string to std::string');
              }
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  getLength = function() {return lengthBytesUTF8(value);};
              } else {
                  getLength = function() {return value.length;};
              }

              // assumes 4-byte alignment
              var length = getLength();
              var ptr = _malloc(4 + length + 1);
              HEAPU32[ptr >> 2] = length;

              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  stringToUTF8(value, ptr + 4, length + 1);
              } else {
                  if(valueIsOfTypeString) {
                      for (var i = 0; i < length; ++i) {
                          var charCode = value.charCodeAt(i);
                          if (charCode > 255) {
                              _free(ptr);
                              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                          }
                          HEAPU8[ptr + 4 + i] = charCode;
                      }
                  } else {
                      for (var i = 0; i < length; ++i) {
                          HEAPU8[ptr + 4 + i] = value[i];
                      }
                  }
              }

              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by emscripten_resize_heap().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  function _abort() {
      Module['abort']();
    }







  function _emscripten_get_heap_size() {
      return HEAP8.length;
    }


  var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = UTF8ToString(name);
      if (!ENV.hasOwnProperty(name)) return 0;

      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocateUTF8(ENV[name]);
      return _getenv.ret;
    }



  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      stackRestore(ret);
    }

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  function _llvm_trap() {
      abort('trap!');
    }


  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
    }









  function _pthread_cond_wait() { return 0; }



  function abortOnCannotGrowMemory(requestedSize) {
      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
    }function _emscripten_resize_heap(requestedSize) {
      abortOnCannotGrowMemory(requestedSize);
    }



  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }

  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }


  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];

  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];

        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }

      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html

      var tm_zone = HEAP32[(((tm)+(40))>>2)];

      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''
      };

      var pattern = UTF8ToString(format);

      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation
        // Modified Conversion Specifiers
        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.
        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.
        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.
        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.
        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.
        '%EY': '%Y',                      // Replaced by the full alternative year representation.
        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.
        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.
        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.
        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.
        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.
        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.
        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.
        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).
        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.
        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.
        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.
        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.
        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }

      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      }

      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      }

      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        }

        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      }

      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      }

      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);

          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);

          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);

          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else {
            return thisDate.getFullYear()-1;
          }
      }

      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes
          // January 4th, which is also the week that includes the first Thursday of the year, and
          // is also the first week that contains at least four days in the year.
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
          // the last week of the preceding year; thus, for Saturday 2nd January 1999,
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
          // or 31st is a Monday, it and any following days are part of week 1 of the following year.
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.

          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          return date.tm_wday || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Sunday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);

          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }

          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week)
          // as a decimal number [01,53]. If the week containing 1 January has four
          // or more days in the new year, then it is considered week 1.
          // Otherwise, it is the last week of the previous year, and the next week is week 1.
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);

          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);

          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);

          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          }

          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }

          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          return date.tm_wday;
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Monday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);

          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }

      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      }

      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }
FS.staticInit();;
if (ENVIRONMENT_HAS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
init_ClassHandle();
init_RegisteredPointer();
init_embind();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
init_emval();;
var ASSERTIONS = true;

// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149

// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com

/**
 * Decodes a base64 string.
 * @param {String} input The string to decode.
 */
var decodeBase64 = typeof atob === 'function' ? atob : function (input) {
  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  var output = '';
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
  do {
    enc1 = keyStr.indexOf(input.charAt(i++));
    enc2 = keyStr.indexOf(input.charAt(i++));
    enc3 = keyStr.indexOf(input.charAt(i++));
    enc4 = keyStr.indexOf(input.charAt(i++));

    chr1 = (enc1 << 2) | (enc2 >> 4);
    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
    chr3 = ((enc3 & 3) << 6) | enc4;

    output = output + String.fromCharCode(chr1);

    if (enc3 !== 64) {
      output = output + String.fromCharCode(chr2);
    }
    if (enc4 !== 64) {
      output = output + String.fromCharCode(chr3);
    }
  } while (i < input.length);
  return output;
};

// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s) {
  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {
    var buf;
    try {
      buf = Buffer.from(s, 'base64');
    } catch (_) {
      buf = new Buffer(s, 'base64');
    }
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }

  try {
    var decoded = decodeBase64(s);
    var bytes = new Uint8Array(decoded.length);
    for (var i = 0 ; i < decoded.length ; ++i) {
      bytes[i] = decoded.charCodeAt(i);
    }
    return bytes;
  } catch (_) {
    throw new Error('Converting base64 string to bytes failed.');
  }
}

// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename) {
  if (!isDataURI(filename)) {
    return;
  }

  return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}


// ASM_LIBRARY EXTERN PRIMITIVES: Math_imul,Math_clz32,Int8Array,Int32Array

function nullFunc_i(x) { abortFnPtrError(x, 'i'); }
function nullFunc_ii(x) { abortFnPtrError(x, 'ii'); }
function nullFunc_iidiiii(x) { abortFnPtrError(x, 'iidiiii'); }
function nullFunc_iii(x) { abortFnPtrError(x, 'iii'); }
function nullFunc_iiii(x) { abortFnPtrError(x, 'iiii'); }
function nullFunc_iiiii(x) { abortFnPtrError(x, 'iiiii'); }
function nullFunc_iiiiid(x) { abortFnPtrError(x, 'iiiiid'); }
function nullFunc_iiiiii(x) { abortFnPtrError(x, 'iiiiii'); }
function nullFunc_iiiiiid(x) { abortFnPtrError(x, 'iiiiiid'); }
function nullFunc_iiiiiii(x) { abortFnPtrError(x, 'iiiiiii'); }
function nullFunc_iiiiiiii(x) { abortFnPtrError(x, 'iiiiiiii'); }
function nullFunc_iiiiiiiii(x) { abortFnPtrError(x, 'iiiiiiiii'); }
function nullFunc_v(x) { abortFnPtrError(x, 'v'); }
function nullFunc_vi(x) { abortFnPtrError(x, 'vi'); }
function nullFunc_vii(x) { abortFnPtrError(x, 'vii'); }
function nullFunc_viii(x) { abortFnPtrError(x, 'viii'); }
function nullFunc_viiii(x) { abortFnPtrError(x, 'viiii'); }
function nullFunc_viiiii(x) { abortFnPtrError(x, 'viiiii'); }
function nullFunc_viiiiii(x) { abortFnPtrError(x, 'viiiiii'); }

var asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

var asmLibraryArg = {
  "abort": abort,
  "setTempRet0": setTempRet0,
  "getTempRet0": getTempRet0,
  "abortStackOverflow": abortStackOverflow,
  "nullFunc_i": nullFunc_i,
  "nullFunc_ii": nullFunc_ii,
  "nullFunc_iidiiii": nullFunc_iidiiii,
  "nullFunc_iii": nullFunc_iii,
  "nullFunc_iiii": nullFunc_iiii,
  "nullFunc_iiiii": nullFunc_iiiii,
  "nullFunc_iiiiid": nullFunc_iiiiid,
  "nullFunc_iiiiii": nullFunc_iiiiii,
  "nullFunc_iiiiiid": nullFunc_iiiiiid,
  "nullFunc_iiiiiii": nullFunc_iiiiiii,
  "nullFunc_iiiiiiii": nullFunc_iiiiiiii,
  "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii,
  "nullFunc_v": nullFunc_v,
  "nullFunc_vi": nullFunc_vi,
  "nullFunc_vii": nullFunc_vii,
  "nullFunc_viii": nullFunc_viii,
  "nullFunc_viiii": nullFunc_viiii,
  "nullFunc_viiiii": nullFunc_viiiii,
  "nullFunc_viiiiii": nullFunc_viiiiii,
  "ClassHandle": ClassHandle,
  "ClassHandle_clone": ClassHandle_clone,
  "ClassHandle_delete": ClassHandle_delete,
  "ClassHandle_deleteLater": ClassHandle_deleteLater,
  "ClassHandle_isAliasOf": ClassHandle_isAliasOf,
  "ClassHandle_isDeleted": ClassHandle_isDeleted,
  "RegisteredClass": RegisteredClass,
  "RegisteredPointer": RegisteredPointer,
  "RegisteredPointer_deleteObject": RegisteredPointer_deleteObject,
  "RegisteredPointer_destructor": RegisteredPointer_destructor,
  "RegisteredPointer_fromWireType": RegisteredPointer_fromWireType,
  "RegisteredPointer_getPointee": RegisteredPointer_getPointee,
  "___assert_fail": ___assert_fail,
  "___cxa_allocate_exception": ___cxa_allocate_exception,
  "___cxa_begin_catch": ___cxa_begin_catch,
  "___cxa_pure_virtual": ___cxa_pure_virtual,
  "___cxa_throw": ___cxa_throw,
  "___cxa_uncaught_exceptions": ___cxa_uncaught_exceptions,
  "___exception_addRef": ___exception_addRef,
  "___exception_deAdjust": ___exception_deAdjust,
  "___gxx_personality_v0": ___gxx_personality_v0,
  "___lock": ___lock,
  "___map_file": ___map_file,
  "___setErrNo": ___setErrNo,
  "___syscall140": ___syscall140,
  "___syscall145": ___syscall145,
  "___syscall146": ___syscall146,
  "___syscall54": ___syscall54,
  "___syscall6": ___syscall6,
  "___syscall91": ___syscall91,
  "___unlock": ___unlock,
  "__addDays": __addDays,
  "__arraySum": __arraySum,
  "__embind_register_bool": __embind_register_bool,
  "__embind_register_class": __embind_register_class,
  "__embind_register_class_constructor": __embind_register_class_constructor,
  "__embind_register_class_function": __embind_register_class_function,
  "__embind_register_emval": __embind_register_emval,
  "__embind_register_float": __embind_register_float,
  "__embind_register_integer": __embind_register_integer,
  "__embind_register_memory_view": __embind_register_memory_view,
  "__embind_register_std_string": __embind_register_std_string,
  "__embind_register_std_wstring": __embind_register_std_wstring,
  "__embind_register_void": __embind_register_void,
  "__emscripten_syscall_munmap": __emscripten_syscall_munmap,
  "__emval_decref": __emval_decref,
  "__emval_register": __emval_register,
  "__isLeapYear": __isLeapYear,
  "_abort": _abort,
  "_embind_repr": _embind_repr,
  "_emscripten_get_heap_size": _emscripten_get_heap_size,
  "_emscripten_memcpy_big": _emscripten_memcpy_big,
  "_emscripten_resize_heap": _emscripten_resize_heap,
  "_getenv": _getenv,
  "_llvm_stackrestore": _llvm_stackrestore,
  "_llvm_stacksave": _llvm_stacksave,
  "_llvm_trap": _llvm_trap,
  "_pthread_cond_wait": _pthread_cond_wait,
  "_strftime": _strftime,
  "_strftime_l": _strftime_l,
  "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
  "attachFinalizer": attachFinalizer,
  "constNoSmartPtrRawPointerToWireType": constNoSmartPtrRawPointerToWireType,
  "count_emval_handles": count_emval_handles,
  "craftInvokerFunction": craftInvokerFunction,
  "createNamedFunction": createNamedFunction,
  "demangle": demangle,
  "demangleAll": demangleAll,
  "detachFinalizer": detachFinalizer,
  "downcastPointer": downcastPointer,
  "embind__requireFunction": embind__requireFunction,
  "embind_init_charCodes": embind_init_charCodes,
  "ensureOverloadTable": ensureOverloadTable,
  "exposePublicSymbol": exposePublicSymbol,
  "extendError": extendError,
  "floatReadValueFromPointer": floatReadValueFromPointer,
  "flushPendingDeletes": flushPendingDeletes,
  "genericPointerToWireType": genericPointerToWireType,
  "getBasestPointer": getBasestPointer,
  "getInheritedInstance": getInheritedInstance,
  "getInheritedInstanceCount": getInheritedInstanceCount,
  "getLiveInheritedInstances": getLiveInheritedInstances,
  "getShiftFromSize": getShiftFromSize,
  "getTypeName": getTypeName,
  "get_first_emval": get_first_emval,
  "heap32VectorToArray": heap32VectorToArray,
  "init_ClassHandle": init_ClassHandle,
  "init_RegisteredPointer": init_RegisteredPointer,
  "init_embind": init_embind,
  "init_emval": init_emval,
  "integerReadValueFromPointer": integerReadValueFromPointer,
  "jsStackTrace": jsStackTrace,
  "makeClassHandle": makeClassHandle,
  "makeLegalFunctionName": makeLegalFunctionName,
  "new_": new_,
  "nonConstNoSmartPtrRawPointerToWireType": nonConstNoSmartPtrRawPointerToWireType,
  "readLatin1String": readLatin1String,
  "registerType": registerType,
  "releaseClassHandle": releaseClassHandle,
  "replacePublicSymbol": replacePublicSymbol,
  "runDestructor": runDestructor,
  "runDestructors": runDestructors,
  "setDelayFunction": setDelayFunction,
  "shallowCopyInternalPointer": shallowCopyInternalPointer,
  "simpleReadValueFromPointer": simpleReadValueFromPointer,
  "stackTrace": stackTrace,
  "throwBindingError": throwBindingError,
  "throwInstanceAlreadyDeleted": throwInstanceAlreadyDeleted,
  "throwInternalError": throwInternalError,
  "throwUnboundTypeError": throwUnboundTypeError,
  "upcastPointer": upcastPointer,
  "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
  "tempDoublePtr": tempDoublePtr,
  "DYNAMICTOP_PTR": DYNAMICTOP_PTR
};
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';

  var HEAP8 = new global.Int8Array(buffer),
  HEAP16 = new global.Int16Array(buffer),
  HEAP32 = new global.Int32Array(buffer),
  HEAPU8 = new global.Uint8Array(buffer),
  HEAPU16 = new global.Uint16Array(buffer),
  HEAPF32 = new global.Float32Array(buffer),
  HEAPF64 = new global.Float64Array(buffer),
  tempDoublePtr=env.tempDoublePtr|0,
  DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0,
  __THREW__ = 0,
  threwValue = 0,
  setjmpId = 0,
  tempInt = 0,
  tempBigInt = 0,
  tempBigIntS = 0,
  tempValue = 0,
  tempDouble = 0.0,
  nan = global.NaN,
  inf = global.Infinity,
  Math_abs=global.Math.abs,
  Math_imul=global.Math.imul,
  Math_clz32=global.Math.clz32,
  abort=env.abort,
  setTempRet0=env.setTempRet0,
  getTempRet0=env.getTempRet0,
  abortStackOverflow=env.abortStackOverflow,
  nullFunc_i=env.nullFunc_i,
  nullFunc_ii=env.nullFunc_ii,
  nullFunc_iidiiii=env.nullFunc_iidiiii,
  nullFunc_iii=env.nullFunc_iii,
  nullFunc_iiii=env.nullFunc_iiii,
  nullFunc_iiiii=env.nullFunc_iiiii,
  nullFunc_iiiiid=env.nullFunc_iiiiid,
  nullFunc_iiiiii=env.nullFunc_iiiiii,
  nullFunc_iiiiiid=env.nullFunc_iiiiiid,
  nullFunc_iiiiiii=env.nullFunc_iiiiiii,
  nullFunc_iiiiiiii=env.nullFunc_iiiiiiii,
  nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii,
  nullFunc_v=env.nullFunc_v,
  nullFunc_vi=env.nullFunc_vi,
  nullFunc_vii=env.nullFunc_vii,
  nullFunc_viii=env.nullFunc_viii,
  nullFunc_viiii=env.nullFunc_viiii,
  nullFunc_viiiii=env.nullFunc_viiiii,
  nullFunc_viiiiii=env.nullFunc_viiiiii,
  ClassHandle=env.ClassHandle,
  ClassHandle_clone=env.ClassHandle_clone,
  ClassHandle_delete=env.ClassHandle_delete,
  ClassHandle_deleteLater=env.ClassHandle_deleteLater,
  ClassHandle_isAliasOf=env.ClassHandle_isAliasOf,
  ClassHandle_isDeleted=env.ClassHandle_isDeleted,
  RegisteredClass=env.RegisteredClass,
  RegisteredPointer=env.RegisteredPointer,
  RegisteredPointer_deleteObject=env.RegisteredPointer_deleteObject,
  RegisteredPointer_destructor=env.RegisteredPointer_destructor,
  RegisteredPointer_fromWireType=env.RegisteredPointer_fromWireType,
  RegisteredPointer_getPointee=env.RegisteredPointer_getPointee,
  ___assert_fail=env.___assert_fail,
  ___cxa_allocate_exception=env.___cxa_allocate_exception,
  ___cxa_begin_catch=env.___cxa_begin_catch,
  ___cxa_pure_virtual=env.___cxa_pure_virtual,
  ___cxa_throw=env.___cxa_throw,
  ___cxa_uncaught_exceptions=env.___cxa_uncaught_exceptions,
  ___exception_addRef=env.___exception_addRef,
  ___exception_deAdjust=env.___exception_deAdjust,
  ___gxx_personality_v0=env.___gxx_personality_v0,
  ___lock=env.___lock,
  ___map_file=env.___map_file,
  ___setErrNo=env.___setErrNo,
  ___syscall140=env.___syscall140,
  ___syscall145=env.___syscall145,
  ___syscall146=env.___syscall146,
  ___syscall54=env.___syscall54,
  ___syscall6=env.___syscall6,
  ___syscall91=env.___syscall91,
  ___unlock=env.___unlock,
  __addDays=env.__addDays,
  __arraySum=env.__arraySum,
  __embind_register_bool=env.__embind_register_bool,
  __embind_register_class=env.__embind_register_class,
  __embind_register_class_constructor=env.__embind_register_class_constructor,
  __embind_register_class_function=env.__embind_register_class_function,
  __embind_register_emval=env.__embind_register_emval,
  __embind_register_float=env.__embind_register_float,
  __embind_register_integer=env.__embind_register_integer,
  __embind_register_memory_view=env.__embind_register_memory_view,
  __embind_register_std_string=env.__embind_register_std_string,
  __embind_register_std_wstring=env.__embind_register_std_wstring,
  __embind_register_void=env.__embind_register_void,
  __emscripten_syscall_munmap=env.__emscripten_syscall_munmap,
  __emval_decref=env.__emval_decref,
  __emval_register=env.__emval_register,
  __isLeapYear=env.__isLeapYear,
  _abort=env._abort,
  _embind_repr=env._embind_repr,
  _emscripten_get_heap_size=env._emscripten_get_heap_size,
  _emscripten_memcpy_big=env._emscripten_memcpy_big,
  _emscripten_resize_heap=env._emscripten_resize_heap,
  _getenv=env._getenv,
  _llvm_stackrestore=env._llvm_stackrestore,
  _llvm_stacksave=env._llvm_stacksave,
  _llvm_trap=env._llvm_trap,
  _pthread_cond_wait=env._pthread_cond_wait,
  _strftime=env._strftime,
  _strftime_l=env._strftime_l,
  abortOnCannotGrowMemory=env.abortOnCannotGrowMemory,
  attachFinalizer=env.attachFinalizer,
  constNoSmartPtrRawPointerToWireType=env.constNoSmartPtrRawPointerToWireType,
  count_emval_handles=env.count_emval_handles,
  craftInvokerFunction=env.craftInvokerFunction,
  createNamedFunction=env.createNamedFunction,
  demangle=env.demangle,
  demangleAll=env.demangleAll,
  detachFinalizer=env.detachFinalizer,
  downcastPointer=env.downcastPointer,
  embind__requireFunction=env.embind__requireFunction,
  embind_init_charCodes=env.embind_init_charCodes,
  ensureOverloadTable=env.ensureOverloadTable,
  exposePublicSymbol=env.exposePublicSymbol,
  extendError=env.extendError,
  floatReadValueFromPointer=env.floatReadValueFromPointer,
  flushPendingDeletes=env.flushPendingDeletes,
  genericPointerToWireType=env.genericPointerToWireType,
  getBasestPointer=env.getBasestPointer,
  getInheritedInstance=env.getInheritedInstance,
  getInheritedInstanceCount=env.getInheritedInstanceCount,
  getLiveInheritedInstances=env.getLiveInheritedInstances,
  getShiftFromSize=env.getShiftFromSize,
  getTypeName=env.getTypeName,
  get_first_emval=env.get_first_emval,
  heap32VectorToArray=env.heap32VectorToArray,
  init_ClassHandle=env.init_ClassHandle,
  init_RegisteredPointer=env.init_RegisteredPointer,
  init_embind=env.init_embind,
  init_emval=env.init_emval,
  integerReadValueFromPointer=env.integerReadValueFromPointer,
  jsStackTrace=env.jsStackTrace,
  makeClassHandle=env.makeClassHandle,
  makeLegalFunctionName=env.makeLegalFunctionName,
  new_=env.new_,
  nonConstNoSmartPtrRawPointerToWireType=env.nonConstNoSmartPtrRawPointerToWireType,
  readLatin1String=env.readLatin1String,
  registerType=env.registerType,
  releaseClassHandle=env.releaseClassHandle,
  replacePublicSymbol=env.replacePublicSymbol,
  runDestructor=env.runDestructor,
  runDestructors=env.runDestructors,
  setDelayFunction=env.setDelayFunction,
  shallowCopyInternalPointer=env.shallowCopyInternalPointer,
  simpleReadValueFromPointer=env.simpleReadValueFromPointer,
  stackTrace=env.stackTrace,
  throwBindingError=env.throwBindingError,
  throwInstanceAlreadyDeleted=env.throwInstanceAlreadyDeleted,
  throwInternalError=env.throwInternalError,
  throwUnboundTypeError=env.throwUnboundTypeError,
  upcastPointer=env.upcastPointer,
  whenDependentTypesAreResolved=env.whenDependentTypesAreResolved,
  STACKTOP = 37904,
  STACK_MAX = 5280784,
  tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
  function globalCtors() {
    __GLOBAL__I_000101();
    __GLOBAL__sub_I_laz_perf_cpp();
    __GLOBAL__sub_I_bind_cpp();
    __GLOBAL__sub_I_iostream_cpp();
  }
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
    if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function ___cxx_global_var_init() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN38EmscriptenBindingInitializer_my_moduleC2Ev(37656);
 return;
}
function __ZN38EmscriptenBindingInitializer_my_moduleC2Ev($0) {
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy124 = 0, $$byval_copy125 = 0, $$byval_copy126 = 0, $$byval_copy127 = 0, $$byval_copy128 = 0, $$byval_copy129 = 0, $$field = 0, $$field102 = 0, $$field109 = 0, $$field112 = 0, $$field117 = 0, $$field12 = 0, $$field120 = 0, $$field19 = 0, $$field22 = 0, $$field27 = 0, $$field30 = 0, $$field37 = 0, $$field4 = 0;
 var $$field40 = 0, $$field45 = 0, $$field48 = 0, $$field55 = 0, $$field58 = 0, $$field63 = 0, $$field66 = 0, $$field73 = 0, $$field76 = 0, $$field81 = 0, $$field84 = 0, $$field9 = 0, $$field91 = 0, $$field94 = 0, $$field99 = 0, $$index1 = 0, $$index101 = 0, $$index105 = 0, $$index107 = 0, $$index11 = 0;
 var $$index111 = 0, $$index115 = 0, $$index119 = 0, $$index123 = 0, $$index15 = 0, $$index17 = 0, $$index21 = 0, $$index25 = 0, $$index29 = 0, $$index3 = 0, $$index33 = 0, $$index35 = 0, $$index39 = 0, $$index43 = 0, $$index47 = 0, $$index51 = 0, $$index53 = 0, $$index57 = 0, $$index61 = 0, $$index65 = 0;
 var $$index69 = 0, $$index7 = 0, $$index71 = 0, $$index75 = 0, $$index79 = 0, $$index83 = 0, $$index87 = 0, $$index89 = 0, $$index93 = 0, $$index97 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(464|0);
 $$byval_copy129 = sp + 440|0;
 $$byval_copy128 = sp + 432|0;
 $$byval_copy127 = sp + 424|0;
 $$byval_copy126 = sp + 416|0;
 $$byval_copy125 = sp + 408|0;
 $$byval_copy124 = sp + 400|0;
 $$byval_copy = sp + 392|0;
 $3 = sp + 376|0;
 $4 = sp + 368|0;
 $5 = sp + 48|0;
 $8 = sp + 352|0;
 $9 = sp + 344|0;
 $10 = sp + 40|0;
 $26 = sp + 272|0;
 $27 = sp + 264|0;
 $28 = sp + 32|0;
 $31 = sp + 248|0;
 $32 = sp + 240|0;
 $33 = sp + 24|0;
 $36 = sp + 224|0;
 $37 = sp + 216|0;
 $38 = sp + 16|0;
 $41 = sp + 200|0;
 $42 = sp + 192|0;
 $43 = sp + 8|0;
 $46 = sp + 176|0;
 $47 = sp + 168|0;
 $48 = sp;
 $63 = sp + 449|0;
 $64 = sp + 104|0;
 $65 = sp + 96|0;
 $66 = sp + 88|0;
 $67 = sp + 80|0;
 $68 = sp + 72|0;
 $69 = sp + 448|0;
 $70 = sp + 64|0;
 $71 = sp + 56|0;
 $62 = $0;
 $56 = $63;
 $57 = 17696;
 __ZN10emscripten8internal11NoBaseClass6verifyI6LASZipEEvv();
 $58 = 631;
 $72 = (__ZN10emscripten8internal11NoBaseClass11getUpcasterI6LASZipEEPFvvEv()|0);
 $59 = $72;
 $73 = (__ZN10emscripten8internal11NoBaseClass13getDowncasterI6LASZipEEPFvvEv()|0);
 $60 = $73;
 $61 = 632;
 $74 = (__ZN10emscripten8internal6TypeIDI6LASZipvE3getEv()|0);
 $75 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI6LASZipEEvE3getEv()|0);
 $76 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK6LASZipEEvE3getEv()|0);
 $77 = (__ZN10emscripten8internal11NoBaseClass3getEv()|0);
 $78 = $58;
 $55 = $78;
 $79 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0);
 $80 = $58;
 $81 = $59;
 $54 = $81;
 $82 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0);
 $83 = $59;
 $84 = $60;
 $53 = $84;
 $85 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0);
 $86 = $60;
 $87 = $57;
 $88 = $61;
 $52 = $88;
 $89 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0);
 $90 = $61;
 __embind_register_class(($74|0),($75|0),($76|0),($77|0),($79|0),($80|0),($82|0),($83|0),($85|0),($86|0),($87|0),($89|0),($90|0));
 $51 = $63;
 $91 = $51;
 $49 = $91;
 $50 = 633;
 $92 = $49;
 $93 = $50;
 __ZN10emscripten8internal24RegisterClassConstructorIPFP6LASZipvEE6invokeIS2_JEEEvS5_($93);
 HEAP32[$64>>2] = (634);
 $$index1 = ((($64)) + 4|0);
 HEAP32[$$index1>>2] = 0;
 ;HEAP8[$48>>0]=HEAP8[$64>>0]|0;HEAP8[$48+1>>0]=HEAP8[$64+1>>0]|0;HEAP8[$48+2>>0]=HEAP8[$64+2>>0]|0;HEAP8[$48+3>>0]=HEAP8[$64+3>>0]|0;HEAP8[$48+4>>0]=HEAP8[$64+4>>0]|0;HEAP8[$48+5>>0]=HEAP8[$64+5>>0]|0;HEAP8[$48+6>>0]=HEAP8[$64+6>>0]|0;HEAP8[$48+7>>0]=HEAP8[$64+7>>0]|0;
 $$field = HEAP32[$48>>2]|0;
 $$index3 = ((($48)) + 4|0);
 $$field4 = HEAP32[$$index3>>2]|0;
 $44 = $92;
 $45 = 17703;
 HEAP32[$46>>2] = $$field;
 $$index7 = ((($46)) + 4|0);
 HEAP32[$$index7>>2] = $$field4;
 $94 = $44;
 $95 = $45;
 $$field9 = HEAP32[$46>>2]|0;
 $$index11 = ((($46)) + 4|0);
 $$field12 = HEAP32[$$index11>>2]|0;
 HEAP32[$47>>2] = $$field9;
 $$index15 = ((($47)) + 4|0);
 HEAP32[$$index15>>2] = $$field12;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$47>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$47+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM6LASZipFvjmEE6invokeIS2_JEEEvPKcS4_($95,$$byval_copy);
 HEAP32[$65>>2] = (635);
 $$index17 = ((($65)) + 4|0);
 HEAP32[$$index17>>2] = 0;
 ;HEAP8[$43>>0]=HEAP8[$65>>0]|0;HEAP8[$43+1>>0]=HEAP8[$65+1>>0]|0;HEAP8[$43+2>>0]=HEAP8[$65+2>>0]|0;HEAP8[$43+3>>0]=HEAP8[$65+3>>0]|0;HEAP8[$43+4>>0]=HEAP8[$65+4>>0]|0;HEAP8[$43+5>>0]=HEAP8[$65+5>>0]|0;HEAP8[$43+6>>0]=HEAP8[$65+6>>0]|0;HEAP8[$43+7>>0]=HEAP8[$65+7>>0]|0;
 $$field19 = HEAP32[$43>>2]|0;
 $$index21 = ((($43)) + 4|0);
 $$field22 = HEAP32[$$index21>>2]|0;
 $39 = $94;
 $40 = 17708;
 HEAP32[$41>>2] = $$field19;
 $$index25 = ((($41)) + 4|0);
 HEAP32[$$index25>>2] = $$field22;
 $96 = $39;
 $97 = $40;
 $$field27 = HEAP32[$41>>2]|0;
 $$index29 = ((($41)) + 4|0);
 $$field30 = HEAP32[$$index29>>2]|0;
 HEAP32[$42>>2] = $$field27;
 $$index33 = ((($42)) + 4|0);
 HEAP32[$$index33>>2] = $$field30;
 ;HEAP32[$$byval_copy124>>2]=HEAP32[$42>>2]|0;HEAP32[$$byval_copy124+4>>2]=HEAP32[$42+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM6LASZipKFjvEE6invokeIS2_JEEEvPKcS4_($97,$$byval_copy124);
 HEAP32[$66>>2] = (636);
 $$index35 = ((($66)) + 4|0);
 HEAP32[$$index35>>2] = 0;
 ;HEAP8[$38>>0]=HEAP8[$66>>0]|0;HEAP8[$38+1>>0]=HEAP8[$66+1>>0]|0;HEAP8[$38+2>>0]=HEAP8[$66+2>>0]|0;HEAP8[$38+3>>0]=HEAP8[$66+3>>0]|0;HEAP8[$38+4>>0]=HEAP8[$66+4>>0]|0;HEAP8[$38+5>>0]=HEAP8[$66+5>>0]|0;HEAP8[$38+6>>0]=HEAP8[$66+6>>0]|0;HEAP8[$38+7>>0]=HEAP8[$66+7>>0]|0;
 $$field37 = HEAP32[$38>>2]|0;
 $$index39 = ((($38)) + 4|0);
 $$field40 = HEAP32[$$index39>>2]|0;
 $34 = $96;
 $35 = 17723;
 HEAP32[$36>>2] = $$field37;
 $$index43 = ((($36)) + 4|0);
 HEAP32[$$index43>>2] = $$field40;
 $98 = $34;
 $99 = $35;
 $$field45 = HEAP32[$36>>2]|0;
 $$index47 = ((($36)) + 4|0);
 $$field48 = HEAP32[$$index47>>2]|0;
 HEAP32[$37>>2] = $$field45;
 $$index51 = ((($37)) + 4|0);
 HEAP32[$$index51>>2] = $$field48;
 ;HEAP32[$$byval_copy125>>2]=HEAP32[$37>>2]|0;HEAP32[$$byval_copy125+4>>2]=HEAP32[$37+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM6LASZipKFjvEE6invokeIS2_JEEEvPKcS4_($99,$$byval_copy125);
 HEAP32[$67>>2] = (637);
 $$index53 = ((($67)) + 4|0);
 HEAP32[$$index53>>2] = 0;
 ;HEAP8[$33>>0]=HEAP8[$67>>0]|0;HEAP8[$33+1>>0]=HEAP8[$67+1>>0]|0;HEAP8[$33+2>>0]=HEAP8[$67+2>>0]|0;HEAP8[$33+3>>0]=HEAP8[$67+3>>0]|0;HEAP8[$33+4>>0]=HEAP8[$67+4>>0]|0;HEAP8[$33+5>>0]=HEAP8[$67+5>>0]|0;HEAP8[$33+6>>0]=HEAP8[$67+6>>0]|0;HEAP8[$33+7>>0]=HEAP8[$67+7>>0]|0;
 $$field55 = HEAP32[$33>>2]|0;
 $$index57 = ((($33)) + 4|0);
 $$field58 = HEAP32[$$index57>>2]|0;
 $29 = $98;
 $30 = 17738;
 HEAP32[$31>>2] = $$field55;
 $$index61 = ((($31)) + 4|0);
 HEAP32[$$index61>>2] = $$field58;
 $100 = $29;
 $101 = $30;
 $$field63 = HEAP32[$31>>2]|0;
 $$index65 = ((($31)) + 4|0);
 $$field66 = HEAP32[$$index65>>2]|0;
 HEAP32[$32>>2] = $$field63;
 $$index69 = ((($32)) + 4|0);
 HEAP32[$$index69>>2] = $$field66;
 ;HEAP32[$$byval_copy126>>2]=HEAP32[$32>>2]|0;HEAP32[$$byval_copy126+4>>2]=HEAP32[$32+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM6LASZipFviEE6invokeIS2_JEEEvPKcS4_($101,$$byval_copy126);
 HEAP32[$68>>2] = (638);
 $$index71 = ((($68)) + 4|0);
 HEAP32[$$index71>>2] = 0;
 ;HEAP8[$28>>0]=HEAP8[$68>>0]|0;HEAP8[$28+1>>0]=HEAP8[$68+1>>0]|0;HEAP8[$28+2>>0]=HEAP8[$68+2>>0]|0;HEAP8[$28+3>>0]=HEAP8[$68+3>>0]|0;HEAP8[$28+4>>0]=HEAP8[$68+4>>0]|0;HEAP8[$28+5>>0]=HEAP8[$68+5>>0]|0;HEAP8[$28+6>>0]=HEAP8[$68+6>>0]|0;HEAP8[$28+7>>0]=HEAP8[$68+7>>0]|0;
 $$field73 = HEAP32[$28>>2]|0;
 $$index75 = ((($28)) + 4|0);
 $$field76 = HEAP32[$$index75>>2]|0;
 $24 = $100;
 $25 = 17747;
 HEAP32[$26>>2] = $$field73;
 $$index79 = ((($26)) + 4|0);
 HEAP32[$$index79>>2] = $$field76;
 $102 = $25;
 $$field81 = HEAP32[$26>>2]|0;
 $$index83 = ((($26)) + 4|0);
 $$field84 = HEAP32[$$index83>>2]|0;
 HEAP32[$27>>2] = $$field81;
 $$index87 = ((($27)) + 4|0);
 HEAP32[$$index87>>2] = $$field84;
 ;HEAP32[$$byval_copy127>>2]=HEAP32[$27>>2]|0;HEAP32[$$byval_copy127+4>>2]=HEAP32[$27+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM6LASZipKFjvEE6invokeIS2_JEEEvPKcS4_($102,$$byval_copy127);
 $18 = $69;
 $19 = 17756;
 __ZN10emscripten8internal11NoBaseClass6verifyI12ChunkDecoderEEvv();
 $20 = 639;
 $103 = (__ZN10emscripten8internal11NoBaseClass11getUpcasterI12ChunkDecoderEEPFvvEv()|0);
 $21 = $103;
 $104 = (__ZN10emscripten8internal11NoBaseClass13getDowncasterI12ChunkDecoderEEPFvvEv()|0);
 $22 = $104;
 $23 = 640;
 $105 = (__ZN10emscripten8internal6TypeIDI12ChunkDecodervE3getEv()|0);
 $106 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI12ChunkDecoderEEvE3getEv()|0);
 $107 = (__ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK12ChunkDecoderEEvE3getEv()|0);
 $108 = (__ZN10emscripten8internal11NoBaseClass3getEv()|0);
 $109 = $20;
 $17 = $109;
 $110 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0);
 $111 = $20;
 $112 = $21;
 $16 = $112;
 $113 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0);
 $114 = $21;
 $115 = $22;
 $15 = $115;
 $116 = (__ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv()|0);
 $117 = $22;
 $118 = $19;
 $119 = $23;
 $14 = $119;
 $120 = (__ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv()|0);
 $121 = $23;
 __embind_register_class(($105|0),($106|0),($107|0),($108|0),($110|0),($111|0),($113|0),($114|0),($116|0),($117|0),($118|0),($120|0),($121|0));
 $13 = $69;
 $122 = $13;
 $11 = $122;
 $12 = 641;
 $123 = $11;
 $124 = $12;
 __ZN10emscripten8internal24RegisterClassConstructorIPFP12ChunkDecodervEE6invokeIS2_JEEEvS5_($124);
 HEAP32[$70>>2] = (642);
 $$index89 = ((($70)) + 4|0);
 HEAP32[$$index89>>2] = 0;
 ;HEAP8[$10>>0]=HEAP8[$70>>0]|0;HEAP8[$10+1>>0]=HEAP8[$70+1>>0]|0;HEAP8[$10+2>>0]=HEAP8[$70+2>>0]|0;HEAP8[$10+3>>0]=HEAP8[$70+3>>0]|0;HEAP8[$10+4>>0]=HEAP8[$70+4>>0]|0;HEAP8[$10+5>>0]=HEAP8[$70+5>>0]|0;HEAP8[$10+6>>0]=HEAP8[$70+6>>0]|0;HEAP8[$10+7>>0]=HEAP8[$70+7>>0]|0;
 $$field91 = HEAP32[$10>>2]|0;
 $$index93 = ((($10)) + 4|0);
 $$field94 = HEAP32[$$index93>>2]|0;
 $6 = $123;
 $7 = 17703;
 HEAP32[$8>>2] = $$field91;
 $$index97 = ((($8)) + 4|0);
 HEAP32[$$index97>>2] = $$field94;
 $125 = $6;
 $126 = $7;
 $$field99 = HEAP32[$8>>2]|0;
 $$index101 = ((($8)) + 4|0);
 $$field102 = HEAP32[$$index101>>2]|0;
 HEAP32[$9>>2] = $$field99;
 $$index105 = ((($9)) + 4|0);
 HEAP32[$$index105>>2] = $$field102;
 ;HEAP32[$$byval_copy128>>2]=HEAP32[$9>>2]|0;HEAP32[$$byval_copy128+4>>2]=HEAP32[$9+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM12ChunkDecoderFviijEE6invokeIS2_JEEEvPKcS4_($126,$$byval_copy128);
 HEAP32[$71>>2] = (643);
 $$index107 = ((($71)) + 4|0);
 HEAP32[$$index107>>2] = 0;
 ;HEAP8[$5>>0]=HEAP8[$71>>0]|0;HEAP8[$5+1>>0]=HEAP8[$71+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[$71+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[$71+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[$71+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[$71+5>>0]|0;HEAP8[$5+6>>0]=HEAP8[$71+6>>0]|0;HEAP8[$5+7>>0]=HEAP8[$71+7>>0]|0;
 $$field109 = HEAP32[$5>>2]|0;
 $$index111 = ((($5)) + 4|0);
 $$field112 = HEAP32[$$index111>>2]|0;
 $1 = $125;
 $2 = 17738;
 HEAP32[$3>>2] = $$field109;
 $$index115 = ((($3)) + 4|0);
 HEAP32[$$index115>>2] = $$field112;
 $127 = $2;
 $$field117 = HEAP32[$3>>2]|0;
 $$index119 = ((($3)) + 4|0);
 $$field120 = HEAP32[$$index119>>2]|0;
 HEAP32[$4>>2] = $$field117;
 $$index123 = ((($4)) + 4|0);
 HEAP32[$$index123>>2] = $$field120;
 ;HEAP32[$$byval_copy129>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy129+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN10emscripten8internal19RegisterClassMethodIM12ChunkDecoderFvjEE6invokeIS2_JEEEvPKcS4_($127,$$byval_copy129);
 STACKTOP = sp;return;
}
function __ZN6LASZip4openEjm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $$byval_copy = sp + 96|0;
 $8 = sp + 72|0;
 $14 = sp + 48|0;
 $19 = sp + 24|0;
 $20 = sp + 16|0;
 $21 = $0;
 $22 = $1;
 $23 = $2;
 $25 = $21;
 $26 = $22;
 $27 = $26;
 $24 = $27;
 $28 = (__Znwm(8)|0);
 $29 = $24;
 $30 = $23;
 __ZN7lazperf6reader8mem_fileC2EPcm($28,$29,$30);
 $17 = $25;
 $18 = $28;
 $31 = $17;
 $32 = $18;
 ;HEAP32[$20>>2]=0|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$20>>2]|0;
 __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($19,$32,$$byval_copy);
 $15 = $19;
 $16 = $31;
 $33 = $15;
 $34 = $16;
 $12 = $33;
 $13 = $34;
 $35 = $12;
 $11 = $35;
 $36 = $11;
 $37 = HEAP32[$36>>2]|0;
 HEAP32[$14>>2] = $37;
 $38 = $13;
 $9 = $38;
 $39 = $9;
 $40 = HEAP32[$39>>2]|0;
 $41 = $12;
 HEAP32[$41>>2] = $40;
 $10 = $14;
 $42 = $10;
 $43 = HEAP32[$42>>2]|0;
 $44 = $13;
 HEAP32[$44>>2] = $43;
 $45 = ((($33)) + 4|0);
 $46 = $16;
 $47 = ((($46)) + 4|0);
 $6 = $45;
 $7 = $47;
 $48 = $6;
 $5 = $48;
 $49 = $5;
 $50 = HEAP32[$49>>2]|0;
 HEAP32[$8>>2] = $50;
 $51 = $7;
 $3 = $51;
 $52 = $3;
 $53 = HEAP32[$52>>2]|0;
 $54 = $6;
 HEAP32[$54>>2] = $53;
 $4 = $8;
 $55 = $4;
 $56 = HEAP32[$55>>2]|0;
 $57 = $7;
 HEAP32[$57>>2] = $56;
 __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEED2Ev($19);
 STACKTOP = sp;return;
}
function __ZNK6LASZip14getPointLengthEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNK7lazperf6reader10basic_file6headerEv($5)|0);
 $7 = ((($6)) + 106|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8&65535;
 STACKTOP = sp;return ($9|0);
}
function __ZNK6LASZip14getPointFormatEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNK7lazperf6reader10basic_file6headerEv($5)|0);
 $7 = ((($6)) + 104|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 STACKTOP = sp;return ($9|0);
}
function __ZN6LASZip8getPointEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3;
 $7 = $4;
 $8 = $7;
 $5 = $8;
 $2 = $6;
 $9 = $2;
 $10 = HEAP32[$9>>2]|0;
 $11 = $5;
 __ZN7lazperf6reader10basic_file9readPointEPc($10,$11);
 STACKTOP = sp;return;
}
function __ZNK6LASZip8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZNK7lazperf6reader10basic_file6headerEv($5)|0);
 $7 = ((($6)) + 108|0);
 $8 = HEAP32[$7>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZN12ChunkDecoder4openEiij($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $$byval_copy = sp + 104|0;
 $9 = sp + 80|0;
 $15 = sp + 56|0;
 $20 = sp + 32|0;
 $21 = sp + 24|0;
 $22 = $0;
 $23 = $1;
 $24 = $2;
 $25 = $3;
 $28 = $22;
 $29 = $24;
 $30 = $23;
 $31 = (__ZN7lazperf9baseCountEi($30)|0);
 $32 = (($29) - ($31))|0;
 $26 = $32;
 $33 = $25;
 $34 = $33;
 $27 = $34;
 $35 = (__Znwm(4)|0);
 $36 = $23;
 $37 = $26;
 $38 = $27;
 __ZN7lazperf6reader18chunk_decompressorC2EiiPKc($35,$36,$37,$38);
 $18 = $28;
 $19 = $35;
 $39 = $18;
 $40 = $19;
 ;HEAP32[$21>>2]=0|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$21>>2]|0;
 __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($20,$40,$$byval_copy);
 $16 = $20;
 $17 = $39;
 $41 = $16;
 $42 = $17;
 $13 = $41;
 $14 = $42;
 $43 = $13;
 $12 = $43;
 $44 = $12;
 $45 = HEAP32[$44>>2]|0;
 HEAP32[$15>>2] = $45;
 $46 = $14;
 $10 = $46;
 $47 = $10;
 $48 = HEAP32[$47>>2]|0;
 $49 = $13;
 HEAP32[$49>>2] = $48;
 $11 = $15;
 $50 = $11;
 $51 = HEAP32[$50>>2]|0;
 $52 = $14;
 HEAP32[$52>>2] = $51;
 $53 = ((($41)) + 4|0);
 $54 = $17;
 $55 = ((($54)) + 4|0);
 $7 = $53;
 $8 = $55;
 $56 = $7;
 $6 = $56;
 $57 = $6;
 $58 = HEAP32[$57>>2]|0;
 HEAP32[$9>>2] = $58;
 $59 = $8;
 $4 = $59;
 $60 = $4;
 $61 = HEAP32[$60>>2]|0;
 $62 = $7;
 HEAP32[$62>>2] = $61;
 $5 = $9;
 $63 = $5;
 $64 = HEAP32[$63>>2]|0;
 $65 = $8;
 HEAP32[$65>>2] = $64;
 __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEED2Ev($20);
 STACKTOP = sp;return;
}
function __ZN12ChunkDecoder8getPointEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3;
 $7 = $4;
 $8 = $7;
 $5 = $8;
 $2 = $6;
 $9 = $2;
 $10 = HEAP32[$9>>2]|0;
 $11 = $5;
 __ZN7lazperf6reader18chunk_decompressor10decompressEPc($10,$11);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $50 = sp + 76|0;
 $51 = sp + 72|0;
 $52 = sp + 8|0;
 $53 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$52>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$53>>0]=HEAP8[$66>>0]|0;
 $49 = $79;
 HEAP32[$50>>2] = $80;
 $81 = $49;
 $47 = $81;
 $48 = 0;
 $82 = $47;
 $83 = $48;
 $45 = $82;
 $46 = $83;
 $84 = $45;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $46;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $48;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10032);
 $89 = ((($81)) + 12|0);
 $21 = $53;
 $90 = $21;
 $30 = $51;
 $31 = $50;
 $32 = $90;
 $91 = $30;
 $92 = $31;
 $29 = $92;
 $93 = $29;
 $23 = $91;
 $24 = $93;
 $94 = $23;
 $95 = $24;
 $22 = $95;
 $96 = $22;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $32;
 $25 = $98;
 $99 = $25;
 $27 = $91;
 $28 = $99;
 $100 = $28;
 $26 = $100;
 $33 = $52;
 $101 = $33;
 $42 = $89;
 $43 = $51;
 $44 = $101;
 $102 = $42;
 $103 = $43;
 $41 = $103;
 $104 = $41;
 $35 = $102;
 $36 = $104;
 $105 = $35;
 $106 = $36;
 $34 = $106;
 $107 = $34;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $44;
 $37 = $108;
 $109 = $37;
 $39 = $102;
 $40 = $109;
 $110 = $40;
 $38 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEE18__enable_weak_thisEz($68,$vararg_buffer);
 $20 = $65;
 $120 = $20;
 $17 = $120;
 $18 = 0;
 $121 = $17;
 $16 = $121;
 $122 = $16;
 $15 = $122;
 $123 = $15;
 $124 = HEAP32[$123>>2]|0;
 $19 = $124;
 $125 = $18;
 $12 = $121;
 $126 = $12;
 $11 = $126;
 $127 = $11;
 HEAP32[$127>>2] = $125;
 $128 = $19;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $10 = $121;
 $130 = $10;
 $9 = $130;
 $131 = $9;
 $132 = $19;
 $13 = $131;
 $14 = $132;
 $133 = $14;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf6reader8mem_fileD2Ev($133);
 __ZdlPv($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEED2Ev($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 24|0;
 $7 = $0;
 $8 = $7;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = ((($8)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $6 = $13;
 $14 = $6;
 $5 = $14;
 $15 = $5;
 $16 = ((($15)) + 4|0);
 $1 = $16;
 $17 = $1;
 $2 = -1;
 $18 = $2;
 $19 = HEAP32[$17>>2]|0;
 $20 = (($19) + ($18))|0;
 HEAP32[$17>>2] = $20;
 $21 = (($19) + ($18))|0;
 $3 = $21;
 $22 = $3;
 $23 = ($22|0)==(-1);
 if ($23) {
  $24 = HEAP32[$15>>2]|0;
  $25 = ((($24)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_vi[$26 & 1023]($15);
  $$expand_i1_val = 1;
  HEAP8[$4>>0] = $$expand_i1_val;
 } else {
  $$expand_i1_val2 = 0;
  HEAP8[$4>>0] = $$expand_i1_val2;
 }
 $$pre_trunc = HEAP8[$4>>0]|0;
 $27 = $$pre_trunc&1;
 if (!($27)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($14);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEE18__enable_weak_thisEz($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $4 = $22;
 $23 = $4;
 $3 = $23;
 $24 = $3;
 $2 = $24;
 $25 = $2;
 $1 = $25;
 $26 = $1;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  __ZN7lazperf6reader8mem_fileD2Ev($28);
  __ZdlPv($28);
 }
 $30 = ((($16)) + 12|0);
 $10 = $30;
 $31 = $10;
 $9 = $31;
 $32 = $9;
 $12 = $32;
 $33 = $12;
 $11 = $33;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 5920;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZNSt3__217_DeallocateCaller9__do_callEPv($4);
 STACKTOP = sp;return;
}
function __ZNSt3__217_DeallocateCaller9__do_callEPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $50 = sp + 76|0;
 $51 = sp + 72|0;
 $52 = sp + 8|0;
 $53 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$52>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$53>>0]=HEAP8[$66>>0]|0;
 $49 = $79;
 HEAP32[$50>>2] = $80;
 $81 = $49;
 $47 = $81;
 $48 = 0;
 $82 = $47;
 $83 = $48;
 $45 = $82;
 $46 = $83;
 $84 = $45;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $46;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $48;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10060);
 $89 = ((($81)) + 12|0);
 $21 = $53;
 $90 = $21;
 $30 = $51;
 $31 = $50;
 $32 = $90;
 $91 = $30;
 $92 = $31;
 $29 = $92;
 $93 = $29;
 $23 = $91;
 $24 = $93;
 $94 = $23;
 $95 = $24;
 $22 = $95;
 $96 = $22;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $32;
 $25 = $98;
 $99 = $25;
 $27 = $91;
 $28 = $99;
 $100 = $28;
 $26 = $100;
 $33 = $52;
 $101 = $33;
 $42 = $89;
 $43 = $51;
 $44 = $101;
 $102 = $42;
 $103 = $43;
 $41 = $103;
 $104 = $41;
 $35 = $102;
 $36 = $104;
 $105 = $35;
 $106 = $36;
 $34 = $106;
 $107 = $34;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $44;
 $37 = $108;
 $109 = $37;
 $39 = $102;
 $40 = $109;
 $110 = $40;
 $38 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $20 = $65;
 $120 = $20;
 $17 = $120;
 $18 = 0;
 $121 = $17;
 $16 = $121;
 $122 = $16;
 $15 = $122;
 $123 = $15;
 $124 = HEAP32[$123>>2]|0;
 $19 = $124;
 $125 = $18;
 $12 = $121;
 $126 = $12;
 $11 = $126;
 $127 = $11;
 HEAP32[$127>>2] = $125;
 $128 = $19;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $10 = $121;
 $130 = $10;
 $9 = $130;
 $131 = $9;
 $132 = $19;
 $13 = $131;
 $14 = $132;
 $133 = $14;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf6reader18chunk_decompressorD2Ev($133);
 __ZdlPv($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEED2Ev($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 24|0;
 $7 = $0;
 $8 = $7;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = ((($8)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $6 = $13;
 $14 = $6;
 $5 = $14;
 $15 = $5;
 $16 = ((($15)) + 4|0);
 $1 = $16;
 $17 = $1;
 $2 = -1;
 $18 = $2;
 $19 = HEAP32[$17>>2]|0;
 $20 = (($19) + ($18))|0;
 HEAP32[$17>>2] = $20;
 $21 = (($19) + ($18))|0;
 $3 = $21;
 $22 = $3;
 $23 = ($22|0)==(-1);
 if ($23) {
  $24 = HEAP32[$15>>2]|0;
  $25 = ((($24)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_vi[$26 & 1023]($15);
  $$expand_i1_val = 1;
  HEAP8[$4>>0] = $$expand_i1_val;
 } else {
  $$expand_i1_val2 = 0;
  HEAP8[$4>>0] = $$expand_i1_val2;
 }
 $$pre_trunc = HEAP8[$4>>0]|0;
 $27 = $$pre_trunc&1;
 if (!($27)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($14);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEE18__enable_weak_thisEz($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $4 = $22;
 $23 = $4;
 $3 = $23;
 $24 = $3;
 $2 = $24;
 $25 = $2;
 $1 = $25;
 $26 = $1;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  __ZN7lazperf6reader18chunk_decompressorD2Ev($28);
  __ZdlPv($28);
 }
 $30 = ((($16)) + 12|0);
 $10 = $30;
 $31 = $10;
 $9 = $31;
 $32 = $9;
 $12 = $32;
 $33 = $12;
 $11 = $33;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 5944;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal11NoBaseClass6verifyI6LASZipEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10emscripten8internal13getActualTypeI6LASZipEEPKvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN10emscripten8internal14getLightTypeIDI6LASZipEEPKvRKT_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN10emscripten8internal11NoBaseClass11getUpcasterI6LASZipEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function __ZN10emscripten8internal11NoBaseClass13getDowncasterI6LASZipEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function __ZN10emscripten8internal14raw_destructorI6LASZipEEvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  __ZN6LASZipD2Ev($2);
  __ZdlPv($2);
 }
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDI6LASZipvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDI6LASZipE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI6LASZipEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIP6LASZipE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK6LASZipEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIPK6LASZipE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11NoBaseClass3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function __ZN10emscripten8internal14getLightTypeIDI6LASZipEEPKvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (5952|0);
}
function __ZN6LASZipD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__210shared_ptrIN7lazperf6reader8mem_fileEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal11LightTypeIDI6LASZipE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5952|0);
}
function __ZN10emscripten8internal11LightTypeIDIP6LASZipE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5960|0);
}
function __ZN10emscripten8internal11LightTypeIDIPK6LASZipE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5976|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18132|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJvEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18135|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJviEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18137|0);
}
function __ZN10emscripten8internal12operator_newI6LASZipJEEEPT_DpOT0_() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwm(8)|0);
 __ZN6LASZipC2Ev($0);
 return ($0|0);
}
function __ZN10emscripten8internal24RegisterClassConstructorIPFP6LASZipvEE6invokeIS2_JEEEvS5_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $2 = $0;
 $4 = 644;
 $5 = (__ZN10emscripten8internal6TypeIDI6LASZipvE3getEv()|0);
 $6 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP6LASZipEE8getCountEv($3)|0);
 $7 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP6LASZipEE8getTypesEv($3)|0);
 $8 = $4;
 $1 = $8;
 $9 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0);
 $10 = $4;
 $11 = $2;
 __embind_register_class_constructor(($5|0),($6|0),($7|0),($9|0),($10|0),($11|0));
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIP6LASZipJEE6invokeEPFS3_vE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (FUNCTION_TABLE_i[$2 & 1023]()|0);
 $4 = (__ZN10emscripten8internal11BindingTypeIP6LASZipvE10toWireTypeES3_($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP6LASZipEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP6LASZipEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI6LASZipEEEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIP6LASZipvE10toWireTypeES3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI6LASZipEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10080|0);
}
function __ZN6LASZipC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal19RegisterClassMethodIM6LASZipFvjmEE6invokeIS2_JEEEvPKcS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $6 = sp + 24|0;
 $$field = HEAP32[$1>>2]|0;
 $$index1 = ((($1)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $3 = $0;
 HEAP32[$4>>2] = $$field;
 $$index5 = ((($4)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 $5 = 645;
 $7 = (__ZN10emscripten8internal6TypeIDI6LASZipvE3getEv()|0);
 $8 = $3;
 $9 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEjmEE8getCountEv($6)|0);
 $10 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEjmEE8getTypesEv($6)|0);
 $11 = $5;
 $2 = $11;
 $12 = (__ZN10emscripten8internal19getGenericSignatureIJviiiiEEEPKcv()|0);
 $13 = $5;
 $14 = (__ZN10emscripten8internal10getContextIM6LASZipFvjmEEEPT_RKS5_($4)|0);
 __embind_register_class_function(($7|0),($8|0),($9|0),($10|0),($12|0),($13|0),($14|0),0);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal13MethodInvokerIM6LASZipFvjmEvPS2_JjmEE6invokeERKS4_S5_jm($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5;
 $9 = (__ZN10emscripten8internal11BindingTypeIP6LASZipvE12fromWireTypeES3_($8)|0);
 $10 = $4;
 $$field = HEAP32[$10>>2]|0;
 $$index1 = ((($10)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $11 = $$field2 >> 1;
 $12 = (($9) + ($11)|0);
 $13 = $$field2 & 1;
 $14 = ($13|0)!=(0);
 if ($14) {
  $15 = HEAP32[$12>>2]|0;
  $16 = (($15) + ($$field)|0);
  $17 = HEAP32[$16>>2]|0;
  $23 = $17;
 } else {
  $18 = $$field;
  $23 = $18;
 }
 $19 = $6;
 $20 = (__ZN10emscripten8internal11BindingTypeIjvE12fromWireTypeEj($19)|0);
 $21 = $7;
 $22 = (__ZN10emscripten8internal11BindingTypeImvE12fromWireTypeEm($21)|0);
 FUNCTION_TABLE_viii[$23 & 1023]($12,$20,$22);
 STACKTOP = sp;return;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEjmEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 4;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEjmEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI6LASZipEEjmEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal10getContextIM6LASZipFvjmEEEPT_RKS5_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwm(8)|0);
 $3 = $1;
 $$field = HEAP32[$3>>2]|0;
 $$index1 = ((($3)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 HEAP32[$2>>2] = $$field;
 $$index5 = ((($2)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIP6LASZipvE12fromWireTypeES3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIjvE12fromWireTypeEj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeImvE12fromWireTypeEm($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI6LASZipEEjmEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (16|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJviiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18140|0);
}
function __ZN10emscripten8internal19RegisterClassMethodIM6LASZipKFjvEE6invokeIS2_JEEEvPKcS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $6 = sp + 24|0;
 $$field = HEAP32[$1>>2]|0;
 $$index1 = ((($1)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $3 = $0;
 HEAP32[$4>>2] = $$field;
 $$index5 = ((($4)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 $5 = 646;
 $7 = (__ZN10emscripten8internal6TypeIDI6LASZipvE3getEv()|0);
 $8 = $3;
 $9 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIK6LASZipEEEE8getCountEv($6)|0);
 $10 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIK6LASZipEEEE8getTypesEv($6)|0);
 $11 = $5;
 $2 = $11;
 $12 = (__ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv()|0);
 $13 = $5;
 $14 = (__ZN10emscripten8internal10getContextIM6LASZipKFjvEEEPT_RKS5_($4)|0);
 __embind_register_class_function(($7|0),($8|0),($9|0),($10|0),($12|0),($13|0),($14|0),0);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal13MethodInvokerIM6LASZipKFjvEjPKS2_JEE6invokeERKS4_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $3;
 $6 = (__ZN10emscripten8internal11BindingTypeIPK6LASZipvE12fromWireTypeES4_($5)|0);
 $7 = $2;
 $$field = HEAP32[$7>>2]|0;
 $$index1 = ((($7)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $8 = $$field2 >> 1;
 $9 = (($6) + ($8)|0);
 $10 = $$field2 & 1;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = HEAP32[$9>>2]|0;
  $13 = (($12) + ($$field)|0);
  $14 = HEAP32[$13>>2]|0;
  $16 = $14;
 } else {
  $15 = $$field;
  $16 = $15;
 }
 $17 = (FUNCTION_TABLE_ii[$16 & 1023]($9)|0);
 HEAP32[$4>>2] = $17;
 $18 = (__ZN10emscripten8internal11BindingTypeIjvE10toWireTypeERKj($4)|0);
 STACKTOP = sp;return ($18|0);
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIK6LASZipEEEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 2;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJjNS0_17AllowedRawPointerIK6LASZipEEEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJjNS0_17AllowedRawPointerIK6LASZipEEEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal10getContextIM6LASZipKFjvEEEPT_RKS5_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwm(8)|0);
 $3 = $1;
 $$field = HEAP32[$3>>2]|0;
 $$index1 = ((($3)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 HEAP32[$2>>2] = $$field;
 $$index5 = ((($2)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIjvE10toWireTypeERKj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN10emscripten8internal11BindingTypeIPK6LASZipvE12fromWireTypeES4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJjNS0_17AllowedRawPointerIK6LASZipEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10084|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18146|0);
}
function __ZN10emscripten8internal19RegisterClassMethodIM6LASZipFviEE6invokeIS2_JEEEvPKcS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $6 = sp + 24|0;
 $$field = HEAP32[$1>>2]|0;
 $$index1 = ((($1)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $3 = $0;
 HEAP32[$4>>2] = $$field;
 $$index5 = ((($4)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 $5 = 647;
 $7 = (__ZN10emscripten8internal6TypeIDI6LASZipvE3getEv()|0);
 $8 = $3;
 $9 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEiEE8getCountEv($6)|0);
 $10 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEiEE8getTypesEv($6)|0);
 $11 = $5;
 $2 = $11;
 $12 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0);
 $13 = $5;
 $14 = (__ZN10emscripten8internal10getContextIM6LASZipFviEEEPT_RKS5_($4)|0);
 __embind_register_class_function(($7|0),($8|0),($9|0),($10|0),($12|0),($13|0),($14|0),0);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal13MethodInvokerIM6LASZipFviEvPS2_JiEE6invokeERKS4_S5_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = (__ZN10emscripten8internal11BindingTypeIP6LASZipvE12fromWireTypeES3_($6)|0);
 $8 = $3;
 $$field = HEAP32[$8>>2]|0;
 $$index1 = ((($8)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $9 = $$field2 >> 1;
 $10 = (($7) + ($9)|0);
 $11 = $$field2 & 1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = HEAP32[$10>>2]|0;
  $14 = (($13) + ($$field)|0);
  $15 = HEAP32[$14>>2]|0;
  $19 = $15;
 } else {
  $16 = $$field;
  $19 = $16;
 }
 $17 = $5;
 $18 = (__ZN10emscripten8internal11BindingTypeIivE12fromWireTypeEi($17)|0);
 FUNCTION_TABLE_vii[$19 & 1023]($10,$18);
 STACKTOP = sp;return;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEiEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 3;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI6LASZipEEiEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI6LASZipEEiEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal10getContextIM6LASZipFviEEEPT_RKS5_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwm(8)|0);
 $3 = $1;
 $$field = HEAP32[$3>>2]|0;
 $$index1 = ((($3)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 HEAP32[$2>>2] = $$field;
 $$index5 = ((($2)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIivE12fromWireTypeEi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI6LASZipEEiEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10092|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18150|0);
}
function __ZN10emscripten8internal11NoBaseClass6verifyI12ChunkDecoderEEvv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10emscripten8internal13getActualTypeI12ChunkDecoderEEPKvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN10emscripten8internal14getLightTypeIDI12ChunkDecoderEEPKvRKT_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN10emscripten8internal11NoBaseClass11getUpcasterI12ChunkDecoderEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function __ZN10emscripten8internal11NoBaseClass13getDowncasterI12ChunkDecoderEEPFvvEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function __ZN10emscripten8internal14raw_destructorI12ChunkDecoderEEvPT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  __ZN12ChunkDecoderD2Ev($2);
  __ZdlPv($2);
 }
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDI12ChunkDecodervE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDI12ChunkDecoderE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerI12ChunkDecoderEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIP12ChunkDecoderE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINS0_17AllowedRawPointerIK12ChunkDecoderEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIPK12ChunkDecoderE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal14getLightTypeIDI12ChunkDecoderEEPKvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (5992|0);
}
function __ZN12ChunkDecoderD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__210shared_ptrIN7lazperf6reader18chunk_decompressorEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal11LightTypeIDI12ChunkDecoderE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5992|0);
}
function __ZN10emscripten8internal11LightTypeIDIP12ChunkDecoderE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (6000|0);
}
function __ZN10emscripten8internal11LightTypeIDIPK12ChunkDecoderE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (6016|0);
}
function __ZN10emscripten8internal12operator_newI12ChunkDecoderJEEEPT_DpOT0_() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__Znwm(8)|0);
 __ZN12ChunkDecoderC2Ev($0);
 return ($0|0);
}
function __ZN10emscripten8internal24RegisterClassConstructorIPFP12ChunkDecodervEE6invokeIS2_JEEEvS5_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $2 = $0;
 $4 = 648;
 $5 = (__ZN10emscripten8internal6TypeIDI12ChunkDecodervE3getEv()|0);
 $6 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP12ChunkDecoderEE8getCountEv($3)|0);
 $7 = (__ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP12ChunkDecoderEE8getTypesEv($3)|0);
 $8 = $4;
 $1 = $8;
 $9 = (__ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv()|0);
 $10 = $4;
 $11 = $2;
 __embind_register_class_constructor(($5|0),($6|0),($7|0),($9|0),($10|0),($11|0));
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIP12ChunkDecoderJEE6invokeEPFS3_vE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (FUNCTION_TABLE_i[$2 & 1023]()|0);
 $4 = (__ZN10emscripten8internal11BindingTypeIP12ChunkDecodervE10toWireTypeES3_($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP12ChunkDecoderEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK10emscripten8internal12WithPoliciesIJNS_18allow_raw_pointersEEE11ArgTypeListIJP12ChunkDecoderEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI12ChunkDecoderEEEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIP12ChunkDecodervE10toWireTypeES3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJNS0_17AllowedRawPointerI12ChunkDecoderEEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10104|0);
}
function __ZN12ChunkDecoderC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal19RegisterClassMethodIM12ChunkDecoderFviijEE6invokeIS2_JEEEvPKcS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $6 = sp + 24|0;
 $$field = HEAP32[$1>>2]|0;
 $$index1 = ((($1)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $3 = $0;
 HEAP32[$4>>2] = $$field;
 $$index5 = ((($4)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 $5 = 649;
 $7 = (__ZN10emscripten8internal6TypeIDI12ChunkDecodervE3getEv()|0);
 $8 = $3;
 $9 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEiijEE8getCountEv($6)|0);
 $10 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEiijEE8getTypesEv($6)|0);
 $11 = $5;
 $2 = $11;
 $12 = (__ZN10emscripten8internal19getGenericSignatureIJviiiiiEEEPKcv()|0);
 $13 = $5;
 $14 = (__ZN10emscripten8internal10getContextIM12ChunkDecoderFviijEEEPT_RKS5_($4)|0);
 __embind_register_class_function(($7|0),($8|0),($9|0),($10|0),($12|0),($13|0),($14|0),0);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal13MethodInvokerIM12ChunkDecoderFviijEvPS2_JiijEE6invokeERKS4_S5_iij($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $6;
 $11 = (__ZN10emscripten8internal11BindingTypeIP12ChunkDecodervE12fromWireTypeES3_($10)|0);
 $12 = $5;
 $$field = HEAP32[$12>>2]|0;
 $$index1 = ((($12)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $13 = $$field2 >> 1;
 $14 = (($11) + ($13)|0);
 $15 = $$field2 & 1;
 $16 = ($15|0)!=(0);
 if ($16) {
  $17 = HEAP32[$14>>2]|0;
  $18 = (($17) + ($$field)|0);
  $19 = HEAP32[$18>>2]|0;
  $27 = $19;
 } else {
  $20 = $$field;
  $27 = $20;
 }
 $21 = $7;
 $22 = (__ZN10emscripten8internal11BindingTypeIivE12fromWireTypeEi($21)|0);
 $23 = $8;
 $24 = (__ZN10emscripten8internal11BindingTypeIivE12fromWireTypeEi($23)|0);
 $25 = $9;
 $26 = (__ZN10emscripten8internal11BindingTypeIjvE12fromWireTypeEj($25)|0);
 FUNCTION_TABLE_viiii[$27 & 1023]($14,$22,$24,$26);
 STACKTOP = sp;return;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEiijEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 5;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEiijEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEiijEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal10getContextIM12ChunkDecoderFviijEEEPT_RKS5_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwm(8)|0);
 $3 = $1;
 $$field = HEAP32[$3>>2]|0;
 $$index1 = ((($3)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 HEAP32[$2>>2] = $$field;
 $$index5 = ((($2)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal11BindingTypeIP12ChunkDecodervE12fromWireTypeES3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEiijEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (32|0);
}
function __ZN10emscripten8internal19getGenericSignatureIJviiiiiEEEPKcv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18203|0);
}
function __ZN10emscripten8internal19RegisterClassMethodIM12ChunkDecoderFvjEE6invokeIS2_JEEEvPKcS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $6 = sp + 24|0;
 $$field = HEAP32[$1>>2]|0;
 $$index1 = ((($1)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $3 = $0;
 HEAP32[$4>>2] = $$field;
 $$index5 = ((($4)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 $5 = 650;
 $7 = (__ZN10emscripten8internal6TypeIDI12ChunkDecodervE3getEv()|0);
 $8 = $3;
 $9 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEjEE8getCountEv($6)|0);
 $10 = (__ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEjEE8getTypesEv($6)|0);
 $11 = $5;
 $2 = $11;
 $12 = (__ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv()|0);
 $13 = $5;
 $14 = (__ZN10emscripten8internal10getContextIM12ChunkDecoderFvjEEEPT_RKS5_($4)|0);
 __embind_register_class_function(($7|0),($8|0),($9|0),($10|0),($12|0),($13|0),($14|0),0);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal13MethodInvokerIM12ChunkDecoderFvjEvPS2_JjEE6invokeERKS4_S5_j($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = (__ZN10emscripten8internal11BindingTypeIP12ChunkDecodervE12fromWireTypeES3_($6)|0);
 $8 = $3;
 $$field = HEAP32[$8>>2]|0;
 $$index1 = ((($8)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $9 = $$field2 >> 1;
 $10 = (($7) + ($9)|0);
 $11 = $$field2 & 1;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = HEAP32[$10>>2]|0;
  $14 = (($13) + ($$field)|0);
  $15 = HEAP32[$14>>2]|0;
  $19 = $15;
 } else {
  $16 = $$field;
  $19 = $16;
 }
 $17 = $5;
 $18 = (__ZN10emscripten8internal11BindingTypeIjvE12fromWireTypeEj($17)|0);
 FUNCTION_TABLE_vii[$19 & 1023]($10,$18);
 STACKTOP = sp;return;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEjEE8getCountEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 3;
}
function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEjEE8getTypesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEjEEEE3getEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal10getContextIM12ChunkDecoderFvjEEEPT_RKS5_($0) {
 $0 = $0|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $$index5 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__Znwm(8)|0);
 $3 = $1;
 $$field = HEAP32[$3>>2]|0;
 $$index1 = ((($3)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 HEAP32[$2>>2] = $$field;
 $$index5 = ((($2)) + 4|0);
 HEAP32[$$index5>>2] = $$field2;
 STACKTOP = sp;return ($2|0);
}
function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvNS0_17AllowedRawPointerI12ChunkDecoderEEjEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10108|0);
}
function __GLOBAL__sub_I_laz_perf_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function __ZN7lazperf9baseCountEi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $4 = $3 & 15;
 switch ($4|0) {
 case 0:  {
  $1 = 20;
  break;
 }
 case 1:  {
  $1 = 28;
  break;
 }
 case 2:  {
  $1 = 26;
  break;
 }
 case 3:  {
  $1 = 34;
  break;
 }
 case 6:  {
  $1 = 30;
  break;
 }
 case 7:  {
  $1 = 36;
  break;
 }
 case 8:  {
  $1 = 38;
  break;
 }
 default: {
  $1 = 0;
 }
 }
 $5 = $1;
 STACKTOP = sp;return ($5|0);
}
function __ZN7lazperf11base_headerC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 76;
 $3 = ((($2)) + 1|0);
 HEAP8[$3>>0] = 65;
 $4 = ((($3)) + 1|0);
 HEAP8[$4>>0] = 83;
 $5 = ((($4)) + 1|0);
 HEAP8[$5>>0] = 70;
 $6 = ((($2)) + 4|0);
 HEAP16[$6>>1] = 0;
 $7 = ((($2)) + 6|0);
 HEAP16[$7>>1] = 0;
 $8 = ((($2)) + 8|0);
 $9 = ((($8)) + 16|0);
 $10 = $8;
 while(1) {
  HEAP8[$10>>0] = 0;
  $11 = ((($10)) + 1|0);
  $12 = ($11|0)==($9|0);
  if ($12) {
   break;
  } else {
   $10 = $11;
  }
 }
 $13 = ((($2)) + 24|0);
 __ZN7lazperf11base_headerUt_C2Ev($13);
 $14 = ((($2)) + 26|0);
 $15 = ((($14)) + 32|0);
 $16 = $14;
 while(1) {
  HEAP8[$16>>0] = 0;
  $17 = ((($16)) + 1|0);
  $18 = ($17|0)==($15|0);
  if ($18) {
   break;
  } else {
   $16 = $17;
  }
 }
 $19 = ((($2)) + 58|0);
 $20 = ((($19)) + 32|0);
 $21 = $19;
 while(1) {
  HEAP8[$21>>0] = 0;
  $22 = ((($21)) + 1|0);
  $23 = ($22|0)==($20|0);
  if ($23) {
   break;
  } else {
   $21 = $22;
  }
 }
 $24 = ((($2)) + 90|0);
 __ZN7lazperf11base_headerUt0_C2Ev($24);
 $25 = ((($2)) + 94|0);
 HEAP16[$25>>1] = 0;
 $26 = ((($2)) + 96|0);
 HEAP32[$26>>2] = 0;
 $27 = ((($2)) + 100|0);
 HEAP32[$27>>2] = 0;
 $28 = ((($2)) + 104|0);
 HEAP8[$28>>0] = 0;
 $29 = ((($2)) + 106|0);
 HEAP16[$29>>1] = 0;
 $30 = ((($2)) + 108|0);
 HEAP32[$30>>2] = 0;
 $31 = ((($2)) + 112|0);
 $32 = ((($31)) + 20|0);
 $33 = $31;
 while(1) {
  HEAP32[$33>>2] = 0;
  $34 = ((($33)) + 4|0);
  $35 = ($34|0)==($32|0);
  if ($35) {
   break;
  } else {
   $33 = $34;
  }
 }
 $36 = ((($2)) + 136|0);
 __ZN7lazperf7vector3C2Ev($36);
 $37 = ((($2)) + 160|0);
 __ZN7lazperf7vector3C2Ev($37);
 $38 = ((($2)) + 184|0);
 HEAPF64[$38>>3] = -1.7976931348623157E+308;
 $39 = ((($2)) + 192|0);
 HEAPF64[$39>>3] = 1.7976931348623157E+308;
 $40 = ((($2)) + 200|0);
 HEAPF64[$40>>3] = -1.7976931348623157E+308;
 $41 = ((($2)) + 208|0);
 HEAPF64[$41>>3] = 1.7976931348623157E+308;
 $42 = ((($2)) + 216|0);
 HEAPF64[$42>>3] = -1.7976931348623157E+308;
 $43 = ((($2)) + 224|0);
 HEAPF64[$43>>3] = 1.7976931348623157E+308;
 STACKTOP = sp;return;
}
function __ZN7lazperf11base_headerUt_C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 1;
 $3 = ((($2)) + 1|0);
 HEAP8[$3>>0] = 3;
 STACKTOP = sp;return;
}
function __ZN7lazperf11base_headerUt0_C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP16[$2>>1] = 0;
 $3 = ((($2)) + 2|0);
 HEAP16[$3>>1] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf7vector3C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAPF64[$2>>3] = 0.0;
 $3 = ((($2)) + 8|0);
 HEAPF64[$3>>3] = 0.0;
 $4 = ((($2)) + 16|0);
 HEAPF64[$4>>3] = 0.0;
 STACKTOP = sp;return;
}
function __ZNK7lazperf11base_header7ebCountEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = ((($3)) + 104|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&255;
 $7 = (__ZN7lazperf9baseCountEi($6)|0);
 $2 = $7;
 $8 = $2;
 $9 = ($8|0)!=(0);
 if (!($9)) {
  $15 = 0;
  STACKTOP = sp;return ($15|0);
 }
 $10 = ((($3)) + 106|0);
 $11 = HEAP16[$10>>1]|0;
 $12 = $11&65535;
 $13 = $2;
 $14 = (($12) - ($13))|0;
 $15 = $14;
 STACKTOP = sp;return ($15|0);
}
function __ZNK7lazperf11base_header11pointFormatEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 104|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 & 63;
 STACKTOP = sp;return ($6|0);
}
function __ZNK7lazperf11base_header10compressedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 104|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 & 128;
 $7 = ($6|0)!=(0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__211char_traitsIcE11to_int_typeEc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2&255;
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__211char_traitsIcE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__211char_traitsIcE11eq_int_typeEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($4|0)==($5|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__211char_traitsIcE12to_char_typeEi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2&255;
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf8header12C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf11base_headerC2Ev($2);
 $3 = ((($2)) + 24|0);
 $4 = ((($3)) + 1|0);
 HEAP8[$4>>0] = 2;
 STACKTOP = sp;return;
}
function __ZN7lazperf8header124readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $36 = sp + 24|0;
 $37 = sp + 8|0;
 $34 = $0;
 $35 = $1;
 $39 = $34;
 __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($36,227);
 $40 = $35;
 $33 = $36;
 $41 = $33;
 $42 = HEAP32[$41>>2]|0;
 $32 = $42;
 $43 = $32;
 $5 = $36;
 $44 = $5;
 $45 = ((($44)) + 4|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = HEAP32[$44>>2]|0;
 $48 = $46;
 $49 = $47;
 $50 = (($48) - ($49))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($40,$43,$50)|0);
 $4 = $36;
 $51 = $4;
 $52 = HEAP32[$51>>2]|0;
 $3 = $52;
 $53 = $3;
 $2 = $36;
 $54 = $2;
 $55 = ((($54)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$54>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 __ZN7lazperf11LeExtractorC2EPKcm($37,$53,$60);
 __ZN7lazperf9Extractor3getEPcm($37,$39,4);
 $61 = ((($39)) + 4|0);
 $62 = (__ZN7lazperf11LeExtractorrsERt($37,$61)|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ((($63)) + 8|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = ((($39)) + 6|0);
 (FUNCTION_TABLE_iii[$65 & 1023]($62,$66)|0);
 $67 = ((($39)) + 8|0);
 __ZN7lazperf9Extractor3getEPcm($37,$67,16);
 $68 = ((($39)) + 24|0);
 $69 = (__ZN7lazperf11LeExtractorrsERh($37,$68)|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$70>>2]|0;
 $72 = ((($39)) + 24|0);
 $73 = ((($72)) + 1|0);
 (FUNCTION_TABLE_iii[$71 & 1023]($69,$73)|0);
 $74 = ((($39)) + 26|0);
 __ZN7lazperf9Extractor3getEPcm($37,$74,32);
 $75 = ((($39)) + 58|0);
 __ZN7lazperf9Extractor3getEPcm($37,$75,32);
 $76 = ((($39)) + 90|0);
 $77 = (__ZN7lazperf11LeExtractorrsERt($37,$76)|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = ((($78)) + 8|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ((($39)) + 90|0);
 $82 = ((($81)) + 2|0);
 (FUNCTION_TABLE_iii[$80 & 1023]($77,$82)|0);
 $83 = ((($39)) + 94|0);
 $84 = (__ZN7lazperf11LeExtractorrsERt($37,$83)|0);
 $85 = HEAP32[$84>>2]|0;
 $86 = ((($85)) + 16|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = ((($39)) + 96|0);
 $89 = (FUNCTION_TABLE_iii[$87 & 1023]($84,$88)|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($90)) + 16|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ((($39)) + 100|0);
 (FUNCTION_TABLE_iii[$92 & 1023]($89,$93)|0);
 $94 = ((($39)) + 104|0);
 $95 = (__ZN7lazperf11LeExtractorrsERh($37,$94)|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($96)) + 8|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = ((($39)) + 106|0);
 (FUNCTION_TABLE_iii[$98 & 1023]($95,$99)|0);
 $100 = ((($39)) + 108|0);
 (__ZN7lazperf11LeExtractorrsERj($37,$100)|0);
 $38 = 0;
 while(1) {
  $101 = $38;
  $102 = ($101|0)<(5);
  if (!($102)) {
   break;
  }
  $103 = ((($39)) + 112|0);
  $104 = $38;
  $105 = (($103) + ($104<<2)|0);
  (__ZN7lazperf11LeExtractorrsERj($37,$105)|0);
  $106 = $38;
  $107 = (($106) + 1)|0;
  $38 = $107;
 }
 $108 = ((($39)) + 136|0);
 $109 = (__ZN7lazperf11LeExtractorrsERd($37,$108)|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ((($110)) + 36|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = ((($39)) + 136|0);
 $114 = ((($113)) + 8|0);
 $115 = (FUNCTION_TABLE_iii[$112 & 1023]($109,$114)|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = ((($116)) + 36|0);
 $118 = HEAP32[$117>>2]|0;
 $119 = ((($39)) + 136|0);
 $120 = ((($119)) + 16|0);
 (FUNCTION_TABLE_iii[$118 & 1023]($115,$120)|0);
 $121 = ((($39)) + 160|0);
 $122 = (__ZN7lazperf11LeExtractorrsERd($37,$121)|0);
 $123 = HEAP32[$122>>2]|0;
 $124 = ((($123)) + 36|0);
 $125 = HEAP32[$124>>2]|0;
 $126 = ((($39)) + 160|0);
 $127 = ((($126)) + 8|0);
 $128 = (FUNCTION_TABLE_iii[$125 & 1023]($122,$127)|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = ((($129)) + 36|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = ((($39)) + 160|0);
 $133 = ((($132)) + 16|0);
 (FUNCTION_TABLE_iii[$131 & 1023]($128,$133)|0);
 $134 = ((($39)) + 184|0);
 $135 = (__ZN7lazperf11LeExtractorrsERd($37,$134)|0);
 $136 = HEAP32[$135>>2]|0;
 $137 = ((($136)) + 36|0);
 $138 = HEAP32[$137>>2]|0;
 $139 = ((($39)) + 192|0);
 $140 = (FUNCTION_TABLE_iii[$138 & 1023]($135,$139)|0);
 $141 = HEAP32[$140>>2]|0;
 $142 = ((($141)) + 36|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = ((($39)) + 200|0);
 $145 = (FUNCTION_TABLE_iii[$143 & 1023]($140,$144)|0);
 $146 = HEAP32[$145>>2]|0;
 $147 = ((($146)) + 36|0);
 $148 = HEAP32[$147>>2]|0;
 $149 = ((($39)) + 208|0);
 $150 = (FUNCTION_TABLE_iii[$148 & 1023]($145,$149)|0);
 $151 = HEAP32[$150>>2]|0;
 $152 = ((($151)) + 36|0);
 $153 = HEAP32[$152>>2]|0;
 $154 = ((($39)) + 216|0);
 $155 = (FUNCTION_TABLE_iii[$153 & 1023]($150,$154)|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = ((($156)) + 36|0);
 $158 = HEAP32[$157>>2]|0;
 $159 = ((($39)) + 224|0);
 (FUNCTION_TABLE_iii[$158 & 1023]($155,$159)|0);
 $31 = $36;
 $160 = $31;
 $30 = $160;
 $161 = $30;
 $29 = $161;
 $162 = $29;
 $163 = HEAP32[$162>>2]|0;
 $28 = $163;
 $164 = $28;
 $7 = $161;
 $165 = $7;
 $166 = HEAP32[$165>>2]|0;
 $6 = $166;
 $167 = $6;
 $12 = $161;
 $168 = $12;
 $11 = $168;
 $169 = $11;
 $10 = $169;
 $170 = $10;
 $171 = ((($170)) + 8|0);
 $9 = $171;
 $172 = $9;
 $8 = $172;
 $173 = $8;
 $174 = HEAP32[$173>>2]|0;
 $175 = HEAP32[$169>>2]|0;
 $176 = $174;
 $177 = $175;
 $178 = (($176) - ($177))|0;
 $179 = (($167) + ($178)|0);
 $14 = $161;
 $180 = $14;
 $181 = HEAP32[$180>>2]|0;
 $13 = $181;
 $182 = $13;
 $15 = $161;
 $183 = $15;
 $184 = ((($183)) + 4|0);
 $185 = HEAP32[$184>>2]|0;
 $186 = HEAP32[$183>>2]|0;
 $187 = $185;
 $188 = $186;
 $189 = (($187) - ($188))|0;
 $190 = (($182) + ($189)|0);
 $17 = $161;
 $191 = $17;
 $192 = HEAP32[$191>>2]|0;
 $16 = $192;
 $193 = $16;
 $22 = $161;
 $194 = $22;
 $21 = $194;
 $195 = $21;
 $20 = $195;
 $196 = $20;
 $197 = ((($196)) + 8|0);
 $19 = $197;
 $198 = $19;
 $18 = $198;
 $199 = $18;
 $200 = HEAP32[$199>>2]|0;
 $201 = HEAP32[$195>>2]|0;
 $202 = $200;
 $203 = $201;
 $204 = (($202) - ($203))|0;
 $205 = (($193) + ($204)|0);
 $23 = $161;
 $24 = $164;
 $25 = $179;
 $26 = $190;
 $27 = $205;
 __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($160);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 8|0;
 $13 = $0;
 $14 = $1;
 $15 = $13;
 $11 = $15;
 $16 = $11;
 $10 = $16;
 HEAP32[$16>>2] = 0;
 $17 = ((($16)) + 4|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($16)) + 8|0);
 HEAP32[$12>>2] = 0;
 $8 = $18;
 $9 = $12;
 $19 = $8;
 $20 = $9;
 $7 = $20;
 $21 = $7;
 $3 = $19;
 $4 = $21;
 $22 = $3;
 $23 = $4;
 $2 = $23;
 HEAP32[$22>>2] = 0;
 $6 = $19;
 $24 = $6;
 $5 = $24;
 $25 = $14;
 $26 = ($25>>>0)>(0);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = $14;
 __ZNSt3__26vectorIcNS_9allocatorIcEEE11__vallocateEm($15,$27);
 $28 = $14;
 __ZNSt3__26vectorIcNS_9allocatorIcEEE18__construct_at_endEm($15,$28);
 STACKTOP = sp;return;
}
function __ZN7lazperf11LeExtractorC2EPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN7lazperf9ExtractorC2EPKcm($6,$7,$8);
 HEAP32[$6>>2] = (10132);
 STACKTOP = sp;return;
}
function __ZN7lazperf9Extractor3getEPcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = ((($6)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $5;
 _memcpy(($7|0),($9|0),($10|0))|0;
 $11 = $5;
 $12 = ((($6)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($11)|0);
 HEAP32[$12>>2] = $14;
 STACKTOP = sp;return;
}
function __ZN7lazperf11LeExtractorrsERt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 ;HEAP8[$5>>0]=HEAP8[$7>>0]|0;HEAP8[$5+1>>0]=HEAP8[$7+1>>0]|0;
 $8 = $3;
 $9 = HEAP16[$8>>1]|0;
 $10 = $3;
 HEAP16[$10>>1] = $9;
 $11 = ((($4)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 2|0);
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 1|0);
 HEAP32[$5>>2] = $7;
 $8 = HEAP8[$6>>0]|0;
 $9 = $3;
 HEAP8[$9>>0] = $8;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 ;HEAP8[$5>>0]=HEAP8[$7>>0]|0;HEAP8[$5+1>>0]=HEAP8[$7+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[$7+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[$7+3>>0]|0;
 $8 = $3;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 HEAP32[$10>>2] = $9;
 $11 = ((($4)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 4|0);
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -1|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
 }
 $59 = $33;
 $60 = ((($42)) + 4|0);
 HEAP32[$60>>2] = $59;
 $7 = $37;
 $61 = $7;
 $62 = ((($61)) + 8|0);
 $6 = $62;
 $63 = $6;
 $5 = $63;
 $64 = $5;
 $65 = HEAP32[$37>>2]|0;
 $4 = $37;
 $66 = $4;
 $3 = $66;
 $67 = $3;
 $68 = ((($67)) + 8|0);
 $2 = $68;
 $69 = $2;
 $1 = $69;
 $70 = $1;
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$66>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $17 = $64;
 $18 = $65;
 $19 = $75;
 $76 = $17;
 $77 = $18;
 $78 = $19;
 $14 = $76;
 $15 = $77;
 $16 = $78;
 $79 = $15;
 $80 = $16;
 $11 = $79;
 $12 = $80;
 $13 = 1;
 $81 = $11;
 $82 = $12;
 $83 = $13;
 $8 = $81;
 $9 = $82;
 $10 = $83;
 $84 = $8;
 $85 = $9;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($84,$85);
 STACKTOP = sp;return;
}
function __ZN7lazperf11LeExtractorrsERd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($5)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP8[$6>>0]=HEAP8[$8>>0]|0;HEAP8[$6+1>>0]=HEAP8[$8+1>>0]|0;HEAP8[$6+2>>0]=HEAP8[$8+2>>0]|0;HEAP8[$6+3>>0]=HEAP8[$8+3>>0]|0;HEAP8[$6+4>>0]=HEAP8[$8+4>>0]|0;HEAP8[$6+5>>0]=HEAP8[$8+5>>0]|0;HEAP8[$6+6>>0]=HEAP8[$8+6>>0]|0;HEAP8[$6+7>>0]=HEAP8[$8+7>>0]|0;
 $9 = $3;
 $10 = $9;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $4;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $15;
 $20 = $3;
 ;HEAP32[$20>>2]=HEAP32[$4>>2]|0;HEAP32[$20+4>>2]=HEAP32[$4+4>>2]|0;
 $21 = ((($5)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 8|0);
 HEAP32[$21>>2] = $23;
 STACKTOP = sp;return ($5|0);
}
function __ZN7lazperf9ExtractorC2EPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 HEAP32[$6>>2] = (10180);
 $7 = ((($6)) + 4|0);
 $8 = $4;
 HEAP32[$7>>2] = $8;
 $9 = ((($6)) + 8|0);
 $10 = $4;
 $11 = $5;
 $12 = (($10) + ($11)|0);
 HEAP32[$9>>2] = $12;
 $13 = ((($6)) + 12|0);
 $14 = $4;
 HEAP32[$13>>2] = $14;
 STACKTOP = sp;return;
}
function __ZN7lazperf11LeExtractorrsERa($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 1|0);
 HEAP32[$5>>2] = $7;
 $8 = HEAP8[$6>>0]|0;
 $9 = $3;
 HEAP8[$9>>0] = $8;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 ;HEAP8[$5>>0]=HEAP8[$7>>0]|0;HEAP8[$5+1>>0]=HEAP8[$7+1>>0]|0;
 $8 = $3;
 $9 = HEAP16[$8>>1]|0;
 $10 = $3;
 HEAP16[$10>>1] = $9;
 $11 = ((($4)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 2|0);
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 ;HEAP8[$5>>0]=HEAP8[$7>>0]|0;HEAP8[$5+1>>0]=HEAP8[$7+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[$7+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[$7+3>>0]|0;
 $8 = $3;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 HEAP32[$10>>2] = $9;
 $11 = ((($4)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 4|0);
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 ;HEAP8[$5>>0]=HEAP8[$7>>0]|0;HEAP8[$5+1>>0]=HEAP8[$7+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[$7+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[$7+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[$7+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[$7+5>>0]|0;HEAP8[$5+6>>0]=HEAP8[$7+6>>0]|0;HEAP8[$5+7>>0]=HEAP8[$7+7>>0]|0;
 $8 = $3;
 $9 = $8;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = $11;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $14;
 $20 = ((($4)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 8|0);
 HEAP32[$20>>2] = $22;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERx($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 ;HEAP8[$5>>0]=HEAP8[$7>>0]|0;HEAP8[$5+1>>0]=HEAP8[$7+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[$7+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[$7+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[$7+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[$7+5>>0]|0;HEAP8[$5+6>>0]=HEAP8[$7+6>>0]|0;HEAP8[$5+7>>0]=HEAP8[$7+7>>0]|0;
 $8 = $3;
 $9 = $8;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = $11;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $14;
 $20 = ((($4)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 8|0);
 HEAP32[$20>>2] = $22;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf11LeExtractorrsERf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($5)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 ;HEAP8[$6>>0]=HEAP8[$8>>0]|0;HEAP8[$6+1>>0]=HEAP8[$8+1>>0]|0;HEAP8[$6+2>>0]=HEAP8[$8+2>>0]|0;HEAP8[$6+3>>0]=HEAP8[$8+3>>0]|0;
 $9 = $3;
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $10;
 $11 = $3;
 ;HEAP32[$11>>2]=HEAP32[$4>>2]|0;
 $12 = ((($5)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($13)) + 4|0);
 HEAP32[$12>>2] = $14;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__26vectorIcNS_9allocatorIcEEE11__vallocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $41 = $0;
 $42 = $1;
 $43 = $41;
 $44 = $42;
 $45 = (__ZNKSt3__26vectorIcNS_9allocatorIcEEE8max_sizeEv($43)|0);
 $46 = ($44>>>0)>($45>>>0);
 if ($46) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($43);
  // unreachable;
 } else {
  $40 = $43;
  $47 = $40;
  $48 = ((($47)) + 8|0);
  $39 = $48;
  $49 = $39;
  $38 = $49;
  $50 = $38;
  $51 = $42;
  $8 = $50;
  $9 = $51;
  $52 = $8;
  $53 = $9;
  $5 = $52;
  $6 = $53;
  $7 = 0;
  $54 = $5;
  $4 = $54;
  $55 = $6;
  $2 = $55;
  $3 = 1;
  $56 = $2;
  $57 = (__Znwm($56)|0);
  $58 = ((($43)) + 4|0);
  HEAP32[$58>>2] = $57;
  HEAP32[$43>>2] = $57;
  $59 = HEAP32[$43>>2]|0;
  $60 = $42;
  $61 = (($59) + ($60)|0);
  $12 = $43;
  $62 = $12;
  $63 = ((($62)) + 8|0);
  $11 = $63;
  $64 = $11;
  $10 = $64;
  $65 = $10;
  HEAP32[$65>>2] = $61;
  $36 = $43;
  $37 = 0;
  $66 = $36;
  $35 = $66;
  $67 = $35;
  $68 = HEAP32[$67>>2]|0;
  $34 = $68;
  $69 = $34;
  $14 = $66;
  $70 = $14;
  $71 = HEAP32[$70>>2]|0;
  $13 = $71;
  $72 = $13;
  $19 = $66;
  $73 = $19;
  $18 = $73;
  $74 = $18;
  $17 = $74;
  $75 = $17;
  $76 = ((($75)) + 8|0);
  $16 = $76;
  $77 = $16;
  $15 = $77;
  $78 = $15;
  $79 = HEAP32[$78>>2]|0;
  $80 = HEAP32[$74>>2]|0;
  $81 = $79;
  $82 = $80;
  $83 = (($81) - ($82))|0;
  $84 = (($72) + ($83)|0);
  $21 = $66;
  $85 = $21;
  $86 = HEAP32[$85>>2]|0;
  $20 = $86;
  $87 = $20;
  $26 = $66;
  $88 = $26;
  $25 = $88;
  $89 = $25;
  $24 = $89;
  $90 = $24;
  $91 = ((($90)) + 8|0);
  $23 = $91;
  $92 = $23;
  $22 = $92;
  $93 = $22;
  $94 = HEAP32[$93>>2]|0;
  $95 = HEAP32[$89>>2]|0;
  $96 = $94;
  $97 = $95;
  $98 = (($96) - ($97))|0;
  $99 = (($87) + ($98)|0);
  $28 = $66;
  $100 = $28;
  $101 = HEAP32[$100>>2]|0;
  $27 = $101;
  $102 = $27;
  $103 = $37;
  $104 = (($102) + ($103)|0);
  $29 = $66;
  $30 = $69;
  $31 = $84;
  $32 = $99;
  $33 = $104;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__26vectorIcNS_9allocatorIcEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $10 = sp;
 $13 = sp + 73|0;
 $21 = sp + 72|0;
 $18 = $0;
 $19 = $1;
 $22 = $18;
 $17 = $22;
 $23 = $17;
 $24 = ((($23)) + 8|0);
 $16 = $24;
 $25 = $16;
 $15 = $25;
 $26 = $15;
 $20 = $26;
 while(1) {
  $2 = $21;
  $3 = $22;
  $4 = 1;
  $27 = $20;
  $28 = ((($22)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  $5 = $29;
  $30 = $5;
  $11 = $27;
  $12 = $30;
  $31 = $11;
  $32 = $12;
  ;HEAP8[$10>>0]=HEAP8[$13>>0]|0;
  $8 = $31;
  $9 = $32;
  $33 = $8;
  $34 = $9;
  $6 = $33;
  $7 = $34;
  $35 = $7;
  HEAP8[$35>>0] = 0;
  $36 = ((($22)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($37)) + 1|0);
  HEAP32[$36>>2] = $38;
  $39 = $19;
  $40 = (($39) + -1)|0;
  $19 = $40;
  $14 = $21;
  $41 = $19;
  $42 = ($41>>>0)>(0);
  if (!($42)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIcNS_9allocatorIcEEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = -1;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZN7lazperf8header13C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf8header12C2Ev($2);
 $3 = ((($2)) + 232|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($2)) + 24|0);
 $9 = ((($8)) + 1|0);
 HEAP8[$9>>0] = 3;
 STACKTOP = sp;return;
}
function __ZN7lazperf8header134readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $36 = sp + 16|0;
 $37 = sp;
 $34 = $0;
 $35 = $1;
 $38 = $34;
 $39 = $35;
 __ZN7lazperf8header124readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($38,$39);
 __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($36,8);
 $40 = $35;
 $33 = $36;
 $41 = $33;
 $42 = HEAP32[$41>>2]|0;
 $32 = $42;
 $43 = $32;
 $31 = $36;
 $44 = $31;
 $45 = ((($44)) + 4|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = HEAP32[$44>>2]|0;
 $48 = $46;
 $49 = $47;
 $50 = (($48) - ($49))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($40,$43,$50)|0);
 $4 = $36;
 $51 = $4;
 $52 = HEAP32[$51>>2]|0;
 $3 = $52;
 $53 = $3;
 $2 = $36;
 $54 = $2;
 $55 = ((($54)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$54>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 __ZN7lazperf11LeExtractorC2EPKcm($37,$53,$60);
 $61 = ((($38)) + 232|0);
 (__ZN7lazperf11LeExtractorrsERy($37,$61)|0);
 $30 = $36;
 $62 = $30;
 $29 = $62;
 $63 = $29;
 $28 = $63;
 $64 = $28;
 $65 = HEAP32[$64>>2]|0;
 $27 = $65;
 $66 = $27;
 $6 = $63;
 $67 = $6;
 $68 = HEAP32[$67>>2]|0;
 $5 = $68;
 $69 = $5;
 $11 = $63;
 $70 = $11;
 $10 = $70;
 $71 = $10;
 $9 = $71;
 $72 = $9;
 $73 = ((($72)) + 8|0);
 $8 = $73;
 $74 = $8;
 $7 = $74;
 $75 = $7;
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$71>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = (($69) + ($80)|0);
 $13 = $63;
 $82 = $13;
 $83 = HEAP32[$82>>2]|0;
 $12 = $83;
 $84 = $12;
 $14 = $63;
 $85 = $14;
 $86 = ((($85)) + 4|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = HEAP32[$85>>2]|0;
 $89 = $87;
 $90 = $88;
 $91 = (($89) - ($90))|0;
 $92 = (($84) + ($91)|0);
 $16 = $63;
 $93 = $16;
 $94 = HEAP32[$93>>2]|0;
 $15 = $94;
 $95 = $15;
 $21 = $63;
 $96 = $21;
 $20 = $96;
 $97 = $20;
 $19 = $97;
 $98 = $19;
 $99 = ((($98)) + 8|0);
 $18 = $99;
 $100 = $18;
 $17 = $100;
 $101 = $17;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($95) + ($106)|0);
 $22 = $63;
 $23 = $66;
 $24 = $81;
 $25 = $92;
 $26 = $107;
 __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($62);
 STACKTOP = sp;return;
}
function __ZN7lazperf8header14C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf8header13C2Ev($2);
 $3 = ((($2)) + 240|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($2)) + 248|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($2)) + 256|0);
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = 0;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = 0;
 $14 = ((($2)) + 264|0);
 $15 = ((($14)) + 120|0);
 $16 = $14;
 while(1) {
  $17 = $16;
  $18 = $17;
  HEAP32[$18>>2] = 0;
  $19 = (($17) + 4)|0;
  $20 = $19;
  HEAP32[$20>>2] = 0;
  $21 = ((($16)) + 8|0);
  $22 = ($21|0)==($15|0);
  if ($22) {
   break;
  } else {
   $16 = $21;
  }
 }
 $23 = ((($2)) + 24|0);
 $24 = ((($23)) + 1|0);
 HEAP8[$24>>0] = 4;
 STACKTOP = sp;return;
}
function __ZN7lazperf8header144readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $36 = sp + 24|0;
 $37 = sp + 8|0;
 $34 = $0;
 $35 = $1;
 $39 = $34;
 $40 = $35;
 __ZN7lazperf8header134readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($39,$40);
 __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($36,140);
 $41 = $35;
 $33 = $36;
 $42 = $33;
 $43 = HEAP32[$42>>2]|0;
 $32 = $43;
 $44 = $32;
 $5 = $36;
 $45 = $5;
 $46 = ((($45)) + 4|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = HEAP32[$45>>2]|0;
 $49 = $47;
 $50 = $48;
 $51 = (($49) - ($50))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($41,$44,$51)|0);
 $4 = $36;
 $52 = $4;
 $53 = HEAP32[$52>>2]|0;
 $3 = $53;
 $54 = $3;
 $2 = $36;
 $55 = $2;
 $56 = ((($55)) + 4|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = HEAP32[$55>>2]|0;
 $59 = $57;
 $60 = $58;
 $61 = (($59) - ($60))|0;
 __ZN7lazperf11LeExtractorC2EPKcm($37,$54,$61);
 $62 = ((($39)) + 240|0);
 (__ZN7lazperf11LeExtractorrsERy($37,$62)|0);
 $63 = ((($39)) + 248|0);
 (__ZN7lazperf11LeExtractorrsERj($37,$63)|0);
 $64 = ((($39)) + 256|0);
 (__ZN7lazperf11LeExtractorrsERy($37,$64)|0);
 $38 = 0;
 while(1) {
  $65 = $38;
  $66 = ($65|0)<(15);
  if (!($66)) {
   break;
  }
  $67 = ((($39)) + 264|0);
  $68 = $38;
  $69 = (($67) + ($68<<3)|0);
  (__ZN7lazperf11LeExtractorrsERy($37,$69)|0);
  $70 = $38;
  $71 = (($70) + 1)|0;
  $38 = $71;
 }
 $31 = $36;
 $72 = $31;
 $30 = $72;
 $73 = $30;
 $29 = $73;
 $74 = $29;
 $75 = HEAP32[$74>>2]|0;
 $28 = $75;
 $76 = $28;
 $7 = $73;
 $77 = $7;
 $78 = HEAP32[$77>>2]|0;
 $6 = $78;
 $79 = $6;
 $12 = $73;
 $80 = $12;
 $11 = $80;
 $81 = $11;
 $10 = $81;
 $82 = $10;
 $83 = ((($82)) + 8|0);
 $9 = $83;
 $84 = $9;
 $8 = $84;
 $85 = $8;
 $86 = HEAP32[$85>>2]|0;
 $87 = HEAP32[$81>>2]|0;
 $88 = $86;
 $89 = $87;
 $90 = (($88) - ($89))|0;
 $91 = (($79) + ($90)|0);
 $14 = $73;
 $92 = $14;
 $93 = HEAP32[$92>>2]|0;
 $13 = $93;
 $94 = $13;
 $15 = $73;
 $95 = $15;
 $96 = ((($95)) + 4|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$95>>2]|0;
 $99 = $97;
 $100 = $98;
 $101 = (($99) - ($100))|0;
 $102 = (($94) + ($101)|0);
 $17 = $73;
 $103 = $17;
 $104 = HEAP32[$103>>2]|0;
 $16 = $104;
 $105 = $16;
 $22 = $73;
 $106 = $22;
 $21 = $106;
 $107 = $21;
 $20 = $107;
 $108 = $20;
 $109 = ((($108)) + 8|0);
 $19 = $109;
 $110 = $19;
 $18 = $110;
 $111 = $18;
 $112 = HEAP32[$111>>2]|0;
 $113 = HEAP32[$107>>2]|0;
 $114 = $112;
 $115 = $113;
 $116 = (($114) - ($115))|0;
 $117 = (($105) + ($116)|0);
 $23 = $73;
 $24 = $76;
 $25 = $91;
 $26 = $102;
 $27 = $117;
 __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($72);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_file7Private4openERNSt3__213basic_istreamIcNS3_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $1;
 $15 = $13;
 $16 = $14;
 HEAP32[$15>>2] = $16;
 $17 = ((($15)) + 4|0);
 $18 = (__Znwm(4)|0);
 $19 = $14;
 __ZN7lazperf12InFileStreamC2ERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($18,$19);
 $10 = $17;
 $11 = $18;
 $20 = $10;
 $9 = $20;
 $21 = $9;
 $8 = $21;
 $22 = $8;
 $23 = HEAP32[$22>>2]|0;
 $12 = $23;
 $24 = $11;
 $5 = $20;
 $25 = $5;
 $4 = $25;
 $26 = $4;
 HEAP32[$26>>2] = $24;
 $27 = $12;
 $28 = ($27|0)!=(0|0);
 if ($28) {
  $3 = $20;
  $29 = $3;
  $2 = $29;
  $30 = $2;
  $31 = $12;
  $6 = $30;
  $7 = $31;
  $32 = $7;
  $33 = ($32|0)==(0|0);
  if (!($33)) {
   __ZN7lazperf12InFileStreamD2Ev($32);
   __ZdlPv($32);
  }
 }
 $34 = (__ZN7lazperf6reader10basic_file7Private10loadHeaderEv($15)|0);
 STACKTOP = sp;return ($34|0);
}
function __ZN7lazperf6reader10basic_file7Private10loadHeaderEv($0) {
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val12 = 0, $$expand_i1_val14 = 0, $$expand_i1_val5 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $$pre_trunc16 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(480|0);
 $$byval_copy3 = sp + 152|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 120|0;
 $$byval_copy = sp + 104|0;
 $31 = sp + 96|0;
 $35 = sp + 88|0;
 $37 = sp + 80|0;
 $54 = sp + 466|0;
 $68 = sp + 72|0;
 $69 = sp + 465|0;
 $71 = sp + 196|0;
 $72 = sp + 56|0;
 $73 = sp + 184|0;
 $74 = sp + 172|0;
 $75 = sp + 464|0;
 $76 = sp + 40|0;
 $77 = sp + 24|0;
 $79 = sp + 16|0;
 $80 = sp;
 $70 = $0;
 $81 = $70;
 $82 = HEAP32[2530]|0;
 __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($71,$82);
 $83 = HEAP32[$81>>2]|0;
 $67 = $72;
 $84 = $68;
 $85 = $84;
 HEAP32[$85>>2] = 0;
 $86 = (($84) + 4)|0;
 $87 = $86;
 HEAP32[$87>>2] = 0;
 $88 = $67;
 ;HEAP32[$88>>2]=0|0;HEAP32[$88+4>>2]=0|0;
 $89 = ((($88)) + 8|0);
 $90 = $68;
 $91 = $90;
 $92 = HEAP32[$91>>2]|0;
 $93 = (($90) + 4)|0;
 $94 = $93;
 $95 = HEAP32[$94>>2]|0;
 $96 = $89;
 $97 = $96;
 HEAP32[$97>>2] = $92;
 $98 = (($96) + 4)|0;
 $99 = $98;
 HEAP32[$99>>2] = $95;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$72>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$72+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$72+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$72+12>>2]|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($83,$$byval_copy)|0);
 $100 = ((($81)) + 8|0);
 $101 = HEAP32[$100>>2]|0;
 $102 = HEAP32[$81>>2]|0;
 __ZN7lazperf8header124readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($101,$102);
 $103 = ((($81)) + 8|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ((($81)) + 8|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = ((($106)) + 4|0);
 $64 = $73;
 $65 = $104;
 $66 = $107;
 $108 = $64;
 $63 = $108;
 $109 = $63;
 $62 = $109;
 $110 = $62;
 ;HEAP32[$110>>2]=0|0;HEAP32[$110+4>>2]=0|0;HEAP32[$110+8>>2]=0|0;
 $61 = $109;
 $111 = $61;
 $60 = $111;
 $112 = $65;
 $113 = $66;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($108,$112,$113);
 $58 = $73;
 $59 = 18255;
 $114 = $58;
 $115 = $59;
 $55 = $114;
 $56 = $115;
 $116 = $56;
 $117 = (__ZNSt3__211char_traitsIcE6lengthEPKc($116)|0);
 $57 = $117;
 $118 = $57;
 $119 = $55;
 $53 = $119;
 $120 = $53;
 $52 = $120;
 $121 = $52;
 $51 = $121;
 $122 = $51;
 $50 = $122;
 $123 = $50;
 $124 = ((($123)) + 11|0);
 $125 = HEAP8[$124>>0]|0;
 $126 = $125&255;
 $127 = $126 & 128;
 $128 = ($127|0)!=(0);
 if ($128) {
  $46 = $120;
  $129 = $46;
  $45 = $129;
  $130 = $45;
  $44 = $130;
  $131 = $44;
  $132 = ((($131)) + 4|0);
  $133 = HEAP32[$132>>2]|0;
  $141 = $133;
 } else {
  $49 = $120;
  $134 = $49;
  $48 = $134;
  $135 = $48;
  $47 = $135;
  $136 = $47;
  $137 = ((($136)) + 11|0);
  $138 = HEAP8[$137>>0]|0;
  $139 = $138&255;
  $141 = $139;
 }
 $140 = ($118|0)!=($141|0);
 if ($140) {
  $$expand_i1_val = 0;
  HEAP8[$54>>0] = $$expand_i1_val;
 } else {
  $142 = $55;
  $143 = $56;
  $144 = $57;
  $145 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm($142,0,-1,$143,$144)|0);
  $146 = ($145|0)==(0);
  $$expand_i1_val5 = $146&1;
  HEAP8[$54>>0] = $$expand_i1_val5;
 }
 $$pre_trunc = HEAP8[$54>>0]|0;
 $147 = $$pre_trunc&1;
 $148 = $147 ^ 1;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
 if ($148) {
  $149 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val8 = 1;
  HEAP8[$75>>0] = $$expand_i1_val8;
  $42 = $74;
  $43 = 18260;
  $150 = $42;
  $41 = $150;
  $151 = $41;
  $40 = $151;
  $152 = $40;
  ;HEAP32[$152>>2]=0|0;HEAP32[$152+4>>2]=0|0;HEAP32[$152+8>>2]=0|0;
  $39 = $151;
  $153 = $39;
  $38 = $153;
  $154 = $43;
  $155 = $43;
  $156 = (__ZNSt3__211char_traitsIcE6lengthEPKc($155)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($150,$154,$156);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($149,$74);
  $$expand_i1_val10 = 0;
  HEAP8[$75>>0] = $$expand_i1_val10;
  ___cxa_throw(($149|0),(6056|0),(22|0));
  // unreachable;
 }
 $157 = ((($81)) + 8|0);
 $158 = HEAP32[$157>>2]|0;
 $159 = ((($158)) + 24|0);
 $160 = ((($159)) + 1|0);
 $161 = HEAP8[$160>>0]|0;
 $162 = $161&255;
 $163 = ($162|0)==(3);
 if ($163) {
  $164 = HEAP32[$81>>2]|0;
  $36 = $76;
  $165 = $37;
  $166 = $165;
  HEAP32[$166>>2] = 0;
  $167 = (($165) + 4)|0;
  $168 = $167;
  HEAP32[$168>>2] = 0;
  $169 = $36;
  ;HEAP32[$169>>2]=0|0;HEAP32[$169+4>>2]=0|0;
  $170 = ((($169)) + 8|0);
  $171 = $37;
  $172 = $171;
  $173 = HEAP32[$172>>2]|0;
  $174 = (($171) + 4)|0;
  $175 = $174;
  $176 = HEAP32[$175>>2]|0;
  $177 = $170;
  $178 = $177;
  HEAP32[$178>>2] = $173;
  $179 = (($177) + 4)|0;
  $180 = $179;
  HEAP32[$180>>2] = $176;
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$76>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$76+4>>2]|0;HEAP32[$$byval_copy1+8>>2]=HEAP32[$76+8>>2]|0;HEAP32[$$byval_copy1+12>>2]=HEAP32[$76+12>>2]|0;
  (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($164,$$byval_copy1)|0);
  $181 = ((($81)) + 12|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = HEAP32[$81>>2]|0;
  __ZN7lazperf8header134readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($182,$183);
 } else {
  $184 = ((($81)) + 8|0);
  $185 = HEAP32[$184>>2]|0;
  $186 = ((($185)) + 24|0);
  $187 = ((($186)) + 1|0);
  $188 = HEAP8[$187>>0]|0;
  $189 = $188&255;
  $190 = ($189|0)==(4);
  if ($190) {
   $191 = HEAP32[$81>>2]|0;
   $34 = $77;
   $192 = $35;
   $193 = $192;
   HEAP32[$193>>2] = 0;
   $194 = (($192) + 4)|0;
   $195 = $194;
   HEAP32[$195>>2] = 0;
   $196 = $34;
   ;HEAP32[$196>>2]=0|0;HEAP32[$196+4>>2]=0|0;
   $197 = ((($196)) + 8|0);
   $198 = $35;
   $199 = $198;
   $200 = HEAP32[$199>>2]|0;
   $201 = (($198) + 4)|0;
   $202 = $201;
   $203 = HEAP32[$202>>2]|0;
   $204 = $197;
   $205 = $204;
   HEAP32[$205>>2] = $200;
   $206 = (($204) + 4)|0;
   $207 = $206;
   HEAP32[$207>>2] = $203;
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$77>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$77+4>>2]|0;HEAP32[$$byval_copy2+8>>2]=HEAP32[$77+8>>2]|0;HEAP32[$$byval_copy2+12>>2]=HEAP32[$77+12>>2]|0;
   (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($191,$$byval_copy2)|0);
   $208 = ((($81)) + 16|0);
   $209 = HEAP32[$81>>2]|0;
   __ZN7lazperf8header144readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($208,$209);
  }
 }
 $210 = ((($81)) + 8|0);
 $211 = HEAP32[$210>>2]|0;
 $212 = ((($211)) + 24|0);
 $213 = ((($212)) + 1|0);
 $214 = HEAP8[$213>>0]|0;
 $215 = $214&255;
 $216 = ($215|0)<(2);
 if (!($216)) {
  $217 = ((($81)) + 8|0);
  $218 = HEAP32[$217>>2]|0;
  $219 = ((($218)) + 24|0);
  $220 = ((($219)) + 1|0);
  $221 = HEAP8[$220>>0]|0;
  $222 = $221&255;
  $223 = ($222|0)>(4);
  if (!($223)) {
   $224 = ((($81)) + 8|0);
   $225 = HEAP32[$224>>2]|0;
   $226 = (__ZNK7lazperf11base_header10compressedEv($225)|0);
   if ($226) {
    $227 = ((($81)) + 400|0);
    HEAP8[$227>>0] = 1;
   }
   __ZN7lazperf6reader10basic_file7Private9parseVLRsEv($81);
   $228 = ((($81)) + 400|0);
   $229 = HEAP8[$228>>0]|0;
   $230 = $229&1;
   if ($230) {
    __ZN7lazperf6reader10basic_file7Private14validateHeaderEv($81);
    __ZN7lazperf6reader10basic_file7Private15parseChunkTableEv($81);
   }
   $231 = HEAP32[$81>>2]|0;
   $232 = HEAP32[$231>>2]|0;
   $233 = ((($232)) + -12|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = (($231) + ($234)|0);
   $32 = $235;
   $33 = 0;
   $236 = $32;
   $237 = $33;
   __ZNSt3__28ios_base5clearEj($236,$237);
   $238 = ((($81)) + 8|0);
   $239 = HEAP32[$238>>2]|0;
   $240 = ((($239)) + 96|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = $79;
   $243 = $242;
   HEAP32[$243>>2] = $241;
   $244 = (($242) + 4)|0;
   $245 = $244;
   HEAP32[$245>>2] = 0;
   $246 = ((($81)) + 400|0);
   $247 = HEAP8[$246>>0]|0;
   $248 = $247&1;
   if ($248) {
    $249 = $79;
    $250 = $249;
    $251 = HEAP32[$250>>2]|0;
    $252 = (($249) + 4)|0;
    $253 = $252;
    $254 = HEAP32[$253>>2]|0;
    $255 = (_i64Add(($251|0),($254|0),8,0)|0);
    $256 = (getTempRet0() | 0);
    $257 = $79;
    $258 = $257;
    HEAP32[$258>>2] = $255;
    $259 = (($257) + 4)|0;
    $260 = $259;
    HEAP32[$260>>2] = $256;
   }
   $261 = HEAP32[$81>>2]|0;
   $262 = $79;
   $263 = $262;
   $264 = HEAP32[$263>>2]|0;
   $265 = (($262) + 4)|0;
   $266 = $265;
   $267 = HEAP32[$266>>2]|0;
   $30 = $80;
   $268 = $31;
   $269 = $268;
   HEAP32[$269>>2] = $264;
   $270 = (($268) + 4)|0;
   $271 = $270;
   HEAP32[$271>>2] = $267;
   $272 = $30;
   ;HEAP32[$272>>2]=0|0;HEAP32[$272+4>>2]=0|0;
   $273 = ((($272)) + 8|0);
   $274 = $31;
   $275 = $274;
   $276 = HEAP32[$275>>2]|0;
   $277 = (($274) + 4)|0;
   $278 = $277;
   $279 = HEAP32[$278>>2]|0;
   $280 = $273;
   $281 = $280;
   HEAP32[$281>>2] = $276;
   $282 = (($280) + 4)|0;
   $283 = $282;
   HEAP32[$283>>2] = $279;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$80>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$80+4>>2]|0;HEAP32[$$byval_copy3+8>>2]=HEAP32[$80+8>>2]|0;HEAP32[$$byval_copy3+12>>2]=HEAP32[$80+12>>2]|0;
   (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($261,$$byval_copy3)|0);
   $284 = ((($81)) + 4|0);
   $29 = $284;
   $285 = $29;
   $28 = $285;
   $286 = $28;
   $27 = $286;
   $287 = $27;
   $288 = HEAP32[$287>>2]|0;
   __ZN7lazperf12InFileStream5resetEv($288);
   $$expand_i1_val14 = 1;
   HEAP8[$69>>0] = $$expand_i1_val14;
   $78 = 1;
   $26 = $71;
   $289 = $26;
   $25 = $289;
   $290 = $25;
   $24 = $290;
   $291 = $24;
   $292 = HEAP32[$291>>2]|0;
   $23 = $292;
   $293 = $23;
   $2 = $290;
   $294 = $2;
   $295 = HEAP32[$294>>2]|0;
   $1 = $295;
   $296 = $1;
   $7 = $290;
   $297 = $7;
   $6 = $297;
   $298 = $6;
   $5 = $298;
   $299 = $5;
   $300 = ((($299)) + 8|0);
   $4 = $300;
   $301 = $4;
   $3 = $301;
   $302 = $3;
   $303 = HEAP32[$302>>2]|0;
   $304 = HEAP32[$298>>2]|0;
   $305 = $303;
   $306 = $304;
   $307 = (($305) - ($306))|0;
   $308 = (($296) + ($307)|0);
   $9 = $290;
   $309 = $9;
   $310 = HEAP32[$309>>2]|0;
   $8 = $310;
   $311 = $8;
   $10 = $290;
   $312 = $10;
   $313 = ((($312)) + 4|0);
   $314 = HEAP32[$313>>2]|0;
   $315 = HEAP32[$312>>2]|0;
   $316 = $314;
   $317 = $315;
   $318 = (($316) - ($317))|0;
   $319 = (($311) + ($318)|0);
   $12 = $290;
   $320 = $12;
   $321 = HEAP32[$320>>2]|0;
   $11 = $321;
   $322 = $11;
   $17 = $290;
   $323 = $17;
   $16 = $323;
   $324 = $16;
   $15 = $324;
   $325 = $15;
   $326 = ((($325)) + 8|0);
   $14 = $326;
   $327 = $14;
   $13 = $327;
   $328 = $13;
   $329 = HEAP32[$328>>2]|0;
   $330 = HEAP32[$324>>2]|0;
   $331 = $329;
   $332 = $330;
   $333 = (($331) - ($332))|0;
   $334 = (($322) + ($333)|0);
   $18 = $290;
   $19 = $293;
   $20 = $308;
   $21 = $319;
   $22 = $334;
   __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($289);
   $$pre_trunc16 = HEAP8[$69>>0]|0;
   $335 = $$pre_trunc16&1;
   STACKTOP = sp;return ($335|0);
  }
 }
 $$expand_i1_val12 = 0;
 HEAP8[$69>>0] = $$expand_i1_val12;
 $78 = 1;
 $26 = $71;
 $289 = $26;
 $25 = $289;
 $290 = $25;
 $24 = $290;
 $291 = $24;
 $292 = HEAP32[$291>>2]|0;
 $23 = $292;
 $293 = $23;
 $2 = $290;
 $294 = $2;
 $295 = HEAP32[$294>>2]|0;
 $1 = $295;
 $296 = $1;
 $7 = $290;
 $297 = $7;
 $6 = $297;
 $298 = $6;
 $5 = $298;
 $299 = $5;
 $300 = ((($299)) + 8|0);
 $4 = $300;
 $301 = $4;
 $3 = $301;
 $302 = $3;
 $303 = HEAP32[$302>>2]|0;
 $304 = HEAP32[$298>>2]|0;
 $305 = $303;
 $306 = $304;
 $307 = (($305) - ($306))|0;
 $308 = (($296) + ($307)|0);
 $9 = $290;
 $309 = $9;
 $310 = HEAP32[$309>>2]|0;
 $8 = $310;
 $311 = $8;
 $10 = $290;
 $312 = $10;
 $313 = ((($312)) + 4|0);
 $314 = HEAP32[$313>>2]|0;
 $315 = HEAP32[$312>>2]|0;
 $316 = $314;
 $317 = $315;
 $318 = (($316) - ($317))|0;
 $319 = (($311) + ($318)|0);
 $12 = $290;
 $320 = $12;
 $321 = HEAP32[$320>>2]|0;
 $11 = $321;
 $322 = $11;
 $17 = $290;
 $323 = $17;
 $16 = $323;
 $324 = $16;
 $15 = $324;
 $325 = $15;
 $326 = ((($325)) + 8|0);
 $14 = $326;
 $327 = $14;
 $13 = $327;
 $328 = $13;
 $329 = HEAP32[$328>>2]|0;
 $330 = HEAP32[$324>>2]|0;
 $331 = $329;
 $332 = $330;
 $333 = (($331) - ($332))|0;
 $334 = (($322) + ($333)|0);
 $18 = $290;
 $19 = $293;
 $20 = $308;
 $21 = $319;
 $22 = $334;
 __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($289);
 $$pre_trunc16 = HEAP8[$69>>0]|0;
 $335 = $$pre_trunc16&1;
 STACKTOP = sp;return ($335|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $41 = sp + 8|0;
 $43 = sp + 230|0;
 $51 = sp;
 $54 = sp + 229|0;
 $61 = sp + 228|0;
 $55 = $0;
 $56 = $1;
 $57 = $2;
 $62 = $55;
 $63 = $56;
 $64 = $57;
 $52 = $63;
 $53 = $64;
 $65 = $52;
 $66 = $53;
 ;HEAP8[$51>>0]=HEAP8[$54>>0]|0;
 $49 = $65;
 $50 = $66;
 $67 = $50;
 $68 = $49;
 $69 = $67;
 $70 = $68;
 $71 = (($69) - ($70))|0;
 $58 = $71;
 $72 = $58;
 $47 = $62;
 $73 = $47;
 $46 = $73;
 $74 = $46;
 $45 = $74;
 $75 = $45;
 $44 = $75;
 $76 = $44;
 $42 = $76;
 $77 = $42;
 ;HEAP8[$41>>0]=HEAP8[$43>>0]|0;
 $40 = $77;
 $78 = $40;
 $39 = $78;
 $48 = -1;
 $79 = $48;
 $80 = (($79) - 16)|0;
 $81 = ($72>>>0)>($80>>>0);
 if ($81) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($62);
  // unreachable;
 }
 $82 = $58;
 $83 = ($82>>>0)<(11);
 $84 = $58;
 if ($83) {
  $37 = $62;
  $38 = $84;
  $85 = $37;
  $86 = $38;
  $87 = $86&255;
  $36 = $85;
  $88 = $36;
  $35 = $88;
  $89 = $35;
  $90 = ((($89)) + 11|0);
  HEAP8[$90>>0] = $87;
  $14 = $62;
  $91 = $14;
  $13 = $91;
  $92 = $13;
  $12 = $92;
  $93 = $12;
  $11 = $93;
  $94 = $11;
  $10 = $94;
  $95 = $10;
  $59 = $95;
 } else {
  $5 = $84;
  $96 = $5;
  $97 = ($96>>>0)<(11);
  if ($97) {
   $4 = 10;
  } else {
   $98 = $5;
   $99 = (($98) + 1)|0;
   $3 = $99;
   $100 = $3;
   $101 = (($100) + 15)|0;
   $102 = $101 & -16;
   $103 = (($102) - 1)|0;
   $6 = $103;
   $104 = $6;
   $105 = ($104|0)==(11);
   if ($105) {
    $106 = $6;
    $107 = (($106) + 1)|0;
    $6 = $107;
   }
   $108 = $6;
   $4 = $108;
  }
  $109 = $4;
  $60 = $109;
  $9 = $62;
  $110 = $9;
  $8 = $110;
  $111 = $8;
  $7 = $111;
  $112 = $7;
  $113 = $60;
  $114 = (($113) + 1)|0;
  $21 = $112;
  $22 = $114;
  $115 = $21;
  $116 = $22;
  $18 = $115;
  $19 = $116;
  $20 = 0;
  $117 = $18;
  $17 = $117;
  $118 = $19;
  $15 = $118;
  $16 = 1;
  $119 = $15;
  $120 = (__Znwm($119)|0);
  $59 = $120;
  $121 = $59;
  $25 = $62;
  $26 = $121;
  $122 = $25;
  $123 = $26;
  $24 = $122;
  $124 = $24;
  $23 = $124;
  $125 = $23;
  HEAP32[$125>>2] = $123;
  $126 = $60;
  $127 = (($126) + 1)|0;
  $29 = $62;
  $30 = $127;
  $128 = $29;
  $129 = $30;
  $130 = -2147483648 | $129;
  $28 = $128;
  $131 = $28;
  $27 = $131;
  $132 = $27;
  $133 = ((($132)) + 8|0);
  HEAP32[$133>>2] = $130;
  $134 = $58;
  $33 = $62;
  $34 = $134;
  $135 = $33;
  $136 = $34;
  $32 = $135;
  $137 = $32;
  $31 = $137;
  $138 = $31;
  $139 = ((($138)) + 4|0);
  HEAP32[$139>>2] = $136;
 }
 while(1) {
  $140 = $56;
  $141 = $57;
  $142 = ($140|0)!=($141|0);
  $143 = $59;
  if (!($142)) {
   break;
  }
  $144 = $56;
  __ZNSt3__211char_traitsIcE6assignERcRKc($143,$144);
  $145 = $56;
  $146 = ((($145)) + 1|0);
  $56 = $146;
  $147 = $59;
  $148 = ((($147)) + 1|0);
  $59 = $148;
 }
 HEAP8[$61>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($143,$61);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE6lengthEPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (_strlen($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($4,$5);
 HEAP32[$4>>2] = (10228);
 STACKTOP = sp;return;
}
function __ZN7lazperf5errorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt13runtime_errorD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_file7Private9parseVLRsEv($0) {
 $0 = $0|0;
 var $$byval_copy = 0, $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val12 = 0, $$expand_i1_val3 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0;
 var $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $switch = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 704|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(704|0);
 $$byval_copy = sp + 24|0;
 $113 = sp + 691|0;
 $128 = sp + 16|0;
 $130 = sp;
 $133 = sp + 144|0;
 $134 = sp + 128|0;
 $135 = sp + 116|0;
 $136 = sp + 104|0;
 $137 = sp + 92|0;
 $138 = sp + 80|0;
 $139 = sp + 68|0;
 $140 = sp + 56|0;
 $141 = sp + 689|0;
 $143 = sp + 40|0;
 $144 = sp + 688|0;
 $129 = $0;
 $145 = $129;
 $146 = HEAP32[$145>>2]|0;
 $147 = ((($145)) + 8|0);
 $148 = HEAP32[$147>>2]|0;
 $149 = ((($148)) + 94|0);
 $150 = HEAP16[$149>>1]|0;
 $151 = $150&65535;
 $127 = $130;
 $152 = $128;
 $153 = $152;
 HEAP32[$153>>2] = $151;
 $154 = (($152) + 4)|0;
 $155 = $154;
 HEAP32[$155>>2] = 0;
 $156 = $127;
 ;HEAP32[$156>>2]=0|0;HEAP32[$156+4>>2]=0|0;
 $157 = ((($156)) + 8|0);
 $158 = $128;
 $159 = $158;
 $160 = HEAP32[$159>>2]|0;
 $161 = (($158) + 4)|0;
 $162 = $161;
 $163 = HEAP32[$162>>2]|0;
 $164 = $157;
 $165 = $164;
 HEAP32[$165>>2] = $160;
 $166 = (($164) + 4)|0;
 $167 = $166;
 HEAP32[$167>>2] = $163;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$130>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$130+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$130+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$130+12>>2]|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($146,$$byval_copy)|0);
 $131 = 0;
 $132 = 0;
 while(1) {
  $168 = $131;
  $169 = ((($145)) + 8|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = ((($170)) + 100|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = ($168>>>0)<($172>>>0);
  if (!($173)) {
   label = 46;
   break;
  }
  $174 = HEAP32[$145>>2]|0;
  $175 = HEAP32[$174>>2]|0;
  $176 = ((($175)) + -12|0);
  $177 = HEAP32[$176>>2]|0;
  $178 = (($174) + ($177)|0);
  $126 = $178;
  $179 = $126;
  $125 = $179;
  $180 = $125;
  $181 = ((($180)) + 16|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = ($182|0)==(0);
  if (!($183)) {
   label = 46;
   break;
  }
  $184 = HEAP32[$145>>2]|0;
  $185 = HEAP32[$184>>2]|0;
  $186 = ((($185)) + -12|0);
  $187 = HEAP32[$186>>2]|0;
  $188 = (($184) + ($187)|0);
  $118 = $188;
  $189 = $118;
  $117 = $189;
  $190 = $117;
  $191 = ((($190)) + 16|0);
  $192 = HEAP32[$191>>2]|0;
  $193 = $192 & 2;
  $194 = ($193|0)!=(0);
  $195 = $194 ^ 1;
  if (!($195)) {
   label = 46;
   break;
  }
  $196 = HEAP32[$145>>2]|0;
  __ZN7lazperf10vlr_header6createERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($133,$196);
  $197 = ((($133)) + 4|0);
  $114 = $197;
  $115 = 19027;
  $198 = $115;
  $199 = (__ZNSt3__211char_traitsIcE6lengthEPKc($198)|0);
  $116 = $199;
  $200 = $116;
  $201 = $114;
  $112 = $201;
  $202 = $112;
  $111 = $202;
  $203 = $111;
  $110 = $203;
  $204 = $110;
  $109 = $204;
  $205 = $109;
  $206 = ((($205)) + 11|0);
  $207 = HEAP8[$206>>0]|0;
  $208 = $207&255;
  $209 = $208 & 128;
  $210 = ($209|0)!=(0);
  if ($210) {
   $105 = $202;
   $211 = $105;
   $104 = $211;
   $212 = $104;
   $103 = $212;
   $213 = $103;
   $214 = ((($213)) + 4|0);
   $215 = HEAP32[$214>>2]|0;
   $223 = $215;
  } else {
   $108 = $202;
   $216 = $108;
   $107 = $216;
   $217 = $107;
   $106 = $217;
   $218 = $106;
   $219 = ((($218)) + 11|0);
   $220 = HEAP8[$219>>0]|0;
   $221 = $220&255;
   $223 = $221;
  }
  $222 = ($200|0)!=($223|0);
  if ($222) {
   $$expand_i1_val = 0;
   HEAP8[$113>>0] = $$expand_i1_val;
  } else {
   $224 = $114;
   $225 = $115;
   $226 = $116;
   $227 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm($224,0,-1,$225,$226)|0);
   $228 = ($227|0)==(0);
   $$expand_i1_val3 = $228&1;
   HEAP8[$113>>0] = $$expand_i1_val3;
  }
  $$pre_trunc = HEAP8[$113>>0]|0;
  $229 = $$pre_trunc&1;
  if ($229) {
   $230 = ((($133)) + 16|0);
   $231 = HEAP16[$230>>1]|0;
   $232 = $231&65535;
   $233 = ($232|0)==(22204);
   if ($233) {
    $132 = 1;
    $234 = ((($145)) + 416|0);
    $235 = HEAP32[$145>>2]|0;
    __ZN7lazperf7laz_vlr4readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($234,$235);
    $236 = ((($145)) + 8|0);
    $237 = HEAP32[$236>>2]|0;
    $238 = (__ZNK7lazperf11base_header11pointFormatEv($237)|0);
    $239 = ($238|0)<=(5);
    if ($239) {
     $240 = ((($145)) + 416|0);
     $241 = ((($240)) + 4|0);
     $242 = HEAP16[$241>>1]|0;
     $243 = $242&65535;
     $244 = ($243|0)!=(2);
     if ($244) {
      break;
     }
    }
    $245 = ((($145)) + 8|0);
    $246 = HEAP32[$245>>2]|0;
    $247 = (__ZNK7lazperf11base_header11pointFormatEv($246)|0);
    $248 = ($247|0)>(5);
    if ($248) {
     $249 = ((($145)) + 416|0);
     $250 = ((($249)) + 4|0);
     $251 = HEAP16[$250>>1]|0;
     $252 = $251&65535;
     $253 = ($252|0)!=(3);
     if ($253) {
      break;
     }
    }
    $142 = 3;
   } else {
    label = 43;
   }
  } else {
   label = 43;
  }
  if ((label|0) == 43) {
   label = 0;
   $431 = HEAP32[$145>>2]|0;
   $432 = ((($133)) + 18|0);
   $433 = HEAP16[$432>>1]|0;
   $434 = $433&65535;
   (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE($431,$434,0,1)|0);
   $435 = $131;
   $436 = (($435) + 1)|0;
   $131 = $436;
   $142 = 0;
  }
  __ZN7lazperf10vlr_headerD2Ev($133);
  $437 = $142;
  $switch = ($437>>>0)<(1);
  if (!($switch)) {
   label = 46;
   break;
  }
 }
 if ((label|0) == 46) {
  $438 = ((($145)) + 400|0);
  $439 = HEAP8[$438>>0]|0;
  $440 = $439&1;
  if (!($440)) {
   STACKTOP = sp;return;
  }
  $441 = $132;
  $442 = $441&1;
  if ($442) {
   STACKTOP = sp;return;
  } else {
   $443 = (___cxa_allocate_exception(8)|0);
   $$expand_i1_val10 = 1;
   HEAP8[$144>>0] = $$expand_i1_val10;
   $123 = $143;
   $124 = 18748;
   $444 = $123;
   $122 = $444;
   $445 = $122;
   $121 = $445;
   $446 = $121;
   ;HEAP32[$446>>2]=0|0;HEAP32[$446+4>>2]=0|0;HEAP32[$446+8>>2]=0|0;
   $120 = $445;
   $447 = $120;
   $119 = $447;
   $448 = $124;
   $449 = $124;
   $450 = (__ZNSt3__211char_traitsIcE6lengthEPKc($449)|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($444,$448,$450);
   __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($443,$143);
   $$expand_i1_val12 = 0;
   HEAP8[$144>>0] = $$expand_i1_val12;
   ___cxa_throw(($443|0),(6056|0),(22|0));
   // unreachable;
  }
 }
 $254 = (___cxa_allocate_exception(8)|0);
 $$expand_i1_val6 = 1;
 HEAP8[$141>>0] = $$expand_i1_val6;
 $101 = $138;
 $102 = 18686;
 $255 = $101;
 $100 = $255;
 $256 = $100;
 $99 = $256;
 $257 = $99;
 ;HEAP32[$257>>2]=0|0;HEAP32[$257+4>>2]=0|0;HEAP32[$257+8>>2]=0|0;
 $98 = $256;
 $258 = $98;
 $97 = $258;
 $259 = $102;
 $260 = $102;
 $261 = (__ZNSt3__211char_traitsIcE6lengthEPKc($260)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($255,$259,$261);
 $262 = ((($145)) + 8|0);
 $263 = HEAP32[$262>>2]|0;
 $264 = (__ZNK7lazperf11base_header11pointFormatEv($263)|0);
 __ZNSt3__29to_stringEi($139,$264);
 $95 = $138;
 $96 = $139;
 $265 = $95;
 $266 = $96;
 $93 = $265;
 $94 = $266;
 $267 = $93;
 $268 = $94;
 $92 = $268;
 $269 = $92;
 $91 = $269;
 $270 = $91;
 $90 = $270;
 $271 = $90;
 $89 = $271;
 $272 = $89;
 $88 = $272;
 $273 = $88;
 $274 = ((($273)) + 11|0);
 $275 = HEAP8[$274>>0]|0;
 $276 = $275&255;
 $277 = $276 & 128;
 $278 = ($277|0)!=(0);
 if ($278) {
  $82 = $270;
  $279 = $82;
  $81 = $279;
  $280 = $81;
  $80 = $280;
  $281 = $80;
  $282 = HEAP32[$281>>2]|0;
  $288 = $282;
 } else {
  $87 = $270;
  $283 = $87;
  $86 = $283;
  $284 = $86;
  $85 = $284;
  $285 = $85;
  $84 = $285;
  $286 = $84;
  $83 = $286;
  $287 = $83;
  $288 = $287;
 }
 $79 = $288;
 $289 = $79;
 $290 = $94;
 $78 = $290;
 $291 = $78;
 $77 = $291;
 $292 = $77;
 $76 = $292;
 $293 = $76;
 $75 = $293;
 $294 = $75;
 $295 = ((($294)) + 11|0);
 $296 = HEAP8[$295>>0]|0;
 $297 = $296&255;
 $298 = $297 & 128;
 $299 = ($298|0)!=(0);
 if ($299) {
  $71 = $291;
  $300 = $71;
  $70 = $300;
  $301 = $70;
  $69 = $301;
  $302 = $69;
  $303 = ((($302)) + 4|0);
  $304 = HEAP32[$303>>2]|0;
  $311 = $304;
 } else {
  $74 = $291;
  $305 = $74;
  $73 = $305;
  $306 = $73;
  $72 = $306;
  $307 = $72;
  $308 = ((($307)) + 11|0);
  $309 = HEAP8[$308>>0]|0;
  $310 = $309&255;
  $311 = $310;
 }
 $312 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($267,$289,$311)|0);
 $68 = $312;
 $313 = $68;
 $66 = $137;
 $67 = $313;
 $314 = $66;
 $315 = $67;
 $65 = $315;
 $316 = $65;
 ;HEAP32[$314>>2]=HEAP32[$316>>2]|0;HEAP32[$314+4>>2]=HEAP32[$316+4>>2]|0;HEAP32[$314+8>>2]=HEAP32[$316+8>>2]|0;
 $317 = $67;
 $62 = $317;
 $318 = $62;
 $61 = $318;
 $319 = $61;
 $60 = $319;
 $320 = $60;
 $63 = $320;
 $64 = 0;
 while(1) {
  $321 = $64;
  $322 = ($321>>>0)<(3);
  if (!($322)) {
   break;
  }
  $323 = $63;
  $324 = $64;
  $325 = (($323) + ($324<<2)|0);
  HEAP32[$325>>2] = 0;
  $326 = $64;
  $327 = (($326) + 1)|0;
  $64 = $327;
 }
 $58 = $137;
 $59 = 18720;
 $328 = $58;
 $329 = $59;
 $330 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($328,$329)|0);
 $57 = $330;
 $331 = $57;
 $55 = $136;
 $56 = $331;
 $332 = $55;
 $333 = $56;
 $54 = $333;
 $334 = $54;
 ;HEAP32[$332>>2]=HEAP32[$334>>2]|0;HEAP32[$332+4>>2]=HEAP32[$334+4>>2]|0;HEAP32[$332+8>>2]=HEAP32[$334+8>>2]|0;
 $335 = $56;
 $51 = $335;
 $336 = $51;
 $50 = $336;
 $337 = $50;
 $49 = $337;
 $338 = $49;
 $52 = $338;
 $53 = 0;
 while(1) {
  $339 = $53;
  $340 = ($339>>>0)<(3);
  if (!($340)) {
   break;
  }
  $341 = $52;
  $342 = $53;
  $343 = (($341) + ($342<<2)|0);
  HEAP32[$343>>2] = 0;
  $344 = $53;
  $345 = (($344) + 1)|0;
  $53 = $345;
 }
 $346 = ((($145)) + 416|0);
 $347 = ((($346)) + 4|0);
 $348 = HEAP16[$347>>1]|0;
 $349 = $348&65535;
 __ZNSt3__29to_stringEi($140,$349);
 $47 = $136;
 $48 = $140;
 $350 = $47;
 $351 = $48;
 $45 = $350;
 $46 = $351;
 $352 = $45;
 $353 = $46;
 $44 = $353;
 $354 = $44;
 $43 = $354;
 $355 = $43;
 $42 = $355;
 $356 = $42;
 $41 = $356;
 $357 = $41;
 $40 = $357;
 $358 = $40;
 $359 = ((($358)) + 11|0);
 $360 = HEAP8[$359>>0]|0;
 $361 = $360&255;
 $362 = $361 & 128;
 $363 = ($362|0)!=(0);
 if ($363) {
  $34 = $355;
  $364 = $34;
  $33 = $364;
  $365 = $33;
  $32 = $365;
  $366 = $32;
  $367 = HEAP32[$366>>2]|0;
  $373 = $367;
 } else {
  $39 = $355;
  $368 = $39;
  $38 = $368;
  $369 = $38;
  $37 = $369;
  $370 = $37;
  $36 = $370;
  $371 = $36;
  $35 = $371;
  $372 = $35;
  $373 = $372;
 }
 $31 = $373;
 $374 = $31;
 $375 = $46;
 $30 = $375;
 $376 = $30;
 $29 = $376;
 $377 = $29;
 $28 = $377;
 $378 = $28;
 $27 = $378;
 $379 = $27;
 $380 = ((($379)) + 11|0);
 $381 = HEAP8[$380>>0]|0;
 $382 = $381&255;
 $383 = $382 & 128;
 $384 = ($383|0)!=(0);
 if ($384) {
  $23 = $376;
  $385 = $23;
  $22 = $385;
  $386 = $22;
  $21 = $386;
  $387 = $21;
  $388 = ((($387)) + 4|0);
  $389 = HEAP32[$388>>2]|0;
  $396 = $389;
 } else {
  $26 = $376;
  $390 = $26;
  $25 = $390;
  $391 = $25;
  $24 = $391;
  $392 = $24;
  $393 = ((($392)) + 11|0);
  $394 = HEAP8[$393>>0]|0;
  $395 = $394&255;
  $396 = $395;
 }
 $397 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($352,$374,$396)|0);
 $20 = $397;
 $398 = $20;
 $18 = $135;
 $19 = $398;
 $399 = $18;
 $400 = $19;
 $17 = $400;
 $401 = $17;
 ;HEAP32[$399>>2]=HEAP32[$401>>2]|0;HEAP32[$399+4>>2]=HEAP32[$401+4>>2]|0;HEAP32[$399+8>>2]=HEAP32[$401+8>>2]|0;
 $402 = $19;
 $14 = $402;
 $403 = $14;
 $13 = $403;
 $404 = $13;
 $12 = $404;
 $405 = $12;
 $15 = $405;
 $16 = 0;
 while(1) {
  $406 = $16;
  $407 = ($406>>>0)<(3);
  if (!($407)) {
   break;
  }
  $408 = $15;
  $409 = $16;
  $410 = (($408) + ($409<<2)|0);
  HEAP32[$410>>2] = 0;
  $411 = $16;
  $412 = (($411) + 1)|0;
  $16 = $412;
 }
 $10 = $135;
 $11 = 28064;
 $413 = $10;
 $414 = $11;
 $415 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($413,$414)|0);
 $9 = $415;
 $416 = $9;
 $7 = $134;
 $8 = $416;
 $417 = $7;
 $418 = $8;
 $6 = $418;
 $419 = $6;
 ;HEAP32[$417>>2]=HEAP32[$419>>2]|0;HEAP32[$417+4>>2]=HEAP32[$419+4>>2]|0;HEAP32[$417+8>>2]=HEAP32[$419+8>>2]|0;
 $420 = $8;
 $3 = $420;
 $421 = $3;
 $2 = $421;
 $422 = $2;
 $1 = $422;
 $423 = $1;
 $4 = $423;
 $5 = 0;
 while(1) {
  $424 = $5;
  $425 = ($424>>>0)<(3);
  if (!($425)) {
   break;
  }
  $426 = $4;
  $427 = $5;
  $428 = (($426) + ($427<<2)|0);
  HEAP32[$428>>2] = 0;
  $429 = $5;
  $430 = (($429) + 1)|0;
  $5 = $430;
 }
 __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($254,$134);
 $$expand_i1_val8 = 0;
 HEAP8[$141>>0] = $$expand_i1_val8;
 ___cxa_throw(($254|0),(6056|0),(22|0));
 // unreachable;
}
function __ZN7lazperf6reader10basic_file7Private14validateHeaderEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $16 = sp + 12|0;
 $17 = sp + 85|0;
 $18 = sp;
 $19 = sp + 84|0;
 $13 = $0;
 $20 = $13;
 $21 = ((($20)) + 8|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 104|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = $24&255;
 $26 = $25 >> 7;
 $27 = $26 & 1;
 $14 = $27;
 $28 = ((($20)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($29)) + 104|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31&255;
 $33 = $32 >> 6;
 $34 = $33 & 1;
 $15 = $34;
 $35 = $14;
 $36 = ($35|0)==(1);
 $37 = $15;
 $38 = ($37|0)==(1);
 $or$cond = $36 & $38;
 if ($or$cond) {
  $39 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val = 1;
  HEAP8[$17>>0] = $$expand_i1_val;
  $11 = $16;
  $12 = 18585;
  $40 = $11;
  $10 = $40;
  $41 = $10;
  $9 = $41;
  $42 = $9;
  ;HEAP32[$42>>2]=0|0;HEAP32[$42+4>>2]=0|0;HEAP32[$42+8>>2]=0|0;
  $8 = $41;
  $43 = $8;
  $7 = $43;
  $44 = $12;
  $45 = $12;
  $46 = (__ZNSt3__211char_traitsIcE6lengthEPKc($45)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($40,$44,$46);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($39,$16);
  $$expand_i1_val3 = 0;
  HEAP8[$17>>0] = $$expand_i1_val3;
  ___cxa_throw(($39|0),(6056|0),(22|0));
  // unreachable;
 }
 $47 = $14;
 $48 = $15;
 $49 = $47 ^ $48;
 $50 = ($49|0)==(0);
 if ($50) {
  $51 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val5 = 1;
  HEAP8[$19>>0] = $$expand_i1_val5;
  $5 = $18;
  $6 = 18641;
  $52 = $5;
  $4 = $52;
  $53 = $4;
  $3 = $53;
  $54 = $3;
  ;HEAP32[$54>>2]=0|0;HEAP32[$54+4>>2]=0|0;HEAP32[$54+8>>2]=0|0;
  $2 = $53;
  $55 = $2;
  $1 = $55;
  $56 = $6;
  $57 = $6;
  $58 = (__ZNSt3__211char_traitsIcE6lengthEPKc($57)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($52,$56,$58);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($51,$18);
  $$expand_i1_val7 = 0;
  HEAP8[$19>>0] = $$expand_i1_val7;
  ___cxa_throw(($51|0),(6056|0),(22|0));
  // unreachable;
 } else {
  $59 = ((($20)) + 8|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = ((($60)) + 104|0);
  $62 = HEAP8[$61>>0]|0;
  $63 = $62&255;
  $64 = $63 & 63;
  $65 = $64&255;
  HEAP8[$61>>0] = $65;
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf6reader10basic_file7Private15parseChunkTableEv($0) {
 $0 = $0|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$expand_i1_val = 0, $$expand_i1_val11 = 0, $$expand_i1_val13 = 0, $$expand_i1_val15 = 0, $$expand_i1_val17 = 0, $$expand_i1_val19 = 0, $$expand_i1_val3 = 0, $$expand_i1_val5 = 0, $$expand_i1_val7 = 0, $$expand_i1_val9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(544|0);
 $$byval_copy1 = sp + 96|0;
 $$byval_copy = sp + 80|0;
 $32 = sp + 72|0;
 $48 = sp + 64|0;
 $50 = sp + 48|0;
 $51 = sp + 40|0;
 $52 = sp + 324|0;
 $53 = sp + 538|0;
 $54 = sp + 312|0;
 $55 = sp + 537|0;
 $56 = sp + 24|0;
 $57 = sp + 300|0;
 $58 = sp + 536|0;
 $59 = sp + 528|0;
 $60 = sp + 288|0;
 $61 = sp + 525|0;
 $62 = sp + 276|0;
 $63 = sp + 524|0;
 $64 = sp + 272|0;
 $65 = sp + 256|0;
 $66 = sp + 240|0;
 $67 = sp + 216|0;
 $68 = sp + 136|0;
 $71 = sp + 16|0;
 $72 = sp;
 $49 = $0;
 $76 = $49;
 $77 = HEAP32[$76>>2]|0;
 $78 = ((($76)) + 8|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = ((($79)) + 96|0);
 $81 = HEAP32[$80>>2]|0;
 $47 = $50;
 $82 = $48;
 $83 = $82;
 HEAP32[$83>>2] = $81;
 $84 = (($82) + 4)|0;
 $85 = $84;
 HEAP32[$85>>2] = 0;
 $86 = $47;
 ;HEAP32[$86>>2]=0|0;HEAP32[$86+4>>2]=0|0;
 $87 = ((($86)) + 8|0);
 $88 = $48;
 $89 = $88;
 $90 = HEAP32[$89>>2]|0;
 $91 = (($88) + 4)|0;
 $92 = $91;
 $93 = HEAP32[$92>>2]|0;
 $94 = $87;
 $95 = $94;
 HEAP32[$95>>2] = $90;
 $96 = (($94) + 4)|0;
 $97 = $96;
 HEAP32[$97>>2] = $93;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$50>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$50+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$50+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$50+12>>2]|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($77,$$byval_copy)|0);
 $98 = $51;
 $99 = $98;
 HEAP32[$99>>2] = 0;
 $100 = (($98) + 4)|0;
 $101 = $100;
 HEAP32[$101>>2] = 0;
 $102 = HEAP32[$76>>2]|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($102,$51,8)|0);
 $103 = HEAP32[$76>>2]|0;
 $104 = HEAP32[$103>>2]|0;
 $105 = ((($104)) + -12|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = (($103) + ($106)|0);
 $46 = $107;
 $108 = $46;
 $45 = $108;
 $109 = $45;
 $110 = ((($109)) + 16|0);
 $111 = HEAP32[$110>>2]|0;
 $112 = ($111|0)==(0);
 if (!($112)) {
  $113 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val = 1;
  HEAP8[$53>>0] = $$expand_i1_val;
  $43 = $52;
  $44 = 18302;
  $114 = $43;
  $42 = $114;
  $115 = $42;
  $41 = $115;
  $116 = $41;
  ;HEAP32[$116>>2]=0|0;HEAP32[$116+4>>2]=0|0;HEAP32[$116+8>>2]=0|0;
  $40 = $115;
  $117 = $40;
  $39 = $117;
  $118 = $44;
  $119 = $44;
  $120 = (__ZNSt3__211char_traitsIcE6lengthEPKc($119)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($114,$118,$120);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($113,$52);
  $$expand_i1_val3 = 0;
  HEAP8[$53>>0] = $$expand_i1_val3;
  ___cxa_throw(($113|0),(6056|0),(22|0));
  // unreachable;
 }
 $121 = $51;
 $122 = $121;
 $123 = HEAP32[$122>>2]|0;
 $124 = (($121) + 4)|0;
 $125 = $124;
 $126 = HEAP32[$125>>2]|0;
 $127 = ($123|0)==(-1);
 $128 = ($126|0)==(-1);
 $129 = $127 & $128;
 if ($129) {
  $130 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val5 = 1;
  HEAP8[$55>>0] = $$expand_i1_val5;
  $37 = $54;
  $38 = 18329;
  $131 = $37;
  $36 = $131;
  $132 = $36;
  $35 = $132;
  $133 = $35;
  ;HEAP32[$133>>2]=0|0;HEAP32[$133+4>>2]=0|0;HEAP32[$133+8>>2]=0|0;
  $34 = $132;
  $134 = $34;
  $33 = $134;
  $135 = $38;
  $136 = $38;
  $137 = (__ZNSt3__211char_traitsIcE6lengthEPKc($136)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($131,$135,$137);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($130,$54);
  $$expand_i1_val7 = 0;
  HEAP8[$55>>0] = $$expand_i1_val7;
  ___cxa_throw(($130|0),(6056|0),(22|0));
  // unreachable;
 }
 $138 = HEAP32[$76>>2]|0;
 $139 = $51;
 $140 = $139;
 $141 = HEAP32[$140>>2]|0;
 $142 = (($139) + 4)|0;
 $143 = $142;
 $144 = HEAP32[$143>>2]|0;
 $31 = $56;
 $145 = $32;
 $146 = $145;
 HEAP32[$146>>2] = $141;
 $147 = (($145) + 4)|0;
 $148 = $147;
 HEAP32[$148>>2] = $144;
 $149 = $31;
 ;HEAP32[$149>>2]=0|0;HEAP32[$149+4>>2]=0|0;
 $150 = ((($149)) + 8|0);
 $151 = $32;
 $152 = $151;
 $153 = HEAP32[$152>>2]|0;
 $154 = (($151) + 4)|0;
 $155 = $154;
 $156 = HEAP32[$155>>2]|0;
 $157 = $150;
 $158 = $157;
 HEAP32[$158>>2] = $153;
 $159 = (($157) + 4)|0;
 $160 = $159;
 HEAP32[$160>>2] = $156;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$56>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$56+4>>2]|0;HEAP32[$$byval_copy1+8>>2]=HEAP32[$56+8>>2]|0;HEAP32[$$byval_copy1+12>>2]=HEAP32[$56+12>>2]|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($138,$$byval_copy1)|0);
 $161 = HEAP32[$76>>2]|0;
 $162 = HEAP32[$161>>2]|0;
 $163 = ((($162)) + -12|0);
 $164 = HEAP32[$163>>2]|0;
 $165 = (($161) + ($164)|0);
 $30 = $165;
 $166 = $30;
 $29 = $166;
 $167 = $29;
 $168 = ((($167)) + 16|0);
 $169 = HEAP32[$168>>2]|0;
 $170 = ($169|0)==(0);
 if (!($170)) {
  $171 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val9 = 1;
  HEAP8[$58>>0] = $$expand_i1_val9;
  $27 = $57;
  $28 = 18384;
  $172 = $27;
  $26 = $172;
  $173 = $26;
  $25 = $173;
  $174 = $25;
  ;HEAP32[$174>>2]=0|0;HEAP32[$174+4>>2]=0|0;HEAP32[$174+8>>2]=0|0;
  $24 = $173;
  $175 = $24;
  $23 = $175;
  $176 = $28;
  $177 = $28;
  $178 = (__ZNSt3__211char_traitsIcE6lengthEPKc($177)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($172,$176,$178);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($171,$57);
  $$expand_i1_val11 = 0;
  HEAP8[$58>>0] = $$expand_i1_val11;
  ___cxa_throw(($171|0),(6056|0),(22|0));
  // unreachable;
 }
 $179 = HEAP32[$76>>2]|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($179,$59,8)|0);
 $180 = HEAP32[$76>>2]|0;
 $181 = HEAP32[$180>>2]|0;
 $182 = ((($181)) + -12|0);
 $183 = HEAP32[$182>>2]|0;
 $184 = (($180) + ($183)|0);
 $22 = $184;
 $185 = $22;
 $21 = $185;
 $186 = $21;
 $187 = ((($186)) + 16|0);
 $188 = HEAP32[$187>>2]|0;
 $189 = ($188|0)==(0);
 if (!($189)) {
  $190 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val13 = 1;
  HEAP8[$61>>0] = $$expand_i1_val13;
  $19 = $60;
  $20 = 18384;
  $191 = $19;
  $18 = $191;
  $192 = $18;
  $17 = $192;
  $193 = $17;
  ;HEAP32[$193>>2]=0|0;HEAP32[$193+4>>2]=0|0;HEAP32[$193+8>>2]=0|0;
  $16 = $192;
  $194 = $16;
  $15 = $194;
  $195 = $20;
  $196 = $20;
  $197 = (__ZNSt3__211char_traitsIcE6lengthEPKc($196)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($191,$195,$197);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($190,$60);
  $$expand_i1_val15 = 0;
  HEAP8[$61>>0] = $$expand_i1_val15;
  ___cxa_throw(($190|0),(6056|0),(22|0));
  // unreachable;
 }
 $198 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
 $199 = ($198|0)!=(0);
 if ($199) {
  $200 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val17 = 1;
  HEAP8[$63>>0] = $$expand_i1_val17;
  $13 = $62;
  $14 = 18411;
  $201 = $13;
  $12 = $201;
  $202 = $12;
  $11 = $202;
  $203 = $11;
  ;HEAP32[$203>>2]=0|0;HEAP32[$203+4>>2]=0|0;HEAP32[$203+8>>2]=0|0;
  $10 = $202;
  $204 = $10;
  $9 = $204;
  $205 = $14;
  $206 = $14;
  $207 = (__ZNSt3__211char_traitsIcE6lengthEPKc($206)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($201,$205,$207);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($200,$62);
  $$expand_i1_val19 = 0;
  HEAP8[$63>>0] = $$expand_i1_val19;
  ___cxa_throw(($200|0),(6056|0),(22|0));
  // unreachable;
 }
 $208 = ((($76)) + 480|0);
 $209 = ((($59)) + 4|0);
 $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
 $211 = (($210) + 1)|0;
 __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE6resizeEm($208,$211);
 $212 = HEAP32[$76>>2]|0;
 __ZN7lazperf12InFileStreamC2ERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($64,$212);
 __ZN7lazperf12InFileStream2cbEv($66,$64);
 __ZN7lazperf10InCbStreamC2ENSt3__28functionIFvPhmEEE($65,$66);
 __ZNSt3__28functionIFvPhmEED2Ev($66);
 __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEEC2ERS2_($67,$65);
 __ZN7lazperf13decompressors7integerC2Ejjjj($68,32,2,8,0);
 __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE13readInitBytesEv($67);
 __ZN7lazperf13decompressors7integer4initEv($68);
 $69 = 0;
 $70 = 0;
 $213 = (__ZNK7lazperf6reader10basic_file7Private10pointCountEv($76)|0);
 $214 = (getTempRet0() | 0);
 $215 = $71;
 $216 = $215;
 HEAP32[$216>>2] = $213;
 $217 = (($215) + 4)|0;
 $218 = $217;
 HEAP32[$218>>2] = $214;
 $219 = $72;
 $220 = $219;
 HEAP32[$220>>2] = 0;
 $221 = (($219) + 4)|0;
 $222 = $221;
 HEAP32[$222>>2] = 0;
 $223 = ((($72)) + 8|0);
 $224 = (__ZNK7lazperf6reader10basic_file7Private16firstChunkOffsetEv($76)|0);
 $225 = (getTempRet0() | 0);
 $226 = $223;
 $227 = $226;
 HEAP32[$227>>2] = $224;
 $228 = (($226) + 4)|0;
 $229 = $228;
 HEAP32[$229>>2] = $225;
 $230 = ((($76)) + 480|0);
 $7 = $230;
 $8 = 0;
 $231 = $7;
 $232 = HEAP32[$231>>2]|0;
 $233 = $8;
 $234 = (($232) + ($233<<4)|0);
 ;HEAP32[$234>>2]=HEAP32[$72>>2]|0;HEAP32[$234+4>>2]=HEAP32[$72+4>>2]|0;HEAP32[$234+8>>2]=HEAP32[$72+8>>2]|0;HEAP32[$234+12>>2]=HEAP32[$72+12>>2]|0;
 $73 = 0;
 L16: while(1) {
  $235 = $73;
  $236 = ((($59)) + 4|0);
  $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
  $238 = ($235>>>0)<($237>>>0);
  if (!($238)) {
   label = 20;
   break;
  }
  $239 = ((($76)) + 416|0);
  $240 = ((($239)) + 16|0);
  $241 = HEAP32[$240>>2]|0;
  $242 = ($241|0)==(-1);
  do {
   if ($242) {
    $243 = $69;
    $244 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($68,$67,$243,0)|0);
    $74 = $244;
    $245 = $74;
    $69 = $245;
   } else {
    $246 = $71;
    $247 = $246;
    $248 = HEAP32[$247>>2]|0;
    $249 = (($246) + 4)|0;
    $250 = $249;
    $251 = HEAP32[$250>>2]|0;
    $252 = ((($76)) + 416|0);
    $253 = ((($252)) + 16|0);
    $254 = HEAP32[$253>>2]|0;
    $255 = ($251>>>0)<(0);
    $256 = ($248>>>0)<($254>>>0);
    $257 = ($251|0)==(0);
    $258 = $257 & $256;
    $259 = $255 | $258;
    if ($259) {
     $260 = $71;
     $261 = $260;
     $262 = HEAP32[$261>>2]|0;
     $263 = (($260) + 4)|0;
     $264 = $263;
     $265 = HEAP32[$264>>2]|0;
     $74 = $262;
     $266 = $73;
     $267 = ((($59)) + 4|0);
     $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
     $269 = (($268) - 1)|0;
     $270 = ($266|0)==($269|0);
     if ($270) {
      break;
     } else {
      label = 17;
      break L16;
     }
    } else {
     $271 = ((($76)) + 416|0);
     $272 = ((($271)) + 16|0);
     $273 = HEAP32[$272>>2]|0;
     $74 = $273;
     $274 = ((($76)) + 416|0);
     $275 = ((($274)) + 16|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = $71;
     $278 = $277;
     $279 = HEAP32[$278>>2]|0;
     $280 = (($277) + 4)|0;
     $281 = $280;
     $282 = HEAP32[$281>>2]|0;
     $283 = (_i64Subtract(($279|0),($282|0),($276|0),0)|0);
     $284 = (getTempRet0() | 0);
     $285 = $71;
     $286 = $285;
     HEAP32[$286>>2] = $283;
     $287 = (($285) + 4)|0;
     $288 = $287;
     HEAP32[$288>>2] = $284;
     break;
    }
   }
  } while(0);
  $289 = $70;
  $290 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($68,$67,$289,1)|0);
  $75 = $290;
  $291 = $75;
  $70 = $291;
  $292 = $74;
  $293 = ((($76)) + 480|0);
  $294 = $73;
  $5 = $293;
  $6 = $294;
  $295 = $5;
  $296 = HEAP32[$295>>2]|0;
  $297 = $6;
  $298 = (($296) + ($297<<4)|0);
  $299 = $298;
  $300 = $299;
  HEAP32[$300>>2] = $292;
  $301 = (($299) + 4)|0;
  $302 = $301;
  HEAP32[$302>>2] = 0;
  $303 = $75;
  $304 = ((($76)) + 480|0);
  $305 = $73;
  $3 = $304;
  $4 = $305;
  $306 = $3;
  $307 = HEAP32[$306>>2]|0;
  $308 = $4;
  $309 = (($307) + ($308<<4)|0);
  $310 = ((($309)) + 8|0);
  $311 = $310;
  $312 = $311;
  $313 = HEAP32[$312>>2]|0;
  $314 = (($311) + 4)|0;
  $315 = $314;
  $316 = HEAP32[$315>>2]|0;
  $317 = (_i64Add(($303|0),0,($313|0),($316|0))|0);
  $318 = (getTempRet0() | 0);
  $319 = ((($76)) + 480|0);
  $320 = $73;
  $321 = (($320) + 1)|0;
  $1 = $319;
  $2 = $321;
  $322 = $1;
  $323 = HEAP32[$322>>2]|0;
  $324 = $2;
  $325 = (($323) + ($324<<4)|0);
  $326 = ((($325)) + 8|0);
  $327 = $326;
  $328 = $327;
  HEAP32[$328>>2] = $317;
  $329 = (($327) + 4)|0;
  $330 = $329;
  HEAP32[$330>>2] = $318;
  $331 = $73;
  $332 = (($331) + 1)|0;
  $73 = $332;
 }
 if ((label|0) == 17) {
  ___assert_fail((18445|0),(18485|0),286,(18514|0));
  // unreachable;
 }
 else if ((label|0) == 20) {
  $333 = ((($76)) + 480|0);
  $334 = ((($59)) + 4|0);
  $335 = HEAPU8[$334>>0]|(HEAPU8[$334+1>>0]<<8)|(HEAPU8[$334+2>>0]<<16)|(HEAPU8[$334+3>>0]<<24);
  __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE6resizeEm($333,$335);
  __ZN7lazperf13decompressors7integerD2Ev($68);
  __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEED2Ev($67);
  __ZN7lazperf10InCbStreamD2Ev($65);
  __ZN7lazperf12InFileStreamD2Ev($64);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE6resizeEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp;
 $9 = sp + 180|0;
 $45 = $0;
 $46 = $1;
 $48 = $45;
 $44 = $48;
 $49 = $44;
 $50 = ((($49)) + 4|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = HEAP32[$49>>2]|0;
 $53 = $51;
 $54 = $52;
 $55 = (($53) - ($54))|0;
 $56 = (($55|0) / 16)&-1;
 $47 = $56;
 $57 = $47;
 $58 = $46;
 $59 = ($57>>>0)<($58>>>0);
 if ($59) {
  $60 = $46;
  $61 = $47;
  $62 = (($60) - ($61))|0;
  __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE8__appendEm($48,$62);
  STACKTOP = sp;return;
 }
 $63 = $47;
 $64 = $46;
 $65 = ($63>>>0)>($64>>>0);
 if (!($65)) {
  STACKTOP = sp;return;
 }
 $66 = HEAP32[$48>>2]|0;
 $67 = $46;
 $68 = (($66) + ($67<<4)|0);
 $41 = $48;
 $42 = $68;
 $69 = $41;
 $70 = $42;
 $39 = $69;
 $40 = $70;
 $38 = $69;
 $71 = $38;
 $72 = ((($71)) + 4|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = HEAP32[$71>>2]|0;
 $75 = $73;
 $76 = $74;
 $77 = (($75) - ($76))|0;
 $78 = (($77|0) / 16)&-1;
 $43 = $78;
 $79 = $42;
 $14 = $69;
 $15 = $79;
 $80 = $14;
 $81 = ((($80)) + 4|0);
 $82 = HEAP32[$81>>2]|0;
 $16 = $82;
 while(1) {
  $83 = $15;
  $84 = $16;
  $85 = ($83|0)!=($84|0);
  if (!($85)) {
   break;
  }
  $13 = $80;
  $86 = $13;
  $87 = ((($86)) + 8|0);
  $12 = $87;
  $88 = $12;
  $11 = $88;
  $89 = $11;
  $90 = $16;
  $91 = ((($90)) + -16|0);
  $16 = $91;
  $10 = $91;
  $92 = $10;
  $7 = $89;
  $8 = $92;
  $93 = $7;
  $94 = $8;
  ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
  $4 = $93;
  $5 = $94;
  $95 = $4;
  $96 = $5;
  $2 = $95;
  $3 = $96;
 }
 $97 = $15;
 $98 = ((($80)) + 4|0);
 HEAP32[$98>>2] = $97;
 $99 = $43;
 $36 = $69;
 $37 = $99;
 $100 = $36;
 $35 = $100;
 $101 = $35;
 $102 = HEAP32[$101>>2]|0;
 $34 = $102;
 $103 = $34;
 $18 = $100;
 $104 = $18;
 $105 = HEAP32[$104>>2]|0;
 $17 = $105;
 $106 = $17;
 $23 = $100;
 $107 = $23;
 $22 = $107;
 $108 = $22;
 $21 = $108;
 $109 = $21;
 $110 = ((($109)) + 8|0);
 $20 = $110;
 $111 = $20;
 $19 = $111;
 $112 = $19;
 $113 = HEAP32[$112>>2]|0;
 $114 = HEAP32[$108>>2]|0;
 $115 = $113;
 $116 = $114;
 $117 = (($115) - ($116))|0;
 $118 = (($117|0) / 16)&-1;
 $119 = (($106) + ($118<<4)|0);
 $25 = $100;
 $120 = $25;
 $121 = HEAP32[$120>>2]|0;
 $24 = $121;
 $122 = $24;
 $123 = $37;
 $124 = (($122) + ($123<<4)|0);
 $27 = $100;
 $125 = $27;
 $126 = HEAP32[$125>>2]|0;
 $26 = $126;
 $127 = $26;
 $28 = $100;
 $128 = $28;
 $129 = ((($128)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$128>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 16)&-1;
 $136 = (($127) + ($135<<4)|0);
 $29 = $100;
 $30 = $103;
 $31 = $119;
 $32 = $124;
 $33 = $136;
 STACKTOP = sp;return;
}
function __ZN7lazperf10InCbStreamC2ENSt3__28functionIFvPhmEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($3,$1);
 STACKTOP = sp;return;
}
function __ZNSt3__28functionIFvPhmEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = ((($4)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$4>>2]|0;
 FUNCTION_TABLE_vi[$13 & 1023]($14);
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEEC2ERS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 8|0;
 $10 = $0;
 $11 = $1;
 $12 = $10;
 $13 = ((($12)) + 12|0);
 $8 = $13;
 $14 = $8;
 HEAP32[$9>>2] = 0;
 $6 = $14;
 $7 = $9;
 $15 = $6;
 $16 = $7;
 $5 = $16;
 $17 = $5;
 $3 = $15;
 $4 = $17;
 $18 = $3;
 $19 = $4;
 $2 = $19;
 $20 = $2;
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$18>>2] = $21;
 $22 = ((($12)) + 16|0);
 $23 = $11;
 HEAP32[$22>>2] = $23;
 __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE4initEv($12);
 STACKTOP = sp;return;
}
function __ZN7lazperf13decompressors7integerC2Ejjjj($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $15 = sp + 72|0;
 $27 = sp + 24|0;
 $29 = $0;
 $30 = $1;
 $31 = $2;
 $32 = $3;
 $33 = $4;
 $34 = $29;
 $35 = ((($34)) + 4|0);
 $36 = $30;
 HEAP32[$35>>2] = $36;
 $37 = ((($34)) + 8|0);
 $38 = $31;
 HEAP32[$37>>2] = $38;
 $39 = ((($34)) + 12|0);
 $40 = $32;
 HEAP32[$39>>2] = $40;
 $41 = ((($34)) + 16|0);
 $42 = $33;
 HEAP32[$41>>2] = $42;
 $43 = ((($34)) + 36|0);
 $28 = $43;
 $44 = $28;
 $26 = $44;
 $45 = $26;
 $25 = $45;
 HEAP32[$45>>2] = 0;
 $46 = ((($45)) + 4|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($45)) + 8|0);
 HEAP32[$27>>2] = 0;
 $23 = $47;
 $24 = $27;
 $48 = $23;
 $49 = $24;
 $22 = $49;
 $50 = $22;
 $18 = $48;
 $19 = $50;
 $51 = $18;
 $52 = $19;
 $17 = $52;
 HEAP32[$51>>2] = 0;
 $21 = $48;
 $53 = $21;
 $20 = $53;
 $54 = ((($34)) + 48|0);
 __ZN7lazperf6models14arithmetic_bitC2Ev($54);
 $55 = ((($34)) + 68|0);
 $16 = $55;
 $56 = $16;
 $14 = $56;
 $57 = $14;
 $13 = $57;
 HEAP32[$57>>2] = 0;
 $58 = ((($57)) + 4|0);
 HEAP32[$58>>2] = 0;
 $59 = ((($57)) + 8|0);
 HEAP32[$15>>2] = 0;
 $11 = $59;
 $12 = $15;
 $60 = $11;
 $61 = $12;
 $10 = $61;
 $62 = $10;
 $6 = $60;
 $7 = $62;
 $63 = $6;
 $64 = $7;
 $5 = $64;
 HEAP32[$63>>2] = 0;
 $9 = $60;
 $65 = $9;
 $8 = $65;
 $66 = $33;
 $67 = ($66|0)!=(0);
 if (!($67)) {
  $100 = $30;
  $101 = ($100|0)!=(0);
  $102 = $30;
  $103 = ($102>>>0)<(32);
  $or$cond = $101 & $103;
  if ($or$cond) {
   $104 = $30;
   $105 = ((($34)) + 20|0);
   HEAP32[$105>>2] = $104;
   $106 = $30;
   $107 = 1 << $106;
   $108 = ((($34)) + 24|0);
   HEAP32[$108>>2] = $107;
   $109 = ((($34)) + 24|0);
   $110 = HEAP32[$109>>2]|0;
   $111 = (($110>>>0) / 2)&-1;
   $112 = (0 - ($111))|0;
   $113 = ((($34)) + 28|0);
   HEAP32[$113>>2] = $112;
   $114 = ((($34)) + 28|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ((($34)) + 24|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (($115) + ($117))|0;
   $119 = (($118) - 1)|0;
   $120 = ((($34)) + 32|0);
   HEAP32[$120>>2] = $119;
   HEAP32[$34>>2] = 0;
   STACKTOP = sp;return;
  } else {
   $121 = ((($34)) + 20|0);
   HEAP32[$121>>2] = 32;
   $122 = ((($34)) + 24|0);
   HEAP32[$122>>2] = 0;
   $123 = ((($34)) + 28|0);
   HEAP32[$123>>2] = -2147483648;
   $124 = ((($34)) + 32|0);
   HEAP32[$124>>2] = 2147483647;
   HEAP32[$34>>2] = 0;
   STACKTOP = sp;return;
  }
 }
 $68 = ((($34)) + 20|0);
 HEAP32[$68>>2] = 0;
 $69 = $33;
 $70 = ((($34)) + 24|0);
 HEAP32[$70>>2] = $69;
 while(1) {
  $71 = $33;
  $72 = ($71|0)!=(0);
  if (!($72)) {
   break;
  }
  $73 = $33;
  $74 = $73 >>> 1;
  $33 = $74;
  $75 = ((($34)) + 20|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (($76) + 1)|0;
  HEAP32[$75>>2] = $77;
 }
 $78 = ((($34)) + 24|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = ((($34)) + 20|0);
 $81 = HEAP32[$80>>2]|0;
 $82 = (($81) - 1)|0;
 $83 = 1 << $82;
 $84 = ($79|0)==($83|0);
 if ($84) {
  $85 = ((($34)) + 20|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (($86) + -1)|0;
  HEAP32[$85>>2] = $87;
 }
 $88 = ((($34)) + 24|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = (($89>>>0) / 2)&-1;
 $91 = (0 - ($90))|0;
 $92 = ((($34)) + 28|0);
 HEAP32[$92>>2] = $91;
 $93 = ((($34)) + 28|0);
 $94 = HEAP32[$93>>2]|0;
 $95 = ((($34)) + 24|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = (($94) + ($96))|0;
 $98 = (($97) - 1)|0;
 $99 = ((($34)) + 32|0);
 HEAP32[$99>>2] = $98;
 HEAP32[$34>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE13readInitBytesEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN7lazperf10InCbStream7getByteEv($4)|0);
 $6 = $5&255;
 $7 = $6 << 24;
 $8 = ((($2)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZN7lazperf10InCbStream7getByteEv($9)|0);
 $11 = $10&255;
 $12 = $11 << 16;
 $13 = $7 | $12;
 $14 = ((($2)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (__ZN7lazperf10InCbStream7getByteEv($15)|0);
 $17 = $16&255;
 $18 = $17 << 8;
 $19 = $13 | $18;
 $20 = ((($2)) + 16|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (__ZN7lazperf10InCbStream7getByteEv($21)|0);
 $23 = $22&255;
 $24 = $19 | $23;
 HEAP32[$2>>2] = $24;
 STACKTOP = sp;return;
}
function __ZN7lazperf13decompressors7integer4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $14 = sp + 8|0;
 $19 = sp + 335|0;
 $30 = sp + 334|0;
 $44 = sp;
 $49 = sp + 333|0;
 $60 = sp + 332|0;
 $64 = sp + 60|0;
 $66 = sp + 12|0;
 $62 = $0;
 $67 = $62;
 $68 = ((($67)) + 36|0);
 $61 = $68;
 $69 = $61;
 $70 = HEAP32[$69>>2]|0;
 $71 = ((($69)) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($70|0)==($72|0);
 if (!($73)) {
  STACKTOP = sp;return;
 }
 $63 = 0;
 while(1) {
  $74 = $63;
  $75 = ((($67)) + 8|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ($74>>>0)<($76>>>0);
  if (!($77)) {
   break;
  }
  $78 = ((($67)) + 36|0);
  $79 = ((($67)) + 20|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (($80) + 1)|0;
  __ZN7lazperf6models10arithmeticC2EjbPj($64,$81,0,0);
  $58 = $78;
  $59 = $64;
  $82 = $58;
  $83 = ((($82)) + 4|0);
  $84 = HEAP32[$83>>2]|0;
  $57 = $82;
  $85 = $57;
  $86 = ((($85)) + 8|0);
  $56 = $86;
  $87 = $56;
  $55 = $87;
  $88 = $55;
  $89 = HEAP32[$88>>2]|0;
  $90 = ($84>>>0)<($89>>>0);
  if ($90) {
   $52 = $60;
   $53 = $82;
   $54 = 1;
   $35 = $82;
   $91 = $35;
   $92 = ((($91)) + 8|0);
   $34 = $92;
   $93 = $34;
   $33 = $93;
   $94 = $33;
   $95 = ((($82)) + 4|0);
   $96 = HEAP32[$95>>2]|0;
   $31 = $96;
   $97 = $31;
   $98 = $59;
   $32 = $98;
   $99 = $32;
   $46 = $94;
   $47 = $97;
   $48 = $99;
   $100 = $46;
   $101 = $47;
   $102 = $48;
   $45 = $102;
   $103 = $45;
   ;HEAP8[$44>>0]=HEAP8[$49>>0]|0;
   $41 = $100;
   $42 = $101;
   $43 = $103;
   $104 = $41;
   $105 = $42;
   $106 = $43;
   $40 = $106;
   $107 = $40;
   $37 = $104;
   $38 = $105;
   $39 = $107;
   $108 = $38;
   $109 = $39;
   $36 = $109;
   $110 = $36;
   __ZN7lazperf6models10arithmeticC2EOS1_($108,$110);
   $50 = $60;
   $111 = ((($82)) + 4|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = ((($112)) + 44|0);
   HEAP32[$111>>2] = $113;
  } else {
   $114 = $59;
   $51 = $114;
   $115 = $51;
   __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($82,$115);
  }
  __ZN7lazperf6models10arithmeticD2Ev($64);
  $116 = $63;
  $117 = (($116) + 1)|0;
  $63 = $117;
 }
 $63 = 1;
 while(1) {
  $118 = $63;
  $119 = ((($67)) + 20|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118>>>0)<=($120>>>0);
  if (!($121)) {
   break;
  }
  $122 = $63;
  $123 = ((($67)) + 12|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($122>>>0)<=($124>>>0);
  if ($125) {
   $126 = $63;
   $127 = 1 << $126;
   $131 = $127;
  } else {
   $128 = ((($67)) + 12|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = 1 << $129;
   $131 = $130;
  }
  $65 = $131;
  $132 = ((($67)) + 68|0);
  $133 = $65;
  __ZN7lazperf6models10arithmeticC2EjbPj($66,$133,0,0);
  $28 = $132;
  $29 = $66;
  $134 = $28;
  $135 = ((($134)) + 4|0);
  $136 = HEAP32[$135>>2]|0;
  $27 = $134;
  $137 = $27;
  $138 = ((($137)) + 8|0);
  $26 = $138;
  $139 = $26;
  $25 = $139;
  $140 = $25;
  $141 = HEAP32[$140>>2]|0;
  $142 = ($136>>>0)<($141>>>0);
  if ($142) {
   $22 = $30;
   $23 = $134;
   $24 = 1;
   $5 = $134;
   $143 = $5;
   $144 = ((($143)) + 8|0);
   $4 = $144;
   $145 = $4;
   $3 = $145;
   $146 = $3;
   $147 = ((($134)) + 4|0);
   $148 = HEAP32[$147>>2]|0;
   $1 = $148;
   $149 = $1;
   $150 = $29;
   $2 = $150;
   $151 = $2;
   $16 = $146;
   $17 = $149;
   $18 = $151;
   $152 = $16;
   $153 = $17;
   $154 = $18;
   $15 = $154;
   $155 = $15;
   ;HEAP8[$14>>0]=HEAP8[$19>>0]|0;
   $11 = $152;
   $12 = $153;
   $13 = $155;
   $156 = $11;
   $157 = $12;
   $158 = $13;
   $10 = $158;
   $159 = $10;
   $7 = $156;
   $8 = $157;
   $9 = $159;
   $160 = $8;
   $161 = $9;
   $6 = $161;
   $162 = $6;
   __ZN7lazperf6models10arithmeticC2EOS1_($160,$162);
   $20 = $30;
   $163 = ((($134)) + 4|0);
   $164 = HEAP32[$163>>2]|0;
   $165 = ((($164)) + 44|0);
   HEAP32[$163>>2] = $165;
  } else {
   $166 = $29;
   $21 = $166;
   $167 = $21;
   __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($134,$167);
  }
  __ZN7lazperf6models10arithmeticD2Ev($66);
  $168 = $63;
  $169 = (($168) + 1)|0;
  $63 = $169;
 }
 STACKTOP = sp;return;
}
function __ZNK7lazperf6reader10basic_file7Private10pointCountEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = $0;
 $3 = $2;
 $4 = ((($3)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 24|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = ($8|0)>(1);
 if (!($9)) {
  $10 = ((($3)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 24|0);
  $13 = ((($12)) + 1|0);
  $14 = HEAP8[$13>>0]|0;
  $15 = $14&255;
  $16 = ($15|0)>(3);
  if (!($16)) {
   $29 = ((($3)) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($30)) + 108|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = $1;
   $34 = $33;
   HEAP32[$34>>2] = $32;
   $35 = (($33) + 4)|0;
   $36 = $35;
   HEAP32[$36>>2] = 0;
   $37 = $1;
   $38 = $37;
   $39 = HEAP32[$38>>2]|0;
   $40 = (($37) + 4)|0;
   $41 = $40;
   $42 = HEAP32[$41>>2]|0;
   setTempRet0(($42) | 0);
   STACKTOP = sp;return ($39|0);
  }
 }
 $17 = ((($3)) + 16|0);
 $18 = ((($17)) + 256|0);
 $19 = $18;
 $20 = $19;
 $21 = HEAP32[$20>>2]|0;
 $22 = (($19) + 4)|0;
 $23 = $22;
 $24 = HEAP32[$23>>2]|0;
 $25 = $1;
 $26 = $25;
 HEAP32[$26>>2] = $21;
 $27 = (($25) + 4)|0;
 $28 = $27;
 HEAP32[$28>>2] = $24;
 $37 = $1;
 $38 = $37;
 $39 = HEAP32[$38>>2]|0;
 $40 = (($37) + 4)|0;
 $41 = $40;
 $42 = HEAP32[$41>>2]|0;
 setTempRet0(($42) | 0);
 STACKTOP = sp;return ($39|0);
}
function __ZNK7lazperf6reader10basic_file7Private16firstChunkOffsetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 96|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 8)|0;
 setTempRet0((0) | 0);
 STACKTOP = sp;return ($7|0);
}
function __ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $11 = $6;
 $12 = $8;
 $13 = $7;
 $14 = ((($11)) + 36|0);
 $15 = $9;
 $4 = $14;
 $5 = $15;
 $16 = $4;
 $17 = HEAP32[$16>>2]|0;
 $18 = $5;
 $19 = (($17) + (($18*44)|0)|0);
 $20 = (__ZN7lazperf13decompressors7integer13readCorrectorINS_8decoders10arithmeticINS_10InCbStreamEEENS_6models10arithmeticEEEiRT_RT0_($11,$13,$19)|0);
 $21 = (($12) + ($20))|0;
 $10 = $21;
 $22 = $10;
 $23 = ($22|0)<(0);
 if ($23) {
  $24 = ((($11)) + 24|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $10;
  $27 = (($26) + ($25))|0;
  $10 = $27;
  $36 = $10;
  STACKTOP = sp;return ($36|0);
 }
 $28 = $10;
 $29 = ((($11)) + 24|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($28>>>0)>=($30>>>0);
 if (!($31)) {
  $36 = $10;
  STACKTOP = sp;return ($36|0);
 }
 $32 = ((($11)) + 24|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = $10;
 $35 = (($34) - ($33))|0;
 $10 = $35;
 $36 = $10;
 STACKTOP = sp;return ($36|0);
}
function __ZN7lazperf13decompressors7integerD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $53 = $0;
 $54 = $53;
 $55 = ((($54)) + 68|0);
 $52 = $55;
 $56 = $52;
 $51 = $56;
 $57 = $51;
 $50 = $57;
 $58 = $50;
 $59 = HEAP32[$58>>2]|0;
 $49 = $59;
 $60 = $49;
 $28 = $57;
 $61 = $28;
 $62 = HEAP32[$61>>2]|0;
 $27 = $62;
 $63 = $27;
 $33 = $57;
 $64 = $33;
 $32 = $64;
 $65 = $32;
 $31 = $65;
 $66 = $31;
 $67 = ((($66)) + 8|0);
 $30 = $67;
 $68 = $30;
 $29 = $68;
 $69 = $29;
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$65>>2]|0;
 $72 = $70;
 $73 = $71;
 $74 = (($72) - ($73))|0;
 $75 = (($74|0) / 44)&-1;
 $76 = (($63) + (($75*44)|0)|0);
 $35 = $57;
 $77 = $35;
 $78 = HEAP32[$77>>2]|0;
 $34 = $78;
 $79 = $34;
 $36 = $57;
 $80 = $36;
 $81 = ((($80)) + 4|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = HEAP32[$80>>2]|0;
 $84 = $82;
 $85 = $83;
 $86 = (($84) - ($85))|0;
 $87 = (($86|0) / 44)&-1;
 $88 = (($79) + (($87*44)|0)|0);
 $38 = $57;
 $89 = $38;
 $90 = HEAP32[$89>>2]|0;
 $37 = $90;
 $91 = $37;
 $43 = $57;
 $92 = $43;
 $42 = $92;
 $93 = $42;
 $41 = $93;
 $94 = $41;
 $95 = ((($94)) + 8|0);
 $40 = $95;
 $96 = $40;
 $39 = $96;
 $97 = $39;
 $98 = HEAP32[$97>>2]|0;
 $99 = HEAP32[$93>>2]|0;
 $100 = $98;
 $101 = $99;
 $102 = (($100) - ($101))|0;
 $103 = (($102|0) / 44)&-1;
 $104 = (($91) + (($103*44)|0)|0);
 $44 = $57;
 $45 = $60;
 $46 = $76;
 $47 = $88;
 $48 = $104;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($56);
 $105 = ((($54)) + 36|0);
 $26 = $105;
 $106 = $26;
 $25 = $106;
 $107 = $25;
 $24 = $107;
 $108 = $24;
 $109 = HEAP32[$108>>2]|0;
 $23 = $109;
 $110 = $23;
 $2 = $107;
 $111 = $2;
 $112 = HEAP32[$111>>2]|0;
 $1 = $112;
 $113 = $1;
 $7 = $107;
 $114 = $7;
 $6 = $114;
 $115 = $6;
 $5 = $115;
 $116 = $5;
 $117 = ((($116)) + 8|0);
 $4 = $117;
 $118 = $4;
 $3 = $118;
 $119 = $3;
 $120 = HEAP32[$119>>2]|0;
 $121 = HEAP32[$115>>2]|0;
 $122 = $120;
 $123 = $121;
 $124 = (($122) - ($123))|0;
 $125 = (($124|0) / 44)&-1;
 $126 = (($113) + (($125*44)|0)|0);
 $9 = $107;
 $127 = $9;
 $128 = HEAP32[$127>>2]|0;
 $8 = $128;
 $129 = $8;
 $10 = $107;
 $130 = $10;
 $131 = ((($130)) + 4|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = HEAP32[$130>>2]|0;
 $134 = $132;
 $135 = $133;
 $136 = (($134) - ($135))|0;
 $137 = (($136|0) / 44)&-1;
 $138 = (($129) + (($137*44)|0)|0);
 $12 = $107;
 $139 = $12;
 $140 = HEAP32[$139>>2]|0;
 $11 = $140;
 $141 = $11;
 $17 = $107;
 $142 = $17;
 $16 = $142;
 $143 = $16;
 $15 = $143;
 $144 = $15;
 $145 = ((($144)) + 8|0);
 $14 = $145;
 $146 = $14;
 $13 = $146;
 $147 = $13;
 $148 = HEAP32[$147>>2]|0;
 $149 = HEAP32[$143>>2]|0;
 $150 = $148;
 $151 = $149;
 $152 = (($150) - ($151))|0;
 $153 = (($152|0) / 44)&-1;
 $154 = (($141) + (($153*44)|0)|0);
 $18 = $107;
 $19 = $110;
 $20 = $126;
 $21 = $138;
 $22 = $154;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($106);
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 $15 = ((($14)) + 12|0);
 $12 = $15;
 $16 = $12;
 $9 = $16;
 $10 = 0;
 $17 = $9;
 $8 = $17;
 $18 = $8;
 $7 = $18;
 $19 = $7;
 $20 = HEAP32[$19>>2]|0;
 $11 = $20;
 $21 = $10;
 $4 = $17;
 $22 = $4;
 $3 = $22;
 $23 = $3;
 HEAP32[$23>>2] = $21;
 $24 = $11;
 $25 = ($24|0)!=(0|0);
 if (!($25)) {
  STACKTOP = sp;return;
 }
 $2 = $17;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $28 = $11;
 $5 = $27;
 $6 = $28;
 $29 = $6;
 $30 = ($29|0)==(0|0);
 if ($30) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf10InCbStreamD2Ev($29);
 __ZdlPv($29);
 STACKTOP = sp;return;
}
function __ZN7lazperf10InCbStreamD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__28functionIFvPhmEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -44|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
  $59 = $21;
  __ZN7lazperf6models10arithmeticD2Ev($59);
 }
 $60 = $33;
 $61 = ((($42)) + 4|0);
 HEAP32[$61>>2] = $60;
 $19 = $37;
 $62 = $19;
 $63 = ((($62)) + 8|0);
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$37>>2]|0;
 $4 = $37;
 $67 = $4;
 $3 = $67;
 $68 = $3;
 $69 = ((($68)) + 8|0);
 $2 = $69;
 $70 = $2;
 $1 = $70;
 $71 = $1;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 44)&-1;
 $14 = $65;
 $15 = $66;
 $16 = $77;
 $78 = $14;
 $79 = $15;
 $80 = $16;
 $11 = $78;
 $12 = $79;
 $13 = $80;
 $81 = $12;
 $82 = $13;
 $83 = ($82*44)|0;
 $8 = $81;
 $9 = $83;
 $10 = 4;
 $84 = $8;
 $85 = $9;
 $86 = $10;
 $5 = $84;
 $6 = $85;
 $7 = $86;
 $87 = $5;
 $88 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($87,$88);
 STACKTOP = sp;return;
}
function __ZN7lazperf6models10arithmeticD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = ((($2)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  __ZN7lazperf5utils12aligned_freeEPv($7);
 }
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $11 = ((($2)) + 12|0);
  $12 = HEAP32[$11>>2]|0;
  __ZN7lazperf5utils12aligned_freeEPv($12);
 }
 $13 = ((($2)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)!=(0|0);
 if (!($15)) {
  STACKTOP = sp;return;
 }
 $16 = ((($2)) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 __ZN7lazperf5utils12aligned_freeEPv($17);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils12aligned_freeEPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + -4|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 STACKTOP = sp;return;
}
function __ZN7lazperf13decompressors7integer13readCorrectorINS_8decoders10arithmeticINS_10InCbStreamEEENS_6models10arithmeticEEEiRT_RT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($14,$15)|0);
 HEAP32[$13>>2] = $16;
 $17 = HEAP32[$13>>2]|0;
 $18 = ($17|0)!=(0);
 if (!($18)) {
  $69 = $8;
  $70 = ((($13)) + 48|0);
  $71 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE9decodeBitINS_6models14arithmetic_bitEEEjRT_($69,$70)|0);
  $10 = $71;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 }
 $19 = HEAP32[$13>>2]|0;
 $20 = ($19>>>0)<(32);
 if (!($20)) {
  $67 = ((($13)) + 28|0);
  $68 = HEAP32[$67>>2]|0;
  $10 = $68;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 }
 $21 = HEAP32[$13>>2]|0;
 $22 = ((($13)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($21>>>0)<=($23>>>0);
 if ($24) {
  $25 = $8;
  $26 = ((($13)) + 68|0);
  $27 = HEAP32[$13>>2]|0;
  $28 = (($27) - 1)|0;
  $5 = $26;
  $6 = $28;
  $29 = $5;
  $30 = HEAP32[$29>>2]|0;
  $31 = $6;
  $32 = (($30) + (($31*44)|0)|0);
  $33 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($25,$32)|0);
  $10 = $33;
 } else {
  $34 = HEAP32[$13>>2]|0;
  $35 = ((($13)) + 12|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (($34) - ($36))|0;
  $11 = $37;
  $38 = $8;
  $39 = ((($13)) + 68|0);
  $40 = HEAP32[$13>>2]|0;
  $41 = (($40) - 1)|0;
  $3 = $39;
  $4 = $41;
  $42 = $3;
  $43 = HEAP32[$42>>2]|0;
  $44 = $4;
  $45 = (($43) + (($44*44)|0)|0);
  $46 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($38,$45)|0);
  $10 = $46;
  $47 = $8;
  $48 = $11;
  $49 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE8readBitsEj($47,$48)|0);
  $12 = $49;
  $50 = $10;
  $51 = $11;
  $52 = $50 << $51;
  $53 = $12;
  $54 = $52 | $53;
  $10 = $54;
 }
 $55 = $10;
 $56 = HEAP32[$13>>2]|0;
 $57 = (($56) - 1)|0;
 $58 = 1 << $57;
 $59 = ($55|0)>=($58|0);
 if ($59) {
  $60 = $10;
  $61 = (($60) + 1)|0;
  $10 = $61;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 } else {
  $62 = HEAP32[$13>>2]|0;
  $63 = 1 << $62;
  $64 = (($63) - 1)|0;
  $65 = $10;
  $66 = (($65) - ($64))|0;
  $10 = $66;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 }
 return (0)|0;
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = $0;
 $3 = $1;
 $13 = $2;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $7 = $15;
 $16 = $3;
 $17 = ((($16)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = HEAP32[$13>>2]|0;
  $21 = ((($13)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 >>> 15;
  HEAP32[$21>>2] = $23;
  $24 = (($20>>>0) / ($23>>>0))&-1;
  $8 = $24;
  $25 = $8;
  $26 = $3;
  $27 = ((($26)) + 40|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = $25 >>> $28;
  $9 = $29;
  $30 = $3;
  $31 = ((($30)) + 16|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = $9;
  $34 = (($32) + ($33<<2)|0);
  $35 = HEAP32[$34>>2]|0;
  $5 = $35;
  $36 = $3;
  $37 = ((($36)) + 16|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = $9;
  $40 = (($39) + 1)|0;
  $41 = (($38) + ($40<<2)|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + 1)|0;
  $4 = $43;
  while(1) {
   $44 = $4;
   $45 = $5;
   $46 = (($45) + 1)|0;
   $47 = ($44>>>0)>($46>>>0);
   if (!($47)) {
    break;
   }
   $48 = $5;
   $49 = $4;
   $50 = (($48) + ($49))|0;
   $51 = $50 >>> 1;
   $10 = $51;
   $52 = $3;
   $53 = ((($52)) + 8|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = $10;
   $56 = (($54) + ($55<<2)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $8;
   $59 = ($57>>>0)>($58>>>0);
   $60 = $10;
   if ($59) {
    $4 = $60;
   } else {
    $5 = $60;
   }
  }
  $61 = $3;
  $62 = ((($61)) + 8|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $5;
  $65 = (($63) + ($64<<2)|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($13)) + 4|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = Math_imul($66, $68)|0;
  $6 = $69;
  $70 = $5;
  $71 = $3;
  $72 = ((($71)) + 32|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ($70|0)!=($73|0);
  if ($74) {
   $75 = $3;
   $76 = ((($75)) + 8|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = $5;
   $79 = (($78) + 1)|0;
   $80 = (($77) + ($79<<2)|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = ((($13)) + 4|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = Math_imul($81, $83)|0;
   $7 = $84;
  }
 } else {
  $5 = 0;
  $6 = 0;
  $85 = ((($13)) + 4|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = $86 >>> 15;
  HEAP32[$85>>2] = $87;
  $88 = $3;
  $89 = HEAP32[$88>>2]|0;
  $4 = $89;
  $90 = $89 >>> 1;
  $11 = $90;
  while(1) {
   $91 = ((($13)) + 4|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = $3;
   $94 = ((($93)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = $11;
   $97 = (($95) + ($96<<2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = Math_imul($92, $98)|0;
   $12 = $99;
   $100 = $12;
   $101 = HEAP32[$13>>2]|0;
   $102 = ($100>>>0)>($101>>>0);
   $103 = $11;
   if ($102) {
    $4 = $103;
    $104 = $12;
    $7 = $104;
   } else {
    $5 = $103;
    $105 = $12;
    $6 = $105;
   }
   $106 = $5;
   $107 = $4;
   $108 = (($106) + ($107))|0;
   $109 = $108 >>> 1;
   $11 = $109;
   $110 = $5;
   $111 = ($109|0)!=($110|0);
   if (!($111)) {
    break;
   }
  }
 }
 $112 = $6;
 $113 = HEAP32[$13>>2]|0;
 $114 = (($113) - ($112))|0;
 HEAP32[$13>>2] = $114;
 $115 = $7;
 $116 = $6;
 $117 = (($115) - ($116))|0;
 $118 = ((($13)) + 4|0);
 HEAP32[$118>>2] = $117;
 $119 = ((($13)) + 4|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = ($120>>>0)<(16777216);
 if ($121) {
  __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE19renorm_dec_intervalEv($13);
 }
 $122 = $3;
 $123 = ((($122)) + 12|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = $5;
 $126 = (($124) + ($125<<2)|0);
 $127 = HEAP32[$126>>2]|0;
 $128 = (($127) + 1)|0;
 HEAP32[$126>>2] = $128;
 $129 = $3;
 $130 = ((($129)) + 28|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = (($131) + -1)|0;
 HEAP32[$130>>2] = $132;
 $133 = ($132|0)==(0);
 if (!($133)) {
  $135 = $5;
  STACKTOP = sp;return ($135|0);
 }
 $134 = $3;
 __ZN7lazperf6models10arithmetic6updateEv($134);
 $135 = $5;
 STACKTOP = sp;return ($135|0);
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE8readBitsEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $3;
 $9 = $4;
 $10 = ($9|0)!=(0);
 $11 = $4;
 $12 = ($11>>>0)<=(32);
 $or$cond = $10 & $12;
 if (!($or$cond)) {
  ___assert_fail((21134|0),(18530|0),252,(21155|0));
  // unreachable;
 }
 $13 = $4;
 $14 = ($13>>>0)>(19);
 if ($14) {
  $15 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE9readShortEv($8)|0);
  $16 = $15&65535;
  $5 = $16;
  $17 = $4;
  $18 = (($17) - 16)|0;
  $4 = $18;
  $19 = $4;
  $20 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE8readBitsEj($8,$19)|0);
  $21 = $20 << 16;
  $6 = $21;
  $22 = $6;
  $23 = $5;
  $24 = $22 | $23;
  $2 = $24;
  $41 = $2;
  STACKTOP = sp;return ($41|0);
 }
 $25 = HEAP32[$8>>2]|0;
 $26 = $4;
 $27 = ((($8)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = $28 >>> $26;
 HEAP32[$27>>2] = $29;
 $30 = (($25>>>0) / ($29>>>0))&-1;
 $7 = $30;
 $31 = ((($8)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $7;
 $34 = Math_imul($32, $33)|0;
 $35 = HEAP32[$8>>2]|0;
 $36 = (($35) - ($34))|0;
 HEAP32[$8>>2] = $36;
 $37 = ((($8)) + 4|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38>>>0)<(16777216);
 if ($39) {
  __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE19renorm_dec_intervalEv($8);
 }
 $40 = $7;
 $2 = $40;
 $41 = $2;
 STACKTOP = sp;return ($41|0);
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE9decodeBitINS_6models14arithmetic_bitEEEjRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($6)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 >>> 13;
 $13 = Math_imul($9, $12)|0;
 $4 = $13;
 $14 = HEAP32[$6>>2]|0;
 $15 = $4;
 $16 = ($14>>>0)>=($15>>>0);
 $17 = $16&1;
 $5 = $17;
 $18 = $5;
 $19 = ($18|0)==(0);
 $20 = $4;
 if ($19) {
  $21 = ((($6)) + 4|0);
  HEAP32[$21>>2] = $20;
  $22 = $3;
  $23 = ((($22)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($24) + 1)|0;
  HEAP32[$23>>2] = $25;
 } else {
  $26 = HEAP32[$6>>2]|0;
  $27 = (($26) - ($20))|0;
  HEAP32[$6>>2] = $27;
  $28 = $4;
  $29 = ((($6)) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = (($30) - ($28))|0;
  HEAP32[$29>>2] = $31;
 }
 $32 = ((($6)) + 4|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($33>>>0)<(16777216);
 if ($34) {
  __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE19renorm_dec_intervalEv($6);
 }
 $35 = $3;
 $36 = ((($35)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = (($37) + -1)|0;
 HEAP32[$36>>2] = $38;
 $39 = ($38|0)==(0);
 if (!($39)) {
  $41 = $5;
  STACKTOP = sp;return ($41|0);
 }
 $40 = $3;
 __ZN7lazperf6models14arithmetic_bit6updateEv($40);
 $41 = $5;
 STACKTOP = sp;return ($41|0);
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE19renorm_dec_intervalEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 while(1) {
  $3 = HEAP32[$2>>2]|0;
  $4 = $3 << 8;
  $5 = ((($2)) + 16|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZN7lazperf10InCbStream7getByteEv($6)|0);
  $8 = $7&255;
  $9 = $4 | $8;
  HEAP32[$2>>2] = $9;
  $10 = ((($2)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 << 8;
  HEAP32[$10>>2] = $12;
  $13 = ($12>>>0)<(16777216);
  if (!($13)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6models14arithmetic_bit6updateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($3)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + ($4))|0;
 HEAP32[$5>>2] = $7;
 $8 = ($7>>>0)>(8192);
 if ($8) {
  $9 = ((($3)) + 16|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($10) + 1)|0;
  $12 = $11 >>> 1;
  $13 = ((($3)) + 16|0);
  HEAP32[$13>>2] = $12;
  $14 = ((($3)) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + 1)|0;
  $17 = $16 >>> 1;
  $18 = ((($3)) + 12|0);
  HEAP32[$18>>2] = $17;
  $19 = ((($3)) + 12|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($3)) + 16|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($20|0)==($22|0);
  if ($23) {
   $24 = ((($3)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (($25) + 1)|0;
   HEAP32[$24>>2] = $26;
  }
 }
 $27 = ((($3)) + 16|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (2147483648 / ($28>>>0))&-1;
 $2 = $29;
 $30 = ((($3)) + 12|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = $2;
 $33 = Math_imul($31, $32)|0;
 $34 = $33 >>> 18;
 $35 = ((($3)) + 8|0);
 HEAP32[$35>>2] = $34;
 $36 = HEAP32[$3>>2]|0;
 $37 = ($36*5)|0;
 $38 = $37 >>> 2;
 HEAP32[$3>>2] = $38;
 $39 = HEAP32[$3>>2]|0;
 $40 = ($39>>>0)>(64);
 if (!($40)) {
  $41 = HEAP32[$3>>2]|0;
  $42 = ((($3)) + 4|0);
  HEAP32[$42>>2] = $41;
  STACKTOP = sp;return;
 }
 HEAP32[$3>>2] = 64;
 $41 = HEAP32[$3>>2]|0;
 $42 = ((($3)) + 4|0);
 HEAP32[$42>>2] = $41;
 STACKTOP = sp;return;
}
function __ZN7lazperf10InCbStream7getByteEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $1 = $0;
 $3 = $1;
 __ZNKSt3__28functionIFvPhmEEclES1_m($3,$2,1);
 $4 = HEAP8[$2>>0]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__28functionIFvPhmEEclES1_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $12 = sp + 4|0;
 $13 = sp;
 $11 = $0;
 HEAP32[$12>>2] = $1;
 HEAP32[$13>>2] = $2;
 $14 = $11;
 $10 = $12;
 $15 = $10;
 $3 = $13;
 $16 = $3;
 $7 = $14;
 $8 = $15;
 $9 = $16;
 $17 = $7;
 $18 = ((($17)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $6 = $17;
 $20 = $6;
 $21 = $8;
 $5 = $21;
 $22 = $5;
 $23 = HEAP32[$22>>2]|0;
 $24 = $9;
 $4 = $24;
 $25 = $4;
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_viii[$19 & 1023]($20,$23,$26);
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE9readShortEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($3)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 >>> 16;
 HEAP32[$5>>2] = $7;
 $8 = (($4>>>0) / ($7>>>0))&-1;
 $2 = $8;
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2;
 $12 = Math_imul($10, $11)|0;
 $13 = HEAP32[$3>>2]|0;
 $14 = (($13) - ($12))|0;
 HEAP32[$3>>2] = $14;
 $15 = ((($3)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16>>>0)<(16777216);
 if ($17) {
  __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE19renorm_dec_intervalEv($3);
 }
 $18 = $2;
 $19 = ($18>>>0)<(65536);
 if ($19) {
  $20 = $2;
  $21 = $20&65535;
  STACKTOP = sp;return ($21|0);
 } else {
  ___assert_fail((21071|0),(18530|0),290,(21124|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN7lazperf6models10arithmetic6updateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $9 = $1;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($9)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($11))|0;
 HEAP32[$12>>2] = $14;
 $15 = ($14>>>0)>(32768);
 L1: do {
  if ($15) {
   $16 = ((($9)) + 20|0);
   HEAP32[$16>>2] = 0;
   $2 = 0;
   while(1) {
    $17 = $2;
    $18 = HEAP32[$9>>2]|0;
    $19 = ($17>>>0)<($18>>>0);
    if (!($19)) {
     break L1;
    }
    $20 = ((($9)) + 12|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $2;
    $23 = (($21) + ($22<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (($24) + 1)|0;
    $26 = $25 >>> 1;
    $27 = ((($9)) + 12|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = $2;
    $30 = (($28) + ($29<<2)|0);
    HEAP32[$30>>2] = $26;
    $31 = ((($9)) + 20|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($32) + ($26))|0;
    HEAP32[$31>>2] = $33;
    $34 = $2;
    $35 = (($34) + 1)|0;
    $2 = $35;
   }
  }
 } while(0);
 $4 = 0;
 $5 = 0;
 $36 = ((($9)) + 20|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = (2147483648 / ($37>>>0))&-1;
 $6 = $38;
 $39 = ((($9)) + 4|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&1;
 L7: do {
  if ($41) {
   label = 7;
  } else {
   $42 = ((($9)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($43|0)==(0);
   if ($44) {
    label = 7;
   } else {
    $3 = 0;
    while(1) {
     $65 = $3;
     $66 = HEAP32[$9>>2]|0;
     $67 = ($65>>>0)<($66>>>0);
     if (!($67)) {
      break;
     }
     $68 = $6;
     $69 = $4;
     $70 = Math_imul($68, $69)|0;
     $71 = $70 >>> 16;
     $72 = ((($9)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = $3;
     $75 = (($73) + ($74<<2)|0);
     HEAP32[$75>>2] = $71;
     $76 = ((($9)) + 12|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = $3;
     $79 = (($77) + ($78<<2)|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = $4;
     $82 = (($81) + ($80))|0;
     $4 = $82;
     $83 = ((($9)) + 8|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = $3;
     $86 = (($84) + ($85<<2)|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ((($9)) + 40|0);
     $89 = HEAP32[$88>>2]|0;
     $90 = $87 >>> $89;
     $7 = $90;
     while(1) {
      $91 = $5;
      $92 = $7;
      $93 = ($91>>>0)<($92>>>0);
      $94 = $3;
      if (!($93)) {
       break;
      }
      $95 = (($94) - 1)|0;
      $96 = ((($9)) + 16|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = $5;
      $99 = (($98) + 1)|0;
      $5 = $99;
      $100 = (($97) + ($99<<2)|0);
      HEAP32[$100>>2] = $95;
     }
     $101 = (($94) + 1)|0;
     $3 = $101;
    }
    $102 = ((($9)) + 16|0);
    $103 = HEAP32[$102>>2]|0;
    HEAP32[$103>>2] = 0;
    while(1) {
     $104 = $5;
     $105 = ((($9)) + 36|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = ($104>>>0)<=($106>>>0);
     if (!($107)) {
      break L7;
     }
     $108 = HEAP32[$9>>2]|0;
     $109 = (($108) - 1)|0;
     $110 = ((($9)) + 16|0);
     $111 = HEAP32[$110>>2]|0;
     $112 = $5;
     $113 = (($112) + 1)|0;
     $5 = $113;
     $114 = (($111) + ($113<<2)|0);
     HEAP32[$114>>2] = $109;
    }
   }
  }
 } while(0);
 L21: do {
  if ((label|0) == 7) {
   $3 = 0;
   while(1) {
    $45 = $3;
    $46 = HEAP32[$9>>2]|0;
    $47 = ($45>>>0)<($46>>>0);
    if (!($47)) {
     break L21;
    }
    $48 = $6;
    $49 = $4;
    $50 = Math_imul($48, $49)|0;
    $51 = $50 >>> 16;
    $52 = ((($9)) + 8|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = $3;
    $55 = (($53) + ($54<<2)|0);
    HEAP32[$55>>2] = $51;
    $56 = ((($9)) + 12|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = $3;
    $59 = (($57) + ($58<<2)|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = $4;
    $62 = (($61) + ($60))|0;
    $4 = $62;
    $63 = $3;
    $64 = (($63) + 1)|0;
    $3 = $64;
   }
  }
 } while(0);
 $115 = ((($9)) + 24|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = ($116*5)|0;
 $118 = $117 >>> 2;
 $119 = ((($9)) + 24|0);
 HEAP32[$119>>2] = $118;
 $120 = HEAP32[$9>>2]|0;
 $121 = (($120) + 6)|0;
 $122 = $121 << 3;
 $8 = $122;
 $123 = ((($9)) + 24|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = $8;
 $126 = ($124>>>0)>($125>>>0);
 if (!($126)) {
  $129 = ((($9)) + 24|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = ((($9)) + 28|0);
  HEAP32[$131>>2] = $130;
  STACKTOP = sp;return;
 }
 $127 = $8;
 $128 = ((($9)) + 24|0);
 HEAP32[$128>>2] = $127;
 $129 = ((($9)) + 24|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = ((($9)) + 28|0);
 HEAP32[$131>>2] = $130;
 STACKTOP = sp;return;
}
function __ZN7lazperf6models10arithmeticC2EjbPj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $11 = $2&1;
 $6 = $11;
 $7 = $3;
 $12 = $4;
 $13 = $5;
 HEAP32[$12>>2] = $13;
 $14 = ((($12)) + 4|0);
 $15 = $6;
 $16 = $15&1;
 $17 = $16&1;
 HEAP8[$14>>0] = $17;
 $18 = ((($12)) + 8|0);
 HEAP32[$18>>2] = 0;
 $19 = ((($12)) + 12|0);
 HEAP32[$19>>2] = 0;
 $20 = ((($12)) + 16|0);
 HEAP32[$20>>2] = 0;
 $21 = HEAP32[$12>>2]|0;
 $22 = ($21>>>0)<(2);
 if ($22) {
  $25 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($25,18559);
  ___cxa_throw(($25|0),(9784|0),(620|0));
  // unreachable;
 }
 $23 = HEAP32[$12>>2]|0;
 $24 = ($23>>>0)>(2048);
 if ($24) {
  $25 = (___cxa_allocate_exception(8)|0);
  __ZNSt13runtime_errorC2EPKc($25,18559);
  ___cxa_throw(($25|0),(9784|0),(620|0));
  // unreachable;
 }
 $26 = HEAP32[$12>>2]|0;
 $27 = (($26) - 1)|0;
 $28 = ((($12)) + 32|0);
 HEAP32[$28>>2] = $27;
 $29 = ((($12)) + 4|0);
 $30 = HEAP8[$29>>0]|0;
 $31 = $30&1;
 if ($31) {
  label = 10;
 } else {
  $32 = HEAP32[$12>>2]|0;
  $33 = ($32>>>0)>(16);
  if ($33) {
   $8 = 3;
   while(1) {
    $34 = HEAP32[$12>>2]|0;
    $35 = $8;
    $36 = (($35) + 2)|0;
    $37 = 1 << $36;
    $38 = ($34>>>0)>($37>>>0);
    $39 = $8;
    if (!($38)) {
     break;
    }
    $40 = (($39) + 1)|0;
    $8 = $40;
   }
   $41 = 1 << $39;
   $42 = ((($12)) + 36|0);
   HEAP32[$42>>2] = $41;
   $43 = $8;
   $44 = (15 - ($43))|0;
   $45 = ((($12)) + 40|0);
   HEAP32[$45>>2] = $44;
   $46 = ((($12)) + 36|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (($47) + 2)|0;
   $49 = $48<<2;
   $50 = (__ZN7lazperf5utils14aligned_mallocEi($49)|0);
   $51 = ((($12)) + 16|0);
   HEAP32[$51>>2] = $50;
  } else {
   label = 10;
  }
 }
 if ((label|0) == 10) {
  $52 = ((($12)) + 16|0);
  HEAP32[$52>>2] = 0;
  $53 = ((($12)) + 40|0);
  HEAP32[$53>>2] = 0;
  $54 = ((($12)) + 36|0);
  HEAP32[$54>>2] = 0;
 }
 $55 = HEAP32[$12>>2]|0;
 $56 = $55<<2;
 $57 = (__ZN7lazperf5utils14aligned_mallocEi($56)|0);
 $58 = ((($12)) + 8|0);
 HEAP32[$58>>2] = $57;
 $59 = HEAP32[$12>>2]|0;
 $60 = $59<<2;
 $61 = (__ZN7lazperf5utils14aligned_mallocEi($60)|0);
 $62 = ((($12)) + 12|0);
 HEAP32[$62>>2] = $61;
 $63 = ((($12)) + 20|0);
 HEAP32[$63>>2] = 0;
 $64 = HEAP32[$12>>2]|0;
 $65 = ((($12)) + 24|0);
 HEAP32[$65>>2] = $64;
 $66 = $7;
 $67 = ($66|0)!=(0|0);
 if ($67) {
  $9 = 0;
  while(1) {
   $68 = $9;
   $69 = HEAP32[$12>>2]|0;
   $70 = ($68>>>0)<($69>>>0);
   if (!($70)) {
    break;
   }
   $71 = $7;
   $72 = $9;
   $73 = (($71) + ($72<<2)|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($12)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $9;
   $78 = (($76) + ($77<<2)|0);
   HEAP32[$78>>2] = $74;
   $79 = $9;
   $80 = (($79) + 1)|0;
   $9 = $80;
  }
  __ZN7lazperf6models10arithmetic6updateEv($12);
  $90 = HEAP32[$12>>2]|0;
  $91 = (($90) + 6)|0;
  $92 = $91 >>> 1;
  $93 = ((($12)) + 24|0);
  HEAP32[$93>>2] = $92;
  $94 = ((($12)) + 28|0);
  HEAP32[$94>>2] = $92;
  STACKTOP = sp;return;
 } else {
  $10 = 0;
  while(1) {
   $81 = $10;
   $82 = HEAP32[$12>>2]|0;
   $83 = ($81>>>0)<($82>>>0);
   if (!($83)) {
    break;
   }
   $84 = ((($12)) + 12|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = $10;
   $87 = (($85) + ($86<<2)|0);
   HEAP32[$87>>2] = 1;
   $88 = $10;
   $89 = (($88) + 1)|0;
   $10 = $89;
  }
  __ZN7lazperf6models10arithmetic6updateEv($12);
  $90 = HEAP32[$12>>2]|0;
  $91 = (($90) + 6)|0;
  $92 = $91 >>> 1;
  $93 = ((($12)) + 24|0);
  HEAP32[$93>>2] = $92;
  $94 = ((($12)) + 28|0);
  HEAP32[$94>>2] = $92;
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf6models10arithmeticC2EOS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&1;
 $12 = $11&1;
 HEAP8[$7>>0] = $12;
 $13 = ((($4)) + 8|0);
 $14 = $3;
 $15 = ((($14)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$13>>2] = $16;
 $17 = ((($4)) + 12|0);
 $18 = $3;
 $19 = ((($18)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 HEAP32[$17>>2] = $20;
 $21 = ((($4)) + 16|0);
 $22 = $3;
 $23 = ((($22)) + 16|0);
 $24 = HEAP32[$23>>2]|0;
 HEAP32[$21>>2] = $24;
 $25 = ((($4)) + 20|0);
 $26 = $3;
 $27 = ((($26)) + 20|0);
 $28 = HEAP32[$27>>2]|0;
 HEAP32[$25>>2] = $28;
 $29 = ((($4)) + 24|0);
 $30 = $3;
 $31 = ((($30)) + 24|0);
 $32 = HEAP32[$31>>2]|0;
 HEAP32[$29>>2] = $32;
 $33 = ((($4)) + 28|0);
 $34 = $3;
 $35 = ((($34)) + 28|0);
 $36 = HEAP32[$35>>2]|0;
 HEAP32[$33>>2] = $36;
 $37 = ((($4)) + 32|0);
 $38 = $3;
 $39 = ((($38)) + 32|0);
 $40 = HEAP32[$39>>2]|0;
 HEAP32[$37>>2] = $40;
 $41 = ((($4)) + 36|0);
 $42 = $3;
 $43 = ((($42)) + 36|0);
 $44 = HEAP32[$43>>2]|0;
 HEAP32[$41>>2] = $44;
 $45 = ((($4)) + 40|0);
 $46 = $3;
 $47 = ((($46)) + 40|0);
 $48 = HEAP32[$47>>2]|0;
 HEAP32[$45>>2] = $48;
 $49 = $3;
 $50 = ((($49)) + 12|0);
 HEAP32[$50>>2] = 0;
 $51 = $3;
 $52 = ((($51)) + 16|0);
 HEAP32[$52>>2] = 0;
 $53 = $3;
 $54 = ((($53)) + 8|0);
 HEAP32[$54>>2] = 0;
 $55 = $3;
 $56 = ((($55)) + 12|0);
 HEAP32[$56>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $10 = sp + 8|0;
 $15 = sp + 193|0;
 $24 = sp;
 $27 = sp + 192|0;
 $35 = sp + 72|0;
 $38 = sp + 60|0;
 $46 = sp + 12|0;
 $43 = $0;
 $44 = $1;
 $47 = $43;
 $42 = $47;
 $48 = $42;
 $49 = ((($48)) + 8|0);
 $41 = $49;
 $50 = $41;
 $40 = $50;
 $51 = $40;
 $45 = $51;
 $39 = $47;
 $52 = $39;
 $53 = ((($52)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = HEAP32[$52>>2]|0;
 $56 = $54;
 $57 = $55;
 $58 = (($56) - ($57))|0;
 $59 = (($58|0) / 44)&-1;
 $60 = (($59) + 1)|0;
 $34 = $47;
 HEAP32[$35>>2] = $60;
 $61 = $34;
 $62 = (__ZNKSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE8max_sizeEv($61)|0);
 $36 = $62;
 $63 = HEAP32[$35>>2]|0;
 $64 = $36;
 $65 = ($63>>>0)>($64>>>0);
 if ($65) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($61);
  // unreachable;
 }
 $32 = $61;
 $66 = $32;
 $31 = $66;
 $67 = $31;
 $30 = $67;
 $68 = $30;
 $69 = ((($68)) + 8|0);
 $29 = $69;
 $70 = $29;
 $28 = $70;
 $71 = $28;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 44)&-1;
 $37 = $77;
 $78 = $37;
 $79 = $36;
 $80 = (($79>>>0) / 2)&-1;
 $81 = ($78>>>0)>=($80>>>0);
 if ($81) {
  $82 = $36;
  $33 = $82;
 } else {
  $83 = $37;
  $84 = $83<<1;
  HEAP32[$38>>2] = $84;
  $25 = $38;
  $26 = $35;
  $85 = $25;
  $86 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $85;
  $23 = $86;
  $87 = $22;
  $88 = $23;
  $19 = $24;
  $20 = $87;
  $21 = $88;
  $89 = $20;
  $90 = HEAP32[$89>>2]|0;
  $91 = $21;
  $92 = HEAP32[$91>>2]|0;
  $93 = ($90>>>0)<($92>>>0);
  $94 = $23;
  $95 = $22;
  $96 = $93 ? $94 : $95;
  $97 = HEAP32[$96>>2]|0;
  $33 = $97;
 }
 $98 = $33;
 $18 = $47;
 $99 = $18;
 $100 = ((($99)) + 4|0);
 $101 = HEAP32[$100>>2]|0;
 $102 = HEAP32[$99>>2]|0;
 $103 = $101;
 $104 = $102;
 $105 = (($103) - ($104))|0;
 $106 = (($105|0) / 44)&-1;
 $107 = $45;
 __ZNSt3__214__split_bufferIN7lazperf6models10arithmeticERNS_9allocatorIS3_EEEC2EmmS6_($46,$98,$106,$107);
 $108 = $45;
 $109 = ((($46)) + 8|0);
 $110 = HEAP32[$109>>2]|0;
 $17 = $110;
 $111 = $17;
 $112 = $44;
 $16 = $112;
 $113 = $16;
 $12 = $108;
 $13 = $111;
 $14 = $113;
 $114 = $12;
 $115 = $13;
 $116 = $14;
 $11 = $116;
 $117 = $11;
 ;HEAP8[$10>>0]=HEAP8[$15>>0]|0;
 $7 = $114;
 $8 = $115;
 $9 = $117;
 $118 = $7;
 $119 = $8;
 $120 = $9;
 $6 = $120;
 $121 = $6;
 $3 = $118;
 $4 = $119;
 $5 = $121;
 $122 = $4;
 $123 = $5;
 $2 = $123;
 $124 = $2;
 __ZN7lazperf6models10arithmeticC2EOS1_($122,$124);
 $125 = ((($46)) + 8|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = ((($126)) + 44|0);
 HEAP32[$125>>2] = $127;
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($47,$46);
 __ZNSt3__214__split_bufferIN7lazperf6models10arithmeticERNS_9allocatorIS3_EEED2Ev($46);
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = 97612893;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__214__split_bufferIN7lazperf6models10arithmeticERNS_9allocatorIS3_EEEC2EmmS6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $36 = sp;
 $32 = $0;
 $33 = $1;
 $34 = $2;
 $35 = $3;
 $37 = $32;
 $38 = ((($37)) + 12|0);
 HEAP32[$36>>2] = 0;
 $39 = $35;
 $29 = $38;
 $30 = $36;
 $31 = $39;
 $40 = $29;
 $41 = $30;
 $28 = $41;
 $42 = $28;
 $22 = $40;
 $23 = $42;
 $43 = $22;
 $44 = $23;
 $21 = $44;
 HEAP32[$43>>2] = 0;
 $45 = ((($40)) + 4|0);
 $46 = $31;
 $24 = $46;
 $47 = $24;
 $26 = $45;
 $27 = $47;
 $48 = $26;
 $49 = $27;
 $25 = $49;
 $50 = $25;
 HEAP32[$48>>2] = $50;
 $51 = $33;
 $52 = ($51|0)!=(0);
 do {
  if ($52) {
   $6 = $37;
   $53 = $6;
   $54 = ((($53)) + 12|0);
   $5 = $54;
   $55 = $5;
   $56 = ((($55)) + 4|0);
   $4 = $56;
   $57 = $4;
   $58 = HEAP32[$57>>2]|0;
   $59 = $33;
   $16 = $58;
   $17 = $59;
   $60 = $16;
   $61 = $17;
   $13 = $60;
   $14 = $61;
   $15 = 0;
   $62 = $13;
   $63 = $14;
   $12 = $62;
   $64 = ($63>>>0)>(97612893);
   if ($64) {
    $9 = 21003;
    $65 = (___cxa_allocate_exception(8)|0);
    $66 = $9;
    $7 = $65;
    $8 = $66;
    $67 = $7;
    $68 = $8;
    __ZNSt11logic_errorC2EPKc($67,$68);
    HEAP32[$67>>2] = (17588);
    ___cxa_throw(($65|0),(9800|0),(617|0));
    // unreachable;
   } else {
    $69 = $14;
    $70 = ($69*44)|0;
    $10 = $70;
    $11 = 4;
    $71 = $10;
    $72 = (__Znwm($71)|0);
    $73 = $72;
    break;
   }
  } else {
   $73 = 0;
  }
 } while(0);
 HEAP32[$37>>2] = $73;
 $74 = HEAP32[$37>>2]|0;
 $75 = $34;
 $76 = (($74) + (($75*44)|0)|0);
 $77 = ((($37)) + 8|0);
 HEAP32[$77>>2] = $76;
 $78 = ((($37)) + 4|0);
 HEAP32[$78>>2] = $76;
 $79 = HEAP32[$37>>2]|0;
 $80 = $33;
 $81 = (($79) + (($80*44)|0)|0);
 $20 = $37;
 $82 = $20;
 $83 = ((($82)) + 12|0);
 $19 = $83;
 $84 = $19;
 $18 = $84;
 $85 = $18;
 HEAP32[$85>>2] = $81;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $15 = sp;
 $20 = sp + 404|0;
 $31 = sp + 292|0;
 $37 = sp + 268|0;
 $49 = sp + 220|0;
 $102 = $0;
 $103 = $1;
 $104 = $102;
 $101 = $104;
 $105 = $101;
 $100 = $105;
 $106 = $100;
 $107 = HEAP32[$106>>2]|0;
 $99 = $107;
 $108 = $99;
 $78 = $105;
 $109 = $78;
 $110 = HEAP32[$109>>2]|0;
 $77 = $110;
 $111 = $77;
 $83 = $105;
 $112 = $83;
 $82 = $112;
 $113 = $82;
 $81 = $113;
 $114 = $81;
 $115 = ((($114)) + 8|0);
 $80 = $115;
 $116 = $80;
 $79 = $116;
 $117 = $79;
 $118 = HEAP32[$117>>2]|0;
 $119 = HEAP32[$113>>2]|0;
 $120 = $118;
 $121 = $119;
 $122 = (($120) - ($121))|0;
 $123 = (($122|0) / 44)&-1;
 $124 = (($111) + (($123*44)|0)|0);
 $85 = $105;
 $125 = $85;
 $126 = HEAP32[$125>>2]|0;
 $84 = $126;
 $127 = $84;
 $86 = $105;
 $128 = $86;
 $129 = ((($128)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$128>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 44)&-1;
 $136 = (($127) + (($135*44)|0)|0);
 $88 = $105;
 $137 = $88;
 $138 = HEAP32[$137>>2]|0;
 $87 = $138;
 $139 = $87;
 $93 = $105;
 $140 = $93;
 $92 = $140;
 $141 = $92;
 $91 = $141;
 $142 = $91;
 $143 = ((($142)) + 8|0);
 $90 = $143;
 $144 = $90;
 $89 = $144;
 $145 = $89;
 $146 = HEAP32[$145>>2]|0;
 $147 = HEAP32[$141>>2]|0;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($150|0) / 44)&-1;
 $152 = (($139) + (($151*44)|0)|0);
 $94 = $105;
 $95 = $108;
 $96 = $124;
 $97 = $136;
 $98 = $152;
 $4 = $104;
 $153 = $4;
 $154 = ((($153)) + 8|0);
 $3 = $154;
 $155 = $3;
 $2 = $155;
 $156 = $2;
 $157 = HEAP32[$104>>2]|0;
 $158 = ((($104)) + 4|0);
 $159 = HEAP32[$158>>2]|0;
 $160 = $103;
 $161 = ((($160)) + 4|0);
 $22 = $156;
 $23 = $157;
 $24 = $159;
 $25 = $161;
 while(1) {
  $162 = $24;
  $163 = $23;
  $164 = ($162|0)!=($163|0);
  if (!($164)) {
   break;
  }
  $165 = $22;
  $166 = $25;
  $167 = HEAP32[$166>>2]|0;
  $168 = ((($167)) + -44|0);
  $21 = $168;
  $169 = $21;
  $170 = $24;
  $171 = ((($170)) + -44|0);
  $24 = $171;
  $6 = $171;
  $172 = $6;
  $5 = $172;
  $173 = $5;
  $17 = $165;
  $18 = $169;
  $19 = $173;
  $174 = $17;
  $175 = $18;
  $176 = $19;
  $16 = $176;
  $177 = $16;
  ;HEAP8[$15>>0]=HEAP8[$20>>0]|0;
  $12 = $174;
  $13 = $175;
  $14 = $177;
  $178 = $12;
  $179 = $13;
  $180 = $14;
  $11 = $180;
  $181 = $11;
  $8 = $178;
  $9 = $179;
  $10 = $181;
  $182 = $9;
  $183 = $10;
  $7 = $183;
  $184 = $7;
  __ZN7lazperf6models10arithmeticC2ERKS1_($182,$184);
  $185 = $25;
  $186 = HEAP32[$185>>2]|0;
  $187 = ((($186)) + -44|0);
  HEAP32[$185>>2] = $187;
 }
 $188 = $103;
 $189 = ((($188)) + 4|0);
 $29 = $104;
 $30 = $189;
 $190 = $29;
 $28 = $190;
 $191 = $28;
 $192 = HEAP32[$191>>2]|0;
 HEAP32[$31>>2] = $192;
 $193 = $30;
 $26 = $193;
 $194 = $26;
 $195 = HEAP32[$194>>2]|0;
 $196 = $29;
 HEAP32[$196>>2] = $195;
 $27 = $31;
 $197 = $27;
 $198 = HEAP32[$197>>2]|0;
 $199 = $30;
 HEAP32[$199>>2] = $198;
 $200 = ((($104)) + 4|0);
 $201 = $103;
 $202 = ((($201)) + 8|0);
 $35 = $200;
 $36 = $202;
 $203 = $35;
 $34 = $203;
 $204 = $34;
 $205 = HEAP32[$204>>2]|0;
 HEAP32[$37>>2] = $205;
 $206 = $36;
 $32 = $206;
 $207 = $32;
 $208 = HEAP32[$207>>2]|0;
 $209 = $35;
 HEAP32[$209>>2] = $208;
 $33 = $37;
 $210 = $33;
 $211 = HEAP32[$210>>2]|0;
 $212 = $36;
 HEAP32[$212>>2] = $211;
 $40 = $104;
 $213 = $40;
 $214 = ((($213)) + 8|0);
 $39 = $214;
 $215 = $39;
 $38 = $215;
 $216 = $38;
 $217 = $103;
 $43 = $217;
 $218 = $43;
 $219 = ((($218)) + 12|0);
 $42 = $219;
 $220 = $42;
 $41 = $220;
 $221 = $41;
 $47 = $216;
 $48 = $221;
 $222 = $47;
 $46 = $222;
 $223 = $46;
 $224 = HEAP32[$223>>2]|0;
 HEAP32[$49>>2] = $224;
 $225 = $48;
 $44 = $225;
 $226 = $44;
 $227 = HEAP32[$226>>2]|0;
 $228 = $47;
 HEAP32[$228>>2] = $227;
 $45 = $49;
 $229 = $45;
 $230 = HEAP32[$229>>2]|0;
 $231 = $48;
 HEAP32[$231>>2] = $230;
 $232 = $103;
 $233 = ((($232)) + 4|0);
 $234 = HEAP32[$233>>2]|0;
 $235 = $103;
 HEAP32[$235>>2] = $234;
 $50 = $104;
 $236 = $50;
 $237 = ((($236)) + 4|0);
 $238 = HEAP32[$237>>2]|0;
 $239 = HEAP32[$236>>2]|0;
 $240 = $238;
 $241 = $239;
 $242 = (($240) - ($241))|0;
 $243 = (($242|0) / 44)&-1;
 $74 = $104;
 $75 = $243;
 $244 = $74;
 $73 = $244;
 $245 = $73;
 $246 = HEAP32[$245>>2]|0;
 $72 = $246;
 $247 = $72;
 $52 = $244;
 $248 = $52;
 $249 = HEAP32[$248>>2]|0;
 $51 = $249;
 $250 = $51;
 $57 = $244;
 $251 = $57;
 $56 = $251;
 $252 = $56;
 $55 = $252;
 $253 = $55;
 $254 = ((($253)) + 8|0);
 $54 = $254;
 $255 = $54;
 $53 = $255;
 $256 = $53;
 $257 = HEAP32[$256>>2]|0;
 $258 = HEAP32[$252>>2]|0;
 $259 = $257;
 $260 = $258;
 $261 = (($259) - ($260))|0;
 $262 = (($261|0) / 44)&-1;
 $263 = (($250) + (($262*44)|0)|0);
 $59 = $244;
 $264 = $59;
 $265 = HEAP32[$264>>2]|0;
 $58 = $265;
 $266 = $58;
 $64 = $244;
 $267 = $64;
 $63 = $267;
 $268 = $63;
 $62 = $268;
 $269 = $62;
 $270 = ((($269)) + 8|0);
 $61 = $270;
 $271 = $61;
 $60 = $271;
 $272 = $60;
 $273 = HEAP32[$272>>2]|0;
 $274 = HEAP32[$268>>2]|0;
 $275 = $273;
 $276 = $274;
 $277 = (($275) - ($276))|0;
 $278 = (($277|0) / 44)&-1;
 $279 = (($266) + (($278*44)|0)|0);
 $66 = $244;
 $280 = $66;
 $281 = HEAP32[$280>>2]|0;
 $65 = $281;
 $282 = $65;
 $283 = $75;
 $284 = (($282) + (($283*44)|0)|0);
 $67 = $244;
 $68 = $247;
 $69 = $263;
 $70 = $279;
 $71 = $284;
 $76 = $104;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN7lazperf6models10arithmeticERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -44|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
  $65 = $21;
  __ZN7lazperf6models10arithmeticD2Ev($65);
 }
 $66 = HEAP32[$40>>2]|0;
 $67 = ($66|0)!=(0|0);
 if (!($67)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $68 = $19;
 $69 = ((($68)) + 12|0);
 $18 = $69;
 $70 = $18;
 $71 = ((($70)) + 4|0);
 $17 = $71;
 $72 = $17;
 $73 = HEAP32[$72>>2]|0;
 $74 = HEAP32[$40>>2]|0;
 $16 = $40;
 $75 = $16;
 $15 = $75;
 $76 = $15;
 $77 = ((($76)) + 12|0);
 $14 = $77;
 $78 = $14;
 $13 = $78;
 $79 = $13;
 $80 = HEAP32[$79>>2]|0;
 $81 = HEAP32[$75>>2]|0;
 $82 = $80;
 $83 = $81;
 $84 = (($82) - ($83))|0;
 $85 = (($84|0) / 44)&-1;
 $10 = $73;
 $11 = $74;
 $12 = $85;
 $86 = $10;
 $87 = $11;
 $88 = $12;
 $7 = $86;
 $8 = $87;
 $9 = $88;
 $89 = $8;
 $90 = $9;
 $91 = ($90*44)|0;
 $4 = $89;
 $5 = $91;
 $6 = 4;
 $92 = $4;
 $93 = $5;
 $94 = $6;
 $1 = $92;
 $2 = $93;
 $3 = $94;
 $95 = $1;
 $96 = $2;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($95,$96);
 STACKTOP = sp;return;
}
function __ZN7lazperf6models10arithmeticC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $32 = $0;
 $33 = $1;
 $35 = $32;
 $36 = $33;
 $37 = HEAP32[$36>>2]|0;
 HEAP32[$35>>2] = $37;
 $38 = ((($35)) + 4|0);
 $39 = $33;
 $40 = ((($39)) + 4|0);
 $41 = HEAP8[$40>>0]|0;
 $42 = $41&1;
 $43 = $42&1;
 HEAP8[$38>>0] = $43;
 $44 = ((($35)) + 20|0);
 $45 = $33;
 $46 = ((($45)) + 20|0);
 $47 = HEAP32[$46>>2]|0;
 HEAP32[$44>>2] = $47;
 $48 = ((($35)) + 24|0);
 $49 = $33;
 $50 = ((($49)) + 24|0);
 $51 = HEAP32[$50>>2]|0;
 HEAP32[$48>>2] = $51;
 $52 = ((($35)) + 28|0);
 $53 = $33;
 $54 = ((($53)) + 28|0);
 $55 = HEAP32[$54>>2]|0;
 HEAP32[$52>>2] = $55;
 $56 = ((($35)) + 32|0);
 $57 = $33;
 $58 = ((($57)) + 32|0);
 $59 = HEAP32[$58>>2]|0;
 HEAP32[$56>>2] = $59;
 $60 = ((($35)) + 36|0);
 $61 = $33;
 $62 = ((($61)) + 36|0);
 $63 = HEAP32[$62>>2]|0;
 HEAP32[$60>>2] = $63;
 $64 = ((($35)) + 40|0);
 $65 = $33;
 $66 = ((($65)) + 40|0);
 $67 = HEAP32[$66>>2]|0;
 HEAP32[$64>>2] = $67;
 $68 = HEAP32[$35>>2]|0;
 $69 = $68<<2;
 $34 = $69;
 $70 = $34;
 $71 = (__ZN7lazperf5utils14aligned_mallocEi($70)|0);
 $72 = ((($35)) + 8|0);
 HEAP32[$72>>2] = $71;
 $73 = $33;
 $74 = ((($73)) + 8|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = $33;
 $77 = ((($76)) + 8|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = HEAP32[$35>>2]|0;
 $80 = (($78) + ($79<<2)|0);
 $81 = ((($35)) + 8|0);
 $82 = HEAP32[$81>>2]|0;
 $29 = $75;
 $30 = $80;
 $31 = $82;
 $83 = $29;
 $28 = $83;
 $84 = $28;
 $85 = $30;
 $22 = $85;
 $86 = $22;
 $87 = $31;
 $23 = $87;
 $88 = $23;
 $24 = $84;
 $25 = $86;
 $26 = $88;
 $89 = $25;
 $90 = $24;
 $91 = $89;
 $92 = $90;
 $93 = (($91) - ($92))|0;
 $94 = (($93|0) / 4)&-1;
 $27 = $94;
 $95 = $27;
 $96 = ($95>>>0)>(0);
 if ($96) {
  $97 = $26;
  $98 = $24;
  $99 = $27;
  $100 = $99<<2;
  _memmove(($97|0),($98|0),($100|0))|0;
 }
 $101 = $34;
 $102 = (__ZN7lazperf5utils14aligned_mallocEi($101)|0);
 $103 = ((($35)) + 12|0);
 HEAP32[$103>>2] = $102;
 $104 = $33;
 $105 = ((($104)) + 12|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $33;
 $108 = ((($107)) + 12|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = HEAP32[$35>>2]|0;
 $111 = (($109) + ($110<<2)|0);
 $112 = ((($35)) + 12|0);
 $113 = HEAP32[$112>>2]|0;
 $9 = $106;
 $10 = $111;
 $11 = $113;
 $114 = $9;
 $8 = $114;
 $115 = $8;
 $116 = $10;
 $2 = $116;
 $117 = $2;
 $118 = $11;
 $3 = $118;
 $119 = $3;
 $4 = $115;
 $5 = $117;
 $6 = $119;
 $120 = $5;
 $121 = $4;
 $122 = $120;
 $123 = $121;
 $124 = (($122) - ($123))|0;
 $125 = (($124|0) / 4)&-1;
 $7 = $125;
 $126 = $7;
 $127 = ($126>>>0)>(0);
 if ($127) {
  $128 = $6;
  $129 = $4;
  $130 = $7;
  $131 = $130<<2;
  _memmove(($128|0),($129|0),($131|0))|0;
 }
 $132 = ((($35)) + 36|0);
 $133 = HEAP32[$132>>2]|0;
 $134 = ($133|0)!=(0);
 if (!($134)) {
  $172 = ((($35)) + 16|0);
  HEAP32[$172>>2] = 0;
  STACKTOP = sp;return;
 }
 $135 = ((($35)) + 36|0);
 $136 = HEAP32[$135>>2]|0;
 $137 = (($136) + 2)|0;
 $138 = $137<<2;
 $34 = $138;
 $139 = $34;
 $140 = (__ZN7lazperf5utils14aligned_mallocEi($139)|0);
 $141 = ((($35)) + 16|0);
 HEAP32[$141>>2] = $140;
 $142 = $33;
 $143 = ((($142)) + 16|0);
 $144 = HEAP32[$143>>2]|0;
 $145 = $33;
 $146 = ((($145)) + 16|0);
 $147 = HEAP32[$146>>2]|0;
 $148 = ((($35)) + 36|0);
 $149 = HEAP32[$148>>2]|0;
 $150 = (($149) + 2)|0;
 $151 = (($147) + ($150<<2)|0);
 $152 = ((($35)) + 16|0);
 $153 = HEAP32[$152>>2]|0;
 $19 = $144;
 $20 = $151;
 $21 = $153;
 $154 = $19;
 $18 = $154;
 $155 = $18;
 $156 = $20;
 $12 = $156;
 $157 = $12;
 $158 = $21;
 $13 = $158;
 $159 = $13;
 $14 = $155;
 $15 = $157;
 $16 = $159;
 $160 = $15;
 $161 = $14;
 $162 = $160;
 $163 = $161;
 $164 = (($162) - ($163))|0;
 $165 = (($164|0) / 4)&-1;
 $17 = $165;
 $166 = $17;
 $167 = ($166>>>0)>(0);
 if ($167) {
  $168 = $16;
  $169 = $14;
  $170 = $17;
  $171 = $170<<2;
  _memmove(($168|0),($169|0),($171|0))|0;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils14aligned_mallocEi($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (($4) + 64)|0;
 $6 = (($5) + 4)|0;
 $7 = (_malloc($6)|0);
 $2 = $7;
 $8 = $2;
 $9 = $8;
 $10 = (($9) + 64)|0;
 $11 = (($10) + 4)|0;
 $12 = $11 & -64;
 $13 = $12;
 $3 = $13;
 $14 = $2;
 $15 = $3;
 $16 = ((($15)) + -4|0);
 HEAP32[$16>>2] = $14;
 $17 = $3;
 STACKTOP = sp;return ($17|0);
}
function __ZN7lazperf6models14arithmetic_bitC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 HEAP32[$3>>2] = 1;
 $4 = ((($2)) + 16|0);
 HEAP32[$4>>2] = 2;
 $5 = ((($2)) + 8|0);
 HEAP32[$5>>2] = 4096;
 $6 = ((($2)) + 4|0);
 HEAP32[$6>>2] = 4;
 HEAP32[$2>>2] = 4;
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = -1;
 $4 = ((($2)) + 8|0);
 HEAP8[$4>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__28functionIFvPhmEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $4;
 $7 = $5;
 $2 = $6;
 $3 = $7;
 $8 = $2;
 $9 = $3;
 ;HEAP32[$8>>2]=HEAP32[$9>>2]|0;HEAP32[$8+4>>2]=HEAP32[$9+4>>2]|0;
 $10 = ((($8)) + 8|0);
 $11 = $3;
 $12 = ((($11)) + 8|0);
 ;HEAP32[$10>>2]=HEAP32[$12>>2]|0;
 $13 = ((($8)) + 12|0);
 $14 = $3;
 $15 = ((($14)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$13>>2] = $16;
 $17 = ((($8)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)!=(0|0);
 if (!($20)) {
  STACKTOP = sp;return;
 }
 $21 = ((($8)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = HEAP32[$22>>2]|0;
 $24 = $3;
 $25 = HEAP32[$24>>2]|0;
 $26 = (FUNCTION_TABLE_ii[$23 & 1023]($25)|0);
 HEAP32[$8>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE8__appendEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $8 = sp;
 $11 = sp + 140|0;
 $19 = sp + 76|0;
 $22 = sp + 64|0;
 $33 = sp + 4|0;
 $30 = $0;
 $31 = $1;
 $34 = $30;
 $29 = $34;
 $35 = $29;
 $36 = ((($35)) + 8|0);
 $28 = $36;
 $37 = $28;
 $27 = $37;
 $38 = $27;
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($34)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = $39;
 $43 = $41;
 $44 = (($42) - ($43))|0;
 $45 = (($44|0) / 16)&-1;
 $46 = $31;
 $47 = ($45>>>0)>=($46>>>0);
 if ($47) {
  $48 = $31;
  __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE18__construct_at_endEm($34,$48);
  STACKTOP = sp;return;
 }
 $26 = $34;
 $49 = $26;
 $50 = ((($49)) + 8|0);
 $25 = $50;
 $51 = $25;
 $24 = $51;
 $52 = $24;
 $32 = $52;
 $23 = $34;
 $53 = $23;
 $54 = ((($53)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAP32[$53>>2]|0;
 $57 = $55;
 $58 = $56;
 $59 = (($57) - ($58))|0;
 $60 = (($59|0) / 16)&-1;
 $61 = $31;
 $62 = (($60) + ($61))|0;
 $18 = $34;
 HEAP32[$19>>2] = $62;
 $63 = $18;
 $64 = (__ZNKSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE8max_sizeEv($63)|0);
 $20 = $64;
 $65 = HEAP32[$19>>2]|0;
 $66 = $20;
 $67 = ($65>>>0)>($66>>>0);
 if ($67) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($63);
  // unreachable;
 }
 $16 = $63;
 $68 = $16;
 $15 = $68;
 $69 = $15;
 $14 = $69;
 $70 = $14;
 $71 = ((($70)) + 8|0);
 $13 = $71;
 $72 = $13;
 $12 = $72;
 $73 = $12;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 16)&-1;
 $21 = $79;
 $80 = $21;
 $81 = $20;
 $82 = (($81>>>0) / 2)&-1;
 $83 = ($80>>>0)>=($82>>>0);
 if ($83) {
  $84 = $20;
  $17 = $84;
 } else {
  $85 = $21;
  $86 = $85<<1;
  HEAP32[$22>>2] = $86;
  $9 = $22;
  $10 = $19;
  $87 = $9;
  $88 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $87;
  $7 = $88;
  $89 = $6;
  $90 = $7;
  $3 = $8;
  $4 = $89;
  $5 = $90;
  $91 = $4;
  $92 = HEAP32[$91>>2]|0;
  $93 = $5;
  $94 = HEAP32[$93>>2]|0;
  $95 = ($92>>>0)<($94>>>0);
  $96 = $7;
  $97 = $6;
  $98 = $95 ? $96 : $97;
  $99 = HEAP32[$98>>2]|0;
  $17 = $99;
 }
 $100 = $17;
 $2 = $34;
 $101 = $2;
 $102 = ((($101)) + 4|0);
 $103 = HEAP32[$102>>2]|0;
 $104 = HEAP32[$101>>2]|0;
 $105 = $103;
 $106 = $104;
 $107 = (($105) - ($106))|0;
 $108 = (($107|0) / 16)&-1;
 $109 = $32;
 __ZNSt3__214__split_bufferIN7lazperf5chunkERNS_9allocatorIS2_EEEC2EmmS5_($33,$100,$108,$109);
 $110 = $31;
 __ZNSt3__214__split_bufferIN7lazperf5chunkERNS_9allocatorIS2_EEE18__construct_at_endEm($33,$110);
 __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($34,$33);
 __ZNSt3__214__split_bufferIN7lazperf5chunkERNS_9allocatorIS2_EEED2Ev($33);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $10 = sp;
 $13 = sp + 73|0;
 $21 = sp + 72|0;
 $18 = $0;
 $19 = $1;
 $22 = $18;
 $17 = $22;
 $23 = $17;
 $24 = ((($23)) + 8|0);
 $16 = $24;
 $25 = $16;
 $15 = $25;
 $26 = $15;
 $20 = $26;
 while(1) {
  $2 = $21;
  $3 = $22;
  $4 = 1;
  $27 = $20;
  $28 = ((($22)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  $5 = $29;
  $30 = $5;
  $11 = $27;
  $12 = $30;
  $31 = $11;
  $32 = $12;
  ;HEAP8[$10>>0]=HEAP8[$13>>0]|0;
  $8 = $31;
  $9 = $32;
  $33 = $8;
  $34 = $9;
  $6 = $33;
  $7 = $34;
  $35 = $7;
  ;HEAP32[$35>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;HEAP32[$35+12>>2]=0|0;
  $36 = ((($22)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($37)) + 16|0);
  HEAP32[$36>>2] = $38;
  $39 = $19;
  $40 = (($39) + -1)|0;
  $19 = $40;
  $14 = $21;
  $41 = $19;
  $42 = ($41>>>0)>(0);
  if (!($42)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = 268435455;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__214__split_bufferIN7lazperf5chunkERNS_9allocatorIS2_EEEC2EmmS5_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $36 = sp;
 $32 = $0;
 $33 = $1;
 $34 = $2;
 $35 = $3;
 $37 = $32;
 $38 = ((($37)) + 12|0);
 HEAP32[$36>>2] = 0;
 $39 = $35;
 $29 = $38;
 $30 = $36;
 $31 = $39;
 $40 = $29;
 $41 = $30;
 $28 = $41;
 $42 = $28;
 $22 = $40;
 $23 = $42;
 $43 = $22;
 $44 = $23;
 $21 = $44;
 HEAP32[$43>>2] = 0;
 $45 = ((($40)) + 4|0);
 $46 = $31;
 $24 = $46;
 $47 = $24;
 $26 = $45;
 $27 = $47;
 $48 = $26;
 $49 = $27;
 $25 = $49;
 $50 = $25;
 HEAP32[$48>>2] = $50;
 $51 = $33;
 $52 = ($51|0)!=(0);
 do {
  if ($52) {
   $6 = $37;
   $53 = $6;
   $54 = ((($53)) + 12|0);
   $5 = $54;
   $55 = $5;
   $56 = ((($55)) + 4|0);
   $4 = $56;
   $57 = $4;
   $58 = HEAP32[$57>>2]|0;
   $59 = $33;
   $16 = $58;
   $17 = $59;
   $60 = $16;
   $61 = $17;
   $13 = $60;
   $14 = $61;
   $15 = 0;
   $62 = $13;
   $63 = $14;
   $12 = $62;
   $64 = ($63>>>0)>(268435455);
   if ($64) {
    $9 = 21003;
    $65 = (___cxa_allocate_exception(8)|0);
    $66 = $9;
    $7 = $65;
    $8 = $66;
    $67 = $7;
    $68 = $8;
    __ZNSt11logic_errorC2EPKc($67,$68);
    HEAP32[$67>>2] = (17588);
    ___cxa_throw(($65|0),(9800|0),(617|0));
    // unreachable;
   } else {
    $69 = $14;
    $70 = $69<<4;
    $10 = $70;
    $11 = 8;
    $71 = $10;
    $72 = (__Znwm($71)|0);
    $73 = $72;
    break;
   }
  } else {
   $73 = 0;
  }
 } while(0);
 HEAP32[$37>>2] = $73;
 $74 = HEAP32[$37>>2]|0;
 $75 = $34;
 $76 = (($74) + ($75<<4)|0);
 $77 = ((($37)) + 8|0);
 HEAP32[$77>>2] = $76;
 $78 = ((($37)) + 4|0);
 HEAP32[$78>>2] = $76;
 $79 = HEAP32[$37>>2]|0;
 $80 = $33;
 $81 = (($79) + ($80<<4)|0);
 $20 = $37;
 $82 = $20;
 $83 = ((($82)) + 12|0);
 $19 = $83;
 $84 = $19;
 $18 = $84;
 $85 = $18;
 HEAP32[$85>>2] = $81;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN7lazperf5chunkERNS_9allocatorIS2_EEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp;
 $10 = sp + 56|0;
 $14 = $0;
 $15 = $1;
 $17 = $14;
 $13 = $17;
 $18 = $13;
 $19 = ((($18)) + 12|0);
 $12 = $19;
 $20 = $12;
 $21 = ((($20)) + 4|0);
 $11 = $21;
 $22 = $11;
 $23 = HEAP32[$22>>2]|0;
 $16 = $23;
 while(1) {
  $24 = $16;
  $25 = ((($17)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $2 = $26;
  $27 = $2;
  $8 = $24;
  $9 = $27;
  $28 = $8;
  $29 = $9;
  ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
  $5 = $28;
  $6 = $29;
  $30 = $5;
  $31 = $6;
  $3 = $30;
  $4 = $31;
  $32 = $4;
  ;HEAP32[$32>>2]=0|0;HEAP32[$32+4>>2]=0|0;HEAP32[$32+8>>2]=0|0;HEAP32[$32+12>>2]=0|0;
  $33 = ((($17)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 16|0);
  HEAP32[$33>>2] = $35;
  $36 = $15;
  $37 = (($36) + -1)|0;
  $15 = $37;
  $38 = $15;
  $39 = ($38>>>0)>(0);
  if (!($39)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf5chunkENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($106|0) / 16)&-1;
 $108 = (($95) + ($107<<4)|0);
 $69 = $89;
 $109 = $69;
 $110 = HEAP32[$109>>2]|0;
 $68 = $110;
 $111 = $68;
 $70 = $89;
 $112 = $70;
 $113 = ((($112)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$112>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 16)&-1;
 $120 = (($111) + ($119<<4)|0);
 $72 = $89;
 $121 = $72;
 $122 = HEAP32[$121>>2]|0;
 $71 = $122;
 $123 = $71;
 $77 = $89;
 $124 = $77;
 $76 = $124;
 $125 = $76;
 $75 = $125;
 $126 = $75;
 $127 = ((($126)) + 8|0);
 $74 = $127;
 $128 = $74;
 $73 = $128;
 $129 = $73;
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$125>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 16)&-1;
 $136 = (($123) + ($135<<4)|0);
 $78 = $89;
 $79 = $92;
 $80 = $108;
 $81 = $120;
 $82 = $136;
 $4 = $88;
 $137 = $4;
 $138 = ((($137)) + 8|0);
 $3 = $138;
 $139 = $3;
 $2 = $139;
 $140 = $2;
 $141 = HEAP32[$88>>2]|0;
 $142 = ((($88)) + 4|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = $87;
 $145 = ((($144)) + 4|0);
 $5 = $140;
 $6 = $141;
 $7 = $143;
 $8 = $145;
 $146 = $7;
 $147 = $6;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($150|0) / 16)&-1;
 $9 = $151;
 $152 = $9;
 $153 = $8;
 $154 = HEAP32[$153>>2]|0;
 $155 = (0 - ($152))|0;
 $156 = (($154) + ($155<<4)|0);
 HEAP32[$153>>2] = $156;
 $157 = $9;
 $158 = ($157|0)>(0);
 if ($158) {
  $159 = $8;
  $160 = HEAP32[$159>>2]|0;
  $161 = $6;
  $162 = $9;
  $163 = $162<<4;
  _memcpy(($160|0),($161|0),($163|0))|0;
 }
 $164 = $87;
 $165 = ((($164)) + 4|0);
 $13 = $88;
 $14 = $165;
 $166 = $13;
 $12 = $166;
 $167 = $12;
 $168 = HEAP32[$167>>2]|0;
 HEAP32[$15>>2] = $168;
 $169 = $14;
 $10 = $169;
 $170 = $10;
 $171 = HEAP32[$170>>2]|0;
 $172 = $13;
 HEAP32[$172>>2] = $171;
 $11 = $15;
 $173 = $11;
 $174 = HEAP32[$173>>2]|0;
 $175 = $14;
 HEAP32[$175>>2] = $174;
 $176 = ((($88)) + 4|0);
 $177 = $87;
 $178 = ((($177)) + 8|0);
 $19 = $176;
 $20 = $178;
 $179 = $19;
 $18 = $179;
 $180 = $18;
 $181 = HEAP32[$180>>2]|0;
 HEAP32[$21>>2] = $181;
 $182 = $20;
 $16 = $182;
 $183 = $16;
 $184 = HEAP32[$183>>2]|0;
 $185 = $19;
 HEAP32[$185>>2] = $184;
 $17 = $21;
 $186 = $17;
 $187 = HEAP32[$186>>2]|0;
 $188 = $20;
 HEAP32[$188>>2] = $187;
 $24 = $88;
 $189 = $24;
 $190 = ((($189)) + 8|0);
 $23 = $190;
 $191 = $23;
 $22 = $191;
 $192 = $22;
 $193 = $87;
 $27 = $193;
 $194 = $27;
 $195 = ((($194)) + 12|0);
 $26 = $195;
 $196 = $26;
 $25 = $196;
 $197 = $25;
 $31 = $192;
 $32 = $197;
 $198 = $31;
 $30 = $198;
 $199 = $30;
 $200 = HEAP32[$199>>2]|0;
 HEAP32[$33>>2] = $200;
 $201 = $32;
 $28 = $201;
 $202 = $28;
 $203 = HEAP32[$202>>2]|0;
 $204 = $31;
 HEAP32[$204>>2] = $203;
 $29 = $33;
 $205 = $29;
 $206 = HEAP32[$205>>2]|0;
 $207 = $32;
 HEAP32[$207>>2] = $206;
 $208 = $87;
 $209 = ((($208)) + 4|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = $87;
 HEAP32[$211>>2] = $210;
 $34 = $88;
 $212 = $34;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = HEAP32[$212>>2]|0;
 $216 = $214;
 $217 = $215;
 $218 = (($216) - ($217))|0;
 $219 = (($218|0) / 16)&-1;
 $58 = $88;
 $59 = $219;
 $220 = $58;
 $57 = $220;
 $221 = $57;
 $222 = HEAP32[$221>>2]|0;
 $56 = $222;
 $223 = $56;
 $36 = $220;
 $224 = $36;
 $225 = HEAP32[$224>>2]|0;
 $35 = $225;
 $226 = $35;
 $41 = $220;
 $227 = $41;
 $40 = $227;
 $228 = $40;
 $39 = $228;
 $229 = $39;
 $230 = ((($229)) + 8|0);
 $38 = $230;
 $231 = $38;
 $37 = $231;
 $232 = $37;
 $233 = HEAP32[$232>>2]|0;
 $234 = HEAP32[$228>>2]|0;
 $235 = $233;
 $236 = $234;
 $237 = (($235) - ($236))|0;
 $238 = (($237|0) / 16)&-1;
 $239 = (($226) + ($238<<4)|0);
 $43 = $220;
 $240 = $43;
 $241 = HEAP32[$240>>2]|0;
 $42 = $241;
 $242 = $42;
 $48 = $220;
 $243 = $48;
 $47 = $243;
 $244 = $47;
 $46 = $244;
 $245 = $46;
 $246 = ((($245)) + 8|0);
 $45 = $246;
 $247 = $45;
 $44 = $247;
 $248 = $44;
 $249 = HEAP32[$248>>2]|0;
 $250 = HEAP32[$244>>2]|0;
 $251 = $249;
 $252 = $250;
 $253 = (($251) - ($252))|0;
 $254 = (($253|0) / 16)&-1;
 $255 = (($242) + ($254<<4)|0);
 $50 = $220;
 $256 = $50;
 $257 = HEAP32[$256>>2]|0;
 $49 = $257;
 $258 = $49;
 $259 = $59;
 $260 = (($258) + ($259<<4)|0);
 $51 = $220;
 $52 = $223;
 $53 = $239;
 $54 = $255;
 $55 = $260;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN7lazperf5chunkERNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -16|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
 }
 $65 = HEAP32[$40>>2]|0;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $67 = $19;
 $68 = ((($67)) + 12|0);
 $18 = $68;
 $69 = $18;
 $70 = ((($69)) + 4|0);
 $17 = $70;
 $71 = $17;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$40>>2]|0;
 $4 = $40;
 $74 = $4;
 $3 = $74;
 $75 = $3;
 $76 = ((($75)) + 12|0);
 $2 = $76;
 $77 = $2;
 $1 = $77;
 $78 = $1;
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$74>>2]|0;
 $81 = $79;
 $82 = $80;
 $83 = (($81) - ($82))|0;
 $84 = (($83|0) / 16)&-1;
 $14 = $72;
 $15 = $73;
 $16 = $84;
 $85 = $14;
 $86 = $15;
 $87 = $16;
 $11 = $85;
 $12 = $86;
 $13 = $87;
 $88 = $12;
 $89 = $13;
 $90 = $89<<4;
 $8 = $88;
 $9 = $90;
 $10 = 8;
 $91 = $8;
 $92 = $9;
 $93 = $10;
 $5 = $91;
 $6 = $92;
 $7 = $93;
 $94 = $5;
 $95 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($94,$95);
 STACKTOP = sp;return;
}
function __ZN7lazperf10vlr_headerD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
 $4 = ((($2)) + 4|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 STACKTOP = sp;return;
}
function __ZN7lazperf5errorD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf5errorD2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE6assignERcRKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = HEAP8[$4>>0]|0;
 $6 = $2;
 HEAP8[$6>>0] = $5;
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_file7Private9readPointEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $7 = sp + 156|0;
 $13 = sp + 132|0;
 $21 = sp + 96|0;
 $35 = sp + 24|0;
 $36 = sp + 16|0;
 $37 = sp;
 $33 = $0;
 $34 = $1;
 $38 = $33;
 $39 = ((($38)) + 400|0);
 $40 = HEAP8[$39>>0]|0;
 $41 = $40&1;
 if (!($41)) {
  $42 = ((($38)) + 4|0);
  $32 = $42;
  $43 = $32;
  $31 = $43;
  $44 = $31;
  $30 = $44;
  $45 = $30;
  $46 = HEAP32[$45>>2]|0;
  __ZN7lazperf12InFileStream2cbEv($35,$46);
  $47 = $34;
  $48 = ((($38)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ((($49)) + 106|0);
  $51 = HEAP16[$50>>1]|0;
  $52 = $51&65535;
  __ZNKSt3__28functionIFvPhmEEclES1_m($35,$47,$52);
  __ZNSt3__28functionIFvPhmEED2Ev($35);
  STACKTOP = sp;return;
 }
 $53 = ((($38)) + 404|0);
 $29 = $53;
 $54 = $29;
 $28 = $54;
 $55 = $28;
 $56 = HEAP32[$55>>2]|0;
 $57 = ($56|0)!=(0|0);
 if ($57) {
  $58 = ((($38)) + 476|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = ((($38)) + 472|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = $61;
  $63 = $62;
  $64 = HEAP32[$63>>2]|0;
  $65 = (($62) + 4)|0;
  $66 = $65;
  $67 = HEAP32[$66>>2]|0;
  $68 = ($59|0)==($64|0);
  $69 = (0)==($67|0);
  $70 = $68 & $69;
  if ($70) {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $71 = ((($38)) + 4|0);
  $26 = $71;
  $72 = $26;
  $25 = $72;
  $73 = $25;
  $24 = $73;
  $74 = $24;
  $75 = HEAP32[$74>>2]|0;
  __ZN7lazperf12InFileStream2cbEv($37,$75);
  $76 = ((($38)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ((($77)) + 104|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = $79&255;
  $81 = ((($38)) + 8|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (__ZNK7lazperf11base_header7ebCountEv($82)|0);
  __ZN7lazperf22build_las_decompressorENSt3__28functionIFvPhmEEEim($36,$37,$80,$83);
  $84 = ((($38)) + 404|0);
  $19 = $84;
  $20 = $36;
  $85 = $19;
  $86 = $20;
  $18 = $86;
  $87 = $18;
  $16 = $21;
  $17 = $87;
  $88 = $16;
  $89 = $17;
  $90 = HEAP32[$89>>2]|0;
  HEAP32[$88>>2] = $90;
  $91 = ((($88)) + 4|0);
  $92 = $17;
  $93 = ((($92)) + 4|0);
  $94 = HEAP32[$93>>2]|0;
  HEAP32[$91>>2] = $94;
  $95 = $17;
  HEAP32[$95>>2] = 0;
  $96 = $17;
  $97 = ((($96)) + 4|0);
  HEAP32[$97>>2] = 0;
  $14 = $21;
  $15 = $85;
  $98 = $14;
  $99 = $15;
  $11 = $98;
  $12 = $99;
  $100 = $11;
  $10 = $100;
  $101 = $10;
  $102 = HEAP32[$101>>2]|0;
  HEAP32[$13>>2] = $102;
  $103 = $12;
  $8 = $103;
  $104 = $8;
  $105 = HEAP32[$104>>2]|0;
  $106 = $11;
  HEAP32[$106>>2] = $105;
  $9 = $13;
  $107 = $9;
  $108 = HEAP32[$107>>2]|0;
  $109 = $12;
  HEAP32[$109>>2] = $108;
  $110 = ((($98)) + 4|0);
  $111 = $15;
  $112 = ((($111)) + 4|0);
  $5 = $110;
  $6 = $112;
  $113 = $5;
  $4 = $113;
  $114 = $4;
  $115 = HEAP32[$114>>2]|0;
  HEAP32[$7>>2] = $115;
  $116 = $6;
  $2 = $116;
  $117 = $2;
  $118 = HEAP32[$117>>2]|0;
  $119 = $5;
  HEAP32[$119>>2] = $118;
  $3 = $7;
  $120 = $3;
  $121 = HEAP32[$120>>2]|0;
  $122 = $6;
  HEAP32[$122>>2] = $121;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($21);
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($36);
  __ZNSt3__28functionIFvPhmEED2Ev($37);
  $123 = ((($38)) + 472|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($124|0)==(0|0);
  if ($125) {
   $126 = ((($38)) + 480|0);
   $23 = $126;
   $127 = $23;
   $128 = HEAP32[$127>>2]|0;
   $22 = $128;
   $129 = $22;
   $130 = ((($38)) + 472|0);
   HEAP32[$130>>2] = $129;
  } else {
   $131 = ((($38)) + 472|0);
   $132 = HEAP32[$131>>2]|0;
   $133 = ((($132)) + 16|0);
   HEAP32[$131>>2] = $133;
  }
  $134 = ((($38)) + 476|0);
  HEAP32[$134>>2] = 0;
 }
 $135 = ((($38)) + 404|0);
 $27 = $135;
 $136 = $27;
 $137 = HEAP32[$136>>2]|0;
 $138 = HEAP32[$137>>2]|0;
 $139 = HEAP32[$138>>2]|0;
 $140 = $34;
 (FUNCTION_TABLE_iii[$139 & 1023]($137,$140)|0);
 $141 = ((($38)) + 476|0);
 $142 = HEAP32[$141>>2]|0;
 $143 = (($142) + 1)|0;
 HEAP32[$141>>2] = $143;
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 24|0;
 $7 = $0;
 $8 = $7;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = ((($8)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $6 = $13;
 $14 = $6;
 $5 = $14;
 $15 = $5;
 $16 = ((($15)) + 4|0);
 $1 = $16;
 $17 = $1;
 $2 = -1;
 $18 = $2;
 $19 = HEAP32[$17>>2]|0;
 $20 = (($19) + ($18))|0;
 HEAP32[$17>>2] = $20;
 $21 = (($19) + ($18))|0;
 $3 = $21;
 $22 = $3;
 $23 = ($22|0)==(-1);
 if ($23) {
  $24 = HEAP32[$15>>2]|0;
  $25 = ((($24)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_vi[$26 & 1023]($15);
  $$expand_i1_val = 1;
  HEAP8[$4>>0] = $$expand_i1_val;
 } else {
  $$expand_i1_val2 = 0;
  HEAP8[$4>>0] = $$expand_i1_val2;
 }
 $$pre_trunc = HEAP8[$4>>0]|0;
 $27 = $$pre_trunc&1;
 if (!($27)) {
  STACKTOP = sp;return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($14);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_fileC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 4|0;
 $9 = $0;
 $10 = $9;
 $11 = (__Znwm(496)|0);
 __ZN7lazperf6reader10basic_file7PrivateC2Ev($11);
 $7 = $10;
 HEAP32[$8>>2] = $11;
 $12 = $7;
 $5 = $12;
 $6 = $8;
 $13 = $5;
 $14 = $6;
 $4 = $14;
 $15 = $4;
 $2 = $13;
 $3 = $15;
 $16 = $2;
 $17 = $3;
 $1 = $17;
 $18 = $1;
 $19 = HEAP32[$18>>2]|0;
 HEAP32[$16>>2] = $19;
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_file7PrivateC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $11 = sp + 44|0;
 $21 = sp + 4|0;
 $22 = $0;
 $23 = $22;
 $24 = ((($23)) + 4|0);
 $20 = $24;
 $25 = $20;
 HEAP32[$21>>2] = 0;
 $18 = $25;
 $19 = $21;
 $26 = $18;
 $27 = $19;
 $17 = $27;
 $28 = $17;
 $15 = $26;
 $16 = $28;
 $29 = $15;
 $30 = $16;
 $14 = $30;
 $31 = $14;
 $32 = HEAP32[$31>>2]|0;
 HEAP32[$29>>2] = $32;
 $33 = ((($23)) + 8|0);
 $34 = ((($23)) + 16|0);
 HEAP32[$33>>2] = $34;
 $35 = ((($23)) + 12|0);
 $36 = ((($23)) + 16|0);
 HEAP32[$35>>2] = $36;
 $37 = ((($23)) + 16|0);
 __ZN7lazperf8header14C2Ev($37);
 $38 = ((($23)) + 400|0);
 HEAP8[$38>>0] = 0;
 $39 = ((($23)) + 404|0);
 $13 = $39;
 $40 = $13;
 HEAP32[$40>>2] = 0;
 $41 = ((($40)) + 4|0);
 HEAP32[$41>>2] = 0;
 $42 = ((($23)) + 416|0);
 __ZN7lazperf7laz_vlrC2Ev($42);
 $43 = ((($23)) + 472|0);
 HEAP32[$43>>2] = 0;
 $44 = ((($23)) + 480|0);
 $12 = $44;
 $45 = $12;
 $10 = $45;
 $46 = $10;
 $9 = $46;
 HEAP32[$46>>2] = 0;
 $47 = ((($46)) + 4|0);
 HEAP32[$47>>2] = 0;
 $48 = ((($46)) + 8|0);
 HEAP32[$11>>2] = 0;
 $7 = $48;
 $8 = $11;
 $49 = $7;
 $50 = $8;
 $6 = $50;
 $51 = $6;
 $2 = $49;
 $3 = $51;
 $52 = $2;
 $53 = $3;
 $1 = $53;
 HEAP32[$52>>2] = 0;
 $5 = $49;
 $54 = $5;
 $4 = $54;
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_fileD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 $12 = $14;
 $15 = $12;
 $9 = $15;
 $10 = 0;
 $16 = $9;
 $8 = $16;
 $17 = $8;
 $7 = $17;
 $18 = $7;
 $19 = HEAP32[$18>>2]|0;
 $11 = $19;
 $20 = $10;
 $4 = $16;
 $21 = $4;
 $3 = $21;
 $22 = $3;
 HEAP32[$22>>2] = $20;
 $23 = $11;
 $24 = ($23|0)!=(0|0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $2 = $16;
 $25 = $2;
 $1 = $25;
 $26 = $1;
 $27 = $11;
 $5 = $26;
 $6 = $27;
 $28 = $6;
 $29 = ($28|0)==(0|0);
 if ($29) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf6reader10basic_file7PrivateD2Ev($28);
 __ZdlPv($28);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_file7PrivateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $39 = $0;
 $40 = $39;
 $41 = ((($40)) + 480|0);
 $38 = $41;
 $42 = $38;
 $37 = $42;
 $43 = $37;
 $36 = $43;
 $44 = $36;
 $45 = HEAP32[$44>>2]|0;
 $35 = $45;
 $46 = $35;
 $14 = $43;
 $47 = $14;
 $48 = HEAP32[$47>>2]|0;
 $13 = $48;
 $49 = $13;
 $19 = $43;
 $50 = $19;
 $18 = $50;
 $51 = $18;
 $17 = $51;
 $52 = $17;
 $53 = ((($52)) + 8|0);
 $16 = $53;
 $54 = $16;
 $15 = $54;
 $55 = $15;
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$51>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 $61 = (($60|0) / 16)&-1;
 $62 = (($49) + ($61<<4)|0);
 $21 = $43;
 $63 = $21;
 $64 = HEAP32[$63>>2]|0;
 $20 = $64;
 $65 = $20;
 $22 = $43;
 $66 = $22;
 $67 = ((($66)) + 4|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = HEAP32[$66>>2]|0;
 $70 = $68;
 $71 = $69;
 $72 = (($70) - ($71))|0;
 $73 = (($72|0) / 16)&-1;
 $74 = (($65) + ($73<<4)|0);
 $24 = $43;
 $75 = $24;
 $76 = HEAP32[$75>>2]|0;
 $23 = $76;
 $77 = $23;
 $29 = $43;
 $78 = $29;
 $28 = $78;
 $79 = $28;
 $27 = $79;
 $80 = $27;
 $81 = ((($80)) + 8|0);
 $26 = $81;
 $82 = $26;
 $25 = $82;
 $83 = $25;
 $84 = HEAP32[$83>>2]|0;
 $85 = HEAP32[$79>>2]|0;
 $86 = $84;
 $87 = $85;
 $88 = (($86) - ($87))|0;
 $89 = (($88|0) / 16)&-1;
 $90 = (($77) + ($89<<4)|0);
 $30 = $43;
 $31 = $46;
 $32 = $62;
 $33 = $74;
 $34 = $90;
 __ZNSt3__213__vector_baseIN7lazperf5chunkENS_9allocatorIS2_EEED2Ev($42);
 $91 = ((($40)) + 416|0);
 __ZN7lazperf7laz_vlrD2Ev($91);
 $92 = ((($40)) + 404|0);
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($92);
 $93 = ((($40)) + 4|0);
 $12 = $93;
 $94 = $12;
 $9 = $94;
 $10 = 0;
 $95 = $9;
 $8 = $95;
 $96 = $8;
 $7 = $96;
 $97 = $7;
 $98 = HEAP32[$97>>2]|0;
 $11 = $98;
 $99 = $10;
 $4 = $95;
 $100 = $4;
 $3 = $100;
 $101 = $3;
 HEAP32[$101>>2] = $99;
 $102 = $11;
 $103 = ($102|0)!=(0|0);
 if (!($103)) {
  STACKTOP = sp;return;
 }
 $2 = $95;
 $104 = $2;
 $1 = $104;
 $105 = $1;
 $106 = $11;
 $5 = $105;
 $6 = $106;
 $107 = $6;
 $108 = ($107|0)==(0|0);
 if ($108) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf12InFileStreamD2Ev($107);
 __ZdlPv($107);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIN7lazperf5chunkENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -16|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
 }
 $59 = $33;
 $60 = ((($42)) + 4|0);
 HEAP32[$60>>2] = $59;
 $7 = $37;
 $61 = $7;
 $62 = ((($61)) + 8|0);
 $6 = $62;
 $63 = $6;
 $5 = $63;
 $64 = $5;
 $65 = HEAP32[$37>>2]|0;
 $4 = $37;
 $66 = $4;
 $3 = $66;
 $67 = $3;
 $68 = ((($67)) + 8|0);
 $2 = $68;
 $69 = $2;
 $1 = $69;
 $70 = $1;
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$66>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($75|0) / 16)&-1;
 $17 = $64;
 $18 = $65;
 $19 = $76;
 $77 = $17;
 $78 = $18;
 $79 = $19;
 $14 = $77;
 $15 = $78;
 $16 = $79;
 $80 = $15;
 $81 = $16;
 $82 = $81<<4;
 $11 = $80;
 $12 = $82;
 $13 = 8;
 $83 = $11;
 $84 = $12;
 $85 = $13;
 $8 = $83;
 $9 = $84;
 $10 = $85;
 $86 = $8;
 $87 = $9;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($86,$87);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader10basic_file4openERNSt3__213basic_istreamIcNS2_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $5;
 $4 = $7;
 $8 = $4;
 $3 = $8;
 $9 = $3;
 $2 = $9;
 $10 = $2;
 $11 = HEAP32[$10>>2]|0;
 $12 = $6;
 $13 = (__ZN7lazperf6reader10basic_file7Private4openERNSt3__213basic_istreamIcNS3_11char_traitsIcEEEE($11,$12)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZN7lazperf6reader10basic_file9readPointEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $5;
 $4 = $7;
 $8 = $4;
 $3 = $8;
 $9 = $3;
 $2 = $9;
 $10 = $2;
 $11 = HEAP32[$10>>2]|0;
 $12 = $6;
 __ZN7lazperf6reader10basic_file7Private9readPointEPc($11,$12);
 STACKTOP = sp;return;
}
function __ZNK7lazperf6reader10basic_file6headerEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $4;
 $3 = $5;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 16|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNSt3__213__vector_baseIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -6|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
 }
 $59 = $33;
 $60 = ((($42)) + 4|0);
 HEAP32[$60>>2] = $59;
 $7 = $37;
 $61 = $7;
 $62 = ((($61)) + 8|0);
 $6 = $62;
 $63 = $6;
 $5 = $63;
 $64 = $5;
 $65 = HEAP32[$37>>2]|0;
 $4 = $37;
 $66 = $4;
 $3 = $66;
 $67 = $3;
 $68 = ((($67)) + 8|0);
 $2 = $68;
 $69 = $2;
 $1 = $69;
 $70 = $1;
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$66>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($75|0) / 6)&-1;
 $17 = $64;
 $18 = $65;
 $19 = $76;
 $77 = $17;
 $78 = $18;
 $79 = $19;
 $14 = $77;
 $15 = $78;
 $16 = $79;
 $80 = $15;
 $81 = $16;
 $82 = ($81*6)|0;
 $11 = $80;
 $12 = $82;
 $13 = 2;
 $83 = $11;
 $84 = $12;
 $85 = $13;
 $8 = $83;
 $9 = $84;
 $10 = $85;
 $86 = $8;
 $87 = $9;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($86,$87);
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = 715827882;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZN7lazperf6reader8mem_fileC2EPcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $19 = sp + 24|0;
 $23 = sp;
 $24 = sp + 92|0;
 $20 = $0;
 $21 = $1;
 $22 = $2;
 $25 = $20;
 __ZN7lazperf6reader10basic_fileC2Ev($25);
 $26 = ((($25)) + 4|0);
 $27 = (__Znwm(144)|0);
 $28 = $21;
 $29 = $22;
 __ZN7lazperf6reader8mem_file7PrivateC2EPcm($27,$28,$29);
 $18 = $26;
 HEAP32[$19>>2] = $27;
 $30 = $18;
 $16 = $30;
 $17 = $19;
 $31 = $16;
 $32 = $17;
 $15 = $32;
 $33 = $15;
 $13 = $31;
 $14 = $33;
 $34 = $13;
 $35 = $14;
 $12 = $35;
 $36 = $12;
 $37 = HEAP32[$36>>2]|0;
 HEAP32[$34>>2] = $37;
 $38 = ((($25)) + 4|0);
 $11 = $38;
 $39 = $11;
 $10 = $39;
 $40 = $10;
 $9 = $40;
 $41 = $9;
 $42 = HEAP32[$41>>2]|0;
 $43 = ((($42)) + 56|0);
 $44 = (__ZN7lazperf6reader10basic_file4openERNSt3__213basic_istreamIcNS2_11char_traitsIcEEEE($25,$43)|0);
 if ($44) {
  STACKTOP = sp;return;
 } else {
  $45 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val = 1;
  HEAP8[$24>>0] = $$expand_i1_val;
  $7 = $23;
  $8 = 18790;
  $46 = $7;
  $6 = $46;
  $47 = $6;
  $5 = $47;
  $48 = $5;
  ;HEAP32[$48>>2]=0|0;HEAP32[$48+4>>2]=0|0;HEAP32[$48+8>>2]=0|0;
  $4 = $47;
  $49 = $4;
  $3 = $49;
  $50 = $8;
  $51 = $8;
  $52 = (__ZNSt3__211char_traitsIcE6lengthEPKc($51)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($46,$50,$52);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($45,$23);
  $$expand_i1_val2 = 0;
  HEAP8[$24>>0] = $$expand_i1_val2;
  ___cxa_throw(($45|0),(6056|0),(22|0));
  // unreachable;
 }
}
function __ZN7lazperf6reader8mem_file7PrivateC2EPcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy = sp + 24|0;
 $10 = sp + 16|0;
 $14 = sp;
 $11 = $0;
 $12 = $1;
 $13 = $2;
 $15 = $11;
 $16 = $12;
 $17 = $13;
 $9 = $14;
 $18 = $10;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 $20 = (($18) + 4)|0;
 $21 = $20;
 HEAP32[$21>>2] = 0;
 $22 = $9;
 ;HEAP32[$22>>2]=0|0;HEAP32[$22+4>>2]=0|0;
 $23 = ((($22)) + 8|0);
 $24 = $10;
 $25 = $24;
 $26 = HEAP32[$25>>2]|0;
 $27 = (($24) + 4)|0;
 $28 = $27;
 $29 = HEAP32[$28>>2]|0;
 $30 = $23;
 $31 = $30;
 HEAP32[$31>>2] = $26;
 $32 = (($30) + 4)|0;
 $33 = $32;
 HEAP32[$33>>2] = $29;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$14>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$14+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$14+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$14+12>>2]|0;
 __ZN7lazperf7charbufC2EPcmNSt3__24fposI11__mbstate_tEE($15,$16,$17,$$byval_copy);
 $34 = ((($15)) + 56|0);
 $7 = $34;
 $8 = $15;
 $35 = $7;
 $36 = ((($35)) + 8|0);
 $6 = $36;
 $37 = $6;
 $5 = $37;
 $38 = $5;
 HEAP32[$38>>2] = (11172);
 HEAP32[$37>>2] = (11156);
 HEAP32[$35>>2] = (11320);
 $39 = ((($35)) + 8|0);
 HEAP32[$39>>2] = (11340);
 $40 = ((($35)) + 4|0);
 HEAP32[$40>>2] = 0;
 $41 = HEAP32[$35>>2]|0;
 $42 = ((($41)) + -12|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = (($35) + ($43)|0);
 $45 = $8;
 $3 = $44;
 $4 = $45;
 $46 = $3;
 $47 = $4;
 __ZNSt3__28ios_base4initEPv($46,$47);
 $48 = ((($46)) + 72|0);
 HEAP32[$48>>2] = 0;
 $49 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $50 = ((($46)) + 76|0);
 HEAP32[$50>>2] = $49;
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader8mem_file7PrivateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 56|0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($3);
 __ZN7lazperf7charbufD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf7charbufD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf7charbufC2EPcmNSt3__24fposI11__mbstate_tEE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 24|0;
 $5 = sp + 16|0;
 $9 = sp;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $10 = $6;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($10);
 HEAP32[$10>>2] = (10328);
 $11 = ((($10)) + 32|0);
 $4 = $11;
 $12 = $5;
 $13 = $12;
 HEAP32[$13>>2] = 0;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = 0;
 $16 = $4;
 ;HEAP32[$16>>2]=0|0;HEAP32[$16+4>>2]=0|0;
 $17 = ((($16)) + 8|0);
 $18 = $5;
 $19 = $18;
 $20 = HEAP32[$19>>2]|0;
 $21 = (($18) + 4)|0;
 $22 = $21;
 $23 = HEAP32[$22>>2]|0;
 $24 = $17;
 $25 = $24;
 HEAP32[$25>>2] = $20;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $23;
 $28 = $7;
 $29 = $8;
 ;HEAP32[$9>>2]=HEAP32[$3>>2]|0;HEAP32[$9+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$9+12>>2]=HEAP32[$3+12>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$9+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$9+12>>2]|0;
 __ZN7lazperf7charbuf10initializeEPcmNSt3__24fposI11__mbstate_tEE($10,$28,$29,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader8mem_fileD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 $15 = ((($14)) + 4|0);
 $12 = $15;
 $16 = $12;
 $9 = $16;
 $10 = 0;
 $17 = $9;
 $8 = $17;
 $18 = $8;
 $7 = $18;
 $19 = $7;
 $20 = HEAP32[$19>>2]|0;
 $11 = $20;
 $21 = $10;
 $4 = $17;
 $22 = $4;
 $3 = $22;
 $23 = $3;
 HEAP32[$23>>2] = $21;
 $24 = $11;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $2 = $17;
  $26 = $2;
  $1 = $26;
  $27 = $1;
  $28 = $11;
  $5 = $27;
  $6 = $28;
  $29 = $6;
  $30 = ($29|0)==(0|0);
  if (!($30)) {
   __ZN7lazperf6reader8mem_file7PrivateD2Ev($29);
   __ZdlPv($29);
  }
 }
 __ZN7lazperf6reader10basic_fileD2Ev($14);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE7not_eofEi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $4 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($2,$3)|0);
 if ($4) {
  $5 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $6 = $5 ^ -1;
  $8 = $6;
  STACKTOP = sp;return ($8|0);
 } else {
  $7 = $1;
  $8 = $7;
  STACKTOP = sp;return ($8|0);
 }
 return (0)|0;
}
function __ZN7lazperf6reader18chunk_decompressorC2EiiPKc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $$field = 0, $$field4 = 0, $$index1 = 0, $$index3 = 0, $$index7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(464|0);
 $$byval_copy = sp + 436|0;
 $9 = sp + 412|0;
 $15 = sp + 388|0;
 $23 = sp + 352|0;
 $51 = sp + 24|0;
 $52 = sp + 16|0;
 $53 = sp + 8|0;
 $54 = sp;
 $60 = sp + 451|0;
 $61 = sp + 450|0;
 $62 = sp + 449|0;
 $63 = sp + 448|0;
 $88 = sp + 120|0;
 $93 = sp + 88|0;
 $94 = sp + 72|0;
 $95 = sp + 64|0;
 $96 = sp + 56|0;
 $97 = sp + 48|0;
 $98 = sp + 32|0;
 $89 = $0;
 $90 = $1;
 $91 = $2;
 $92 = $3;
 $99 = $89;
 $100 = (__Znwm(12)|0);
 __ZN7lazperf6reader18chunk_decompressor7PrivateC2Ev($100);
 $87 = $99;
 HEAP32[$88>>2] = $100;
 $101 = $87;
 $85 = $101;
 $86 = $88;
 $102 = $85;
 $103 = $86;
 $84 = $103;
 $104 = $84;
 $82 = $102;
 $83 = $104;
 $105 = $82;
 $106 = $83;
 $81 = $106;
 $107 = $81;
 $108 = HEAP32[$107>>2]|0;
 HEAP32[$105>>2] = $108;
 $109 = $92;
 $80 = $99;
 $110 = $80;
 $79 = $110;
 $111 = $79;
 $78 = $111;
 $112 = $78;
 $113 = HEAP32[$112>>2]|0;
 $114 = ((($113)) + 8|0);
 HEAP32[$114>>2] = $109;
 HEAP32[$95>>2] = (651);
 $$index1 = ((($95)) + 4|0);
 HEAP32[$$index1>>2] = 0;
 $77 = $99;
 $115 = $77;
 $76 = $115;
 $116 = $76;
 $75 = $116;
 $117 = $75;
 $118 = HEAP32[$117>>2]|0;
 HEAP32[$96>>2] = $118;
 $71 = $95;
 $72 = $96;
 $73 = 37657;
 $74 = 37658;
 $119 = $71;
 $70 = $119;
 $120 = $70;
 $121 = $72;
 $27 = $121;
 $122 = $27;
 $123 = $73;
 $28 = $123;
 $124 = $28;
 $125 = $74;
 $29 = $125;
 $126 = $29;
 $65 = $94;
 $66 = $120;
 $67 = $122;
 $68 = $124;
 $69 = $126;
 $127 = $65;
 $128 = $66;
 $64 = $128;
 $129 = $64;
 $$field = HEAP32[$129>>2]|0;
 $$index3 = ((($129)) + 4|0);
 $$field4 = HEAP32[$$index3>>2]|0;
 HEAP32[$127>>2] = $$field;
 $$index7 = ((($127)) + 4|0);
 HEAP32[$$index7>>2] = $$field4;
 $130 = ((($127)) + 8|0);
 $131 = $67;
 $30 = $131;
 $132 = $30;
 $133 = $68;
 $31 = $133;
 $134 = $31;
 $135 = $69;
 $32 = $135;
 $136 = $32;
 $56 = $130;
 $57 = $132;
 $58 = $134;
 $59 = $136;
 $137 = $56;
 $138 = $57;
 $55 = $138;
 $139 = $55;
 $140 = $58;
 $33 = $140;
 $141 = $33;
 $142 = $59;
 $34 = $142;
 $143 = $34;
 ;HEAP8[$51>>0]=HEAP8[$63>>0]|0;
 ;HEAP8[$52>>0]=HEAP8[$62>>0]|0;
 ;HEAP8[$53>>0]=HEAP8[$61>>0]|0;
 ;HEAP8[$54>>0]=HEAP8[$60>>0]|0;
 $47 = $137;
 $48 = $139;
 $49 = $141;
 $50 = $143;
 $144 = $47;
 $145 = $48;
 $46 = $145;
 $146 = $46;
 $36 = $144;
 $37 = $146;
 $147 = $36;
 $148 = $37;
 $35 = $148;
 $149 = $35;
 $150 = HEAP32[$149>>2]|0;
 HEAP32[$147>>2] = $150;
 $151 = $49;
 $38 = $151;
 $152 = $38;
 $40 = $144;
 $41 = $152;
 $153 = $41;
 $39 = $153;
 $154 = $50;
 $42 = $154;
 $155 = $42;
 $44 = $144;
 $45 = $155;
 $156 = $45;
 $43 = $156;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$94>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$94+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$94+8>>2]|0;
 __ZNSt3__28functionIFvPhmEEC2INS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvS1_iEJPS9_RKNS_12placeholders4__phILi1EEERKNSE_ILi2EEEEEEvEET_($93,$$byval_copy);
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($98,$93);
 $157 = $90;
 $158 = $91;
 __ZN7lazperf22build_las_decompressorENSt3__28functionIFvPhmEEEim($97,$98,$157,$158);
 $26 = $99;
 $159 = $26;
 $25 = $159;
 $160 = $25;
 $24 = $160;
 $161 = $24;
 $162 = HEAP32[$161>>2]|0;
 $21 = $162;
 $22 = $97;
 $163 = $21;
 $164 = $22;
 $20 = $164;
 $165 = $20;
 $18 = $23;
 $19 = $165;
 $166 = $18;
 $167 = $19;
 $168 = HEAP32[$167>>2]|0;
 HEAP32[$166>>2] = $168;
 $169 = ((($166)) + 4|0);
 $170 = $19;
 $171 = ((($170)) + 4|0);
 $172 = HEAP32[$171>>2]|0;
 HEAP32[$169>>2] = $172;
 $173 = $19;
 HEAP32[$173>>2] = 0;
 $174 = $19;
 $175 = ((($174)) + 4|0);
 HEAP32[$175>>2] = 0;
 $16 = $23;
 $17 = $163;
 $176 = $16;
 $177 = $17;
 $13 = $176;
 $14 = $177;
 $178 = $13;
 $12 = $178;
 $179 = $12;
 $180 = HEAP32[$179>>2]|0;
 HEAP32[$15>>2] = $180;
 $181 = $14;
 $10 = $181;
 $182 = $10;
 $183 = HEAP32[$182>>2]|0;
 $184 = $13;
 HEAP32[$184>>2] = $183;
 $11 = $15;
 $185 = $11;
 $186 = HEAP32[$185>>2]|0;
 $187 = $14;
 HEAP32[$187>>2] = $186;
 $188 = ((($176)) + 4|0);
 $189 = $17;
 $190 = ((($189)) + 4|0);
 $7 = $188;
 $8 = $190;
 $191 = $7;
 $6 = $191;
 $192 = $6;
 $193 = HEAP32[$192>>2]|0;
 HEAP32[$9>>2] = $193;
 $194 = $8;
 $4 = $194;
 $195 = $4;
 $196 = HEAP32[$195>>2]|0;
 $197 = $7;
 HEAP32[$197>>2] = $196;
 $5 = $9;
 $198 = $5;
 $199 = HEAP32[$198>>2]|0;
 $200 = $8;
 HEAP32[$200>>2] = $199;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($23);
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($97);
 __ZNSt3__28functionIFvPhmEED2Ev($98);
 __ZNSt3__28functionIFvPhmEED2Ev($93);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader18chunk_decompressor7PrivateC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 HEAP32[$4>>2] = 0;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader18chunk_decompressor7Private8getBytesEPhi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 while(1) {
  $7 = $5;
  $8 = (($7) + -1)|0;
  $5 = $8;
  $9 = ($7|0)!=(0);
  if (!($9)) {
   break;
  }
  $10 = ((($6)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 1|0);
  HEAP32[$10>>2] = $12;
  $13 = HEAP8[$11>>0]|0;
  $14 = $4;
  $15 = ((($14)) + 1|0);
  $4 = $15;
  HEAP8[$14>>0] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__28functionIFvPhmEEC2INS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvS1_iEJPS9_RKNS_12placeholders4__phILi1EEERKNSE_ILi2EEEEEEvEET_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(672|0);
 $30 = sp + 532|0;
 $44 = sp + 136|0;
 $45 = sp + 128|0;
 $46 = sp + 120|0;
 $47 = sp + 112|0;
 $51 = sp + 664|0;
 $52 = sp + 663|0;
 $53 = sp + 662|0;
 $54 = sp + 661|0;
 $56 = sp + 460|0;
 $65 = sp + 104|0;
 $66 = sp + 96|0;
 $67 = sp + 88|0;
 $68 = sp + 80|0;
 $72 = sp + 660|0;
 $73 = sp + 659|0;
 $74 = sp + 658|0;
 $75 = sp + 657|0;
 $77 = sp + 408|0;
 $83 = sp + 72|0;
 $84 = sp + 64|0;
 $85 = sp + 56|0;
 $91 = sp + 48|0;
 $92 = sp + 40|0;
 $93 = sp + 32|0;
 $96 = sp + 656|0;
 $97 = sp + 356|0;
 $98 = sp + 655|0;
 $99 = sp + 654|0;
 $100 = sp + 352|0;
 $101 = sp + 653|0;
 $102 = sp + 24|0;
 $103 = sp + 16|0;
 $104 = sp + 8|0;
 $109 = sp + 652|0;
 $110 = sp + 332|0;
 $111 = sp + 328|0;
 $118 = sp;
 $119 = sp + 651|0;
 $122 = sp + 292|0;
 $152 = sp + 172|0;
 $153 = sp + 650|0;
 $154 = sp + 160|0;
 $155 = sp + 152|0;
 $156 = sp + 649|0;
 $159 = sp + 648|0;
 $158 = $0;
 $160 = $158;
 $157 = $1;
 $161 = $157;
 $2 = $159;
 $149 = $160;
 $150 = $161;
 $151 = $159;
 $162 = $149;
 $163 = ((($162)) + 8|0);
 $148 = $163;
 $164 = $148;
 HEAP32[$164>>2] = 652;
 $165 = ((($162)) + 12|0);
 HEAP32[$165>>2] = 10240;
 $166 = $150;
 $147 = $166;
 $120 = $122;
 $121 = 653;
 $167 = $120;
 $168 = $121;
 HEAP32[$167>>2] = $168;
 $169 = HEAP32[$122>>2]|0;
 HEAP32[$152>>2] = $169;
 $170 = ((($162)) + 8|0);
 ;HEAP32[$170>>2]=HEAP32[$152>>2]|0;
 ;HEAP8[$118>>0]=HEAP8[$119>>0]|0;
 $171 = ((($162)) + 12|0);
 HEAP32[$171>>2] = 10256;
 $172 = $151;
 $3 = $153;
 $4 = $172;
 $11 = $153;
 $12 = 1;
 $13 = 0;
 $173 = $11;
 $174 = $12;
 $10 = $173;
 $175 = ($174>>>0)>(357913941);
 if ($175) {
  $7 = 21003;
  $176 = (___cxa_allocate_exception(8)|0);
  $177 = $7;
  $5 = $176;
  $6 = $177;
  $178 = $5;
  $179 = $6;
  __ZNSt11logic_errorC2EPKc($178,$179);
  HEAP32[$178>>2] = (17588);
  ___cxa_throw(($176|0),(9800|0),(617|0));
  // unreachable;
 }
 $180 = $12;
 $181 = ($180*12)|0;
 $8 = $181;
 $9 = 4;
 $182 = $8;
 $183 = (__Znwm($182)|0);
 $14 = $155;
 $15 = $153;
 $16 = 1;
 $184 = $14;
 $185 = $15;
 HEAP32[$184>>2] = $185;
 $186 = ((($184)) + 4|0);
 $187 = $16;
 HEAP32[$186>>2] = $187;
 $29 = $154;
 HEAP32[$30>>2] = $183;
 $31 = $155;
 $188 = $29;
 $189 = $31;
 $28 = $189;
 $190 = $28;
 $25 = $188;
 $26 = $30;
 $27 = $190;
 $191 = $25;
 $192 = $26;
 $24 = $192;
 $193 = $24;
 $18 = $191;
 $19 = $193;
 $194 = $18;
 $195 = $19;
 $17 = $195;
 $196 = $17;
 $197 = HEAP32[$196>>2]|0;
 HEAP32[$194>>2] = $197;
 $198 = ((($191)) + 4|0);
 $199 = $27;
 $20 = $199;
 $200 = $20;
 $22 = $198;
 $23 = $200;
 $201 = $22;
 $202 = $23;
 $21 = $202;
 $203 = $21;
 ;HEAP32[$201>>2]=HEAP32[$203>>2]|0;HEAP32[$201+4>>2]=HEAP32[$203+4>>2]|0;
 $34 = $154;
 $204 = $34;
 $33 = $204;
 $205 = $33;
 $32 = $205;
 $206 = $32;
 $207 = HEAP32[$206>>2]|0;
 $208 = $150;
 $35 = $208;
 $209 = $35;
 $36 = $156;
 $37 = $153;
 $106 = $207;
 $107 = $209;
 $108 = $156;
 $210 = $106;
 $211 = $107;
 $105 = $211;
 $212 = $105;
 $57 = $212;
 $213 = $57;
 $55 = $213;
 $214 = $55;
 $49 = $56;
 $50 = $214;
 $215 = $49;
 $216 = $50;
 $48 = $216;
 $217 = $48;
 ;HEAP8[$44>>0]=HEAP8[$54>>0]|0;
 ;HEAP8[$45>>0]=HEAP8[$53>>0]|0;
 ;HEAP8[$46>>0]=HEAP8[$52>>0]|0;
 ;HEAP8[$47>>0]=HEAP8[$51>>0]|0;
 $42 = $215;
 $43 = $217;
 $218 = $42;
 $219 = $43;
 $41 = $219;
 $220 = $41;
 $39 = $218;
 $40 = $220;
 $221 = $39;
 $222 = $40;
 $38 = $222;
 $223 = $38;
 HEAP32[$221>>2] = $223;
 $224 = HEAP32[$56>>2]|0;
 HEAP32[$110>>2] = $224;
 $225 = $108;
 $58 = $225;
 $226 = $58;
 $78 = $226;
 $227 = $78;
 $76 = $227;
 $228 = $76;
 $70 = $77;
 $71 = $228;
 $229 = $70;
 $230 = $71;
 $69 = $230;
 $231 = $69;
 ;HEAP8[$65>>0]=HEAP8[$75>>0]|0;
 ;HEAP8[$66>>0]=HEAP8[$74>>0]|0;
 ;HEAP8[$67>>0]=HEAP8[$73>>0]|0;
 ;HEAP8[$68>>0]=HEAP8[$72>>0]|0;
 $63 = $229;
 $64 = $231;
 $232 = $63;
 $233 = $64;
 $62 = $233;
 $234 = $62;
 $60 = $232;
 $61 = $234;
 $235 = $60;
 $236 = $61;
 $59 = $236;
 $237 = $59;
 HEAP32[$235>>2] = $237;
 $238 = HEAP32[$77>>2]|0;
 HEAP32[$111>>2] = $238;
 ;HEAP8[$102>>0]=HEAP8[$111>>0]|0;HEAP8[$102+1>>0]=HEAP8[$111+1>>0]|0;HEAP8[$102+2>>0]=HEAP8[$111+2>>0]|0;HEAP8[$102+3>>0]=HEAP8[$111+3>>0]|0;
 ;HEAP8[$103>>0]=HEAP8[$110>>0]|0;HEAP8[$103+1>>0]=HEAP8[$110+1>>0]|0;HEAP8[$103+2>>0]=HEAP8[$110+2>>0]|0;HEAP8[$103+3>>0]=HEAP8[$110+3>>0]|0;
 ;HEAP8[$104>>0]=HEAP8[$109>>0]|0;
 $95 = $210;
 $239 = $95;
 $94 = $103;
 $240 = $94;
 ;HEAP32[$97>>2]=HEAP32[$240>>2]|0;
 ;HEAP8[$83>>0]=HEAP8[$98>>0]|0;
 ;HEAP8[$84>>0]=HEAP8[$97>>0]|0;HEAP8[$84+1>>0]=HEAP8[$97+1>>0]|0;HEAP8[$84+2>>0]=HEAP8[$97+2>>0]|0;HEAP8[$84+3>>0]=HEAP8[$97+3>>0]|0;
 ;HEAP8[$85>>0]=HEAP8[$96>>0]|0;
 $82 = $239;
 $241 = $82;
 $81 = $84;
 $242 = $81;
 $80 = $242;
 $243 = $80;
 $244 = HEAP32[$243>>2]|0;
 $79 = $244;
 $245 = $79;
 ;HEAP32[$241>>2]=HEAP32[$245>>2]|0;HEAP32[$241+4>>2]=HEAP32[$245+4>>2]|0;HEAP32[$241+8>>2]=HEAP32[$245+8>>2]|0;
 $86 = $102;
 $246 = $86;
 ;HEAP32[$100>>2]=HEAP32[$246>>2]|0;
 ;HEAP8[$91>>0]=HEAP8[$101>>0]|0;
 ;HEAP8[$92>>0]=HEAP8[$100>>0]|0;HEAP8[$92+1>>0]=HEAP8[$100+1>>0]|0;HEAP8[$92+2>>0]=HEAP8[$100+2>>0]|0;HEAP8[$92+3>>0]=HEAP8[$100+3>>0]|0;
 ;HEAP8[$93>>0]=HEAP8[$99>>0]|0;
 $90 = $239;
 $89 = $92;
 $247 = $89;
 $88 = $247;
 $248 = $88;
 $249 = HEAP32[$248>>2]|0;
 $87 = $249;
 $116 = $154;
 $250 = $116;
 $115 = $250;
 $251 = $115;
 $114 = $251;
 $252 = $114;
 $253 = HEAP32[$252>>2]|0;
 $117 = $253;
 $113 = $250;
 $254 = $113;
 $112 = $254;
 $255 = $112;
 HEAP32[$255>>2] = 0;
 $256 = $117;
 HEAP32[$162>>2] = $256;
 $146 = $154;
 $257 = $146;
 $143 = $257;
 $144 = 0;
 $258 = $143;
 $142 = $258;
 $259 = $142;
 $141 = $259;
 $260 = $141;
 $261 = HEAP32[$260>>2]|0;
 $145 = $261;
 $262 = $144;
 $126 = $258;
 $263 = $126;
 $125 = $263;
 $264 = $125;
 HEAP32[$264>>2] = $262;
 $265 = $145;
 $266 = ($265|0)!=(0|0);
 if (!($266)) {
  STACKTOP = sp;return;
 }
 $124 = $258;
 $267 = $124;
 $268 = ((($267)) + 4|0);
 $123 = $268;
 $269 = $123;
 $270 = $145;
 $139 = $269;
 $140 = $270;
 $271 = $139;
 $272 = HEAP32[$271>>2]|0;
 $273 = $140;
 $274 = ((($271)) + 4|0);
 $275 = HEAP32[$274>>2]|0;
 $136 = $272;
 $137 = $273;
 $138 = $275;
 $276 = $136;
 $277 = $137;
 $278 = $138;
 $133 = $276;
 $134 = $277;
 $135 = $278;
 $279 = $134;
 $280 = $135;
 $281 = ($280*12)|0;
 $130 = $279;
 $131 = $281;
 $132 = 4;
 $282 = $130;
 $283 = $131;
 $284 = $132;
 $127 = $282;
 $128 = $283;
 $129 = $284;
 $285 = $127;
 $286 = $128;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($285,$286);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader18chunk_decompressor7PrivateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__210__function16__policy_invokerIFvPhmEE12__call_emptyEPKNS0_16__policy_storageES2_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = (___cxa_allocate_exception(4)|0);
 ;HEAP32[$6>>2]=0|0;
 __ZNSt3__217bad_function_callC2Ev($6);
 ___cxa_throw(($6|0),(7240|0),(117|0));
 // unreachable;
}
function __ZNSt3__210__function16__policy_invokerIFvPhmEE11__call_implINS0_12__alloc_funcINS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvS2_iEJPSB_RKNS_12placeholders4__phILi1EEERKNSG_ILi2EEEEEENS_9allocatorISN_EES3_EEEEvPKNS0_16__policy_storageES2_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = sp + 8|0;
 $14 = sp + 4|0;
 $12 = $0;
 HEAP32[$13>>2] = $1;
 HEAP32[$14>>2] = $2;
 $16 = $12;
 $17 = HEAP32[$16>>2]|0;
 $15 = $17;
 $18 = $15;
 $11 = $13;
 $19 = $11;
 $3 = $14;
 $20 = $3;
 $8 = $18;
 $9 = $19;
 $10 = $20;
 $21 = $8;
 $7 = $21;
 $22 = $7;
 $6 = $22;
 $23 = $6;
 $24 = $9;
 $5 = $24;
 $25 = $5;
 $26 = $10;
 $4 = $26;
 $27 = $4;
 __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRNS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvPhiEJPS7_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEES8_mEEEvDpOT_($23,$25,$27);
 STACKTOP = sp;return;
}
function __ZNSt3__210__function8__policy13__large_cloneINS0_12__alloc_funcINS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvPhiEJPS8_RKNS_12placeholders4__phILi1EEERKNSE_ILi2EEEEEENS_9allocatorISL_EEFvS9_mEEEEEPvPKv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(624|0);
 $14 = sp + 128|0;
 $15 = sp + 120|0;
 $16 = sp + 112|0;
 $17 = sp + 104|0;
 $21 = sp + 622|0;
 $22 = sp + 621|0;
 $23 = sp + 620|0;
 $24 = sp + 619|0;
 $26 = sp + 536|0;
 $32 = sp + 96|0;
 $33 = sp + 88|0;
 $34 = sp + 80|0;
 $40 = sp + 72|0;
 $41 = sp + 64|0;
 $42 = sp + 56|0;
 $45 = sp + 618|0;
 $46 = sp + 484|0;
 $47 = sp + 617|0;
 $48 = sp + 616|0;
 $49 = sp + 480|0;
 $50 = sp + 615|0;
 $51 = sp + 48|0;
 $52 = sp + 40|0;
 $53 = sp + 32|0;
 $60 = sp + 24|0;
 $61 = sp + 16|0;
 $62 = sp + 8|0;
 $63 = sp;
 $66 = sp + 614|0;
 $67 = sp + 613|0;
 $68 = sp + 612|0;
 $69 = sp + 611|0;
 $71 = sp + 440|0;
 $76 = sp + 610|0;
 $77 = sp + 420|0;
 $78 = sp + 416|0;
 $123 = sp + 236|0;
 $142 = sp + 609|0;
 $143 = sp + 152|0;
 $144 = sp + 144|0;
 $145 = sp + 608|0;
 $146 = $0;
 $148 = $146;
 $147 = $148;
 $149 = $147;
 $141 = $149;
 $150 = $141;
 $140 = $150;
 $151 = $140;
 $139 = $151;
 $152 = $139;
 $137 = $142;
 $138 = $152;
 $134 = $142;
 $135 = 1;
 $136 = 0;
 $153 = $134;
 $154 = $135;
 $133 = $153;
 $155 = ($154>>>0)>(357913941);
 if ($155) {
  $130 = 21003;
  $156 = (___cxa_allocate_exception(8)|0);
  $157 = $130;
  $128 = $156;
  $129 = $157;
  $158 = $128;
  $159 = $129;
  __ZNSt11logic_errorC2EPKc($158,$159);
  HEAP32[$158>>2] = (17588);
  ___cxa_throw(($156|0),(9800|0),(617|0));
  // unreachable;
 }
 $160 = $135;
 $161 = ($160*12)|0;
 $131 = $161;
 $132 = 4;
 $162 = $131;
 $163 = (__Znwm($162)|0);
 $125 = $144;
 $126 = $142;
 $127 = 1;
 $164 = $125;
 $165 = $126;
 HEAP32[$164>>2] = $165;
 $166 = ((($164)) + 4|0);
 $167 = $127;
 HEAP32[$166>>2] = $167;
 $122 = $143;
 HEAP32[$123>>2] = $163;
 $124 = $144;
 $168 = $122;
 $169 = $124;
 $121 = $169;
 $170 = $121;
 $118 = $168;
 $119 = $123;
 $120 = $170;
 $171 = $118;
 $172 = $119;
 $117 = $172;
 $173 = $117;
 $111 = $171;
 $112 = $173;
 $174 = $111;
 $175 = $112;
 $110 = $175;
 $176 = $110;
 $177 = HEAP32[$176>>2]|0;
 HEAP32[$174>>2] = $177;
 $178 = ((($171)) + 4|0);
 $179 = $120;
 $113 = $179;
 $180 = $113;
 $115 = $178;
 $116 = $180;
 $181 = $115;
 $182 = $116;
 $114 = $182;
 $183 = $114;
 ;HEAP32[$181>>2]=HEAP32[$183>>2]|0;HEAP32[$181+4>>2]=HEAP32[$183+4>>2]|0;
 $109 = $143;
 $184 = $109;
 $108 = $184;
 $185 = $108;
 $107 = $185;
 $186 = $107;
 $187 = HEAP32[$186>>2]|0;
 $106 = $150;
 $188 = $106;
 $105 = $188;
 $189 = $105;
 $103 = $145;
 $104 = $142;
 $73 = $187;
 $74 = $189;
 $75 = $145;
 $190 = $73;
 $191 = $74;
 $72 = $191;
 $192 = $72;
 $70 = $192;
 $193 = $70;
 $64 = $71;
 $65 = $193;
 $194 = $64;
 $195 = $65;
 ;HEAP8[$60>>0]=HEAP8[$69>>0]|0;
 ;HEAP8[$61>>0]=HEAP8[$68>>0]|0;
 ;HEAP8[$62>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$63>>0]=HEAP8[$66>>0]|0;
 $58 = $194;
 $59 = $195;
 $196 = $58;
 $197 = $59;
 $57 = $197;
 $198 = $57;
 $55 = $196;
 $56 = $198;
 $199 = $55;
 $200 = $56;
 $54 = $200;
 $201 = $54;
 HEAP32[$199>>2] = $201;
 $202 = HEAP32[$71>>2]|0;
 HEAP32[$77>>2] = $202;
 $203 = $75;
 $7 = $203;
 $204 = $7;
 $27 = $204;
 $205 = $27;
 $25 = $205;
 $206 = $25;
 $19 = $26;
 $20 = $206;
 $207 = $19;
 $208 = $20;
 $18 = $208;
 $209 = $18;
 ;HEAP8[$14>>0]=HEAP8[$24>>0]|0;
 ;HEAP8[$15>>0]=HEAP8[$23>>0]|0;
 ;HEAP8[$16>>0]=HEAP8[$22>>0]|0;
 ;HEAP8[$17>>0]=HEAP8[$21>>0]|0;
 $12 = $207;
 $13 = $209;
 $210 = $12;
 $211 = $13;
 $11 = $211;
 $212 = $11;
 $9 = $210;
 $10 = $212;
 $213 = $9;
 $214 = $10;
 $8 = $214;
 $215 = $8;
 HEAP32[$213>>2] = $215;
 $216 = HEAP32[$26>>2]|0;
 HEAP32[$78>>2] = $216;
 ;HEAP8[$51>>0]=HEAP8[$78>>0]|0;HEAP8[$51+1>>0]=HEAP8[$78+1>>0]|0;HEAP8[$51+2>>0]=HEAP8[$78+2>>0]|0;HEAP8[$51+3>>0]=HEAP8[$78+3>>0]|0;
 ;HEAP8[$52>>0]=HEAP8[$77>>0]|0;HEAP8[$52+1>>0]=HEAP8[$77+1>>0]|0;HEAP8[$52+2>>0]=HEAP8[$77+2>>0]|0;HEAP8[$52+3>>0]=HEAP8[$77+3>>0]|0;
 ;HEAP8[$53>>0]=HEAP8[$76>>0]|0;
 $44 = $190;
 $217 = $44;
 $43 = $52;
 $218 = $43;
 ;HEAP32[$46>>2]=HEAP32[$218>>2]|0;
 ;HEAP8[$32>>0]=HEAP8[$47>>0]|0;
 ;HEAP8[$33>>0]=HEAP8[$46>>0]|0;HEAP8[$33+1>>0]=HEAP8[$46+1>>0]|0;HEAP8[$33+2>>0]=HEAP8[$46+2>>0]|0;HEAP8[$33+3>>0]=HEAP8[$46+3>>0]|0;
 ;HEAP8[$34>>0]=HEAP8[$45>>0]|0;
 $31 = $217;
 $219 = $31;
 $30 = $33;
 $220 = $30;
 $29 = $220;
 $221 = $29;
 $222 = HEAP32[$221>>2]|0;
 $28 = $222;
 $223 = $28;
 ;HEAP32[$219>>2]=HEAP32[$223>>2]|0;HEAP32[$219+4>>2]=HEAP32[$223+4>>2]|0;HEAP32[$219+8>>2]=HEAP32[$223+8>>2]|0;
 $35 = $51;
 $224 = $35;
 ;HEAP32[$49>>2]=HEAP32[$224>>2]|0;
 ;HEAP8[$40>>0]=HEAP8[$50>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$49>>0]|0;HEAP8[$41+1>>0]=HEAP8[$49+1>>0]|0;HEAP8[$41+2>>0]=HEAP8[$49+2>>0]|0;HEAP8[$41+3>>0]=HEAP8[$49+3>>0]|0;
 ;HEAP8[$42>>0]=HEAP8[$48>>0]|0;
 $39 = $217;
 $38 = $41;
 $225 = $38;
 $37 = $225;
 $226 = $37;
 $227 = HEAP32[$226>>2]|0;
 $36 = $227;
 $5 = $143;
 $228 = $5;
 $4 = $228;
 $229 = $4;
 $3 = $229;
 $230 = $3;
 $231 = HEAP32[$230>>2]|0;
 $6 = $231;
 $2 = $228;
 $232 = $2;
 $1 = $232;
 $233 = $1;
 HEAP32[$233>>2] = 0;
 $234 = $6;
 $102 = $143;
 $235 = $102;
 $99 = $235;
 $100 = 0;
 $236 = $99;
 $98 = $236;
 $237 = $98;
 $97 = $237;
 $238 = $97;
 $239 = HEAP32[$238>>2]|0;
 $101 = $239;
 $240 = $100;
 $82 = $236;
 $241 = $82;
 $81 = $241;
 $242 = $81;
 HEAP32[$242>>2] = $240;
 $243 = $101;
 $244 = ($243|0)!=(0|0);
 if (!($244)) {
  STACKTOP = sp;return ($234|0);
 }
 $80 = $236;
 $245 = $80;
 $246 = ((($245)) + 4|0);
 $79 = $246;
 $247 = $79;
 $248 = $101;
 $95 = $247;
 $96 = $248;
 $249 = $95;
 $250 = HEAP32[$249>>2]|0;
 $251 = $96;
 $252 = ((($249)) + 4|0);
 $253 = HEAP32[$252>>2]|0;
 $92 = $250;
 $93 = $251;
 $94 = $253;
 $254 = $92;
 $255 = $93;
 $256 = $94;
 $89 = $254;
 $90 = $255;
 $91 = $256;
 $257 = $90;
 $258 = $91;
 $259 = ($258*12)|0;
 $86 = $257;
 $87 = $259;
 $88 = 4;
 $260 = $86;
 $261 = $87;
 $262 = $88;
 $83 = $260;
 $84 = $261;
 $85 = $262;
 $263 = $83;
 $264 = $84;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($263,$264);
 STACKTOP = sp;return ($234|0);
}
function __ZNSt3__210__function8__policy15__large_destroyINS0_12__alloc_funcINS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvPhiEJPS8_RKNS_12placeholders4__phILi1EEERKNSE_ILi2EEEEEENS_9allocatorISL_EEFvS9_mEEEEEvPv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $18 = sp + 68|0;
 $16 = $0;
 $19 = $16;
 $17 = $19;
 $20 = $17;
 $15 = $20;
 $21 = $15;
 $14 = $21;
 $22 = $14;
 $13 = $22;
 $23 = $13;
 $2 = $18;
 $3 = $23;
 $24 = $17;
 $1 = $24;
 $25 = $17;
 $10 = $18;
 $11 = $25;
 $12 = 1;
 $26 = $11;
 $27 = $12;
 $28 = ($27*12)|0;
 $7 = $26;
 $8 = $28;
 $9 = 4;
 $29 = $7;
 $30 = $8;
 $31 = $9;
 $4 = $29;
 $5 = $30;
 $6 = $31;
 $32 = $4;
 $33 = $5;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($32,$33);
 STACKTOP = sp;return;
}
function __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRNS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvPhiEJPS7_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEES8_mEEEvDpOT_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $19 = sp + 32|0;
 $20 = sp + 24|0;
 $21 = sp + 16|0;
 $22 = sp + 8|0;
 $27 = sp + 304|0;
 $28 = sp + 303|0;
 $29 = sp + 302|0;
 $30 = sp + 301|0;
 $62 = sp;
 $67 = sp + 300|0;
 $68 = sp + 72|0;
 $74 = $0;
 $75 = $1;
 $76 = $2;
 $77 = $74;
 $73 = $77;
 $78 = $73;
 $79 = $75;
 $4 = $79;
 $80 = $4;
 $81 = $76;
 $3 = $81;
 $82 = $3;
 $70 = $78;
 $71 = $80;
 $72 = $82;
 $83 = $70;
 $69 = $83;
 $84 = $69;
 $85 = $71;
 $6 = $85;
 $86 = $6;
 $87 = $72;
 $5 = $87;
 $88 = $5;
 $64 = $84;
 $65 = $86;
 $66 = $88;
 $89 = $64;
 $90 = ((($89)) + 8|0);
 $91 = $65;
 $63 = $91;
 $92 = $63;
 $93 = $66;
 $31 = $93;
 $94 = $31;
 $24 = $68;
 $25 = $92;
 $26 = $94;
 $95 = $24;
 $96 = $25;
 $23 = $96;
 $97 = $23;
 $98 = $26;
 $7 = $98;
 $99 = $7;
 ;HEAP8[$19>>0]=HEAP8[$30>>0]|0;
 ;HEAP8[$20>>0]=HEAP8[$29>>0]|0;
 ;HEAP8[$21>>0]=HEAP8[$28>>0]|0;
 ;HEAP8[$22>>0]=HEAP8[$27>>0]|0;
 $16 = $95;
 $17 = $97;
 $18 = $99;
 $100 = $16;
 $101 = $17;
 $15 = $101;
 $102 = $15;
 $9 = $100;
 $10 = $102;
 $103 = $9;
 $104 = $10;
 $8 = $104;
 $105 = $8;
 HEAP32[$103>>2] = $105;
 $106 = ((($100)) + 4|0);
 $107 = $18;
 $11 = $107;
 $108 = $11;
 $13 = $106;
 $14 = $108;
 $109 = $13;
 $110 = $14;
 $12 = $110;
 $111 = $12;
 HEAP32[$109>>2] = $111;
 ;HEAP8[$62>>0]=HEAP8[$67>>0]|0;
 $59 = $89;
 $60 = $90;
 $61 = $68;
 $112 = $59;
 $113 = $60;
 $58 = $113;
 $114 = $58;
 $57 = $114;
 $115 = $57;
 $116 = $61;
 $48 = $115;
 $49 = $116;
 $117 = $48;
 $118 = $60;
 $33 = $118;
 $119 = $33;
 $32 = $119;
 $120 = $32;
 $121 = $61;
 $37 = $120;
 $38 = $121;
 $39 = 0;
 $122 = $38;
 $36 = $122;
 $123 = $36;
 $35 = $123;
 $124 = $35;
 $125 = HEAP32[$124>>2]|0;
 $34 = $125;
 $126 = $34;
 $127 = $60;
 $41 = $127;
 $128 = $41;
 $40 = $128;
 $129 = $40;
 $130 = $61;
 $45 = $129;
 $46 = $130;
 $47 = 1;
 $131 = $46;
 $44 = $131;
 $132 = $44;
 $133 = ((($132)) + 4|0);
 $43 = $133;
 $134 = $43;
 $135 = HEAP32[$134>>2]|0;
 $42 = $135;
 $136 = $42;
 $53 = $112;
 $54 = $117;
 $55 = $126;
 $56 = $136;
 $137 = $54;
 $52 = $137;
 $138 = $52;
 $139 = HEAP32[$138>>2]|0;
 $140 = $53;
 $$field = HEAP32[$140>>2]|0;
 $$index1 = ((($140)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $141 = $$field2 >> 1;
 $142 = (($139) + ($141)|0);
 $143 = $$field2 & 1;
 $144 = ($143|0)!=(0);
 if ($144) {
  $145 = HEAP32[$142>>2]|0;
  $146 = (($145) + ($$field)|0);
  $147 = HEAP32[$146>>2]|0;
  $155 = $147;
  $149 = $55;
  $51 = $149;
  $150 = $51;
  $151 = HEAP32[$150>>2]|0;
  $152 = $56;
  $50 = $152;
  $153 = $50;
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_viii[$155 & 1023]($142,$151,$154);
  STACKTOP = sp;return;
 } else {
  $148 = $$field;
  $155 = $148;
  $149 = $55;
  $51 = $149;
  $150 = $51;
  $151 = HEAP32[$150>>2]|0;
  $152 = $56;
  $50 = $152;
  $153 = $50;
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_viii[$155 & 1023]($142,$151,$154);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__217bad_function_callC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 HEAP32[$4>>2] = (17528);
 HEAP32[$3>>2] = (11136);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader18chunk_decompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 $12 = $14;
 $15 = $12;
 $9 = $15;
 $10 = 0;
 $16 = $9;
 $8 = $16;
 $17 = $8;
 $7 = $17;
 $18 = $7;
 $19 = HEAP32[$18>>2]|0;
 $11 = $19;
 $20 = $10;
 $4 = $16;
 $21 = $4;
 $3 = $21;
 $22 = $3;
 HEAP32[$22>>2] = $20;
 $23 = $11;
 $24 = ($23|0)!=(0|0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $2 = $16;
 $25 = $2;
 $1 = $25;
 $26 = $1;
 $27 = $11;
 $5 = $26;
 $6 = $27;
 $28 = $6;
 $29 = ($28|0)==(0|0);
 if ($29) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf6reader18chunk_decompressor7PrivateD2Ev($28);
 __ZdlPv($28);
 STACKTOP = sp;return;
}
function __ZN7lazperf6reader18chunk_decompressor10decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $6;
 $5 = $8;
 $9 = $5;
 $4 = $9;
 $10 = $4;
 $3 = $10;
 $11 = $3;
 $12 = HEAP32[$11>>2]|0;
 $2 = $12;
 $13 = $2;
 $14 = HEAP32[$13>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = $7;
 (FUNCTION_TABLE_iii[$16 & 1023]($14,$17)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf7laz_vlrD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf7laz_vlrD2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNK7lazperf7laz_vlr4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $4 = ((($3)) + 40|0);
 $1 = $4;
 $5 = $1;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11|0) / 6)&-1;
 $13 = ($12*6)|0;
 $14 = (34 + ($13))|0;
 STACKTOP = sp;return ($14|0);
}
function __ZNK7lazperf7laz_vlr6headerEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = sp + 52|0;
 $14 = $1;
 $16 = $14;
 $$expand_i1_val = 0;
 HEAP8[$15>>0] = $$expand_i1_val;
 HEAP16[$0>>1] = 0;
 $17 = ((($0)) + 4|0);
 $12 = $17;
 $13 = 19027;
 $18 = $12;
 $11 = $18;
 $19 = $11;
 $10 = $19;
 $20 = $10;
 ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
 $9 = $19;
 $21 = $9;
 $8 = $21;
 $22 = $13;
 $23 = $13;
 $24 = (__ZNSt3__211char_traitsIcE6lengthEPKc($23)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($18,$22,$24);
 $25 = ((($0)) + 16|0);
 HEAP16[$25>>1] = 22204;
 $26 = ((($0)) + 18|0);
 $27 = HEAP32[$16>>2]|0;
 $28 = ((($27)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = (FUNCTION_TABLE_ii[$29 & 1023]($16)|0);
 $31 = $30&65535;
 HEAP16[$26>>1] = $31;
 $32 = ((($0)) + 20|0);
 $6 = $32;
 $7 = 19042;
 $33 = $6;
 $5 = $33;
 $34 = $5;
 $4 = $34;
 $35 = $4;
 ;HEAP32[$35>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;
 $3 = $34;
 $36 = $3;
 $2 = $36;
 $37 = $7;
 $38 = $7;
 $39 = (__ZNSt3__211char_traitsIcE6lengthEPKc($38)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($33,$37,$39);
 $$expand_i1_val2 = 1;
 HEAP8[$15>>0] = $$expand_i1_val2;
 $$pre_trunc = HEAP8[$15>>0]|0;
 $40 = $$pre_trunc&1;
 if ($40) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf10vlr_headerD2Ev($0);
 STACKTOP = sp;return;
}
function __ZN7lazperf7laz_vlrD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $27 = $0;
 $28 = $27;
 HEAP32[$28>>2] = (10280);
 $29 = ((($28)) + 40|0);
 $26 = $29;
 $30 = $26;
 $25 = $30;
 $31 = $25;
 $24 = $31;
 $32 = $24;
 $33 = HEAP32[$32>>2]|0;
 $23 = $33;
 $34 = $23;
 $2 = $31;
 $35 = $2;
 $36 = HEAP32[$35>>2]|0;
 $1 = $36;
 $37 = $1;
 $7 = $31;
 $38 = $7;
 $6 = $38;
 $39 = $6;
 $5 = $39;
 $40 = $5;
 $41 = ((($40)) + 8|0);
 $4 = $41;
 $42 = $4;
 $3 = $42;
 $43 = $3;
 $44 = HEAP32[$43>>2]|0;
 $45 = HEAP32[$39>>2]|0;
 $46 = $44;
 $47 = $45;
 $48 = (($46) - ($47))|0;
 $49 = (($48|0) / 6)&-1;
 $50 = (($37) + (($49*6)|0)|0);
 $9 = $31;
 $51 = $9;
 $52 = HEAP32[$51>>2]|0;
 $8 = $52;
 $53 = $8;
 $10 = $31;
 $54 = $10;
 $55 = ((($54)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$54>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 $61 = (($60|0) / 6)&-1;
 $62 = (($53) + (($61*6)|0)|0);
 $12 = $31;
 $63 = $12;
 $64 = HEAP32[$63>>2]|0;
 $11 = $64;
 $65 = $11;
 $17 = $31;
 $66 = $17;
 $16 = $66;
 $67 = $16;
 $15 = $67;
 $68 = $15;
 $69 = ((($68)) + 8|0);
 $14 = $69;
 $70 = $14;
 $13 = $70;
 $71 = $13;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 6)&-1;
 $78 = (($65) + (($77*6)|0)|0);
 $18 = $31;
 $19 = $34;
 $20 = $50;
 $21 = $62;
 $22 = $78;
 __ZNSt3__213__vector_baseIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEED2Ev($30);
 __ZN7lazperf3vlrD2Ev($28);
 STACKTOP = sp;return;
}
function __ZN7lazperf3vlrD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN7lazperf3vlrD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 _llvm_trap();
 // unreachable;
}
function __ZN7lazperf10vlr_header6createERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $1;
 $$expand_i1_val = 0;
 HEAP8[$3>>0] = $$expand_i1_val;
 __ZN7lazperf10vlr_headerC2Ev($0);
 $4 = $2;
 __ZN7lazperf10vlr_header4readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$4);
 $$expand_i1_val2 = 1;
 HEAP8[$3>>0] = $$expand_i1_val2;
 $$pre_trunc = HEAP8[$3>>0]|0;
 $5 = $$pre_trunc&1;
 if ($5) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf10vlr_headerD2Ev($0);
 STACKTOP = sp;return;
}
function __ZN7lazperf10vlr_headerC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $21 = $0;
 $22 = $21;
 $23 = ((($22)) + 4|0);
 $20 = $23;
 $24 = $20;
 $19 = $24;
 $25 = $19;
 $18 = $25;
 $26 = $18;
 ;HEAP32[$26>>2]=0|0;HEAP32[$26+4>>2]=0|0;HEAP32[$26+8>>2]=0|0;
 $17 = $25;
 $27 = $17;
 $16 = $27;
 $13 = $24;
 $28 = $13;
 $12 = $28;
 $29 = $12;
 $11 = $29;
 $30 = $11;
 $14 = $30;
 $15 = 0;
 while(1) {
  $31 = $15;
  $32 = ($31>>>0)<(3);
  if (!($32)) {
   break;
  }
  $33 = $14;
  $34 = $15;
  $35 = (($33) + ($34<<2)|0);
  HEAP32[$35>>2] = 0;
  $36 = $15;
  $37 = (($36) + 1)|0;
  $15 = $37;
 }
 $38 = ((($22)) + 20|0);
 $10 = $38;
 $39 = $10;
 $9 = $39;
 $40 = $9;
 $8 = $40;
 $41 = $8;
 ;HEAP32[$41>>2]=0|0;HEAP32[$41+4>>2]=0|0;HEAP32[$41+8>>2]=0|0;
 $7 = $40;
 $42 = $7;
 $6 = $42;
 $3 = $39;
 $43 = $3;
 $2 = $43;
 $44 = $2;
 $1 = $44;
 $45 = $1;
 $4 = $45;
 $5 = 0;
 while(1) {
  $46 = $5;
  $47 = ($46>>>0)<(3);
  if (!($47)) {
   break;
  }
  $48 = $4;
  $49 = $5;
  $50 = (($48) + ($49<<2)|0);
  HEAP32[$50>>2] = 0;
  $51 = $5;
  $52 = (($51) + 1)|0;
  $5 = $52;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf10vlr_header4readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $36 = sp + 16|0;
 $37 = sp;
 $34 = $0;
 $35 = $1;
 $38 = $34;
 __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($36,54);
 $39 = $35;
 $33 = $36;
 $40 = $33;
 $41 = HEAP32[$40>>2]|0;
 $32 = $41;
 $42 = $32;
 $31 = $36;
 $43 = $31;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($39,$42,$49)|0);
 $4 = $36;
 $50 = $4;
 $51 = HEAP32[$50>>2]|0;
 $3 = $51;
 $52 = $3;
 $2 = $36;
 $53 = $2;
 $54 = ((($53)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAP32[$53>>2]|0;
 $57 = $55;
 $58 = $56;
 $59 = (($57) - ($58))|0;
 __ZN7lazperf11LeExtractorC2EPKcm($37,$52,$59);
 (__ZN7lazperf11LeExtractorrsERt($37,$38)|0);
 $60 = ((($38)) + 4|0);
 __ZN7lazperf9Extractor3getERNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEm($37,$60,16);
 $61 = ((($38)) + 16|0);
 $62 = (__ZN7lazperf11LeExtractorrsERt($37,$61)|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ((($63)) + 8|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = ((($38)) + 18|0);
 (FUNCTION_TABLE_iii[$65 & 1023]($62,$66)|0);
 $67 = ((($38)) + 20|0);
 __ZN7lazperf9Extractor3getERNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEm($37,$67,32);
 $30 = $36;
 $68 = $30;
 $29 = $68;
 $69 = $29;
 $28 = $69;
 $70 = $28;
 $71 = HEAP32[$70>>2]|0;
 $27 = $71;
 $72 = $27;
 $6 = $69;
 $73 = $6;
 $74 = HEAP32[$73>>2]|0;
 $5 = $74;
 $75 = $5;
 $11 = $69;
 $76 = $11;
 $10 = $76;
 $77 = $10;
 $9 = $77;
 $78 = $9;
 $79 = ((($78)) + 8|0);
 $8 = $79;
 $80 = $8;
 $7 = $80;
 $81 = $7;
 $82 = HEAP32[$81>>2]|0;
 $83 = HEAP32[$77>>2]|0;
 $84 = $82;
 $85 = $83;
 $86 = (($84) - ($85))|0;
 $87 = (($75) + ($86)|0);
 $13 = $69;
 $88 = $13;
 $89 = HEAP32[$88>>2]|0;
 $12 = $89;
 $90 = $12;
 $14 = $69;
 $91 = $14;
 $92 = ((($91)) + 4|0);
 $93 = HEAP32[$92>>2]|0;
 $94 = HEAP32[$91>>2]|0;
 $95 = $93;
 $96 = $94;
 $97 = (($95) - ($96))|0;
 $98 = (($90) + ($97)|0);
 $16 = $69;
 $99 = $16;
 $100 = HEAP32[$99>>2]|0;
 $15 = $100;
 $101 = $15;
 $21 = $69;
 $102 = $21;
 $20 = $102;
 $103 = $20;
 $19 = $103;
 $104 = $19;
 $105 = ((($104)) + 8|0);
 $18 = $105;
 $106 = $18;
 $17 = $106;
 $107 = $17;
 $108 = HEAP32[$107>>2]|0;
 $109 = HEAP32[$103>>2]|0;
 $110 = $108;
 $111 = $109;
 $112 = (($110) - ($111))|0;
 $113 = (($101) + ($112)|0);
 $22 = $69;
 $23 = $72;
 $24 = $87;
 $25 = $98;
 $26 = $113;
 __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($68);
 STACKTOP = sp;return;
}
function __ZN7lazperf9Extractor3getERNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $26 = sp + 545|0;
 $27 = sp + 544|0;
 $56 = sp + 8|0;
 $59 = sp + 543|0;
 $121 = sp + 542|0;
 $122 = sp + 541|0;
 $126 = sp;
 $129 = sp + 540|0;
 $140 = sp + 12|0;
 $137 = $0;
 $138 = $1;
 $139 = $2;
 $141 = $137;
 $142 = ((($141)) + 12|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = $139;
 $134 = $140;
 $135 = $143;
 $136 = $144;
 $145 = $134;
 $133 = $145;
 $146 = $133;
 $132 = $146;
 $147 = $132;
 ;HEAP32[$147>>2]=0|0;HEAP32[$147+4>>2]=0|0;HEAP32[$147+8>>2]=0|0;
 $131 = $146;
 $148 = $131;
 $130 = $148;
 $149 = $135;
 $150 = $136;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($145,$149,$150);
 $151 = $138;
 $127 = $151;
 $128 = $140;
 $152 = $127;
 $153 = $128;
 ;HEAP8[$126>>0]=HEAP8[$129>>0]|0;
 $124 = $152;
 $125 = $153;
 $154 = $124;
 $123 = $154;
 $155 = $123;
 $120 = $155;
 $156 = $120;
 $119 = $156;
 $118 = $156;
 $157 = $118;
 $117 = $157;
 $158 = $117;
 $116 = $158;
 $159 = $116;
 $160 = ((($159)) + 11|0);
 $161 = HEAP8[$160>>0]|0;
 $162 = $161&255;
 $163 = $162 & 128;
 $164 = ($163|0)!=(0);
 if ($164) {
  $111 = $156;
  $165 = $111;
  $110 = $165;
  $166 = $110;
  $109 = $166;
  $167 = $109;
  $168 = HEAP32[$167>>2]|0;
  HEAP8[$121>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($168,$121);
  $102 = $156;
  $103 = 0;
  $169 = $102;
  $170 = $103;
  $101 = $169;
  $171 = $101;
  $100 = $171;
  $172 = $100;
  $173 = ((($172)) + 4|0);
  HEAP32[$173>>2] = $170;
 } else {
  $108 = $156;
  $174 = $108;
  $107 = $174;
  $175 = $107;
  $106 = $175;
  $176 = $106;
  $105 = $176;
  $177 = $105;
  $104 = $177;
  $178 = $104;
  HEAP8[$122>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($178,$122);
  $114 = $156;
  $115 = 0;
  $179 = $114;
  $180 = $115;
  $181 = $180&255;
  $113 = $179;
  $182 = $113;
  $112 = $182;
  $183 = $112;
  $184 = ((($183)) + 11|0);
  HEAP8[$184>>0] = $181;
 }
 $99 = $155;
 $185 = $99;
 $98 = $185;
 $186 = $98;
 $97 = $186;
 $187 = $97;
 $188 = ((($187)) + 11|0);
 $189 = HEAP8[$188>>0]|0;
 $190 = $189&255;
 $191 = $190 & 128;
 $192 = ($191|0)!=(0);
 if ($192) {
  $96 = $155;
  $193 = $96;
  $95 = $193;
  $194 = $95;
  $94 = $194;
  $195 = $94;
  $73 = $155;
  $196 = $73;
  $72 = $196;
  $197 = $72;
  $71 = $197;
  $198 = $71;
  $199 = HEAP32[$198>>2]|0;
  $70 = $155;
  $200 = $70;
  $69 = $200;
  $201 = $69;
  $68 = $201;
  $202 = $68;
  $67 = $202;
  $203 = $67;
  $204 = ((($203)) + 11|0);
  $205 = HEAP8[$204>>0]|0;
  $206 = $205&255;
  $207 = $206 & 128;
  $208 = ($207|0)!=(0);
  if ($208) {
   $66 = $200;
   $209 = $66;
   $65 = $209;
   $210 = $65;
   $64 = $210;
   $211 = $64;
   $212 = ((($211)) + 8|0);
   $213 = HEAP32[$212>>2]|0;
   $214 = $213 & 2147483647;
   $215 = $214;
  } else {
   $215 = 11;
  }
  $83 = $195;
  $84 = $199;
  $85 = $215;
  $216 = $83;
  $217 = $84;
  $218 = $85;
  $80 = $216;
  $81 = $217;
  $82 = $218;
  $219 = $81;
  $220 = $82;
  $77 = $219;
  $78 = $220;
  $79 = 1;
  $221 = $77;
  $222 = $78;
  $223 = $79;
  $74 = $221;
  $75 = $222;
  $76 = $223;
  $224 = $74;
  $225 = $75;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($224,$225);
  $88 = $155;
  $89 = 0;
  $226 = $88;
  $227 = $89;
  $228 = -2147483648 | $227;
  $87 = $226;
  $229 = $87;
  $86 = $229;
  $230 = $86;
  $231 = ((($230)) + 8|0);
  HEAP32[$231>>2] = $228;
  $92 = $155;
  $93 = 0;
  $232 = $92;
  $233 = $93;
  $234 = $233&255;
  $91 = $232;
  $235 = $91;
  $90 = $235;
  $236 = $90;
  $237 = ((($236)) + 11|0);
  HEAP8[$237>>0] = $234;
 }
 $238 = $125;
 $63 = $238;
 $239 = $63;
 $62 = $239;
 $240 = $62;
 $61 = $154;
 $241 = $61;
 $60 = $241;
 $242 = $60;
 ;HEAP32[$242>>2]=HEAP32[$240>>2]|0;HEAP32[$242+4>>2]=HEAP32[$240+4>>2]|0;HEAP32[$242+8>>2]=HEAP32[$240+8>>2]|0;
 $243 = $125;
 $57 = $154;
 $58 = $243;
 $244 = $57;
 $245 = $58;
 ;HEAP8[$56>>0]=HEAP8[$59>>0]|0;
 $54 = $244;
 $55 = $245;
 $246 = $54;
 $247 = $55;
 $53 = $247;
 $248 = $53;
 $52 = $248;
 $249 = $52;
 $51 = $249;
 $250 = $51;
 $47 = $250;
 $50 = $246;
 $251 = $50;
 $49 = $251;
 $252 = $49;
 $48 = $252;
 $253 = $125;
 $44 = $253;
 $254 = $44;
 $43 = $254;
 $255 = $43;
 $42 = $255;
 $256 = $42;
 $45 = $256;
 $46 = 0;
 while(1) {
  $257 = $46;
  $258 = ($257>>>0)<(3);
  if (!($258)) {
   break;
  }
  $259 = $45;
  $260 = $46;
  $261 = (($259) + ($260<<2)|0);
  HEAP32[$261>>2] = 0;
  $262 = $46;
  $263 = (($262) + 1)|0;
  $46 = $263;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($140);
 $264 = $139;
 $265 = ((($141)) + 12|0);
 $266 = HEAP32[$265>>2]|0;
 $267 = (($266) + ($264)|0);
 HEAP32[$265>>2] = $267;
 while(1) {
  $268 = $139;
  $269 = (($268) + -1)|0;
  $139 = $269;
  $270 = ($269|0)!=(0);
  if (!($270)) {
   label = 22;
   break;
  }
  $271 = $138;
  $272 = $139;
  $40 = $271;
  $41 = $272;
  $273 = $40;
  $39 = $273;
  $274 = $39;
  $38 = $274;
  $275 = $38;
  $37 = $275;
  $276 = $37;
  $36 = $276;
  $277 = $36;
  $278 = ((($277)) + 11|0);
  $279 = HEAP8[$278>>0]|0;
  $280 = $279&255;
  $281 = $280 & 128;
  $282 = ($281|0)!=(0);
  if ($282) {
   $30 = $274;
   $283 = $30;
   $29 = $283;
   $284 = $29;
   $28 = $284;
   $285 = $28;
   $286 = HEAP32[$285>>2]|0;
   $294 = $286;
  } else {
   $35 = $274;
   $287 = $35;
   $34 = $287;
   $288 = $34;
   $33 = $288;
   $289 = $33;
   $32 = $289;
   $290 = $32;
   $31 = $290;
   $291 = $31;
   $294 = $291;
  }
  $292 = $41;
  $293 = (($294) + ($292)|0);
  $295 = HEAP8[$293>>0]|0;
  $296 = $295 << 24 >> 24;
  $297 = ($296|0)!=(0);
  if ($297) {
   label = 22;
   break;
  }
  $298 = $139;
  $299 = ($298|0)==(0);
  if ($299) {
   break;
  }
 }
 if ((label|0) == 22) {
  $330 = $138;
  $331 = $139;
  $332 = (($331) + 1)|0;
  $3 = $330;
  $4 = $332;
  $333 = $3;
  $334 = $4;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($333,$334,0);
  STACKTOP = sp;return;
 }
 $300 = $138;
 $25 = $300;
 $301 = $25;
 $24 = $301;
 $23 = $301;
 $302 = $23;
 $22 = $302;
 $303 = $22;
 $21 = $303;
 $304 = $21;
 $305 = ((($304)) + 11|0);
 $306 = HEAP8[$305>>0]|0;
 $307 = $306&255;
 $308 = $307 & 128;
 $309 = ($308|0)!=(0);
 if ($309) {
  $16 = $301;
  $310 = $16;
  $15 = $310;
  $311 = $15;
  $14 = $311;
  $312 = $14;
  $313 = HEAP32[$312>>2]|0;
  HEAP8[$26>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($313,$26);
  $7 = $301;
  $8 = 0;
  $314 = $7;
  $315 = $8;
  $6 = $314;
  $316 = $6;
  $5 = $316;
  $317 = $5;
  $318 = ((($317)) + 4|0);
  HEAP32[$318>>2] = $315;
  STACKTOP = sp;return;
 } else {
  $13 = $301;
  $319 = $13;
  $12 = $319;
  $320 = $12;
  $11 = $320;
  $321 = $11;
  $10 = $321;
  $322 = $10;
  $9 = $322;
  $323 = $9;
  HEAP8[$27>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($323,$27);
  $19 = $301;
  $20 = 0;
  $324 = $19;
  $325 = $20;
  $326 = $325&255;
  $18 = $324;
  $327 = $18;
  $17 = $327;
  $328 = $17;
  $329 = ((($328)) + 11|0);
  HEAP8[$329>>0] = $326;
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf7laz_vlrC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $11 = sp + 8|0;
 $13 = $0;
 $14 = $13;
 __ZN7lazperf3vlrC2Ev($14);
 HEAP32[$14>>2] = (10280);
 $15 = ((($14)) + 40|0);
 $12 = $15;
 $16 = $12;
 $10 = $16;
 $17 = $10;
 $9 = $17;
 HEAP32[$17>>2] = 0;
 $18 = ((($17)) + 4|0);
 HEAP32[$18>>2] = 0;
 $19 = ((($17)) + 8|0);
 HEAP32[$11>>2] = 0;
 $7 = $19;
 $8 = $11;
 $20 = $7;
 $21 = $8;
 $6 = $21;
 $22 = $6;
 $2 = $20;
 $3 = $22;
 $23 = $2;
 $24 = $3;
 $1 = $24;
 HEAP32[$23>>2] = 0;
 $5 = $20;
 $25 = $5;
 $4 = $25;
 STACKTOP = sp;return;
}
function __ZN7lazperf3vlrC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = (10304);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $10 = sp + 8|0;
 $15 = sp + 193|0;
 $24 = sp;
 $27 = sp + 192|0;
 $35 = sp + 72|0;
 $38 = sp + 60|0;
 $46 = sp + 12|0;
 $43 = $0;
 $44 = $1;
 $47 = $43;
 $42 = $47;
 $48 = $42;
 $49 = ((($48)) + 8|0);
 $41 = $49;
 $50 = $41;
 $40 = $50;
 $51 = $40;
 $45 = $51;
 $39 = $47;
 $52 = $39;
 $53 = ((($52)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = HEAP32[$52>>2]|0;
 $56 = $54;
 $57 = $55;
 $58 = (($56) - ($57))|0;
 $59 = (($58|0) / 6)&-1;
 $60 = (($59) + 1)|0;
 $34 = $47;
 HEAP32[$35>>2] = $60;
 $61 = $34;
 $62 = (__ZNKSt3__26vectorIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEE8max_sizeEv($61)|0);
 $36 = $62;
 $63 = HEAP32[$35>>2]|0;
 $64 = $36;
 $65 = ($63>>>0)>($64>>>0);
 if ($65) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($61);
  // unreachable;
 }
 $32 = $61;
 $66 = $32;
 $31 = $66;
 $67 = $31;
 $30 = $67;
 $68 = $30;
 $69 = ((($68)) + 8|0);
 $29 = $69;
 $70 = $29;
 $28 = $70;
 $71 = $28;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 6)&-1;
 $37 = $77;
 $78 = $37;
 $79 = $36;
 $80 = (($79>>>0) / 2)&-1;
 $81 = ($78>>>0)>=($80>>>0);
 if ($81) {
  $82 = $36;
  $33 = $82;
 } else {
  $83 = $37;
  $84 = $83<<1;
  HEAP32[$38>>2] = $84;
  $25 = $38;
  $26 = $35;
  $85 = $25;
  $86 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $85;
  $23 = $86;
  $87 = $22;
  $88 = $23;
  $19 = $24;
  $20 = $87;
  $21 = $88;
  $89 = $20;
  $90 = HEAP32[$89>>2]|0;
  $91 = $21;
  $92 = HEAP32[$91>>2]|0;
  $93 = ($90>>>0)<($92>>>0);
  $94 = $23;
  $95 = $22;
  $96 = $93 ? $94 : $95;
  $97 = HEAP32[$96>>2]|0;
  $33 = $97;
 }
 $98 = $33;
 $18 = $47;
 $99 = $18;
 $100 = ((($99)) + 4|0);
 $101 = HEAP32[$100>>2]|0;
 $102 = HEAP32[$99>>2]|0;
 $103 = $101;
 $104 = $102;
 $105 = (($103) - ($104))|0;
 $106 = (($105|0) / 6)&-1;
 $107 = $45;
 __ZNSt3__214__split_bufferIN7lazperf7laz_vlr8laz_itemERNS_9allocatorIS3_EEEC2EmmS6_($46,$98,$106,$107);
 $108 = $45;
 $109 = ((($46)) + 8|0);
 $110 = HEAP32[$109>>2]|0;
 $17 = $110;
 $111 = $17;
 $112 = $44;
 $16 = $112;
 $113 = $16;
 $12 = $108;
 $13 = $111;
 $14 = $113;
 $114 = $12;
 $115 = $13;
 $116 = $14;
 $11 = $116;
 $117 = $11;
 ;HEAP8[$10>>0]=HEAP8[$15>>0]|0;
 $7 = $114;
 $8 = $115;
 $9 = $117;
 $118 = $7;
 $119 = $8;
 $120 = $9;
 $6 = $120;
 $121 = $6;
 $3 = $118;
 $4 = $119;
 $5 = $121;
 $122 = $4;
 $123 = $5;
 $2 = $123;
 $124 = $2;
 ;HEAP16[$122>>1]=HEAP16[$124>>1]|0;HEAP16[$122+2>>1]=HEAP16[$124+2>>1]|0;HEAP16[$122+4>>1]=HEAP16[$124+4>>1]|0;
 $125 = ((($46)) + 8|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = ((($126)) + 6|0);
 HEAP32[$125>>2] = $127;
 __ZNSt3__26vectorIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($47,$46);
 __ZNSt3__214__split_bufferIN7lazperf7laz_vlr8laz_itemERNS_9allocatorIS3_EEED2Ev($46);
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN7lazperf7laz_vlr8laz_itemERNS_9allocatorIS3_EEEC2EmmS6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $36 = sp;
 $32 = $0;
 $33 = $1;
 $34 = $2;
 $35 = $3;
 $37 = $32;
 $38 = ((($37)) + 12|0);
 HEAP32[$36>>2] = 0;
 $39 = $35;
 $29 = $38;
 $30 = $36;
 $31 = $39;
 $40 = $29;
 $41 = $30;
 $28 = $41;
 $42 = $28;
 $22 = $40;
 $23 = $42;
 $43 = $22;
 $44 = $23;
 $21 = $44;
 HEAP32[$43>>2] = 0;
 $45 = ((($40)) + 4|0);
 $46 = $31;
 $24 = $46;
 $47 = $24;
 $26 = $45;
 $27 = $47;
 $48 = $26;
 $49 = $27;
 $25 = $49;
 $50 = $25;
 HEAP32[$48>>2] = $50;
 $51 = $33;
 $52 = ($51|0)!=(0);
 do {
  if ($52) {
   $6 = $37;
   $53 = $6;
   $54 = ((($53)) + 12|0);
   $5 = $54;
   $55 = $5;
   $56 = ((($55)) + 4|0);
   $4 = $56;
   $57 = $4;
   $58 = HEAP32[$57>>2]|0;
   $59 = $33;
   $16 = $58;
   $17 = $59;
   $60 = $16;
   $61 = $17;
   $13 = $60;
   $14 = $61;
   $15 = 0;
   $62 = $13;
   $63 = $14;
   $12 = $62;
   $64 = ($63>>>0)>(715827882);
   if ($64) {
    $9 = 21003;
    $65 = (___cxa_allocate_exception(8)|0);
    $66 = $9;
    $7 = $65;
    $8 = $66;
    $67 = $7;
    $68 = $8;
    __ZNSt11logic_errorC2EPKc($67,$68);
    HEAP32[$67>>2] = (17588);
    ___cxa_throw(($65|0),(9800|0),(617|0));
    // unreachable;
   } else {
    $69 = $14;
    $70 = ($69*6)|0;
    $10 = $70;
    $11 = 2;
    $71 = $10;
    $72 = (__Znwm($71)|0);
    $73 = $72;
    break;
   }
  } else {
   $73 = 0;
  }
 } while(0);
 HEAP32[$37>>2] = $73;
 $74 = HEAP32[$37>>2]|0;
 $75 = $34;
 $76 = (($74) + (($75*6)|0)|0);
 $77 = ((($37)) + 8|0);
 HEAP32[$77>>2] = $76;
 $78 = ((($37)) + 4|0);
 HEAP32[$78>>2] = $76;
 $79 = HEAP32[$37>>2]|0;
 $80 = $33;
 $81 = (($79) + (($80*6)|0)|0);
 $20 = $37;
 $82 = $20;
 $83 = ((($82)) + 12|0);
 $19 = $83;
 $84 = $19;
 $18 = $84;
 $85 = $18;
 HEAP32[$85>>2] = $81;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($106|0) / 6)&-1;
 $108 = (($95) + (($107*6)|0)|0);
 $69 = $89;
 $109 = $69;
 $110 = HEAP32[$109>>2]|0;
 $68 = $110;
 $111 = $68;
 $70 = $89;
 $112 = $70;
 $113 = ((($112)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$112>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 6)&-1;
 $120 = (($111) + (($119*6)|0)|0);
 $72 = $89;
 $121 = $72;
 $122 = HEAP32[$121>>2]|0;
 $71 = $122;
 $123 = $71;
 $77 = $89;
 $124 = $77;
 $76 = $124;
 $125 = $76;
 $75 = $125;
 $126 = $75;
 $127 = ((($126)) + 8|0);
 $74 = $127;
 $128 = $74;
 $73 = $128;
 $129 = $73;
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$125>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 6)&-1;
 $136 = (($123) + (($135*6)|0)|0);
 $78 = $89;
 $79 = $92;
 $80 = $108;
 $81 = $120;
 $82 = $136;
 $4 = $88;
 $137 = $4;
 $138 = ((($137)) + 8|0);
 $3 = $138;
 $139 = $3;
 $2 = $139;
 $140 = $2;
 $141 = HEAP32[$88>>2]|0;
 $142 = ((($88)) + 4|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = $87;
 $145 = ((($144)) + 4|0);
 $5 = $140;
 $6 = $141;
 $7 = $143;
 $8 = $145;
 $146 = $7;
 $147 = $6;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($150|0) / 6)&-1;
 $9 = $151;
 $152 = $9;
 $153 = $8;
 $154 = HEAP32[$153>>2]|0;
 $155 = (0 - ($152))|0;
 $156 = (($154) + (($155*6)|0)|0);
 HEAP32[$153>>2] = $156;
 $157 = $9;
 $158 = ($157|0)>(0);
 if ($158) {
  $159 = $8;
  $160 = HEAP32[$159>>2]|0;
  $161 = $6;
  $162 = $9;
  $163 = ($162*6)|0;
  _memcpy(($160|0),($161|0),($163|0))|0;
 }
 $164 = $87;
 $165 = ((($164)) + 4|0);
 $13 = $88;
 $14 = $165;
 $166 = $13;
 $12 = $166;
 $167 = $12;
 $168 = HEAP32[$167>>2]|0;
 HEAP32[$15>>2] = $168;
 $169 = $14;
 $10 = $169;
 $170 = $10;
 $171 = HEAP32[$170>>2]|0;
 $172 = $13;
 HEAP32[$172>>2] = $171;
 $11 = $15;
 $173 = $11;
 $174 = HEAP32[$173>>2]|0;
 $175 = $14;
 HEAP32[$175>>2] = $174;
 $176 = ((($88)) + 4|0);
 $177 = $87;
 $178 = ((($177)) + 8|0);
 $19 = $176;
 $20 = $178;
 $179 = $19;
 $18 = $179;
 $180 = $18;
 $181 = HEAP32[$180>>2]|0;
 HEAP32[$21>>2] = $181;
 $182 = $20;
 $16 = $182;
 $183 = $16;
 $184 = HEAP32[$183>>2]|0;
 $185 = $19;
 HEAP32[$185>>2] = $184;
 $17 = $21;
 $186 = $17;
 $187 = HEAP32[$186>>2]|0;
 $188 = $20;
 HEAP32[$188>>2] = $187;
 $24 = $88;
 $189 = $24;
 $190 = ((($189)) + 8|0);
 $23 = $190;
 $191 = $23;
 $22 = $191;
 $192 = $22;
 $193 = $87;
 $27 = $193;
 $194 = $27;
 $195 = ((($194)) + 12|0);
 $26 = $195;
 $196 = $26;
 $25 = $196;
 $197 = $25;
 $31 = $192;
 $32 = $197;
 $198 = $31;
 $30 = $198;
 $199 = $30;
 $200 = HEAP32[$199>>2]|0;
 HEAP32[$33>>2] = $200;
 $201 = $32;
 $28 = $201;
 $202 = $28;
 $203 = HEAP32[$202>>2]|0;
 $204 = $31;
 HEAP32[$204>>2] = $203;
 $29 = $33;
 $205 = $29;
 $206 = HEAP32[$205>>2]|0;
 $207 = $32;
 HEAP32[$207>>2] = $206;
 $208 = $87;
 $209 = ((($208)) + 4|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = $87;
 HEAP32[$211>>2] = $210;
 $34 = $88;
 $212 = $34;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = HEAP32[$212>>2]|0;
 $216 = $214;
 $217 = $215;
 $218 = (($216) - ($217))|0;
 $219 = (($218|0) / 6)&-1;
 $58 = $88;
 $59 = $219;
 $220 = $58;
 $57 = $220;
 $221 = $57;
 $222 = HEAP32[$221>>2]|0;
 $56 = $222;
 $223 = $56;
 $36 = $220;
 $224 = $36;
 $225 = HEAP32[$224>>2]|0;
 $35 = $225;
 $226 = $35;
 $41 = $220;
 $227 = $41;
 $40 = $227;
 $228 = $40;
 $39 = $228;
 $229 = $39;
 $230 = ((($229)) + 8|0);
 $38 = $230;
 $231 = $38;
 $37 = $231;
 $232 = $37;
 $233 = HEAP32[$232>>2]|0;
 $234 = HEAP32[$228>>2]|0;
 $235 = $233;
 $236 = $234;
 $237 = (($235) - ($236))|0;
 $238 = (($237|0) / 6)&-1;
 $239 = (($226) + (($238*6)|0)|0);
 $43 = $220;
 $240 = $43;
 $241 = HEAP32[$240>>2]|0;
 $42 = $241;
 $242 = $42;
 $48 = $220;
 $243 = $48;
 $47 = $243;
 $244 = $47;
 $46 = $244;
 $245 = $46;
 $246 = ((($245)) + 8|0);
 $45 = $246;
 $247 = $45;
 $44 = $247;
 $248 = $44;
 $249 = HEAP32[$248>>2]|0;
 $250 = HEAP32[$244>>2]|0;
 $251 = $249;
 $252 = $250;
 $253 = (($251) - ($252))|0;
 $254 = (($253|0) / 6)&-1;
 $255 = (($242) + (($254*6)|0)|0);
 $50 = $220;
 $256 = $50;
 $257 = HEAP32[$256>>2]|0;
 $49 = $257;
 $258 = $49;
 $259 = $59;
 $260 = (($258) + (($259*6)|0)|0);
 $51 = $220;
 $52 = $223;
 $53 = $239;
 $54 = $255;
 $55 = $260;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN7lazperf7laz_vlr8laz_itemERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -6|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
 }
 $65 = HEAP32[$40>>2]|0;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $67 = $19;
 $68 = ((($67)) + 12|0);
 $18 = $68;
 $69 = $18;
 $70 = ((($69)) + 4|0);
 $17 = $70;
 $71 = $17;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$40>>2]|0;
 $4 = $40;
 $74 = $4;
 $3 = $74;
 $75 = $3;
 $76 = ((($75)) + 12|0);
 $2 = $76;
 $77 = $2;
 $1 = $77;
 $78 = $1;
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$74>>2]|0;
 $81 = $79;
 $82 = $80;
 $83 = (($81) - ($82))|0;
 $84 = (($83|0) / 6)&-1;
 $14 = $72;
 $15 = $73;
 $16 = $84;
 $85 = $14;
 $86 = $15;
 $87 = $16;
 $11 = $85;
 $12 = $86;
 $13 = $87;
 $88 = $12;
 $89 = $13;
 $90 = ($89*6)|0;
 $8 = $88;
 $9 = $90;
 $10 = 2;
 $91 = $8;
 $92 = $9;
 $93 = $10;
 $5 = $91;
 $6 = $92;
 $7 = $93;
 $94 = $5;
 $95 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($94,$95);
 STACKTOP = sp;return;
}
function __ZN7lazperf7laz_vlr4readERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(496|0);
 $29 = sp + 8|0;
 $32 = sp + 486|0;
 $62 = sp;
 $67 = sp + 485|0;
 $77 = sp + 484|0;
 $111 = sp + 48|0;
 $112 = sp + 32|0;
 $113 = sp + 482|0;
 $114 = sp + 16|0;
 $116 = sp + 476|0;
 $109 = $0;
 $110 = $1;
 $117 = $109;
 __ZNSt3__26vectorIcNS_9allocatorIcEEEC2Em($111,34);
 $118 = $110;
 $108 = $111;
 $119 = $108;
 $120 = HEAP32[$119>>2]|0;
 $107 = $120;
 $121 = $107;
 $80 = $111;
 $122 = $80;
 $123 = ((($122)) + 4|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = HEAP32[$122>>2]|0;
 $126 = $124;
 $127 = $125;
 $128 = (($126) - ($127))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($118,$121,$128)|0);
 $79 = $111;
 $129 = $79;
 $130 = HEAP32[$129>>2]|0;
 $78 = $130;
 $131 = $78;
 $49 = $111;
 $132 = $49;
 $133 = ((($132)) + 4|0);
 $134 = HEAP32[$133>>2]|0;
 $135 = HEAP32[$132>>2]|0;
 $136 = $134;
 $137 = $135;
 $138 = (($136) - ($137))|0;
 __ZN7lazperf11LeExtractorC2EPKcm($112,$131,$138);
 $139 = ((($117)) + 4|0);
 $140 = (__ZN7lazperf11LeExtractorrsERt($112,$139)|0);
 $141 = HEAP32[$140>>2]|0;
 $142 = ((($141)) + 8|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = ((($117)) + 6|0);
 $145 = (FUNCTION_TABLE_iii[$143 & 1023]($140,$144)|0);
 $146 = HEAP32[$145>>2]|0;
 $147 = HEAP32[$146>>2]|0;
 $148 = ((($117)) + 8|0);
 $149 = (FUNCTION_TABLE_iii[$147 & 1023]($145,$148)|0);
 $150 = HEAP32[$149>>2]|0;
 $151 = HEAP32[$150>>2]|0;
 $152 = ((($117)) + 9|0);
 $153 = (FUNCTION_TABLE_iii[$151 & 1023]($149,$152)|0);
 $154 = HEAP32[$153>>2]|0;
 $155 = ((($154)) + 8|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = ((($117)) + 10|0);
 $158 = (FUNCTION_TABLE_iii[$156 & 1023]($153,$157)|0);
 $159 = HEAP32[$158>>2]|0;
 $160 = ((($159)) + 16|0);
 $161 = HEAP32[$160>>2]|0;
 $162 = ((($117)) + 12|0);
 $163 = (FUNCTION_TABLE_iii[$161 & 1023]($158,$162)|0);
 $164 = HEAP32[$163>>2]|0;
 $165 = ((($164)) + 16|0);
 $166 = HEAP32[$165>>2]|0;
 $167 = ((($117)) + 16|0);
 $168 = (FUNCTION_TABLE_iii[$166 & 1023]($163,$167)|0);
 $169 = HEAP32[$168>>2]|0;
 $170 = ((($169)) + 24|0);
 $171 = HEAP32[$170>>2]|0;
 $172 = ((($117)) + 24|0);
 $173 = (FUNCTION_TABLE_iii[$171 & 1023]($168,$172)|0);
 $174 = HEAP32[$173>>2]|0;
 $175 = ((($174)) + 24|0);
 $176 = HEAP32[$175>>2]|0;
 $177 = ((($117)) + 32|0);
 $178 = (FUNCTION_TABLE_iii[$176 & 1023]($173,$177)|0);
 $179 = HEAP32[$178>>2]|0;
 $180 = ((($179)) + 8|0);
 $181 = HEAP32[$180>>2]|0;
 (FUNCTION_TABLE_iii[$181 & 1023]($178,$113)|0);
 $182 = HEAP16[$113>>1]|0;
 $183 = $182&65535;
 $184 = ($183*6)|0;
 __ZNSt3__26vectorIcNS_9allocatorIcEEE6resizeEm($111,$184);
 $185 = $110;
 $48 = $111;
 $186 = $48;
 $187 = HEAP32[$186>>2]|0;
 $47 = $187;
 $188 = $47;
 $46 = $111;
 $189 = $46;
 $190 = ((($189)) + 4|0);
 $191 = HEAP32[$190>>2]|0;
 $192 = HEAP32[$189>>2]|0;
 $193 = $191;
 $194 = $192;
 $195 = (($193) - ($194))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($185,$188,$195)|0);
 $45 = $111;
 $196 = $45;
 $197 = HEAP32[$196>>2]|0;
 $44 = $197;
 $198 = $44;
 $2 = $111;
 $199 = $2;
 $200 = ((($199)) + 4|0);
 $201 = HEAP32[$200>>2]|0;
 $202 = HEAP32[$199>>2]|0;
 $203 = $201;
 $204 = $202;
 $205 = (($203) - ($204))|0;
 __ZN7lazperf11LeExtractorC2EPKcm($114,$198,$205);
 $206 = ((($117)) + 40|0);
 $42 = $206;
 $207 = $42;
 $41 = $207;
 $208 = $41;
 $209 = ((($208)) + 4|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = HEAP32[$208>>2]|0;
 $212 = $210;
 $213 = $211;
 $214 = (($212) - ($213))|0;
 $215 = (($214|0) / 6)&-1;
 $43 = $215;
 $40 = $207;
 $216 = $40;
 $217 = HEAP32[$216>>2]|0;
 $37 = $216;
 $38 = $217;
 $218 = $37;
 $219 = ((($218)) + 4|0);
 $220 = HEAP32[$219>>2]|0;
 $39 = $220;
 while(1) {
  $221 = $38;
  $222 = $39;
  $223 = ($221|0)!=($222|0);
  if (!($223)) {
   break;
  }
  $36 = $218;
  $224 = $36;
  $225 = ((($224)) + 8|0);
  $35 = $225;
  $226 = $35;
  $34 = $226;
  $227 = $34;
  $228 = $39;
  $229 = ((($228)) + -6|0);
  $39 = $229;
  $33 = $229;
  $230 = $33;
  $30 = $227;
  $31 = $230;
  $231 = $30;
  $232 = $31;
  ;HEAP8[$29>>0]=HEAP8[$32>>0]|0;
  $27 = $231;
  $28 = $232;
  $233 = $27;
  $234 = $28;
  $25 = $233;
  $26 = $234;
 }
 $235 = $38;
 $236 = ((($218)) + 4|0);
 HEAP32[$236>>2] = $235;
 $237 = $43;
 $22 = $207;
 $23 = $237;
 $238 = $22;
 $21 = $238;
 $239 = $21;
 $240 = HEAP32[$239>>2]|0;
 $20 = $240;
 $241 = $20;
 $4 = $238;
 $242 = $4;
 $243 = HEAP32[$242>>2]|0;
 $3 = $243;
 $244 = $3;
 $9 = $238;
 $245 = $9;
 $8 = $245;
 $246 = $8;
 $7 = $246;
 $247 = $7;
 $248 = ((($247)) + 8|0);
 $6 = $248;
 $249 = $6;
 $5 = $249;
 $250 = $5;
 $251 = HEAP32[$250>>2]|0;
 $252 = HEAP32[$246>>2]|0;
 $253 = $251;
 $254 = $252;
 $255 = (($253) - ($254))|0;
 $256 = (($255|0) / 6)&-1;
 $257 = (($244) + (($256*6)|0)|0);
 $11 = $238;
 $258 = $11;
 $259 = HEAP32[$258>>2]|0;
 $10 = $259;
 $260 = $10;
 $261 = $23;
 $262 = (($260) + (($261*6)|0)|0);
 $13 = $238;
 $263 = $13;
 $264 = HEAP32[$263>>2]|0;
 $12 = $264;
 $265 = $12;
 $14 = $238;
 $266 = $14;
 $267 = ((($266)) + 4|0);
 $268 = HEAP32[$267>>2]|0;
 $269 = HEAP32[$266>>2]|0;
 $270 = $268;
 $271 = $269;
 $272 = (($270) - ($271))|0;
 $273 = (($272|0) / 6)&-1;
 $274 = (($265) + (($273*6)|0)|0);
 $15 = $238;
 $16 = $241;
 $17 = $257;
 $18 = $262;
 $19 = $274;
 $24 = $207;
 $115 = 0;
 while(1) {
  $275 = $115;
  $276 = HEAP16[$113>>1]|0;
  $277 = $276&65535;
  $278 = ($275|0)<($277|0);
  if (!($278)) {
   break;
  }
  $279 = (__ZN7lazperf11LeExtractorrsERt($114,$116)|0);
  $280 = HEAP32[$279>>2]|0;
  $281 = ((($280)) + 8|0);
  $282 = HEAP32[$281>>2]|0;
  $283 = ((($116)) + 2|0);
  $284 = (FUNCTION_TABLE_iii[$282 & 1023]($279,$283)|0);
  $285 = HEAP32[$284>>2]|0;
  $286 = ((($285)) + 8|0);
  $287 = HEAP32[$286>>2]|0;
  $288 = ((($116)) + 4|0);
  (FUNCTION_TABLE_iii[$287 & 1023]($284,$288)|0);
  $289 = ((($117)) + 40|0);
  $75 = $289;
  $76 = $116;
  $290 = $75;
  $291 = ((($290)) + 4|0);
  $292 = HEAP32[$291>>2]|0;
  $74 = $290;
  $293 = $74;
  $294 = ((($293)) + 8|0);
  $73 = $294;
  $295 = $73;
  $72 = $295;
  $296 = $72;
  $297 = HEAP32[$296>>2]|0;
  $298 = ($292|0)!=($297|0);
  if ($298) {
   $69 = $77;
   $70 = $290;
   $71 = 1;
   $52 = $290;
   $299 = $52;
   $300 = ((($299)) + 8|0);
   $51 = $300;
   $301 = $51;
   $50 = $301;
   $302 = $50;
   $303 = ((($290)) + 4|0);
   $304 = HEAP32[$303>>2]|0;
   $53 = $304;
   $305 = $53;
   $306 = $76;
   $64 = $302;
   $65 = $305;
   $66 = $306;
   $307 = $64;
   $308 = $65;
   $309 = $66;
   $63 = $309;
   $310 = $63;
   ;HEAP8[$62>>0]=HEAP8[$67>>0]|0;
   $59 = $307;
   $60 = $308;
   $61 = $310;
   $311 = $59;
   $312 = $60;
   $313 = $61;
   $58 = $313;
   $314 = $58;
   $55 = $311;
   $56 = $312;
   $57 = $314;
   $315 = $56;
   $316 = $57;
   $54 = $316;
   $317 = $54;
   ;HEAP16[$315>>1]=HEAP16[$317>>1]|0;HEAP16[$315+2>>1]=HEAP16[$317+2>>1]|0;HEAP16[$315+4>>1]=HEAP16[$317+4>>1]|0;
   $68 = $77;
   $318 = ((($290)) + 4|0);
   $319 = HEAP32[$318>>2]|0;
   $320 = ((($319)) + 6|0);
   HEAP32[$318>>2] = $320;
  } else {
   $321 = $76;
   __ZNSt3__26vectorIN7lazperf7laz_vlr8laz_itemENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($290,$321);
  }
  $322 = $115;
  $323 = (($322) + 1)|0;
  $115 = $323;
 }
 $106 = $111;
 $324 = $106;
 $105 = $324;
 $325 = $105;
 $104 = $325;
 $326 = $104;
 $327 = HEAP32[$326>>2]|0;
 $103 = $327;
 $328 = $103;
 $82 = $325;
 $329 = $82;
 $330 = HEAP32[$329>>2]|0;
 $81 = $330;
 $331 = $81;
 $87 = $325;
 $332 = $87;
 $86 = $332;
 $333 = $86;
 $85 = $333;
 $334 = $85;
 $335 = ((($334)) + 8|0);
 $84 = $335;
 $336 = $84;
 $83 = $336;
 $337 = $83;
 $338 = HEAP32[$337>>2]|0;
 $339 = HEAP32[$333>>2]|0;
 $340 = $338;
 $341 = $339;
 $342 = (($340) - ($341))|0;
 $343 = (($331) + ($342)|0);
 $89 = $325;
 $344 = $89;
 $345 = HEAP32[$344>>2]|0;
 $88 = $345;
 $346 = $88;
 $90 = $325;
 $347 = $90;
 $348 = ((($347)) + 4|0);
 $349 = HEAP32[$348>>2]|0;
 $350 = HEAP32[$347>>2]|0;
 $351 = $349;
 $352 = $350;
 $353 = (($351) - ($352))|0;
 $354 = (($346) + ($353)|0);
 $92 = $325;
 $355 = $92;
 $356 = HEAP32[$355>>2]|0;
 $91 = $356;
 $357 = $91;
 $97 = $325;
 $358 = $97;
 $96 = $358;
 $359 = $96;
 $95 = $359;
 $360 = $95;
 $361 = ((($360)) + 8|0);
 $94 = $361;
 $362 = $94;
 $93 = $362;
 $363 = $93;
 $364 = HEAP32[$363>>2]|0;
 $365 = HEAP32[$359>>2]|0;
 $366 = $364;
 $367 = $365;
 $368 = (($366) - ($367))|0;
 $369 = (($357) + ($368)|0);
 $98 = $325;
 $99 = $328;
 $100 = $343;
 $101 = $354;
 $102 = $369;
 __ZNSt3__213__vector_baseIcNS_9allocatorIcEEED2Ev($324);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIcNS_9allocatorIcEEE6resizeEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp;
 $9 = sp + 180|0;
 $45 = $0;
 $46 = $1;
 $48 = $45;
 $44 = $48;
 $49 = $44;
 $50 = ((($49)) + 4|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = HEAP32[$49>>2]|0;
 $53 = $51;
 $54 = $52;
 $55 = (($53) - ($54))|0;
 $47 = $55;
 $56 = $47;
 $57 = $46;
 $58 = ($56>>>0)<($57>>>0);
 if ($58) {
  $59 = $46;
  $60 = $47;
  $61 = (($59) - ($60))|0;
  __ZNSt3__26vectorIcNS_9allocatorIcEEE8__appendEm($48,$61);
  STACKTOP = sp;return;
 }
 $62 = $47;
 $63 = $46;
 $64 = ($62>>>0)>($63>>>0);
 if (!($64)) {
  STACKTOP = sp;return;
 }
 $65 = HEAP32[$48>>2]|0;
 $66 = $46;
 $67 = (($65) + ($66)|0);
 $41 = $48;
 $42 = $67;
 $68 = $41;
 $69 = $42;
 $39 = $68;
 $40 = $69;
 $38 = $68;
 $70 = $38;
 $71 = ((($70)) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$70>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $43 = $76;
 $77 = $42;
 $14 = $68;
 $15 = $77;
 $78 = $14;
 $79 = ((($78)) + 4|0);
 $80 = HEAP32[$79>>2]|0;
 $16 = $80;
 while(1) {
  $81 = $15;
  $82 = $16;
  $83 = ($81|0)!=($82|0);
  if (!($83)) {
   break;
  }
  $13 = $78;
  $84 = $13;
  $85 = ((($84)) + 8|0);
  $12 = $85;
  $86 = $12;
  $11 = $86;
  $87 = $11;
  $88 = $16;
  $89 = ((($88)) + -1|0);
  $16 = $89;
  $10 = $89;
  $90 = $10;
  $7 = $87;
  $8 = $90;
  $91 = $7;
  $92 = $8;
  ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
  $4 = $91;
  $5 = $92;
  $93 = $4;
  $94 = $5;
  $2 = $93;
  $3 = $94;
 }
 $95 = $15;
 $96 = ((($78)) + 4|0);
 HEAP32[$96>>2] = $95;
 $97 = $43;
 $36 = $68;
 $37 = $97;
 $98 = $36;
 $35 = $98;
 $99 = $35;
 $100 = HEAP32[$99>>2]|0;
 $34 = $100;
 $101 = $34;
 $18 = $98;
 $102 = $18;
 $103 = HEAP32[$102>>2]|0;
 $17 = $103;
 $104 = $17;
 $23 = $98;
 $105 = $23;
 $22 = $105;
 $106 = $22;
 $21 = $106;
 $107 = $21;
 $108 = ((($107)) + 8|0);
 $20 = $108;
 $109 = $20;
 $19 = $109;
 $110 = $19;
 $111 = HEAP32[$110>>2]|0;
 $112 = HEAP32[$106>>2]|0;
 $113 = $111;
 $114 = $112;
 $115 = (($113) - ($114))|0;
 $116 = (($104) + ($115)|0);
 $25 = $98;
 $117 = $25;
 $118 = HEAP32[$117>>2]|0;
 $24 = $118;
 $119 = $24;
 $120 = $37;
 $121 = (($119) + ($120)|0);
 $27 = $98;
 $122 = $27;
 $123 = HEAP32[$122>>2]|0;
 $26 = $123;
 $124 = $26;
 $28 = $98;
 $125 = $28;
 $126 = ((($125)) + 4|0);
 $127 = HEAP32[$126>>2]|0;
 $128 = HEAP32[$125>>2]|0;
 $129 = $127;
 $130 = $128;
 $131 = (($129) - ($130))|0;
 $132 = (($124) + ($131)|0);
 $29 = $98;
 $30 = $101;
 $31 = $116;
 $32 = $121;
 $33 = $132;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIcNS_9allocatorIcEEE8__appendEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $8 = sp;
 $11 = sp + 140|0;
 $19 = sp + 76|0;
 $22 = sp + 64|0;
 $33 = sp + 4|0;
 $30 = $0;
 $31 = $1;
 $34 = $30;
 $29 = $34;
 $35 = $29;
 $36 = ((($35)) + 8|0);
 $28 = $36;
 $37 = $28;
 $27 = $37;
 $38 = $27;
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($34)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = $39;
 $43 = $41;
 $44 = (($42) - ($43))|0;
 $45 = $31;
 $46 = ($44>>>0)>=($45>>>0);
 if ($46) {
  $47 = $31;
  __ZNSt3__26vectorIcNS_9allocatorIcEEE18__construct_at_endEm($34,$47);
  STACKTOP = sp;return;
 }
 $26 = $34;
 $48 = $26;
 $49 = ((($48)) + 8|0);
 $25 = $49;
 $50 = $25;
 $24 = $50;
 $51 = $24;
 $32 = $51;
 $23 = $34;
 $52 = $23;
 $53 = ((($52)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = HEAP32[$52>>2]|0;
 $56 = $54;
 $57 = $55;
 $58 = (($56) - ($57))|0;
 $59 = $31;
 $60 = (($58) + ($59))|0;
 $18 = $34;
 HEAP32[$19>>2] = $60;
 $61 = $18;
 $62 = (__ZNKSt3__26vectorIcNS_9allocatorIcEEE8max_sizeEv($61)|0);
 $20 = $62;
 $63 = HEAP32[$19>>2]|0;
 $64 = $20;
 $65 = ($63>>>0)>($64>>>0);
 if ($65) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($61);
  // unreachable;
 }
 $16 = $61;
 $66 = $16;
 $15 = $66;
 $67 = $15;
 $14 = $67;
 $68 = $14;
 $69 = ((($68)) + 8|0);
 $13 = $69;
 $70 = $13;
 $12 = $70;
 $71 = $12;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $21 = $76;
 $77 = $21;
 $78 = $20;
 $79 = (($78>>>0) / 2)&-1;
 $80 = ($77>>>0)>=($79>>>0);
 if ($80) {
  $81 = $20;
  $17 = $81;
 } else {
  $82 = $21;
  $83 = $82<<1;
  HEAP32[$22>>2] = $83;
  $9 = $22;
  $10 = $19;
  $84 = $9;
  $85 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $84;
  $7 = $85;
  $86 = $6;
  $87 = $7;
  $3 = $8;
  $4 = $86;
  $5 = $87;
  $88 = $4;
  $89 = HEAP32[$88>>2]|0;
  $90 = $5;
  $91 = HEAP32[$90>>2]|0;
  $92 = ($89>>>0)<($91>>>0);
  $93 = $7;
  $94 = $6;
  $95 = $92 ? $93 : $94;
  $96 = HEAP32[$95>>2]|0;
  $17 = $96;
 }
 $97 = $17;
 $2 = $34;
 $98 = $2;
 $99 = ((($98)) + 4|0);
 $100 = HEAP32[$99>>2]|0;
 $101 = HEAP32[$98>>2]|0;
 $102 = $100;
 $103 = $101;
 $104 = (($102) - ($103))|0;
 $105 = $32;
 __ZNSt3__214__split_bufferIcRNS_9allocatorIcEEEC2EmmS3_($33,$97,$104,$105);
 $106 = $31;
 __ZNSt3__214__split_bufferIcRNS_9allocatorIcEEE18__construct_at_endEm($33,$106);
 __ZNSt3__26vectorIcNS_9allocatorIcEEE26__swap_out_circular_bufferERNS_14__split_bufferIcRS2_EE($34,$33);
 __ZNSt3__214__split_bufferIcRNS_9allocatorIcEEED2Ev($33);
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIcRNS_9allocatorIcEEEC2EmmS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $33 = sp;
 $29 = $0;
 $30 = $1;
 $31 = $2;
 $32 = $3;
 $34 = $29;
 $35 = ((($34)) + 12|0);
 HEAP32[$33>>2] = 0;
 $36 = $32;
 $26 = $35;
 $27 = $33;
 $28 = $36;
 $37 = $26;
 $38 = $27;
 $25 = $38;
 $39 = $25;
 $19 = $37;
 $20 = $39;
 $40 = $19;
 $41 = $20;
 $18 = $41;
 HEAP32[$40>>2] = 0;
 $42 = ((($37)) + 4|0);
 $43 = $28;
 $21 = $43;
 $44 = $21;
 $23 = $42;
 $24 = $44;
 $45 = $23;
 $46 = $24;
 $22 = $46;
 $47 = $22;
 HEAP32[$45>>2] = $47;
 $48 = $30;
 $49 = ($48|0)!=(0);
 if ($49) {
  $6 = $34;
  $50 = $6;
  $51 = ((($50)) + 12|0);
  $5 = $51;
  $52 = $5;
  $53 = ((($52)) + 4|0);
  $4 = $53;
  $54 = $4;
  $55 = HEAP32[$54>>2]|0;
  $56 = $30;
  $13 = $55;
  $14 = $56;
  $57 = $13;
  $58 = $14;
  $10 = $57;
  $11 = $58;
  $12 = 0;
  $59 = $10;
  $9 = $59;
  $60 = $11;
  $7 = $60;
  $8 = 1;
  $61 = $7;
  $62 = (__Znwm($61)|0);
  $63 = $62;
 } else {
  $63 = 0;
 }
 HEAP32[$34>>2] = $63;
 $64 = HEAP32[$34>>2]|0;
 $65 = $31;
 $66 = (($64) + ($65)|0);
 $67 = ((($34)) + 8|0);
 HEAP32[$67>>2] = $66;
 $68 = ((($34)) + 4|0);
 HEAP32[$68>>2] = $66;
 $69 = HEAP32[$34>>2]|0;
 $70 = $30;
 $71 = (($69) + ($70)|0);
 $17 = $34;
 $72 = $17;
 $73 = ((($72)) + 12|0);
 $16 = $73;
 $74 = $16;
 $15 = $74;
 $75 = $15;
 HEAP32[$75>>2] = $71;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIcRNS_9allocatorIcEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp;
 $10 = sp + 56|0;
 $14 = $0;
 $15 = $1;
 $17 = $14;
 $13 = $17;
 $18 = $13;
 $19 = ((($18)) + 12|0);
 $12 = $19;
 $20 = $12;
 $21 = ((($20)) + 4|0);
 $11 = $21;
 $22 = $11;
 $23 = HEAP32[$22>>2]|0;
 $16 = $23;
 while(1) {
  $24 = $16;
  $25 = ((($17)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $2 = $26;
  $27 = $2;
  $8 = $24;
  $9 = $27;
  $28 = $8;
  $29 = $9;
  ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
  $5 = $28;
  $6 = $29;
  $30 = $5;
  $31 = $6;
  $3 = $30;
  $4 = $31;
  $32 = $4;
  HEAP8[$32>>0] = 0;
  $33 = ((($17)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 1|0);
  HEAP32[$33>>2] = $35;
  $36 = $15;
  $37 = (($36) + -1)|0;
  $15 = $37;
  $38 = $15;
  $39 = ($38>>>0)>(0);
  if (!($39)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIcNS_9allocatorIcEEE26__swap_out_circular_bufferERNS_14__split_bufferIcRS2_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($95) + ($106)|0);
 $69 = $89;
 $108 = $69;
 $109 = HEAP32[$108>>2]|0;
 $68 = $109;
 $110 = $68;
 $70 = $89;
 $111 = $70;
 $112 = ((($111)) + 4|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = HEAP32[$111>>2]|0;
 $115 = $113;
 $116 = $114;
 $117 = (($115) - ($116))|0;
 $118 = (($110) + ($117)|0);
 $72 = $89;
 $119 = $72;
 $120 = HEAP32[$119>>2]|0;
 $71 = $120;
 $121 = $71;
 $77 = $89;
 $122 = $77;
 $76 = $122;
 $123 = $76;
 $75 = $123;
 $124 = $75;
 $125 = ((($124)) + 8|0);
 $74 = $125;
 $126 = $74;
 $73 = $126;
 $127 = $73;
 $128 = HEAP32[$127>>2]|0;
 $129 = HEAP32[$123>>2]|0;
 $130 = $128;
 $131 = $129;
 $132 = (($130) - ($131))|0;
 $133 = (($121) + ($132)|0);
 $78 = $89;
 $79 = $92;
 $80 = $107;
 $81 = $118;
 $82 = $133;
 $4 = $88;
 $134 = $4;
 $135 = ((($134)) + 8|0);
 $3 = $135;
 $136 = $3;
 $2 = $136;
 $137 = $2;
 $138 = HEAP32[$88>>2]|0;
 $139 = ((($88)) + 4|0);
 $140 = HEAP32[$139>>2]|0;
 $141 = $87;
 $142 = ((($141)) + 4|0);
 $5 = $137;
 $6 = $138;
 $7 = $140;
 $8 = $142;
 $143 = $7;
 $144 = $6;
 $145 = $143;
 $146 = $144;
 $147 = (($145) - ($146))|0;
 $9 = $147;
 $148 = $9;
 $149 = $8;
 $150 = HEAP32[$149>>2]|0;
 $151 = (0 - ($148))|0;
 $152 = (($150) + ($151)|0);
 HEAP32[$149>>2] = $152;
 $153 = $9;
 $154 = ($153|0)>(0);
 if ($154) {
  $155 = $8;
  $156 = HEAP32[$155>>2]|0;
  $157 = $6;
  $158 = $9;
  _memcpy(($156|0),($157|0),($158|0))|0;
 }
 $159 = $87;
 $160 = ((($159)) + 4|0);
 $13 = $88;
 $14 = $160;
 $161 = $13;
 $12 = $161;
 $162 = $12;
 $163 = HEAP32[$162>>2]|0;
 HEAP32[$15>>2] = $163;
 $164 = $14;
 $10 = $164;
 $165 = $10;
 $166 = HEAP32[$165>>2]|0;
 $167 = $13;
 HEAP32[$167>>2] = $166;
 $11 = $15;
 $168 = $11;
 $169 = HEAP32[$168>>2]|0;
 $170 = $14;
 HEAP32[$170>>2] = $169;
 $171 = ((($88)) + 4|0);
 $172 = $87;
 $173 = ((($172)) + 8|0);
 $19 = $171;
 $20 = $173;
 $174 = $19;
 $18 = $174;
 $175 = $18;
 $176 = HEAP32[$175>>2]|0;
 HEAP32[$21>>2] = $176;
 $177 = $20;
 $16 = $177;
 $178 = $16;
 $179 = HEAP32[$178>>2]|0;
 $180 = $19;
 HEAP32[$180>>2] = $179;
 $17 = $21;
 $181 = $17;
 $182 = HEAP32[$181>>2]|0;
 $183 = $20;
 HEAP32[$183>>2] = $182;
 $24 = $88;
 $184 = $24;
 $185 = ((($184)) + 8|0);
 $23 = $185;
 $186 = $23;
 $22 = $186;
 $187 = $22;
 $188 = $87;
 $27 = $188;
 $189 = $27;
 $190 = ((($189)) + 12|0);
 $26 = $190;
 $191 = $26;
 $25 = $191;
 $192 = $25;
 $31 = $187;
 $32 = $192;
 $193 = $31;
 $30 = $193;
 $194 = $30;
 $195 = HEAP32[$194>>2]|0;
 HEAP32[$33>>2] = $195;
 $196 = $32;
 $28 = $196;
 $197 = $28;
 $198 = HEAP32[$197>>2]|0;
 $199 = $31;
 HEAP32[$199>>2] = $198;
 $29 = $33;
 $200 = $29;
 $201 = HEAP32[$200>>2]|0;
 $202 = $32;
 HEAP32[$202>>2] = $201;
 $203 = $87;
 $204 = ((($203)) + 4|0);
 $205 = HEAP32[$204>>2]|0;
 $206 = $87;
 HEAP32[$206>>2] = $205;
 $34 = $88;
 $207 = $34;
 $208 = ((($207)) + 4|0);
 $209 = HEAP32[$208>>2]|0;
 $210 = HEAP32[$207>>2]|0;
 $211 = $209;
 $212 = $210;
 $213 = (($211) - ($212))|0;
 $58 = $88;
 $59 = $213;
 $214 = $58;
 $57 = $214;
 $215 = $57;
 $216 = HEAP32[$215>>2]|0;
 $56 = $216;
 $217 = $56;
 $36 = $214;
 $218 = $36;
 $219 = HEAP32[$218>>2]|0;
 $35 = $219;
 $220 = $35;
 $41 = $214;
 $221 = $41;
 $40 = $221;
 $222 = $40;
 $39 = $222;
 $223 = $39;
 $224 = ((($223)) + 8|0);
 $38 = $224;
 $225 = $38;
 $37 = $225;
 $226 = $37;
 $227 = HEAP32[$226>>2]|0;
 $228 = HEAP32[$222>>2]|0;
 $229 = $227;
 $230 = $228;
 $231 = (($229) - ($230))|0;
 $232 = (($220) + ($231)|0);
 $43 = $214;
 $233 = $43;
 $234 = HEAP32[$233>>2]|0;
 $42 = $234;
 $235 = $42;
 $48 = $214;
 $236 = $48;
 $47 = $236;
 $237 = $47;
 $46 = $237;
 $238 = $46;
 $239 = ((($238)) + 8|0);
 $45 = $239;
 $240 = $45;
 $44 = $240;
 $241 = $44;
 $242 = HEAP32[$241>>2]|0;
 $243 = HEAP32[$237>>2]|0;
 $244 = $242;
 $245 = $243;
 $246 = (($244) - ($245))|0;
 $247 = (($235) + ($246)|0);
 $50 = $214;
 $248 = $50;
 $249 = HEAP32[$248>>2]|0;
 $49 = $249;
 $250 = $49;
 $251 = $59;
 $252 = (($250) + ($251)|0);
 $51 = $214;
 $52 = $217;
 $53 = $232;
 $54 = $247;
 $55 = $252;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIcRNS_9allocatorIcEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -1|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
 }
 $65 = HEAP32[$40>>2]|0;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $67 = $19;
 $68 = ((($67)) + 12|0);
 $18 = $68;
 $69 = $18;
 $70 = ((($69)) + 4|0);
 $17 = $70;
 $71 = $17;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$40>>2]|0;
 $4 = $40;
 $74 = $4;
 $3 = $74;
 $75 = $3;
 $76 = ((($75)) + 12|0);
 $2 = $76;
 $77 = $2;
 $1 = $77;
 $78 = $1;
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$74>>2]|0;
 $81 = $79;
 $82 = $80;
 $83 = (($81) - ($82))|0;
 $14 = $72;
 $15 = $73;
 $16 = $83;
 $84 = $14;
 $85 = $15;
 $86 = $16;
 $11 = $84;
 $12 = $85;
 $13 = $86;
 $87 = $12;
 $88 = $13;
 $8 = $87;
 $9 = $88;
 $10 = 1;
 $89 = $8;
 $90 = $9;
 $91 = $10;
 $5 = $89;
 $6 = $90;
 $7 = $91;
 $92 = $5;
 $93 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($92,$93);
 STACKTOP = sp;return;
}
function __ZN7lazperf7charbufD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf7charbufD2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf7charbuf7seekoffExNSt3__28ios_base7seekdirEj($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $13 = sp + 88|0;
 $22 = sp + 80|0;
 $28 = sp + 72|0;
 $34 = sp + 64|0;
 $36 = sp + 56|0;
 $38 = sp + 48|0;
 $41 = sp + 32|0;
 $43 = sp + 16|0;
 $44 = sp;
 $37 = $1;
 $45 = $38;
 $46 = $45;
 HEAP32[$46>>2] = $2;
 $47 = (($45) + 4)|0;
 $48 = $47;
 HEAP32[$48>>2] = $3;
 $39 = $4;
 $40 = $5;
 $49 = $37;
 $35 = $41;
 $50 = $36;
 $51 = $50;
 HEAP32[$51>>2] = 0;
 $52 = (($50) + 4)|0;
 $53 = $52;
 HEAP32[$53>>2] = 0;
 $54 = $35;
 ;HEAP32[$54>>2]=0|0;HEAP32[$54+4>>2]=0|0;
 $55 = ((($54)) + 8|0);
 $56 = $36;
 $57 = $56;
 $58 = HEAP32[$57>>2]|0;
 $59 = (($56) + 4)|0;
 $60 = $59;
 $61 = HEAP32[$60>>2]|0;
 $62 = $55;
 $63 = $62;
 HEAP32[$63>>2] = $58;
 $64 = (($62) + 4)|0;
 $65 = $64;
 HEAP32[$65>>2] = $61;
 $42 = 0;
 $66 = $40;
 $67 = $66 & 8;
 $68 = ($67|0)!=(0);
 do {
  if ($68) {
   $69 = $39;
   switch ($69|0) {
   case 0:  {
    $6 = $49;
    $70 = $6;
    $71 = ((($70)) + 8|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $38;
    $74 = $73;
    $75 = HEAP32[$74>>2]|0;
    $76 = (($73) + 4)|0;
    $77 = $76;
    $78 = HEAP32[$77>>2]|0;
    $79 = (($72) + ($75)|0);
    $80 = ((($49)) + 32|0);
    $7 = $80;
    $81 = $7;
    $82 = ((($81)) + 8|0);
    $83 = $82;
    $84 = $83;
    $85 = HEAP32[$84>>2]|0;
    $86 = (($83) + 4)|0;
    $87 = $86;
    $88 = HEAP32[$87>>2]|0;
    $89 = (0 - ($85))|0;
    $90 = (($79) + ($89)|0);
    $42 = $90;
    break;
   }
   case 1:  {
    $8 = $49;
    $91 = $8;
    $92 = ((($91)) + 12|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = $38;
    $95 = $94;
    $96 = HEAP32[$95>>2]|0;
    $97 = (($94) + 4)|0;
    $98 = $97;
    $99 = HEAP32[$98>>2]|0;
    $100 = (($93) + ($96)|0);
    $42 = $100;
    break;
   }
   case 2:  {
    $9 = $49;
    $101 = $9;
    $102 = ((($101)) + 16|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = $38;
    $105 = $104;
    $106 = HEAP32[$105>>2]|0;
    $107 = (($104) + 4)|0;
    $108 = $107;
    $109 = HEAP32[$108>>2]|0;
    $110 = (0 - ($106))|0;
    $111 = (($103) + ($110)|0);
    $42 = $111;
    break;
   }
   default: {
   }
   }
   $112 = $42;
   $10 = $49;
   $113 = $10;
   $114 = ((($113)) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ($112>>>0)<($115>>>0);
   if (!($116)) {
    $117 = $42;
    $11 = $49;
    $118 = $11;
    $119 = ((($118)) + 16|0);
    $120 = HEAP32[$119>>2]|0;
    $121 = ($117>>>0)>($120>>>0);
    if (!($121)) {
     $14 = $49;
     $138 = $14;
     $139 = ((($138)) + 8|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = $42;
     $15 = $49;
     $142 = $15;
     $143 = ((($142)) + 16|0);
     $144 = HEAP32[$143>>2]|0;
     $16 = $49;
     $17 = $140;
     $18 = $141;
     $19 = $144;
     $145 = $16;
     $146 = $17;
     $147 = ((($145)) + 8|0);
     HEAP32[$147>>2] = $146;
     $148 = $18;
     $149 = ((($145)) + 12|0);
     HEAP32[$149>>2] = $148;
     $150 = $19;
     $151 = ((($145)) + 16|0);
     HEAP32[$151>>2] = $150;
     $152 = $42;
     $20 = $49;
     $153 = $20;
     $154 = ((($153)) + 8|0);
     $155 = HEAP32[$154>>2]|0;
     $156 = $152;
     $157 = $155;
     $158 = (($156) - ($157))|0;
     $159 = ($158|0)<(0);
     $160 = $159 << 31 >> 31;
     $21 = $43;
     $161 = $22;
     $162 = $161;
     HEAP32[$162>>2] = $158;
     $163 = (($161) + 4)|0;
     $164 = $163;
     HEAP32[$164>>2] = $160;
     $165 = $21;
     ;HEAP32[$165>>2]=0|0;HEAP32[$165+4>>2]=0|0;
     $166 = ((($165)) + 8|0);
     $167 = $22;
     $168 = $167;
     $169 = HEAP32[$168>>2]|0;
     $170 = (($167) + 4)|0;
     $171 = $170;
     $172 = HEAP32[$171>>2]|0;
     $173 = $166;
     $174 = $173;
     HEAP32[$174>>2] = $169;
     $175 = (($173) + 4)|0;
     $176 = $175;
     HEAP32[$176>>2] = $172;
     ;HEAP32[$41>>2]=HEAP32[$43>>2]|0;HEAP32[$41+4>>2]=HEAP32[$43+4>>2]|0;HEAP32[$41+8>>2]=HEAP32[$43+8>>2]|0;HEAP32[$41+12>>2]=HEAP32[$43+12>>2]|0;
     break;
    }
   }
   $12 = $0;
   $122 = $13;
   $123 = $122;
   HEAP32[$123>>2] = -1;
   $124 = (($122) + 4)|0;
   $125 = $124;
   HEAP32[$125>>2] = -1;
   $126 = $12;
   ;HEAP32[$126>>2]=0|0;HEAP32[$126+4>>2]=0|0;
   $127 = ((($126)) + 8|0);
   $128 = $13;
   $129 = $128;
   $130 = HEAP32[$129>>2]|0;
   $131 = (($128) + 4)|0;
   $132 = $131;
   $133 = HEAP32[$132>>2]|0;
   $134 = $127;
   $135 = $134;
   HEAP32[$135>>2] = $130;
   $136 = (($134) + 4)|0;
   $137 = $136;
   HEAP32[$137>>2] = $133;
   STACKTOP = sp;return;
  }
 } while(0);
 $177 = $40;
 $178 = $177 & 16;
 $179 = ($178|0)!=(0);
 do {
  if ($179) {
   $180 = $39;
   switch ($180|0) {
   case 0:  {
    $181 = ((($49)) + 48|0);
    $182 = HEAP32[$181>>2]|0;
    $183 = $38;
    $184 = $183;
    $185 = HEAP32[$184>>2]|0;
    $186 = (($183) + 4)|0;
    $187 = $186;
    $188 = HEAP32[$187>>2]|0;
    $189 = (($182) + ($185)|0);
    $190 = ((($49)) + 32|0);
    $23 = $190;
    $191 = $23;
    $192 = ((($191)) + 8|0);
    $193 = $192;
    $194 = $193;
    $195 = HEAP32[$194>>2]|0;
    $196 = (($193) + 4)|0;
    $197 = $196;
    $198 = HEAP32[$197>>2]|0;
    $199 = (0 - ($195))|0;
    $200 = (($189) + ($199)|0);
    $42 = $200;
    break;
   }
   case 1:  {
    $24 = $49;
    $201 = $24;
    $202 = ((($201)) + 24|0);
    $203 = HEAP32[$202>>2]|0;
    $204 = $38;
    $205 = $204;
    $206 = HEAP32[$205>>2]|0;
    $207 = (($204) + 4)|0;
    $208 = $207;
    $209 = HEAP32[$208>>2]|0;
    $210 = (($203) + ($206)|0);
    $42 = $210;
    break;
   }
   case 2:  {
    $25 = $49;
    $211 = $25;
    $212 = ((($211)) + 16|0);
    $213 = HEAP32[$212>>2]|0;
    $214 = $38;
    $215 = $214;
    $216 = HEAP32[$215>>2]|0;
    $217 = (($214) + 4)|0;
    $218 = $217;
    $219 = HEAP32[$218>>2]|0;
    $220 = (0 - ($216))|0;
    $221 = (($213) + ($220)|0);
    $42 = $221;
    break;
   }
   default: {
   }
   }
   $222 = $42;
   $223 = ((($49)) + 48|0);
   $224 = HEAP32[$223>>2]|0;
   $225 = ($222>>>0)<($224>>>0);
   if (!($225)) {
    $226 = $42;
    $26 = $49;
    $227 = $26;
    $228 = ((($227)) + 28|0);
    $229 = HEAP32[$228>>2]|0;
    $230 = ($226>>>0)>($229>>>0);
    if (!($230)) {
     $247 = $42;
     $29 = $49;
     $248 = $29;
     $249 = ((($248)) + 28|0);
     $250 = HEAP32[$249>>2]|0;
     $30 = $49;
     $31 = $247;
     $32 = $250;
     $251 = $30;
     $252 = $31;
     $253 = ((($251)) + 24|0);
     HEAP32[$253>>2] = $252;
     $254 = ((($251)) + 20|0);
     HEAP32[$254>>2] = $252;
     $255 = $32;
     $256 = ((($251)) + 28|0);
     HEAP32[$256>>2] = $255;
     $257 = $42;
     $258 = ((($49)) + 48|0);
     $259 = HEAP32[$258>>2]|0;
     $260 = $257;
     $261 = $259;
     $262 = (($260) - ($261))|0;
     $263 = ($262|0)<(0);
     $264 = $263 << 31 >> 31;
     $33 = $44;
     $265 = $34;
     $266 = $265;
     HEAP32[$266>>2] = $262;
     $267 = (($265) + 4)|0;
     $268 = $267;
     HEAP32[$268>>2] = $264;
     $269 = $33;
     ;HEAP32[$269>>2]=0|0;HEAP32[$269+4>>2]=0|0;
     $270 = ((($269)) + 8|0);
     $271 = $34;
     $272 = $271;
     $273 = HEAP32[$272>>2]|0;
     $274 = (($271) + 4)|0;
     $275 = $274;
     $276 = HEAP32[$275>>2]|0;
     $277 = $270;
     $278 = $277;
     HEAP32[$278>>2] = $273;
     $279 = (($277) + 4)|0;
     $280 = $279;
     HEAP32[$280>>2] = $276;
     ;HEAP32[$41>>2]=HEAP32[$44>>2]|0;HEAP32[$41+4>>2]=HEAP32[$44+4>>2]|0;HEAP32[$41+8>>2]=HEAP32[$44+8>>2]|0;HEAP32[$41+12>>2]=HEAP32[$44+12>>2]|0;
     break;
    }
   }
   $27 = $0;
   $231 = $28;
   $232 = $231;
   HEAP32[$232>>2] = -1;
   $233 = (($231) + 4)|0;
   $234 = $233;
   HEAP32[$234>>2] = -1;
   $235 = $27;
   ;HEAP32[$235>>2]=0|0;HEAP32[$235+4>>2]=0|0;
   $236 = ((($235)) + 8|0);
   $237 = $28;
   $238 = $237;
   $239 = HEAP32[$238>>2]|0;
   $240 = (($237) + 4)|0;
   $241 = $240;
   $242 = HEAP32[$241>>2]|0;
   $243 = $236;
   $244 = $243;
   HEAP32[$244>>2] = $239;
   $245 = (($243) + 4)|0;
   $246 = $245;
   HEAP32[$246>>2] = $242;
   STACKTOP = sp;return;
  }
 } while(0);
 ;HEAP32[$0>>2]=HEAP32[$41>>2]|0;HEAP32[$0+4>>2]=HEAP32[$41+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$41+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[$41+12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN7lazperf7charbuf7seekposENSt3__24fposI11__mbstate_tEEj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $5 = sp + 16|0;
 $10 = sp + 8|0;
 $22 = sp;
 $29 = $1;
 $30 = $3;
 $33 = $29;
 $34 = ((($33)) + 32|0);
 $28 = $34;
 $35 = $28;
 $36 = ((($35)) + 8|0);
 $37 = $36;
 $38 = $37;
 $39 = HEAP32[$38>>2]|0;
 $40 = (($37) + 4)|0;
 $41 = $40;
 $42 = HEAP32[$41>>2]|0;
 $4 = $2;
 $43 = $5;
 $44 = $43;
 HEAP32[$44>>2] = $39;
 $45 = (($43) + 4)|0;
 $46 = $45;
 HEAP32[$46>>2] = $42;
 $47 = $4;
 $48 = $5;
 $49 = $48;
 $50 = HEAP32[$49>>2]|0;
 $51 = (($48) + 4)|0;
 $52 = $51;
 $53 = HEAP32[$52>>2]|0;
 $54 = ((($47)) + 8|0);
 $55 = $54;
 $56 = $55;
 $57 = HEAP32[$56>>2]|0;
 $58 = (($55) + 4)|0;
 $59 = $58;
 $60 = HEAP32[$59>>2]|0;
 $61 = (_i64Subtract(($57|0),($60|0),($50|0),($53|0))|0);
 $62 = (getTempRet0() | 0);
 $63 = $54;
 $64 = $63;
 HEAP32[$64>>2] = $61;
 $65 = (($63) + 4)|0;
 $66 = $65;
 HEAP32[$66>>2] = $62;
 $67 = $30;
 $68 = $67 & 8;
 $69 = ($68|0)!=(0);
 do {
  if ($69) {
   $6 = $2;
   $70 = $6;
   $71 = ((($70)) + 8|0);
   $72 = $71;
   $73 = $72;
   $74 = HEAP32[$73>>2]|0;
   $75 = (($72) + 4)|0;
   $76 = $75;
   $77 = HEAP32[$76>>2]|0;
   $7 = $33;
   $78 = $7;
   $79 = ((($78)) + 16|0);
   $80 = HEAP32[$79>>2]|0;
   $8 = $33;
   $81 = $8;
   $82 = ((($81)) + 8|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = $80;
   $85 = $83;
   $86 = (($84) - ($85))|0;
   $87 = ($86|0)<(0);
   $88 = $87 << 31 >> 31;
   $89 = ($77|0)>($88|0);
   $90 = ($74>>>0)>=($86>>>0);
   $91 = ($77|0)==($88|0);
   $92 = $91 & $90;
   $93 = $89 | $92;
   if (!($93)) {
    $11 = $33;
    $110 = $11;
    $111 = ((($110)) + 8|0);
    $112 = HEAP32[$111>>2]|0;
    $12 = $2;
    $113 = $12;
    $114 = ((($113)) + 8|0);
    $115 = $114;
    $116 = $115;
    $117 = HEAP32[$116>>2]|0;
    $118 = (($115) + 4)|0;
    $119 = $118;
    $120 = HEAP32[$119>>2]|0;
    $121 = (($112) + ($117)|0);
    $31 = $121;
    $13 = $33;
    $122 = $13;
    $123 = ((($122)) + 8|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = $31;
    $14 = $33;
    $126 = $14;
    $127 = ((($126)) + 16|0);
    $128 = HEAP32[$127>>2]|0;
    $15 = $33;
    $16 = $124;
    $17 = $125;
    $18 = $128;
    $129 = $15;
    $130 = $16;
    $131 = ((($129)) + 8|0);
    HEAP32[$131>>2] = $130;
    $132 = $17;
    $133 = ((($129)) + 12|0);
    HEAP32[$133>>2] = $132;
    $134 = $18;
    $135 = ((($129)) + 16|0);
    HEAP32[$135>>2] = $134;
    break;
   }
   $9 = $0;
   $94 = $10;
   $95 = $94;
   HEAP32[$95>>2] = -1;
   $96 = (($94) + 4)|0;
   $97 = $96;
   HEAP32[$97>>2] = -1;
   $98 = $9;
   ;HEAP32[$98>>2]=0|0;HEAP32[$98+4>>2]=0|0;
   $99 = ((($98)) + 8|0);
   $100 = $10;
   $101 = $100;
   $102 = HEAP32[$101>>2]|0;
   $103 = (($100) + 4)|0;
   $104 = $103;
   $105 = HEAP32[$104>>2]|0;
   $106 = $99;
   $107 = $106;
   HEAP32[$107>>2] = $102;
   $108 = (($106) + 4)|0;
   $109 = $108;
   HEAP32[$109>>2] = $105;
   STACKTOP = sp;return;
  }
 } while(0);
 $136 = $30;
 $137 = $136 & 16;
 $138 = ($137|0)!=(0);
 do {
  if ($138) {
   $19 = $2;
   $139 = $19;
   $140 = ((($139)) + 8|0);
   $141 = $140;
   $142 = $141;
   $143 = HEAP32[$142>>2]|0;
   $144 = (($141) + 4)|0;
   $145 = $144;
   $146 = HEAP32[$145>>2]|0;
   $20 = $33;
   $147 = $20;
   $148 = ((($147)) + 28|0);
   $149 = HEAP32[$148>>2]|0;
   $150 = ((($33)) + 48|0);
   $151 = HEAP32[$150>>2]|0;
   $152 = $149;
   $153 = $151;
   $154 = (($152) - ($153))|0;
   $155 = ($154|0)<(0);
   $156 = $155 << 31 >> 31;
   $157 = ($146|0)>($156|0);
   $158 = ($143>>>0)>($154>>>0);
   $159 = ($146|0)==($156|0);
   $160 = $159 & $158;
   $161 = $157 | $160;
   if (!($161)) {
    $178 = ((($33)) + 48|0);
    $179 = HEAP32[$178>>2]|0;
    $23 = $2;
    $180 = $23;
    $181 = ((($180)) + 8|0);
    $182 = $181;
    $183 = $182;
    $184 = HEAP32[$183>>2]|0;
    $185 = (($182) + 4)|0;
    $186 = $185;
    $187 = HEAP32[$186>>2]|0;
    $188 = (($179) + ($184)|0);
    $32 = $188;
    $189 = $32;
    $24 = $33;
    $190 = $24;
    $191 = ((($190)) + 28|0);
    $192 = HEAP32[$191>>2]|0;
    $25 = $33;
    $26 = $189;
    $27 = $192;
    $193 = $25;
    $194 = $26;
    $195 = ((($193)) + 24|0);
    HEAP32[$195>>2] = $194;
    $196 = ((($193)) + 20|0);
    HEAP32[$196>>2] = $194;
    $197 = $27;
    $198 = ((($193)) + 28|0);
    HEAP32[$198>>2] = $197;
    break;
   }
   $21 = $0;
   $162 = $22;
   $163 = $162;
   HEAP32[$163>>2] = -1;
   $164 = (($162) + 4)|0;
   $165 = $164;
   HEAP32[$165>>2] = -1;
   $166 = $21;
   ;HEAP32[$166>>2]=0|0;HEAP32[$166+4>>2]=0|0;
   $167 = ((($166)) + 8|0);
   $168 = $22;
   $169 = $168;
   $170 = HEAP32[$169>>2]|0;
   $171 = (($168) + 4)|0;
   $172 = $171;
   $173 = HEAP32[$172>>2]|0;
   $174 = $167;
   $175 = $174;
   HEAP32[$175>>2] = $170;
   $176 = (($174) + 4)|0;
   $177 = $176;
   HEAP32[$177>>2] = $173;
   STACKTOP = sp;return;
  }
 } while(0);
 ;HEAP32[$0>>2]=HEAP32[$2>>2]|0;HEAP32[$0+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$2+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[$2+12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN7lazperf7charbuf10initializeEPcmNSt3__24fposI11__mbstate_tEE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = $0;
 $12 = $1;
 $13 = $2;
 $14 = $11;
 $15 = ((($14)) + 32|0);
 ;HEAP32[$15>>2]=HEAP32[$3>>2]|0;HEAP32[$15+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$15+8>>2]=HEAP32[$3+8>>2]|0;HEAP32[$15+12>>2]=HEAP32[$3+12>>2]|0;
 $16 = $12;
 $17 = ((($14)) + 48|0);
 HEAP32[$17>>2] = $16;
 $18 = $12;
 $19 = $12;
 $20 = $12;
 $21 = $13;
 $22 = (($20) + ($21)|0);
 $7 = $14;
 $8 = $18;
 $9 = $19;
 $10 = $22;
 $23 = $7;
 $24 = $8;
 $25 = ((($23)) + 8|0);
 HEAP32[$25>>2] = $24;
 $26 = $9;
 $27 = ((($23)) + 12|0);
 HEAP32[$27>>2] = $26;
 $28 = $10;
 $29 = ((($23)) + 16|0);
 HEAP32[$29>>2] = $28;
 $30 = $12;
 $31 = $12;
 $32 = $13;
 $33 = (($31) + ($32)|0);
 $4 = $14;
 $5 = $30;
 $6 = $33;
 $34 = $4;
 $35 = $5;
 $36 = ((($34)) + 24|0);
 HEAP32[$36>>2] = $35;
 $37 = ((($34)) + 20|0);
 HEAP32[$37>>2] = $35;
 $38 = $6;
 $39 = ((($34)) + 28|0);
 HEAP32[$39>>2] = $38;
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStreamC2ERNSt3__213basic_istreamIcNS1_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 8|0;
 $10 = $0;
 $11 = $1;
 $12 = $10;
 $13 = (__Znwm(20)|0);
 $14 = $11;
 __ZN7lazperf12InFileStream7PrivateC2ERNSt3__213basic_istreamIcNS2_11char_traitsIcEEEE($13,$14);
 $8 = $12;
 HEAP32[$9>>2] = $13;
 $15 = $8;
 $6 = $15;
 $7 = $9;
 $16 = $6;
 $17 = $7;
 $5 = $17;
 $18 = $5;
 $3 = $16;
 $4 = $18;
 $19 = $3;
 $20 = $4;
 $2 = $20;
 $21 = $2;
 $22 = HEAP32[$21>>2]|0;
 HEAP32[$19>>2] = $22;
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStream7PrivateC2ERNSt3__213basic_istreamIcNS2_11char_traitsIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 12|0;
 $14 = $0;
 $15 = $1;
 $16 = $14;
 $17 = $15;
 HEAP32[$16>>2] = $17;
 $18 = ((($16)) + 4|0);
 $13 = $18;
 $19 = $13;
 $11 = $19;
 $20 = $11;
 $10 = $20;
 HEAP32[$20>>2] = 0;
 $21 = ((($20)) + 4|0);
 HEAP32[$21>>2] = 0;
 $22 = ((($20)) + 8|0);
 HEAP32[$12>>2] = 0;
 $8 = $22;
 $9 = $12;
 $23 = $8;
 $24 = $9;
 $7 = $24;
 $25 = $7;
 $3 = $23;
 $4 = $25;
 $26 = $3;
 $27 = $4;
 $2 = $27;
 HEAP32[$26>>2] = 0;
 $6 = $23;
 $28 = $6;
 $5 = $28;
 __ZN7lazperf12InFileStream7Private5resetEv($16);
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStream7Private5resetEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $4 = ((($3)) + 4|0);
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($4,1048576);
 $5 = ((($3)) + 4|0);
 $1 = $5;
 $6 = $1;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$6>>2]|0;
 $10 = $8;
 $11 = $9;
 $12 = (($10) - ($11))|0;
 $13 = ((($3)) + 16|0);
 HEAP32[$13>>2] = $12;
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -1|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
 }
 $59 = $33;
 $60 = ((($42)) + 4|0);
 HEAP32[$60>>2] = $59;
 $7 = $37;
 $61 = $7;
 $62 = ((($61)) + 8|0);
 $6 = $62;
 $63 = $6;
 $5 = $63;
 $64 = $5;
 $65 = HEAP32[$37>>2]|0;
 $4 = $37;
 $66 = $4;
 $3 = $66;
 $67 = $3;
 $68 = ((($67)) + 8|0);
 $2 = $68;
 $69 = $2;
 $1 = $69;
 $70 = $1;
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$66>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $17 = $64;
 $18 = $65;
 $19 = $75;
 $76 = $17;
 $77 = $18;
 $78 = $19;
 $14 = $76;
 $15 = $77;
 $16 = $78;
 $79 = $15;
 $80 = $16;
 $11 = $79;
 $12 = $80;
 $13 = 1;
 $81 = $11;
 $82 = $12;
 $83 = $13;
 $8 = $81;
 $9 = $82;
 $10 = $83;
 $84 = $8;
 $85 = $9;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($84,$85);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp;
 $9 = sp + 180|0;
 $45 = $0;
 $46 = $1;
 $48 = $45;
 $44 = $48;
 $49 = $44;
 $50 = ((($49)) + 4|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = HEAP32[$49>>2]|0;
 $53 = $51;
 $54 = $52;
 $55 = (($53) - ($54))|0;
 $47 = $55;
 $56 = $47;
 $57 = $46;
 $58 = ($56>>>0)<($57>>>0);
 if ($58) {
  $59 = $46;
  $60 = $47;
  $61 = (($59) - ($60))|0;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEm($48,$61);
  STACKTOP = sp;return;
 }
 $62 = $47;
 $63 = $46;
 $64 = ($62>>>0)>($63>>>0);
 if (!($64)) {
  STACKTOP = sp;return;
 }
 $65 = HEAP32[$48>>2]|0;
 $66 = $46;
 $67 = (($65) + ($66)|0);
 $41 = $48;
 $42 = $67;
 $68 = $41;
 $69 = $42;
 $39 = $68;
 $40 = $69;
 $38 = $68;
 $70 = $38;
 $71 = ((($70)) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$70>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $43 = $76;
 $77 = $42;
 $14 = $68;
 $15 = $77;
 $78 = $14;
 $79 = ((($78)) + 4|0);
 $80 = HEAP32[$79>>2]|0;
 $16 = $80;
 while(1) {
  $81 = $15;
  $82 = $16;
  $83 = ($81|0)!=($82|0);
  if (!($83)) {
   break;
  }
  $13 = $78;
  $84 = $13;
  $85 = ((($84)) + 8|0);
  $12 = $85;
  $86 = $12;
  $11 = $86;
  $87 = $11;
  $88 = $16;
  $89 = ((($88)) + -1|0);
  $16 = $89;
  $10 = $89;
  $90 = $10;
  $7 = $87;
  $8 = $90;
  $91 = $7;
  $92 = $8;
  ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
  $4 = $91;
  $5 = $92;
  $93 = $4;
  $94 = $5;
  $2 = $93;
  $3 = $94;
 }
 $95 = $15;
 $96 = ((($78)) + 4|0);
 HEAP32[$96>>2] = $95;
 $97 = $43;
 $36 = $68;
 $37 = $97;
 $98 = $36;
 $35 = $98;
 $99 = $35;
 $100 = HEAP32[$99>>2]|0;
 $34 = $100;
 $101 = $34;
 $18 = $98;
 $102 = $18;
 $103 = HEAP32[$102>>2]|0;
 $17 = $103;
 $104 = $17;
 $23 = $98;
 $105 = $23;
 $22 = $105;
 $106 = $22;
 $21 = $106;
 $107 = $21;
 $108 = ((($107)) + 8|0);
 $20 = $108;
 $109 = $20;
 $19 = $109;
 $110 = $19;
 $111 = HEAP32[$110>>2]|0;
 $112 = HEAP32[$106>>2]|0;
 $113 = $111;
 $114 = $112;
 $115 = (($113) - ($114))|0;
 $116 = (($104) + ($115)|0);
 $25 = $98;
 $117 = $25;
 $118 = HEAP32[$117>>2]|0;
 $24 = $118;
 $119 = $24;
 $120 = $37;
 $121 = (($119) + ($120)|0);
 $27 = $98;
 $122 = $27;
 $123 = HEAP32[$122>>2]|0;
 $26 = $123;
 $124 = $26;
 $28 = $98;
 $125 = $28;
 $126 = ((($125)) + 4|0);
 $127 = HEAP32[$126>>2]|0;
 $128 = HEAP32[$125>>2]|0;
 $129 = $127;
 $130 = $128;
 $131 = (($129) - ($130))|0;
 $132 = (($124) + ($131)|0);
 $29 = $98;
 $30 = $101;
 $31 = $116;
 $32 = $121;
 $33 = $132;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $8 = sp;
 $11 = sp + 140|0;
 $19 = sp + 76|0;
 $22 = sp + 64|0;
 $33 = sp + 4|0;
 $30 = $0;
 $31 = $1;
 $34 = $30;
 $29 = $34;
 $35 = $29;
 $36 = ((($35)) + 8|0);
 $28 = $36;
 $37 = $28;
 $27 = $37;
 $38 = $27;
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($34)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = $39;
 $43 = $41;
 $44 = (($42) - ($43))|0;
 $45 = $31;
 $46 = ($44>>>0)>=($45>>>0);
 if ($46) {
  $47 = $31;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm($34,$47);
  STACKTOP = sp;return;
 }
 $26 = $34;
 $48 = $26;
 $49 = ((($48)) + 8|0);
 $25 = $49;
 $50 = $25;
 $24 = $50;
 $51 = $24;
 $32 = $51;
 $23 = $34;
 $52 = $23;
 $53 = ((($52)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = HEAP32[$52>>2]|0;
 $56 = $54;
 $57 = $55;
 $58 = (($56) - ($57))|0;
 $59 = $31;
 $60 = (($58) + ($59))|0;
 $18 = $34;
 HEAP32[$19>>2] = $60;
 $61 = $18;
 $62 = (__ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($61)|0);
 $20 = $62;
 $63 = HEAP32[$19>>2]|0;
 $64 = $20;
 $65 = ($63>>>0)>($64>>>0);
 if ($65) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($61);
  // unreachable;
 }
 $16 = $61;
 $66 = $16;
 $15 = $66;
 $67 = $15;
 $14 = $67;
 $68 = $14;
 $69 = ((($68)) + 8|0);
 $13 = $69;
 $70 = $13;
 $12 = $70;
 $71 = $12;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $21 = $76;
 $77 = $21;
 $78 = $20;
 $79 = (($78>>>0) / 2)&-1;
 $80 = ($77>>>0)>=($79>>>0);
 if ($80) {
  $81 = $20;
  $17 = $81;
 } else {
  $82 = $21;
  $83 = $82<<1;
  HEAP32[$22>>2] = $83;
  $9 = $22;
  $10 = $19;
  $84 = $9;
  $85 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $84;
  $7 = $85;
  $86 = $6;
  $87 = $7;
  $3 = $8;
  $4 = $86;
  $5 = $87;
  $88 = $4;
  $89 = HEAP32[$88>>2]|0;
  $90 = $5;
  $91 = HEAP32[$90>>2]|0;
  $92 = ($89>>>0)<($91>>>0);
  $93 = $7;
  $94 = $6;
  $95 = $92 ? $93 : $94;
  $96 = HEAP32[$95>>2]|0;
  $17 = $96;
 }
 $97 = $17;
 $2 = $34;
 $98 = $2;
 $99 = ((($98)) + 4|0);
 $100 = HEAP32[$99>>2]|0;
 $101 = HEAP32[$98>>2]|0;
 $102 = $100;
 $103 = $101;
 $104 = (($102) - ($103))|0;
 $105 = $32;
 __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($33,$97,$104,$105);
 $106 = $31;
 __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEm($33,$106);
 __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($34,$33);
 __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($33);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $10 = sp;
 $13 = sp + 73|0;
 $21 = sp + 72|0;
 $18 = $0;
 $19 = $1;
 $22 = $18;
 $17 = $22;
 $23 = $17;
 $24 = ((($23)) + 8|0);
 $16 = $24;
 $25 = $16;
 $15 = $25;
 $26 = $15;
 $20 = $26;
 while(1) {
  $2 = $21;
  $3 = $22;
  $4 = 1;
  $27 = $20;
  $28 = ((($22)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  $5 = $29;
  $30 = $5;
  $11 = $27;
  $12 = $30;
  $31 = $11;
  $32 = $12;
  ;HEAP8[$10>>0]=HEAP8[$13>>0]|0;
  $8 = $31;
  $9 = $32;
  $33 = $8;
  $34 = $9;
  $6 = $33;
  $7 = $34;
  $35 = $7;
  HEAP8[$35>>0] = 0;
  $36 = ((($22)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($37)) + 1|0);
  HEAP32[$36>>2] = $38;
  $39 = $19;
  $40 = (($39) + -1)|0;
  $19 = $40;
  $14 = $21;
  $41 = $19;
  $42 = ($41>>>0)>(0);
  if (!($42)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = -1;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $33 = sp;
 $29 = $0;
 $30 = $1;
 $31 = $2;
 $32 = $3;
 $34 = $29;
 $35 = ((($34)) + 12|0);
 HEAP32[$33>>2] = 0;
 $36 = $32;
 $26 = $35;
 $27 = $33;
 $28 = $36;
 $37 = $26;
 $38 = $27;
 $25 = $38;
 $39 = $25;
 $19 = $37;
 $20 = $39;
 $40 = $19;
 $41 = $20;
 $18 = $41;
 HEAP32[$40>>2] = 0;
 $42 = ((($37)) + 4|0);
 $43 = $28;
 $21 = $43;
 $44 = $21;
 $23 = $42;
 $24 = $44;
 $45 = $23;
 $46 = $24;
 $22 = $46;
 $47 = $22;
 HEAP32[$45>>2] = $47;
 $48 = $30;
 $49 = ($48|0)!=(0);
 if ($49) {
  $6 = $34;
  $50 = $6;
  $51 = ((($50)) + 12|0);
  $5 = $51;
  $52 = $5;
  $53 = ((($52)) + 4|0);
  $4 = $53;
  $54 = $4;
  $55 = HEAP32[$54>>2]|0;
  $56 = $30;
  $13 = $55;
  $14 = $56;
  $57 = $13;
  $58 = $14;
  $10 = $57;
  $11 = $58;
  $12 = 0;
  $59 = $10;
  $9 = $59;
  $60 = $11;
  $7 = $60;
  $8 = 1;
  $61 = $7;
  $62 = (__Znwm($61)|0);
  $63 = $62;
 } else {
  $63 = 0;
 }
 HEAP32[$34>>2] = $63;
 $64 = HEAP32[$34>>2]|0;
 $65 = $31;
 $66 = (($64) + ($65)|0);
 $67 = ((($34)) + 8|0);
 HEAP32[$67>>2] = $66;
 $68 = ((($34)) + 4|0);
 HEAP32[$68>>2] = $66;
 $69 = HEAP32[$34>>2]|0;
 $70 = $30;
 $71 = (($69) + ($70)|0);
 $17 = $34;
 $72 = $17;
 $73 = ((($72)) + 12|0);
 $16 = $73;
 $74 = $16;
 $15 = $74;
 $75 = $15;
 HEAP32[$75>>2] = $71;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp;
 $10 = sp + 56|0;
 $14 = $0;
 $15 = $1;
 $17 = $14;
 $13 = $17;
 $18 = $13;
 $19 = ((($18)) + 12|0);
 $12 = $19;
 $20 = $12;
 $21 = ((($20)) + 4|0);
 $11 = $21;
 $22 = $11;
 $23 = HEAP32[$22>>2]|0;
 $16 = $23;
 while(1) {
  $24 = $16;
  $25 = ((($17)) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $2 = $26;
  $27 = $2;
  $8 = $24;
  $9 = $27;
  $28 = $8;
  $29 = $9;
  ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
  $5 = $28;
  $6 = $29;
  $30 = $5;
  $31 = $6;
  $3 = $30;
  $4 = $31;
  $32 = $4;
  HEAP8[$32>>0] = 0;
  $33 = ((($17)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 1|0);
  HEAP32[$33>>2] = $35;
  $36 = $15;
  $37 = (($36) + -1)|0;
  $15 = $37;
  $38 = $15;
  $39 = ($38>>>0)>(0);
  if (!($39)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($95) + ($106)|0);
 $69 = $89;
 $108 = $69;
 $109 = HEAP32[$108>>2]|0;
 $68 = $109;
 $110 = $68;
 $70 = $89;
 $111 = $70;
 $112 = ((($111)) + 4|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = HEAP32[$111>>2]|0;
 $115 = $113;
 $116 = $114;
 $117 = (($115) - ($116))|0;
 $118 = (($110) + ($117)|0);
 $72 = $89;
 $119 = $72;
 $120 = HEAP32[$119>>2]|0;
 $71 = $120;
 $121 = $71;
 $77 = $89;
 $122 = $77;
 $76 = $122;
 $123 = $76;
 $75 = $123;
 $124 = $75;
 $125 = ((($124)) + 8|0);
 $74 = $125;
 $126 = $74;
 $73 = $126;
 $127 = $73;
 $128 = HEAP32[$127>>2]|0;
 $129 = HEAP32[$123>>2]|0;
 $130 = $128;
 $131 = $129;
 $132 = (($130) - ($131))|0;
 $133 = (($121) + ($132)|0);
 $78 = $89;
 $79 = $92;
 $80 = $107;
 $81 = $118;
 $82 = $133;
 $4 = $88;
 $134 = $4;
 $135 = ((($134)) + 8|0);
 $3 = $135;
 $136 = $3;
 $2 = $136;
 $137 = $2;
 $138 = HEAP32[$88>>2]|0;
 $139 = ((($88)) + 4|0);
 $140 = HEAP32[$139>>2]|0;
 $141 = $87;
 $142 = ((($141)) + 4|0);
 $5 = $137;
 $6 = $138;
 $7 = $140;
 $8 = $142;
 $143 = $7;
 $144 = $6;
 $145 = $143;
 $146 = $144;
 $147 = (($145) - ($146))|0;
 $9 = $147;
 $148 = $9;
 $149 = $8;
 $150 = HEAP32[$149>>2]|0;
 $151 = (0 - ($148))|0;
 $152 = (($150) + ($151)|0);
 HEAP32[$149>>2] = $152;
 $153 = $9;
 $154 = ($153|0)>(0);
 if ($154) {
  $155 = $8;
  $156 = HEAP32[$155>>2]|0;
  $157 = $6;
  $158 = $9;
  _memcpy(($156|0),($157|0),($158|0))|0;
 }
 $159 = $87;
 $160 = ((($159)) + 4|0);
 $13 = $88;
 $14 = $160;
 $161 = $13;
 $12 = $161;
 $162 = $12;
 $163 = HEAP32[$162>>2]|0;
 HEAP32[$15>>2] = $163;
 $164 = $14;
 $10 = $164;
 $165 = $10;
 $166 = HEAP32[$165>>2]|0;
 $167 = $13;
 HEAP32[$167>>2] = $166;
 $11 = $15;
 $168 = $11;
 $169 = HEAP32[$168>>2]|0;
 $170 = $14;
 HEAP32[$170>>2] = $169;
 $171 = ((($88)) + 4|0);
 $172 = $87;
 $173 = ((($172)) + 8|0);
 $19 = $171;
 $20 = $173;
 $174 = $19;
 $18 = $174;
 $175 = $18;
 $176 = HEAP32[$175>>2]|0;
 HEAP32[$21>>2] = $176;
 $177 = $20;
 $16 = $177;
 $178 = $16;
 $179 = HEAP32[$178>>2]|0;
 $180 = $19;
 HEAP32[$180>>2] = $179;
 $17 = $21;
 $181 = $17;
 $182 = HEAP32[$181>>2]|0;
 $183 = $20;
 HEAP32[$183>>2] = $182;
 $24 = $88;
 $184 = $24;
 $185 = ((($184)) + 8|0);
 $23 = $185;
 $186 = $23;
 $22 = $186;
 $187 = $22;
 $188 = $87;
 $27 = $188;
 $189 = $27;
 $190 = ((($189)) + 12|0);
 $26 = $190;
 $191 = $26;
 $25 = $191;
 $192 = $25;
 $31 = $187;
 $32 = $192;
 $193 = $31;
 $30 = $193;
 $194 = $30;
 $195 = HEAP32[$194>>2]|0;
 HEAP32[$33>>2] = $195;
 $196 = $32;
 $28 = $196;
 $197 = $28;
 $198 = HEAP32[$197>>2]|0;
 $199 = $31;
 HEAP32[$199>>2] = $198;
 $29 = $33;
 $200 = $29;
 $201 = HEAP32[$200>>2]|0;
 $202 = $32;
 HEAP32[$202>>2] = $201;
 $203 = $87;
 $204 = ((($203)) + 4|0);
 $205 = HEAP32[$204>>2]|0;
 $206 = $87;
 HEAP32[$206>>2] = $205;
 $34 = $88;
 $207 = $34;
 $208 = ((($207)) + 4|0);
 $209 = HEAP32[$208>>2]|0;
 $210 = HEAP32[$207>>2]|0;
 $211 = $209;
 $212 = $210;
 $213 = (($211) - ($212))|0;
 $58 = $88;
 $59 = $213;
 $214 = $58;
 $57 = $214;
 $215 = $57;
 $216 = HEAP32[$215>>2]|0;
 $56 = $216;
 $217 = $56;
 $36 = $214;
 $218 = $36;
 $219 = HEAP32[$218>>2]|0;
 $35 = $219;
 $220 = $35;
 $41 = $214;
 $221 = $41;
 $40 = $221;
 $222 = $40;
 $39 = $222;
 $223 = $39;
 $224 = ((($223)) + 8|0);
 $38 = $224;
 $225 = $38;
 $37 = $225;
 $226 = $37;
 $227 = HEAP32[$226>>2]|0;
 $228 = HEAP32[$222>>2]|0;
 $229 = $227;
 $230 = $228;
 $231 = (($229) - ($230))|0;
 $232 = (($220) + ($231)|0);
 $43 = $214;
 $233 = $43;
 $234 = HEAP32[$233>>2]|0;
 $42 = $234;
 $235 = $42;
 $48 = $214;
 $236 = $48;
 $47 = $236;
 $237 = $47;
 $46 = $237;
 $238 = $46;
 $239 = ((($238)) + 8|0);
 $45 = $239;
 $240 = $45;
 $44 = $240;
 $241 = $44;
 $242 = HEAP32[$241>>2]|0;
 $243 = HEAP32[$237>>2]|0;
 $244 = $242;
 $245 = $243;
 $246 = (($244) - ($245))|0;
 $247 = (($235) + ($246)|0);
 $50 = $214;
 $248 = $50;
 $249 = HEAP32[$248>>2]|0;
 $49 = $249;
 $250 = $49;
 $251 = $59;
 $252 = (($250) + ($251)|0);
 $51 = $214;
 $52 = $217;
 $53 = $232;
 $54 = $247;
 $55 = $252;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -1|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
 }
 $65 = HEAP32[$40>>2]|0;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $67 = $19;
 $68 = ((($67)) + 12|0);
 $18 = $68;
 $69 = $18;
 $70 = ((($69)) + 4|0);
 $17 = $70;
 $71 = $17;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$40>>2]|0;
 $4 = $40;
 $74 = $4;
 $3 = $74;
 $75 = $3;
 $76 = ((($75)) + 12|0);
 $2 = $76;
 $77 = $2;
 $1 = $77;
 $78 = $1;
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$74>>2]|0;
 $81 = $79;
 $82 = $80;
 $83 = (($81) - ($82))|0;
 $14 = $72;
 $15 = $73;
 $16 = $83;
 $84 = $14;
 $85 = $15;
 $86 = $16;
 $11 = $84;
 $12 = $85;
 $13 = $86;
 $87 = $12;
 $88 = $13;
 $8 = $87;
 $9 = $88;
 $10 = 1;
 $89 = $8;
 $90 = $9;
 $91 = $10;
 $5 = $89;
 $6 = $90;
 $7 = $91;
 $92 = $5;
 $93 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($92,$93);
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStreamD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 $12 = $14;
 $15 = $12;
 $9 = $15;
 $10 = 0;
 $16 = $9;
 $8 = $16;
 $17 = $8;
 $7 = $17;
 $18 = $7;
 $19 = HEAP32[$18>>2]|0;
 $11 = $19;
 $20 = $10;
 $4 = $16;
 $21 = $4;
 $3 = $21;
 $22 = $3;
 HEAP32[$22>>2] = $20;
 $23 = $11;
 $24 = ($23|0)!=(0|0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $2 = $16;
 $25 = $2;
 $1 = $25;
 $26 = $1;
 $27 = $11;
 $5 = $26;
 $6 = $27;
 $28 = $6;
 $29 = ($28|0)==(0|0);
 if ($29) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf12InFileStream7PrivateD2Ev($28);
 __ZdlPv($28);
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStream7PrivateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $27 = $0;
 $28 = $27;
 $29 = ((($28)) + 4|0);
 $26 = $29;
 $30 = $26;
 $25 = $30;
 $31 = $25;
 $24 = $31;
 $32 = $24;
 $33 = HEAP32[$32>>2]|0;
 $23 = $33;
 $34 = $23;
 $2 = $31;
 $35 = $2;
 $36 = HEAP32[$35>>2]|0;
 $1 = $36;
 $37 = $1;
 $7 = $31;
 $38 = $7;
 $6 = $38;
 $39 = $6;
 $5 = $39;
 $40 = $5;
 $41 = ((($40)) + 8|0);
 $4 = $41;
 $42 = $4;
 $3 = $42;
 $43 = $3;
 $44 = HEAP32[$43>>2]|0;
 $45 = HEAP32[$39>>2]|0;
 $46 = $44;
 $47 = $45;
 $48 = (($46) - ($47))|0;
 $49 = (($37) + ($48)|0);
 $9 = $31;
 $50 = $9;
 $51 = HEAP32[$50>>2]|0;
 $8 = $51;
 $52 = $8;
 $10 = $31;
 $53 = $10;
 $54 = ((($53)) + 4|0);
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAP32[$53>>2]|0;
 $57 = $55;
 $58 = $56;
 $59 = (($57) - ($58))|0;
 $60 = (($52) + ($59)|0);
 $12 = $31;
 $61 = $12;
 $62 = HEAP32[$61>>2]|0;
 $11 = $62;
 $63 = $11;
 $17 = $31;
 $64 = $17;
 $16 = $64;
 $65 = $16;
 $15 = $65;
 $66 = $15;
 $67 = ((($66)) + 8|0);
 $14 = $67;
 $68 = $14;
 $13 = $68;
 $69 = $13;
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$65>>2]|0;
 $72 = $70;
 $73 = $71;
 $74 = (($72) - ($73))|0;
 $75 = (($63) + ($74)|0);
 $18 = $31;
 $19 = $34;
 $20 = $49;
 $21 = $60;
 $22 = $75;
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($30);
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStream5resetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $4;
 $3 = $5;
 $6 = $3;
 $2 = $6;
 $7 = $2;
 $1 = $7;
 $8 = $1;
 $9 = HEAP32[$8>>2]|0;
 __ZN7lazperf12InFileStream7Private5resetEv($9);
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStream2cbEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$field = 0, $$field4 = 0, $$index1 = 0, $$index3 = 0, $$index7 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $$byval_copy = sp + 228|0;
 $26 = sp + 24|0;
 $27 = sp + 16|0;
 $28 = sp + 8|0;
 $29 = sp;
 $35 = sp + 243|0;
 $36 = sp + 242|0;
 $37 = sp + 241|0;
 $38 = sp + 240|0;
 $54 = sp + 40|0;
 $55 = sp + 32|0;
 $56 = sp + 28|0;
 $53 = $1;
 $57 = $53;
 HEAP32[$55>>2] = (654);
 $$index1 = ((($55)) + 4|0);
 HEAP32[$$index1>>2] = 0;
 $52 = $57;
 $58 = $52;
 $51 = $58;
 $59 = $51;
 $50 = $59;
 $60 = $50;
 $61 = HEAP32[$60>>2]|0;
 HEAP32[$56>>2] = $61;
 $46 = $55;
 $47 = $56;
 $48 = 37659;
 $49 = 37660;
 $62 = $46;
 $45 = $62;
 $63 = $45;
 $64 = $47;
 $2 = $64;
 $65 = $2;
 $66 = $48;
 $3 = $66;
 $67 = $3;
 $68 = $49;
 $4 = $68;
 $69 = $4;
 $40 = $54;
 $41 = $63;
 $42 = $65;
 $43 = $67;
 $44 = $69;
 $70 = $40;
 $71 = $41;
 $39 = $71;
 $72 = $39;
 $$field = HEAP32[$72>>2]|0;
 $$index3 = ((($72)) + 4|0);
 $$field4 = HEAP32[$$index3>>2]|0;
 HEAP32[$70>>2] = $$field;
 $$index7 = ((($70)) + 4|0);
 HEAP32[$$index7>>2] = $$field4;
 $73 = ((($70)) + 8|0);
 $74 = $42;
 $5 = $74;
 $75 = $5;
 $76 = $43;
 $6 = $76;
 $77 = $6;
 $78 = $44;
 $7 = $78;
 $79 = $7;
 $31 = $73;
 $32 = $75;
 $33 = $77;
 $34 = $79;
 $80 = $31;
 $81 = $32;
 $30 = $81;
 $82 = $30;
 $83 = $33;
 $8 = $83;
 $84 = $8;
 $85 = $34;
 $9 = $85;
 $86 = $9;
 ;HEAP8[$26>>0]=HEAP8[$38>>0]|0;
 ;HEAP8[$27>>0]=HEAP8[$37>>0]|0;
 ;HEAP8[$28>>0]=HEAP8[$36>>0]|0;
 ;HEAP8[$29>>0]=HEAP8[$35>>0]|0;
 $22 = $80;
 $23 = $82;
 $24 = $84;
 $25 = $86;
 $87 = $22;
 $88 = $23;
 $21 = $88;
 $89 = $21;
 $11 = $87;
 $12 = $89;
 $90 = $11;
 $91 = $12;
 $10 = $91;
 $92 = $10;
 $93 = HEAP32[$92>>2]|0;
 HEAP32[$90>>2] = $93;
 $94 = $24;
 $13 = $94;
 $95 = $13;
 $15 = $87;
 $16 = $95;
 $96 = $16;
 $14 = $96;
 $97 = $25;
 $17 = $97;
 $98 = $17;
 $19 = $87;
 $20 = $98;
 $99 = $20;
 $18 = $99;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$54>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$54+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$54+8>>2]|0;
 __ZNSt3__28functionIFvPhmEEC2INS_6__bindIMN7lazperf12InFileStream7PrivateEFvS1_mEJPS8_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEEvEET_($0,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZN7lazperf12InFileStream7Private8getBytesEPhm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $21 = sp;
 $24 = sp + 180|0;
 $42 = sp + 28|0;
 $43 = sp + 24|0;
 $40 = $0;
 $41 = $1;
 HEAP32[$42>>2] = $2;
 $49 = $40;
 $50 = HEAP32[$42>>2]|0;
 $51 = ($50|0)==(1);
 if ($51) {
  $52 = ((($49)) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($49)) + 4|0);
  $39 = $54;
  $55 = $39;
  $56 = ((($55)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = HEAP32[$55>>2]|0;
  $59 = $57;
  $60 = $58;
  $61 = (($59) - ($60))|0;
  $62 = ($53>>>0)>=($61>>>0);
  if ($62) {
   (__ZN7lazperf12InFileStream7Private6fillitEv($49)|0);
  }
  $63 = ((($49)) + 4|0);
  $64 = ((($49)) + 16|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = (($65) + 1)|0;
  HEAP32[$64>>2] = $66;
  $37 = $63;
  $38 = $65;
  $67 = $37;
  $68 = HEAP32[$67>>2]|0;
  $69 = $38;
  $70 = (($68) + ($69)|0);
  $71 = HEAP8[$70>>0]|0;
  $72 = $41;
  HEAP8[$72>>0] = $71;
  STACKTOP = sp;return;
 }
 $73 = ((($49)) + 4|0);
 $3 = $73;
 $74 = $3;
 $75 = ((($74)) + 4|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$74>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = ((($49)) + 16|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = (($80) - ($82))|0;
 HEAP32[$43>>2] = $83;
 $84 = HEAP32[$42>>2]|0;
 $85 = HEAP32[$43>>2]|0;
 $86 = ($84>>>0)<=($85>>>0);
 if ($86) {
  $87 = ((($49)) + 4|0);
  $5 = $87;
  $88 = $5;
  $89 = HEAP32[$88>>2]|0;
  $4 = $89;
  $90 = $4;
  $91 = ((($49)) + 16|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (($90) + ($92)|0);
  $44 = $93;
  $94 = $44;
  $95 = HEAP32[$42>>2]|0;
  $96 = (($94) + ($95)|0);
  $45 = $96;
  $97 = $44;
  $98 = $45;
  $99 = $41;
  $13 = $97;
  $14 = $98;
  $15 = $99;
  $100 = $13;
  $12 = $100;
  $101 = $12;
  $102 = $14;
  $6 = $102;
  $103 = $6;
  $104 = $15;
  $7 = $104;
  $105 = $7;
  $8 = $101;
  $9 = $103;
  $10 = $105;
  $106 = $9;
  $107 = $8;
  $108 = $106;
  $109 = $107;
  $110 = (($108) - ($109))|0;
  $11 = $110;
  $111 = $11;
  $112 = ($111>>>0)>(0);
  if ($112) {
   $113 = $10;
   $114 = $8;
   $115 = $11;
   _memmove(($113|0),($114|0),($115|0))|0;
  }
  $116 = HEAP32[$42>>2]|0;
  $117 = ((($49)) + 16|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($118) + ($116))|0;
  HEAP32[$117>>2] = $119;
  STACKTOP = sp;return;
 }
 while(1) {
  $22 = $42;
  $23 = $43;
  $120 = $22;
  $121 = $23;
  ;HEAP8[$21>>0]=HEAP8[$24>>0]|0;
  $19 = $120;
  $20 = $121;
  $122 = $20;
  $123 = $19;
  $16 = $21;
  $17 = $122;
  $18 = $123;
  $124 = $17;
  $125 = HEAP32[$124>>2]|0;
  $126 = $18;
  $127 = HEAP32[$126>>2]|0;
  $128 = ($125>>>0)<($127>>>0);
  $129 = $20;
  $130 = $19;
  $131 = $128 ? $129 : $130;
  $132 = HEAP32[$131>>2]|0;
  $46 = $132;
  $133 = ((($49)) + 4|0);
  $26 = $133;
  $134 = $26;
  $135 = HEAP32[$134>>2]|0;
  $25 = $135;
  $136 = $25;
  $137 = ((($49)) + 16|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = (($136) + ($138)|0);
  $47 = $139;
  $140 = $47;
  $141 = $46;
  $142 = (($140) + ($141)|0);
  $48 = $142;
  $143 = $47;
  $144 = $48;
  $145 = $41;
  $34 = $143;
  $35 = $144;
  $36 = $145;
  $146 = $34;
  $33 = $146;
  $147 = $33;
  $148 = $35;
  $27 = $148;
  $149 = $27;
  $150 = $36;
  $28 = $150;
  $151 = $28;
  $29 = $147;
  $30 = $149;
  $31 = $151;
  $152 = $30;
  $153 = $29;
  $154 = $152;
  $155 = $153;
  $156 = (($154) - ($155))|0;
  $32 = $156;
  $157 = $32;
  $158 = ($157>>>0)>(0);
  if ($158) {
   $159 = $31;
   $160 = $29;
   $161 = $32;
   _memmove(($159|0),($160|0),($161|0))|0;
  }
  $162 = $46;
  $163 = ((($49)) + 16|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (($164) + ($162))|0;
  HEAP32[$163>>2] = $165;
  $166 = $46;
  $167 = HEAP32[$42>>2]|0;
  $168 = (($167) - ($166))|0;
  HEAP32[$42>>2] = $168;
  $169 = HEAP32[$42>>2]|0;
  $170 = ($169|0)==(0);
  if ($170) {
   break;
  }
  $171 = $46;
  $172 = $41;
  $173 = (($172) + ($171)|0);
  $41 = $173;
  $174 = (__ZN7lazperf12InFileStream7Private6fillitEv($49)|0);
  HEAP32[$43>>2] = $174;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__28functionIFvPhmEEC2INS_6__bindIMN7lazperf12InFileStream7PrivateEFvS1_mEJPS8_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEEvEET_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(672|0);
 $30 = sp + 532|0;
 $44 = sp + 136|0;
 $45 = sp + 128|0;
 $46 = sp + 120|0;
 $47 = sp + 112|0;
 $51 = sp + 664|0;
 $52 = sp + 663|0;
 $53 = sp + 662|0;
 $54 = sp + 661|0;
 $56 = sp + 460|0;
 $65 = sp + 104|0;
 $66 = sp + 96|0;
 $67 = sp + 88|0;
 $68 = sp + 80|0;
 $72 = sp + 660|0;
 $73 = sp + 659|0;
 $74 = sp + 658|0;
 $75 = sp + 657|0;
 $77 = sp + 408|0;
 $83 = sp + 72|0;
 $84 = sp + 64|0;
 $85 = sp + 56|0;
 $91 = sp + 48|0;
 $92 = sp + 40|0;
 $93 = sp + 32|0;
 $96 = sp + 656|0;
 $97 = sp + 356|0;
 $98 = sp + 655|0;
 $99 = sp + 654|0;
 $100 = sp + 352|0;
 $101 = sp + 653|0;
 $102 = sp + 24|0;
 $103 = sp + 16|0;
 $104 = sp + 8|0;
 $109 = sp + 652|0;
 $110 = sp + 332|0;
 $111 = sp + 328|0;
 $118 = sp;
 $119 = sp + 651|0;
 $122 = sp + 292|0;
 $152 = sp + 172|0;
 $153 = sp + 650|0;
 $154 = sp + 160|0;
 $155 = sp + 152|0;
 $156 = sp + 649|0;
 $159 = sp + 648|0;
 $158 = $0;
 $160 = $158;
 $157 = $1;
 $161 = $157;
 $2 = $159;
 $149 = $160;
 $150 = $161;
 $151 = $159;
 $162 = $149;
 $163 = ((($162)) + 8|0);
 $148 = $163;
 $164 = $148;
 HEAP32[$164>>2] = 652;
 $165 = ((($162)) + 12|0);
 HEAP32[$165>>2] = 10240;
 $166 = $150;
 $147 = $166;
 $120 = $122;
 $121 = 655;
 $167 = $120;
 $168 = $121;
 HEAP32[$167>>2] = $168;
 $169 = HEAP32[$122>>2]|0;
 HEAP32[$152>>2] = $169;
 $170 = ((($162)) + 8|0);
 ;HEAP32[$170>>2]=HEAP32[$152>>2]|0;
 ;HEAP8[$118>>0]=HEAP8[$119>>0]|0;
 $171 = ((($162)) + 12|0);
 HEAP32[$171>>2] = 10384;
 $172 = $151;
 $3 = $153;
 $4 = $172;
 $11 = $153;
 $12 = 1;
 $13 = 0;
 $173 = $11;
 $174 = $12;
 $10 = $173;
 $175 = ($174>>>0)>(357913941);
 if ($175) {
  $7 = 21003;
  $176 = (___cxa_allocate_exception(8)|0);
  $177 = $7;
  $5 = $176;
  $6 = $177;
  $178 = $5;
  $179 = $6;
  __ZNSt11logic_errorC2EPKc($178,$179);
  HEAP32[$178>>2] = (17588);
  ___cxa_throw(($176|0),(9800|0),(617|0));
  // unreachable;
 }
 $180 = $12;
 $181 = ($180*12)|0;
 $8 = $181;
 $9 = 4;
 $182 = $8;
 $183 = (__Znwm($182)|0);
 $14 = $155;
 $15 = $153;
 $16 = 1;
 $184 = $14;
 $185 = $15;
 HEAP32[$184>>2] = $185;
 $186 = ((($184)) + 4|0);
 $187 = $16;
 HEAP32[$186>>2] = $187;
 $29 = $154;
 HEAP32[$30>>2] = $183;
 $31 = $155;
 $188 = $29;
 $189 = $31;
 $28 = $189;
 $190 = $28;
 $25 = $188;
 $26 = $30;
 $27 = $190;
 $191 = $25;
 $192 = $26;
 $24 = $192;
 $193 = $24;
 $18 = $191;
 $19 = $193;
 $194 = $18;
 $195 = $19;
 $17 = $195;
 $196 = $17;
 $197 = HEAP32[$196>>2]|0;
 HEAP32[$194>>2] = $197;
 $198 = ((($191)) + 4|0);
 $199 = $27;
 $20 = $199;
 $200 = $20;
 $22 = $198;
 $23 = $200;
 $201 = $22;
 $202 = $23;
 $21 = $202;
 $203 = $21;
 ;HEAP32[$201>>2]=HEAP32[$203>>2]|0;HEAP32[$201+4>>2]=HEAP32[$203+4>>2]|0;
 $34 = $154;
 $204 = $34;
 $33 = $204;
 $205 = $33;
 $32 = $205;
 $206 = $32;
 $207 = HEAP32[$206>>2]|0;
 $208 = $150;
 $35 = $208;
 $209 = $35;
 $36 = $156;
 $37 = $153;
 $106 = $207;
 $107 = $209;
 $108 = $156;
 $210 = $106;
 $211 = $107;
 $105 = $211;
 $212 = $105;
 $57 = $212;
 $213 = $57;
 $55 = $213;
 $214 = $55;
 $49 = $56;
 $50 = $214;
 $215 = $49;
 $216 = $50;
 $48 = $216;
 $217 = $48;
 ;HEAP8[$44>>0]=HEAP8[$54>>0]|0;
 ;HEAP8[$45>>0]=HEAP8[$53>>0]|0;
 ;HEAP8[$46>>0]=HEAP8[$52>>0]|0;
 ;HEAP8[$47>>0]=HEAP8[$51>>0]|0;
 $42 = $215;
 $43 = $217;
 $218 = $42;
 $219 = $43;
 $41 = $219;
 $220 = $41;
 $39 = $218;
 $40 = $220;
 $221 = $39;
 $222 = $40;
 $38 = $222;
 $223 = $38;
 HEAP32[$221>>2] = $223;
 $224 = HEAP32[$56>>2]|0;
 HEAP32[$110>>2] = $224;
 $225 = $108;
 $58 = $225;
 $226 = $58;
 $78 = $226;
 $227 = $78;
 $76 = $227;
 $228 = $76;
 $70 = $77;
 $71 = $228;
 $229 = $70;
 $230 = $71;
 $69 = $230;
 $231 = $69;
 ;HEAP8[$65>>0]=HEAP8[$75>>0]|0;
 ;HEAP8[$66>>0]=HEAP8[$74>>0]|0;
 ;HEAP8[$67>>0]=HEAP8[$73>>0]|0;
 ;HEAP8[$68>>0]=HEAP8[$72>>0]|0;
 $63 = $229;
 $64 = $231;
 $232 = $63;
 $233 = $64;
 $62 = $233;
 $234 = $62;
 $60 = $232;
 $61 = $234;
 $235 = $60;
 $236 = $61;
 $59 = $236;
 $237 = $59;
 HEAP32[$235>>2] = $237;
 $238 = HEAP32[$77>>2]|0;
 HEAP32[$111>>2] = $238;
 ;HEAP8[$102>>0]=HEAP8[$111>>0]|0;HEAP8[$102+1>>0]=HEAP8[$111+1>>0]|0;HEAP8[$102+2>>0]=HEAP8[$111+2>>0]|0;HEAP8[$102+3>>0]=HEAP8[$111+3>>0]|0;
 ;HEAP8[$103>>0]=HEAP8[$110>>0]|0;HEAP8[$103+1>>0]=HEAP8[$110+1>>0]|0;HEAP8[$103+2>>0]=HEAP8[$110+2>>0]|0;HEAP8[$103+3>>0]=HEAP8[$110+3>>0]|0;
 ;HEAP8[$104>>0]=HEAP8[$109>>0]|0;
 $95 = $210;
 $239 = $95;
 $94 = $103;
 $240 = $94;
 ;HEAP32[$97>>2]=HEAP32[$240>>2]|0;
 ;HEAP8[$83>>0]=HEAP8[$98>>0]|0;
 ;HEAP8[$84>>0]=HEAP8[$97>>0]|0;HEAP8[$84+1>>0]=HEAP8[$97+1>>0]|0;HEAP8[$84+2>>0]=HEAP8[$97+2>>0]|0;HEAP8[$84+3>>0]=HEAP8[$97+3>>0]|0;
 ;HEAP8[$85>>0]=HEAP8[$96>>0]|0;
 $82 = $239;
 $241 = $82;
 $81 = $84;
 $242 = $81;
 $80 = $242;
 $243 = $80;
 $244 = HEAP32[$243>>2]|0;
 $79 = $244;
 $245 = $79;
 ;HEAP32[$241>>2]=HEAP32[$245>>2]|0;HEAP32[$241+4>>2]=HEAP32[$245+4>>2]|0;HEAP32[$241+8>>2]=HEAP32[$245+8>>2]|0;
 $86 = $102;
 $246 = $86;
 ;HEAP32[$100>>2]=HEAP32[$246>>2]|0;
 ;HEAP8[$91>>0]=HEAP8[$101>>0]|0;
 ;HEAP8[$92>>0]=HEAP8[$100>>0]|0;HEAP8[$92+1>>0]=HEAP8[$100+1>>0]|0;HEAP8[$92+2>>0]=HEAP8[$100+2>>0]|0;HEAP8[$92+3>>0]=HEAP8[$100+3>>0]|0;
 ;HEAP8[$93>>0]=HEAP8[$99>>0]|0;
 $90 = $239;
 $89 = $92;
 $247 = $89;
 $88 = $247;
 $248 = $88;
 $249 = HEAP32[$248>>2]|0;
 $87 = $249;
 $116 = $154;
 $250 = $116;
 $115 = $250;
 $251 = $115;
 $114 = $251;
 $252 = $114;
 $253 = HEAP32[$252>>2]|0;
 $117 = $253;
 $113 = $250;
 $254 = $113;
 $112 = $254;
 $255 = $112;
 HEAP32[$255>>2] = 0;
 $256 = $117;
 HEAP32[$162>>2] = $256;
 $146 = $154;
 $257 = $146;
 $143 = $257;
 $144 = 0;
 $258 = $143;
 $142 = $258;
 $259 = $142;
 $141 = $259;
 $260 = $141;
 $261 = HEAP32[$260>>2]|0;
 $145 = $261;
 $262 = $144;
 $126 = $258;
 $263 = $126;
 $125 = $263;
 $264 = $125;
 HEAP32[$264>>2] = $262;
 $265 = $145;
 $266 = ($265|0)!=(0|0);
 if (!($266)) {
  STACKTOP = sp;return;
 }
 $124 = $258;
 $267 = $124;
 $268 = ((($267)) + 4|0);
 $123 = $268;
 $269 = $123;
 $270 = $145;
 $139 = $269;
 $140 = $270;
 $271 = $139;
 $272 = HEAP32[$271>>2]|0;
 $273 = $140;
 $274 = ((($271)) + 4|0);
 $275 = HEAP32[$274>>2]|0;
 $136 = $272;
 $137 = $273;
 $138 = $275;
 $276 = $136;
 $277 = $137;
 $278 = $138;
 $133 = $276;
 $134 = $277;
 $135 = $278;
 $279 = $134;
 $280 = $135;
 $281 = ($280*12)|0;
 $130 = $279;
 $131 = $281;
 $132 = 4;
 $282 = $130;
 $283 = $131;
 $284 = $132;
 $127 = $282;
 $128 = $283;
 $129 = $284;
 $285 = $127;
 $286 = $128;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($285,$286);
 STACKTOP = sp;return;
}
function __ZNSt3__210__function16__policy_invokerIFvPhmEE11__call_implINS0_12__alloc_funcINS_6__bindIMN7lazperf12InFileStream7PrivateEFvS2_mEJPSA_RKNS_12placeholders4__phILi1EEERKNSF_ILi2EEEEEENS_9allocatorISM_EES3_EEEEvPKNS0_16__policy_storageES2_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = sp + 8|0;
 $14 = sp + 4|0;
 $12 = $0;
 HEAP32[$13>>2] = $1;
 HEAP32[$14>>2] = $2;
 $16 = $12;
 $17 = HEAP32[$16>>2]|0;
 $15 = $17;
 $18 = $15;
 $11 = $13;
 $19 = $11;
 $3 = $14;
 $20 = $3;
 $8 = $18;
 $9 = $19;
 $10 = $20;
 $21 = $8;
 $7 = $21;
 $22 = $7;
 $6 = $22;
 $23 = $6;
 $24 = $9;
 $5 = $24;
 $25 = $5;
 $26 = $10;
 $4 = $26;
 $27 = $4;
 __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRNS_6__bindIMN7lazperf12InFileStream7PrivateEFvPhmEJPS6_RKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEES7_mEEEvDpOT_($23,$25,$27);
 STACKTOP = sp;return;
}
function __ZNSt3__210__function8__policy13__large_cloneINS0_12__alloc_funcINS_6__bindIMN7lazperf12InFileStream7PrivateEFvPhmEJPS7_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEENS_9allocatorISK_EEFvS8_mEEEEEPvPKv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(624|0);
 $14 = sp + 128|0;
 $15 = sp + 120|0;
 $16 = sp + 112|0;
 $17 = sp + 104|0;
 $21 = sp + 622|0;
 $22 = sp + 621|0;
 $23 = sp + 620|0;
 $24 = sp + 619|0;
 $26 = sp + 536|0;
 $32 = sp + 96|0;
 $33 = sp + 88|0;
 $34 = sp + 80|0;
 $40 = sp + 72|0;
 $41 = sp + 64|0;
 $42 = sp + 56|0;
 $45 = sp + 618|0;
 $46 = sp + 484|0;
 $47 = sp + 617|0;
 $48 = sp + 616|0;
 $49 = sp + 480|0;
 $50 = sp + 615|0;
 $51 = sp + 48|0;
 $52 = sp + 40|0;
 $53 = sp + 32|0;
 $60 = sp + 24|0;
 $61 = sp + 16|0;
 $62 = sp + 8|0;
 $63 = sp;
 $66 = sp + 614|0;
 $67 = sp + 613|0;
 $68 = sp + 612|0;
 $69 = sp + 611|0;
 $71 = sp + 440|0;
 $76 = sp + 610|0;
 $77 = sp + 420|0;
 $78 = sp + 416|0;
 $123 = sp + 236|0;
 $142 = sp + 609|0;
 $143 = sp + 152|0;
 $144 = sp + 144|0;
 $145 = sp + 608|0;
 $146 = $0;
 $148 = $146;
 $147 = $148;
 $149 = $147;
 $141 = $149;
 $150 = $141;
 $140 = $150;
 $151 = $140;
 $139 = $151;
 $152 = $139;
 $137 = $142;
 $138 = $152;
 $134 = $142;
 $135 = 1;
 $136 = 0;
 $153 = $134;
 $154 = $135;
 $133 = $153;
 $155 = ($154>>>0)>(357913941);
 if ($155) {
  $130 = 21003;
  $156 = (___cxa_allocate_exception(8)|0);
  $157 = $130;
  $128 = $156;
  $129 = $157;
  $158 = $128;
  $159 = $129;
  __ZNSt11logic_errorC2EPKc($158,$159);
  HEAP32[$158>>2] = (17588);
  ___cxa_throw(($156|0),(9800|0),(617|0));
  // unreachable;
 }
 $160 = $135;
 $161 = ($160*12)|0;
 $131 = $161;
 $132 = 4;
 $162 = $131;
 $163 = (__Znwm($162)|0);
 $125 = $144;
 $126 = $142;
 $127 = 1;
 $164 = $125;
 $165 = $126;
 HEAP32[$164>>2] = $165;
 $166 = ((($164)) + 4|0);
 $167 = $127;
 HEAP32[$166>>2] = $167;
 $122 = $143;
 HEAP32[$123>>2] = $163;
 $124 = $144;
 $168 = $122;
 $169 = $124;
 $121 = $169;
 $170 = $121;
 $118 = $168;
 $119 = $123;
 $120 = $170;
 $171 = $118;
 $172 = $119;
 $117 = $172;
 $173 = $117;
 $111 = $171;
 $112 = $173;
 $174 = $111;
 $175 = $112;
 $110 = $175;
 $176 = $110;
 $177 = HEAP32[$176>>2]|0;
 HEAP32[$174>>2] = $177;
 $178 = ((($171)) + 4|0);
 $179 = $120;
 $113 = $179;
 $180 = $113;
 $115 = $178;
 $116 = $180;
 $181 = $115;
 $182 = $116;
 $114 = $182;
 $183 = $114;
 ;HEAP32[$181>>2]=HEAP32[$183>>2]|0;HEAP32[$181+4>>2]=HEAP32[$183+4>>2]|0;
 $109 = $143;
 $184 = $109;
 $108 = $184;
 $185 = $108;
 $107 = $185;
 $186 = $107;
 $187 = HEAP32[$186>>2]|0;
 $106 = $150;
 $188 = $106;
 $105 = $188;
 $189 = $105;
 $103 = $145;
 $104 = $142;
 $73 = $187;
 $74 = $189;
 $75 = $145;
 $190 = $73;
 $191 = $74;
 $72 = $191;
 $192 = $72;
 $70 = $192;
 $193 = $70;
 $64 = $71;
 $65 = $193;
 $194 = $64;
 $195 = $65;
 ;HEAP8[$60>>0]=HEAP8[$69>>0]|0;
 ;HEAP8[$61>>0]=HEAP8[$68>>0]|0;
 ;HEAP8[$62>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$63>>0]=HEAP8[$66>>0]|0;
 $58 = $194;
 $59 = $195;
 $196 = $58;
 $197 = $59;
 $57 = $197;
 $198 = $57;
 $55 = $196;
 $56 = $198;
 $199 = $55;
 $200 = $56;
 $54 = $200;
 $201 = $54;
 HEAP32[$199>>2] = $201;
 $202 = HEAP32[$71>>2]|0;
 HEAP32[$77>>2] = $202;
 $203 = $75;
 $7 = $203;
 $204 = $7;
 $27 = $204;
 $205 = $27;
 $25 = $205;
 $206 = $25;
 $19 = $26;
 $20 = $206;
 $207 = $19;
 $208 = $20;
 $18 = $208;
 $209 = $18;
 ;HEAP8[$14>>0]=HEAP8[$24>>0]|0;
 ;HEAP8[$15>>0]=HEAP8[$23>>0]|0;
 ;HEAP8[$16>>0]=HEAP8[$22>>0]|0;
 ;HEAP8[$17>>0]=HEAP8[$21>>0]|0;
 $12 = $207;
 $13 = $209;
 $210 = $12;
 $211 = $13;
 $11 = $211;
 $212 = $11;
 $9 = $210;
 $10 = $212;
 $213 = $9;
 $214 = $10;
 $8 = $214;
 $215 = $8;
 HEAP32[$213>>2] = $215;
 $216 = HEAP32[$26>>2]|0;
 HEAP32[$78>>2] = $216;
 ;HEAP8[$51>>0]=HEAP8[$78>>0]|0;HEAP8[$51+1>>0]=HEAP8[$78+1>>0]|0;HEAP8[$51+2>>0]=HEAP8[$78+2>>0]|0;HEAP8[$51+3>>0]=HEAP8[$78+3>>0]|0;
 ;HEAP8[$52>>0]=HEAP8[$77>>0]|0;HEAP8[$52+1>>0]=HEAP8[$77+1>>0]|0;HEAP8[$52+2>>0]=HEAP8[$77+2>>0]|0;HEAP8[$52+3>>0]=HEAP8[$77+3>>0]|0;
 ;HEAP8[$53>>0]=HEAP8[$76>>0]|0;
 $44 = $190;
 $217 = $44;
 $43 = $52;
 $218 = $43;
 ;HEAP32[$46>>2]=HEAP32[$218>>2]|0;
 ;HEAP8[$32>>0]=HEAP8[$47>>0]|0;
 ;HEAP8[$33>>0]=HEAP8[$46>>0]|0;HEAP8[$33+1>>0]=HEAP8[$46+1>>0]|0;HEAP8[$33+2>>0]=HEAP8[$46+2>>0]|0;HEAP8[$33+3>>0]=HEAP8[$46+3>>0]|0;
 ;HEAP8[$34>>0]=HEAP8[$45>>0]|0;
 $31 = $217;
 $219 = $31;
 $30 = $33;
 $220 = $30;
 $29 = $220;
 $221 = $29;
 $222 = HEAP32[$221>>2]|0;
 $28 = $222;
 $223 = $28;
 ;HEAP32[$219>>2]=HEAP32[$223>>2]|0;HEAP32[$219+4>>2]=HEAP32[$223+4>>2]|0;HEAP32[$219+8>>2]=HEAP32[$223+8>>2]|0;
 $35 = $51;
 $224 = $35;
 ;HEAP32[$49>>2]=HEAP32[$224>>2]|0;
 ;HEAP8[$40>>0]=HEAP8[$50>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$49>>0]|0;HEAP8[$41+1>>0]=HEAP8[$49+1>>0]|0;HEAP8[$41+2>>0]=HEAP8[$49+2>>0]|0;HEAP8[$41+3>>0]=HEAP8[$49+3>>0]|0;
 ;HEAP8[$42>>0]=HEAP8[$48>>0]|0;
 $39 = $217;
 $38 = $41;
 $225 = $38;
 $37 = $225;
 $226 = $37;
 $227 = HEAP32[$226>>2]|0;
 $36 = $227;
 $5 = $143;
 $228 = $5;
 $4 = $228;
 $229 = $4;
 $3 = $229;
 $230 = $3;
 $231 = HEAP32[$230>>2]|0;
 $6 = $231;
 $2 = $228;
 $232 = $2;
 $1 = $232;
 $233 = $1;
 HEAP32[$233>>2] = 0;
 $234 = $6;
 $102 = $143;
 $235 = $102;
 $99 = $235;
 $100 = 0;
 $236 = $99;
 $98 = $236;
 $237 = $98;
 $97 = $237;
 $238 = $97;
 $239 = HEAP32[$238>>2]|0;
 $101 = $239;
 $240 = $100;
 $82 = $236;
 $241 = $82;
 $81 = $241;
 $242 = $81;
 HEAP32[$242>>2] = $240;
 $243 = $101;
 $244 = ($243|0)!=(0|0);
 if (!($244)) {
  STACKTOP = sp;return ($234|0);
 }
 $80 = $236;
 $245 = $80;
 $246 = ((($245)) + 4|0);
 $79 = $246;
 $247 = $79;
 $248 = $101;
 $95 = $247;
 $96 = $248;
 $249 = $95;
 $250 = HEAP32[$249>>2]|0;
 $251 = $96;
 $252 = ((($249)) + 4|0);
 $253 = HEAP32[$252>>2]|0;
 $92 = $250;
 $93 = $251;
 $94 = $253;
 $254 = $92;
 $255 = $93;
 $256 = $94;
 $89 = $254;
 $90 = $255;
 $91 = $256;
 $257 = $90;
 $258 = $91;
 $259 = ($258*12)|0;
 $86 = $257;
 $87 = $259;
 $88 = 4;
 $260 = $86;
 $261 = $87;
 $262 = $88;
 $83 = $260;
 $84 = $261;
 $85 = $262;
 $263 = $83;
 $264 = $84;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($263,$264);
 STACKTOP = sp;return ($234|0);
}
function __ZNSt3__210__function8__policy15__large_destroyINS0_12__alloc_funcINS_6__bindIMN7lazperf12InFileStream7PrivateEFvPhmEJPS7_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEENS_9allocatorISK_EEFvS8_mEEEEEvPv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $18 = sp + 68|0;
 $16 = $0;
 $19 = $16;
 $17 = $19;
 $20 = $17;
 $15 = $20;
 $21 = $15;
 $14 = $21;
 $22 = $14;
 $13 = $22;
 $23 = $13;
 $2 = $18;
 $3 = $23;
 $24 = $17;
 $1 = $24;
 $25 = $17;
 $10 = $18;
 $11 = $25;
 $12 = 1;
 $26 = $11;
 $27 = $12;
 $28 = ($27*12)|0;
 $7 = $26;
 $8 = $28;
 $9 = 4;
 $29 = $7;
 $30 = $8;
 $31 = $9;
 $4 = $29;
 $5 = $30;
 $6 = $31;
 $32 = $4;
 $33 = $5;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($32,$33);
 STACKTOP = sp;return;
}
function __ZNSt3__228__invoke_void_return_wrapperIvE6__callIJRNS_6__bindIMN7lazperf12InFileStream7PrivateEFvPhmEJPS6_RKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEES7_mEEEvDpOT_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$field = 0, $$field2 = 0, $$index1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $19 = sp + 32|0;
 $20 = sp + 24|0;
 $21 = sp + 16|0;
 $22 = sp + 8|0;
 $27 = sp + 304|0;
 $28 = sp + 303|0;
 $29 = sp + 302|0;
 $30 = sp + 301|0;
 $62 = sp;
 $67 = sp + 300|0;
 $68 = sp + 72|0;
 $74 = $0;
 $75 = $1;
 $76 = $2;
 $77 = $74;
 $73 = $77;
 $78 = $73;
 $79 = $75;
 $4 = $79;
 $80 = $4;
 $81 = $76;
 $3 = $81;
 $82 = $3;
 $70 = $78;
 $71 = $80;
 $72 = $82;
 $83 = $70;
 $69 = $83;
 $84 = $69;
 $85 = $71;
 $6 = $85;
 $86 = $6;
 $87 = $72;
 $5 = $87;
 $88 = $5;
 $64 = $84;
 $65 = $86;
 $66 = $88;
 $89 = $64;
 $90 = ((($89)) + 8|0);
 $91 = $65;
 $63 = $91;
 $92 = $63;
 $93 = $66;
 $31 = $93;
 $94 = $31;
 $24 = $68;
 $25 = $92;
 $26 = $94;
 $95 = $24;
 $96 = $25;
 $23 = $96;
 $97 = $23;
 $98 = $26;
 $7 = $98;
 $99 = $7;
 ;HEAP8[$19>>0]=HEAP8[$30>>0]|0;
 ;HEAP8[$20>>0]=HEAP8[$29>>0]|0;
 ;HEAP8[$21>>0]=HEAP8[$28>>0]|0;
 ;HEAP8[$22>>0]=HEAP8[$27>>0]|0;
 $16 = $95;
 $17 = $97;
 $18 = $99;
 $100 = $16;
 $101 = $17;
 $15 = $101;
 $102 = $15;
 $9 = $100;
 $10 = $102;
 $103 = $9;
 $104 = $10;
 $8 = $104;
 $105 = $8;
 HEAP32[$103>>2] = $105;
 $106 = ((($100)) + 4|0);
 $107 = $18;
 $11 = $107;
 $108 = $11;
 $13 = $106;
 $14 = $108;
 $109 = $13;
 $110 = $14;
 $12 = $110;
 $111 = $12;
 HEAP32[$109>>2] = $111;
 ;HEAP8[$62>>0]=HEAP8[$67>>0]|0;
 $59 = $89;
 $60 = $90;
 $61 = $68;
 $112 = $59;
 $113 = $60;
 $58 = $113;
 $114 = $58;
 $57 = $114;
 $115 = $57;
 $116 = $61;
 $48 = $115;
 $49 = $116;
 $117 = $48;
 $118 = $60;
 $33 = $118;
 $119 = $33;
 $32 = $119;
 $120 = $32;
 $121 = $61;
 $37 = $120;
 $38 = $121;
 $39 = 0;
 $122 = $38;
 $36 = $122;
 $123 = $36;
 $35 = $123;
 $124 = $35;
 $125 = HEAP32[$124>>2]|0;
 $34 = $125;
 $126 = $34;
 $127 = $60;
 $41 = $127;
 $128 = $41;
 $40 = $128;
 $129 = $40;
 $130 = $61;
 $45 = $129;
 $46 = $130;
 $47 = 1;
 $131 = $46;
 $44 = $131;
 $132 = $44;
 $133 = ((($132)) + 4|0);
 $43 = $133;
 $134 = $43;
 $135 = HEAP32[$134>>2]|0;
 $42 = $135;
 $136 = $42;
 $53 = $112;
 $54 = $117;
 $55 = $126;
 $56 = $136;
 $137 = $54;
 $52 = $137;
 $138 = $52;
 $139 = HEAP32[$138>>2]|0;
 $140 = $53;
 $$field = HEAP32[$140>>2]|0;
 $$index1 = ((($140)) + 4|0);
 $$field2 = HEAP32[$$index1>>2]|0;
 $141 = $$field2 >> 1;
 $142 = (($139) + ($141)|0);
 $143 = $$field2 & 1;
 $144 = ($143|0)!=(0);
 if ($144) {
  $145 = HEAP32[$142>>2]|0;
  $146 = (($145) + ($$field)|0);
  $147 = HEAP32[$146>>2]|0;
  $155 = $147;
  $149 = $55;
  $51 = $149;
  $150 = $51;
  $151 = HEAP32[$150>>2]|0;
  $152 = $56;
  $50 = $152;
  $153 = $50;
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_viii[$155 & 1023]($142,$151,$154);
  STACKTOP = sp;return;
 } else {
  $148 = $$field;
  $155 = $148;
  $149 = $55;
  $51 = $149;
  $150 = $51;
  $151 = HEAP32[$150>>2]|0;
  $152 = $56;
  $50 = $152;
  $153 = $50;
  $154 = HEAP32[$153>>2]|0;
  FUNCTION_TABLE_viii[$155 & 1023]($142,$151,$154);
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf12InFileStream7Private6fillitEv($0) {
 $0 = $0|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = sp;
 $14 = sp + 60|0;
 $11 = $0;
 $15 = $11;
 $16 = ((($15)) + 16|0);
 HEAP32[$16>>2] = 0;
 $17 = HEAP32[$15>>2]|0;
 $18 = ((($15)) + 4|0);
 $10 = $18;
 $19 = $10;
 $20 = HEAP32[$19>>2]|0;
 $9 = $20;
 $21 = $9;
 $22 = ((($15)) + 4|0);
 $8 = $22;
 $23 = $8;
 $24 = ((($23)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = HEAP32[$23>>2]|0;
 $27 = $25;
 $28 = $26;
 $29 = (($27) - ($28))|0;
 (__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($17,$21,$29)|0);
 $30 = HEAP32[$15>>2]|0;
 $7 = $30;
 $31 = $7;
 $32 = ((($31)) + 4|0);
 $33 = HEAP32[$32>>2]|0;
 $12 = $33;
 $34 = $12;
 $35 = ($34|0)==(0);
 if ($35) {
  $36 = (___cxa_allocate_exception(8)|0);
  $$expand_i1_val = 1;
  HEAP8[$14>>0] = $$expand_i1_val;
  $5 = $13;
  $6 = 19288;
  $37 = $5;
  $4 = $37;
  $38 = $4;
  $3 = $38;
  $39 = $3;
  ;HEAP32[$39>>2]=0|0;HEAP32[$39+4>>2]=0|0;HEAP32[$39+8>>2]=0|0;
  $2 = $38;
  $40 = $2;
  $1 = $40;
  $41 = $6;
  $42 = $6;
  $43 = (__ZNSt3__211char_traitsIcE6lengthEPKc($42)|0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($37,$41,$43);
  __ZN7lazperf5errorC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($36,$13);
  $$expand_i1_val2 = 0;
  HEAP8[$14>>0] = $$expand_i1_val2;
  ___cxa_throw(($36|0),(6056|0),(22|0));
  // unreachable;
 } else {
  $44 = ((($15)) + 4|0);
  $45 = $12;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($44,$45);
  $46 = $12;
  STACKTOP = sp;return ($46|0);
 }
 return (0)|0;
}
function __ZN7lazperf11compressors7integerD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(544|0);
 $79 = sp + 8|0;
 $82 = sp + 537|0;
 $120 = sp;
 $123 = sp + 536|0;
 $135 = $0;
 $136 = $135;
 $137 = ((($136)) + 32|0);
 $133 = $137;
 $138 = $133;
 $132 = $138;
 $139 = $132;
 $140 = ((($139)) + 4|0);
 $141 = HEAP32[$140>>2]|0;
 $142 = HEAP32[$139>>2]|0;
 $143 = $141;
 $144 = $142;
 $145 = (($143) - ($144))|0;
 $146 = (($145|0) / 44)&-1;
 $134 = $146;
 $131 = $138;
 $147 = $131;
 $148 = HEAP32[$147>>2]|0;
 $128 = $147;
 $129 = $148;
 $149 = $128;
 $150 = ((($149)) + 4|0);
 $151 = HEAP32[$150>>2]|0;
 $130 = $151;
 while(1) {
  $152 = $129;
  $153 = $130;
  $154 = ($152|0)!=($153|0);
  if (!($154)) {
   break;
  }
  $127 = $149;
  $155 = $127;
  $156 = ((($155)) + 8|0);
  $126 = $156;
  $157 = $126;
  $125 = $157;
  $158 = $125;
  $159 = $130;
  $160 = ((($159)) + -44|0);
  $130 = $160;
  $124 = $160;
  $161 = $124;
  $121 = $158;
  $122 = $161;
  $162 = $121;
  $163 = $122;
  ;HEAP8[$120>>0]=HEAP8[$123>>0]|0;
  $118 = $162;
  $119 = $163;
  $164 = $118;
  $165 = $119;
  $116 = $164;
  $117 = $165;
  $166 = $117;
  __ZN7lazperf6models10arithmeticD2Ev($166);
 }
 $167 = $129;
 $168 = ((($149)) + 4|0);
 HEAP32[$168>>2] = $167;
 $169 = $134;
 $114 = $138;
 $115 = $169;
 $170 = $114;
 $113 = $170;
 $171 = $113;
 $172 = HEAP32[$171>>2]|0;
 $112 = $172;
 $173 = $112;
 $96 = $170;
 $174 = $96;
 $175 = HEAP32[$174>>2]|0;
 $95 = $175;
 $176 = $95;
 $101 = $170;
 $177 = $101;
 $100 = $177;
 $178 = $100;
 $99 = $178;
 $179 = $99;
 $180 = ((($179)) + 8|0);
 $98 = $180;
 $181 = $98;
 $97 = $181;
 $182 = $97;
 $183 = HEAP32[$182>>2]|0;
 $184 = HEAP32[$178>>2]|0;
 $185 = $183;
 $186 = $184;
 $187 = (($185) - ($186))|0;
 $188 = (($187|0) / 44)&-1;
 $189 = (($176) + (($188*44)|0)|0);
 $103 = $170;
 $190 = $103;
 $191 = HEAP32[$190>>2]|0;
 $102 = $191;
 $192 = $102;
 $193 = $115;
 $194 = (($192) + (($193*44)|0)|0);
 $105 = $170;
 $195 = $105;
 $196 = HEAP32[$195>>2]|0;
 $104 = $196;
 $197 = $104;
 $106 = $170;
 $198 = $106;
 $199 = ((($198)) + 4|0);
 $200 = HEAP32[$199>>2]|0;
 $201 = HEAP32[$198>>2]|0;
 $202 = $200;
 $203 = $201;
 $204 = (($202) - ($203))|0;
 $205 = (($204|0) / 44)&-1;
 $206 = (($197) + (($205*44)|0)|0);
 $107 = $170;
 $108 = $173;
 $109 = $189;
 $110 = $194;
 $111 = $206;
 $94 = $138;
 $207 = ((($136)) + 64|0);
 $92 = $207;
 $208 = $92;
 $91 = $208;
 $209 = $91;
 $210 = ((($209)) + 4|0);
 $211 = HEAP32[$210>>2]|0;
 $212 = HEAP32[$209>>2]|0;
 $213 = $211;
 $214 = $212;
 $215 = (($213) - ($214))|0;
 $216 = (($215|0) / 44)&-1;
 $93 = $216;
 $90 = $208;
 $217 = $90;
 $218 = HEAP32[$217>>2]|0;
 $87 = $217;
 $88 = $218;
 $219 = $87;
 $220 = ((($219)) + 4|0);
 $221 = HEAP32[$220>>2]|0;
 $89 = $221;
 while(1) {
  $222 = $88;
  $223 = $89;
  $224 = ($222|0)!=($223|0);
  if (!($224)) {
   break;
  }
  $86 = $219;
  $225 = $86;
  $226 = ((($225)) + 8|0);
  $85 = $226;
  $227 = $85;
  $84 = $227;
  $228 = $84;
  $229 = $89;
  $230 = ((($229)) + -44|0);
  $89 = $230;
  $83 = $230;
  $231 = $83;
  $80 = $228;
  $81 = $231;
  $232 = $80;
  $233 = $81;
  ;HEAP8[$79>>0]=HEAP8[$82>>0]|0;
  $77 = $232;
  $78 = $233;
  $234 = $77;
  $235 = $78;
  $75 = $234;
  $76 = $235;
  $236 = $76;
  __ZN7lazperf6models10arithmeticD2Ev($236);
 }
 $237 = $88;
 $238 = ((($219)) + 4|0);
 HEAP32[$238>>2] = $237;
 $239 = $93;
 $73 = $208;
 $74 = $239;
 $240 = $73;
 $72 = $240;
 $241 = $72;
 $242 = HEAP32[$241>>2]|0;
 $71 = $242;
 $243 = $71;
 $55 = $240;
 $244 = $55;
 $245 = HEAP32[$244>>2]|0;
 $54 = $245;
 $246 = $54;
 $60 = $240;
 $247 = $60;
 $59 = $247;
 $248 = $59;
 $58 = $248;
 $249 = $58;
 $250 = ((($249)) + 8|0);
 $57 = $250;
 $251 = $57;
 $56 = $251;
 $252 = $56;
 $253 = HEAP32[$252>>2]|0;
 $254 = HEAP32[$248>>2]|0;
 $255 = $253;
 $256 = $254;
 $257 = (($255) - ($256))|0;
 $258 = (($257|0) / 44)&-1;
 $259 = (($246) + (($258*44)|0)|0);
 $62 = $240;
 $260 = $62;
 $261 = HEAP32[$260>>2]|0;
 $61 = $261;
 $262 = $61;
 $263 = $74;
 $264 = (($262) + (($263*44)|0)|0);
 $64 = $240;
 $265 = $64;
 $266 = HEAP32[$265>>2]|0;
 $63 = $266;
 $267 = $63;
 $65 = $240;
 $268 = $65;
 $269 = ((($268)) + 4|0);
 $270 = HEAP32[$269>>2]|0;
 $271 = HEAP32[$268>>2]|0;
 $272 = $270;
 $273 = $271;
 $274 = (($272) - ($273))|0;
 $275 = (($274|0) / 44)&-1;
 $276 = (($267) + (($275*44)|0)|0);
 $66 = $240;
 $67 = $243;
 $68 = $259;
 $69 = $264;
 $70 = $276;
 $53 = $208;
 $277 = ((($136)) + 64|0);
 $52 = $277;
 $278 = $52;
 $51 = $278;
 $279 = $51;
 $50 = $279;
 $280 = $50;
 $281 = HEAP32[$280>>2]|0;
 $49 = $281;
 $282 = $49;
 $28 = $279;
 $283 = $28;
 $284 = HEAP32[$283>>2]|0;
 $27 = $284;
 $285 = $27;
 $33 = $279;
 $286 = $33;
 $32 = $286;
 $287 = $32;
 $31 = $287;
 $288 = $31;
 $289 = ((($288)) + 8|0);
 $30 = $289;
 $290 = $30;
 $29 = $290;
 $291 = $29;
 $292 = HEAP32[$291>>2]|0;
 $293 = HEAP32[$287>>2]|0;
 $294 = $292;
 $295 = $293;
 $296 = (($294) - ($295))|0;
 $297 = (($296|0) / 44)&-1;
 $298 = (($285) + (($297*44)|0)|0);
 $35 = $279;
 $299 = $35;
 $300 = HEAP32[$299>>2]|0;
 $34 = $300;
 $301 = $34;
 $36 = $279;
 $302 = $36;
 $303 = ((($302)) + 4|0);
 $304 = HEAP32[$303>>2]|0;
 $305 = HEAP32[$302>>2]|0;
 $306 = $304;
 $307 = $305;
 $308 = (($306) - ($307))|0;
 $309 = (($308|0) / 44)&-1;
 $310 = (($301) + (($309*44)|0)|0);
 $38 = $279;
 $311 = $38;
 $312 = HEAP32[$311>>2]|0;
 $37 = $312;
 $313 = $37;
 $43 = $279;
 $314 = $43;
 $42 = $314;
 $315 = $42;
 $41 = $315;
 $316 = $41;
 $317 = ((($316)) + 8|0);
 $40 = $317;
 $318 = $40;
 $39 = $318;
 $319 = $39;
 $320 = HEAP32[$319>>2]|0;
 $321 = HEAP32[$315>>2]|0;
 $322 = $320;
 $323 = $321;
 $324 = (($322) - ($323))|0;
 $325 = (($324|0) / 44)&-1;
 $326 = (($313) + (($325*44)|0)|0);
 $44 = $279;
 $45 = $282;
 $46 = $298;
 $47 = $310;
 $48 = $326;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($278);
 $327 = ((($136)) + 32|0);
 $26 = $327;
 $328 = $26;
 $25 = $328;
 $329 = $25;
 $24 = $329;
 $330 = $24;
 $331 = HEAP32[$330>>2]|0;
 $23 = $331;
 $332 = $23;
 $2 = $329;
 $333 = $2;
 $334 = HEAP32[$333>>2]|0;
 $1 = $334;
 $335 = $1;
 $7 = $329;
 $336 = $7;
 $6 = $336;
 $337 = $6;
 $5 = $337;
 $338 = $5;
 $339 = ((($338)) + 8|0);
 $4 = $339;
 $340 = $4;
 $3 = $340;
 $341 = $3;
 $342 = HEAP32[$341>>2]|0;
 $343 = HEAP32[$337>>2]|0;
 $344 = $342;
 $345 = $343;
 $346 = (($344) - ($345))|0;
 $347 = (($346|0) / 44)&-1;
 $348 = (($335) + (($347*44)|0)|0);
 $9 = $329;
 $349 = $9;
 $350 = HEAP32[$349>>2]|0;
 $8 = $350;
 $351 = $8;
 $10 = $329;
 $352 = $10;
 $353 = ((($352)) + 4|0);
 $354 = HEAP32[$353>>2]|0;
 $355 = HEAP32[$352>>2]|0;
 $356 = $354;
 $357 = $355;
 $358 = (($356) - ($357))|0;
 $359 = (($358|0) / 44)&-1;
 $360 = (($351) + (($359*44)|0)|0);
 $12 = $329;
 $361 = $12;
 $362 = HEAP32[$361>>2]|0;
 $11 = $362;
 $363 = $11;
 $17 = $329;
 $364 = $17;
 $16 = $364;
 $365 = $16;
 $15 = $365;
 $366 = $15;
 $367 = ((($366)) + 8|0);
 $14 = $367;
 $368 = $14;
 $13 = $368;
 $369 = $13;
 $370 = HEAP32[$369>>2]|0;
 $371 = HEAP32[$365>>2]|0;
 $372 = $370;
 $373 = $371;
 $374 = (($372) - ($373))|0;
 $375 = (($374|0) / 44)&-1;
 $376 = (($363) + (($375*44)|0)|0);
 $18 = $329;
 $19 = $332;
 $20 = $348;
 $21 = $360;
 $22 = $376;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($328);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail13Gpstime10BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 48|0);
 __ZN7lazperf6models10arithmeticD2Ev($3);
 $4 = ((($2)) + 4|0);
 __ZN7lazperf6models10arithmeticD2Ev($4);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Rgb10BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 272|0);
 __ZN7lazperf6models10arithmeticD2Ev($3);
 $4 = ((($2)) + 228|0);
 __ZN7lazperf6models10arithmeticD2Ev($4);
 $5 = ((($2)) + 184|0);
 __ZN7lazperf6models10arithmeticD2Ev($5);
 $6 = ((($2)) + 140|0);
 __ZN7lazperf6models10arithmeticD2Ev($6);
 $7 = ((($2)) + 96|0);
 __ZN7lazperf6models10arithmeticD2Ev($7);
 $8 = ((($2)) + 52|0);
 __ZN7lazperf6models10arithmeticD2Ev($8);
 $9 = ((($2)) + 8|0);
 __ZN7lazperf6models10arithmeticD2Ev($9);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail10Byte10BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $53 = $0;
 $54 = $53;
 $55 = ((($54)) + 32|0);
 __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($55);
 $56 = ((($54)) + 20|0);
 $52 = $56;
 $57 = $52;
 $51 = $57;
 $58 = $51;
 $50 = $58;
 $59 = $50;
 $60 = HEAP32[$59>>2]|0;
 $49 = $60;
 $61 = $49;
 $28 = $58;
 $62 = $28;
 $63 = HEAP32[$62>>2]|0;
 $27 = $63;
 $64 = $27;
 $33 = $58;
 $65 = $33;
 $32 = $65;
 $66 = $32;
 $31 = $66;
 $67 = $31;
 $68 = ((($67)) + 8|0);
 $30 = $68;
 $69 = $30;
 $29 = $69;
 $70 = $29;
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$66>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($64) + ($75)|0);
 $35 = $58;
 $77 = $35;
 $78 = HEAP32[$77>>2]|0;
 $34 = $78;
 $79 = $34;
 $36 = $58;
 $80 = $36;
 $81 = ((($80)) + 4|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = HEAP32[$80>>2]|0;
 $84 = $82;
 $85 = $83;
 $86 = (($84) - ($85))|0;
 $87 = (($79) + ($86)|0);
 $38 = $58;
 $88 = $38;
 $89 = HEAP32[$88>>2]|0;
 $37 = $89;
 $90 = $37;
 $43 = $58;
 $91 = $43;
 $42 = $91;
 $92 = $42;
 $41 = $92;
 $93 = $41;
 $94 = ((($93)) + 8|0);
 $40 = $94;
 $95 = $40;
 $39 = $95;
 $96 = $39;
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$92>>2]|0;
 $99 = $97;
 $100 = $98;
 $101 = (($99) - ($100))|0;
 $102 = (($90) + ($101)|0);
 $44 = $58;
 $45 = $61;
 $46 = $76;
 $47 = $87;
 $48 = $102;
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($57);
 $103 = ((($54)) + 8|0);
 $26 = $103;
 $104 = $26;
 $25 = $104;
 $105 = $25;
 $24 = $105;
 $106 = $24;
 $107 = HEAP32[$106>>2]|0;
 $23 = $107;
 $108 = $23;
 $2 = $105;
 $109 = $2;
 $110 = HEAP32[$109>>2]|0;
 $1 = $110;
 $111 = $1;
 $7 = $105;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = ((($114)) + 8|0);
 $4 = $115;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 $118 = HEAP32[$117>>2]|0;
 $119 = HEAP32[$113>>2]|0;
 $120 = $118;
 $121 = $119;
 $122 = (($120) - ($121))|0;
 $123 = (($111) + ($122)|0);
 $9 = $105;
 $124 = $9;
 $125 = HEAP32[$124>>2]|0;
 $8 = $125;
 $126 = $8;
 $10 = $105;
 $127 = $10;
 $128 = ((($127)) + 4|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = HEAP32[$127>>2]|0;
 $131 = $129;
 $132 = $130;
 $133 = (($131) - ($132))|0;
 $134 = (($126) + ($133)|0);
 $12 = $105;
 $135 = $12;
 $136 = HEAP32[$135>>2]|0;
 $11 = $136;
 $137 = $11;
 $17 = $105;
 $138 = $17;
 $16 = $138;
 $139 = $16;
 $15 = $139;
 $140 = $15;
 $141 = ((($140)) + 8|0);
 $14 = $141;
 $142 = $14;
 $13 = $142;
 $143 = $13;
 $144 = HEAP32[$143>>2]|0;
 $145 = HEAP32[$139>>2]|0;
 $146 = $144;
 $147 = $145;
 $148 = (($146) - ($147))|0;
 $149 = (($137) + ($148)|0);
 $18 = $105;
 $19 = $108;
 $20 = $123;
 $21 = $134;
 $22 = $149;
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($104);
 STACKTOP = sp;return;
}
function __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $18 = $0;
 $21 = $18;
 __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE5clearEv($21);
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 4|0);
 $24 = HEAP32[$23>>2]|0;
 $19 = $24;
 $16 = $21;
 $25 = $16;
 $26 = ((($25)) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 $20 = $27;
 while(1) {
  $28 = $19;
  $29 = $20;
  $30 = ($28|0)!=($29|0);
  if (!($30)) {
   break;
  }
  $15 = $21;
  $31 = $15;
  $32 = ((($31)) + 20|0);
  $14 = $32;
  $33 = $14;
  $13 = $33;
  $34 = $13;
  $35 = $19;
  $36 = HEAP32[$35>>2]|0;
  $10 = $34;
  $11 = $36;
  $12 = 93;
  $37 = $10;
  $38 = $11;
  $39 = $12;
  $7 = $37;
  $8 = $38;
  $9 = $39;
  $40 = $8;
  $41 = $9;
  $42 = ($41*44)|0;
  $4 = $40;
  $5 = $42;
  $6 = 4;
  $43 = $4;
  $44 = $5;
  $45 = $6;
  $1 = $43;
  $2 = $44;
  $3 = $45;
  $46 = $1;
  $47 = $2;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($46,$47);
  $48 = $19;
  $49 = ((($48)) + 4|0);
  $19 = $49;
 }
 __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticENS_9allocatorIS4_EEED2Ev($21);
 STACKTOP = sp;return;
}
function __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE5clearEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $5 = sp + 8|0;
 $8 = sp + 197|0;
 $31 = sp;
 $34 = sp + 196|0;
 $46 = sp + 24|0;
 $47 = sp + 16|0;
 $44 = $0;
 $48 = $44;
 $43 = $48;
 $49 = $43;
 $50 = ((($49)) + 20|0);
 $42 = $50;
 $51 = $42;
 $41 = $51;
 $52 = $41;
 $45 = $52;
 __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE5beginEv($46,$48);
 __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE3endEv($47,$48);
 while(1) {
  $39 = $46;
  $40 = $47;
  $53 = $39;
  $54 = $40;
  $37 = $53;
  $38 = $54;
  $55 = $37;
  $56 = ((($55)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $38;
  $59 = ((($58)) + 4|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = ($57|0)==($60|0);
  $62 = $61 ^ 1;
  if (!($62)) {
   break;
  }
  $63 = $45;
  $16 = $46;
  $64 = $16;
  $65 = ((($64)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $15 = $66;
  $67 = $15;
  $6 = $63;
  $7 = $67;
  $68 = $6;
  $69 = $7;
  ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
  $3 = $68;
  $4 = $69;
  $70 = $3;
  $71 = $4;
  $1 = $70;
  $2 = $71;
  $72 = $2;
  __ZN7lazperf6models10arithmeticD2Ev($72);
  $9 = $46;
  $73 = $9;
  $74 = ((($73)) + 4|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ((($75)) + 44|0);
  HEAP32[$74>>2] = $76;
  $77 = HEAP32[$73>>2]|0;
  $78 = HEAP32[$77>>2]|0;
  $79 = $76;
  $80 = $78;
  $81 = (($79) - ($80))|0;
  $82 = (($81|0) / 44)&-1;
  $83 = ($82|0)==(93);
  if ($83) {
   $84 = HEAP32[$73>>2]|0;
   $85 = ((($84)) + 4|0);
   HEAP32[$73>>2] = $85;
   $86 = HEAP32[$73>>2]|0;
   $87 = HEAP32[$86>>2]|0;
   $88 = ((($73)) + 4|0);
   HEAP32[$88>>2] = $87;
  }
 }
 $12 = $48;
 $89 = $12;
 $90 = ((($89)) + 20|0);
 $11 = $90;
 $91 = $11;
 $10 = $91;
 $92 = $10;
 HEAP32[$92>>2] = 0;
 while(1) {
  $13 = $48;
  $93 = $13;
  $94 = ((($93)) + 8|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = ((($93)) + 4|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = $95;
  $99 = $97;
  $100 = (($98) - ($99))|0;
  $101 = (($100|0) / 4)&-1;
  $102 = ($101>>>0)>(2);
  if (!($102)) {
   break;
  }
  $103 = $45;
  $14 = $48;
  $104 = $14;
  $105 = ((($104)) + 4|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = HEAP32[$106>>2]|0;
  $26 = $103;
  $27 = $107;
  $28 = 93;
  $108 = $26;
  $109 = $27;
  $110 = $28;
  $23 = $108;
  $24 = $109;
  $25 = $110;
  $111 = $24;
  $112 = $25;
  $113 = ($112*44)|0;
  $20 = $111;
  $21 = $113;
  $22 = 4;
  $114 = $20;
  $115 = $21;
  $116 = $22;
  $17 = $114;
  $18 = $115;
  $19 = $116;
  $117 = $17;
  $118 = $18;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($117,$118);
  $35 = $48;
  $119 = $35;
  $120 = ((($119)) + 4|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = ((($121)) + 4|0);
  $32 = $119;
  $33 = $122;
  $123 = $32;
  $124 = $33;
  ;HEAP8[$31>>0]=HEAP8[$34>>0]|0;
  $29 = $123;
  $30 = $124;
  $125 = $29;
  $126 = $30;
  $127 = ((($125)) + 4|0);
  HEAP32[$127>>2] = $126;
 }
 $36 = $48;
 $128 = $36;
 $129 = ((($128)) + 8|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = ((($128)) + 4|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = $130;
 $134 = $132;
 $135 = (($133) - ($134))|0;
 $136 = (($135|0) / 4)&-1;
 switch ($136|0) {
 case 1:  {
  $137 = ((($48)) + 16|0);
  HEAP32[$137>>2] = 46;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $138 = ((($48)) + 16|0);
  HEAP32[$138>>2] = 93;
  STACKTOP = sp;return;
  break;
 }
 default: {
  STACKTOP = sp;return;
 }
 }
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticENS_9allocatorIS4_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $29 = $53;
  $54 = $29;
  $55 = ((($46)) + 8|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($56)) + -4|0);
  HEAP32[$55>>2] = $57;
  $28 = $57;
  $58 = $28;
  $25 = $54;
  $26 = $58;
  $59 = $25;
  $60 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $59;
  $23 = $60;
  $61 = $22;
  $62 = $23;
  $20 = $61;
  $21 = $62;
 }
 $63 = HEAP32[$40>>2]|0;
 $64 = ($63|0)!=(0|0);
 if (!($64)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $65 = $19;
 $66 = ((($65)) + 12|0);
 $18 = $66;
 $67 = $18;
 $17 = $67;
 $68 = $17;
 $69 = HEAP32[$40>>2]|0;
 $4 = $40;
 $70 = $4;
 $3 = $70;
 $71 = $3;
 $72 = ((($71)) + 12|0);
 $2 = $72;
 $73 = $2;
 $1 = $73;
 $74 = $1;
 $75 = HEAP32[$74>>2]|0;
 $76 = HEAP32[$70>>2]|0;
 $77 = $75;
 $78 = $76;
 $79 = (($77) - ($78))|0;
 $80 = (($79|0) / 4)&-1;
 $14 = $68;
 $15 = $69;
 $16 = $80;
 $81 = $14;
 $82 = $15;
 $83 = $16;
 $11 = $81;
 $12 = $82;
 $13 = $83;
 $84 = $12;
 $85 = $13;
 $86 = $85<<2;
 $8 = $84;
 $9 = $86;
 $10 = 4;
 $87 = $8;
 $88 = $9;
 $89 = $10;
 $5 = $87;
 $6 = $88;
 $7 = $89;
 $90 = $5;
 $91 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($90,$91);
 STACKTOP = sp;return;
}
function __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE5beginEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $1;
 $9 = $7;
 $6 = $9;
 $10 = $6;
 $11 = ((($10)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($9)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14>>>0) / 93)&-1;
 $16 = (($12) + ($15<<2)|0);
 $8 = $16;
 $17 = $8;
 $5 = $9;
 $18 = $5;
 $19 = ((($18)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($18)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($20|0)==($22|0);
 if ($23) {
  $30 = 0;
 } else {
  $24 = $8;
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($9)) + 16|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = (($27>>>0) % 93)&-1;
  $29 = (($25) + (($28*44)|0)|0);
  $30 = $29;
 }
 $2 = $0;
 $3 = $17;
 $4 = $30;
 $31 = $2;
 $32 = $3;
 HEAP32[$31>>2] = $32;
 $33 = ((($31)) + 4|0);
 $34 = $4;
 HEAP32[$33>>2] = $34;
 STACKTOP = sp;return;
}
function __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE3endEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $1;
 $13 = $10;
 $9 = $13;
 $14 = $9;
 $15 = ((($14)) + 20|0);
 $8 = $15;
 $16 = $8;
 $7 = $16;
 $17 = $7;
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($13)) + 16|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($18) + ($20))|0;
 $11 = $21;
 $6 = $13;
 $22 = $6;
 $23 = ((($22)) + 4|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $11;
 $26 = (($25>>>0) / 93)&-1;
 $27 = (($24) + ($26<<2)|0);
 $12 = $27;
 $28 = $12;
 $2 = $13;
 $29 = $2;
 $30 = ((($29)) + 8|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($29)) + 4|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($31|0)==($33|0);
 if ($34) {
  $40 = 0;
  $3 = $0;
  $4 = $28;
  $5 = $40;
  $41 = $3;
  $42 = $4;
  HEAP32[$41>>2] = $42;
  $43 = ((($41)) + 4|0);
  $44 = $5;
  HEAP32[$43>>2] = $44;
  STACKTOP = sp;return;
 }
 $35 = $12;
 $36 = HEAP32[$35>>2]|0;
 $37 = $11;
 $38 = (($37>>>0) % 93)&-1;
 $39 = (($36) + (($38*44)|0)|0);
 $40 = $39;
 $3 = $0;
 $4 = $28;
 $5 = $40;
 $41 = $3;
 $42 = $4;
 HEAP32[$41>>2] = $42;
 $43 = ((($41)) + 4|0);
 $44 = $5;
 HEAP32[$43>>2] = $44;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail11Point14BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__25arrayIN7lazperf6detail11Point14Base10ChannelCtxELm4EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail11Point14Base10ChannelCtxELm4EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8320|0);
 $5 = $3;
 while(1) {
  $4 = ((($5)) + -2080|0);
  __ZN7lazperf6detail11Point14Base10ChannelCtxD2Ev($4);
  $6 = ($4|0)==($2|0);
  if ($6) {
   break;
  } else {
   $5 = $4;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail11Point14Base10ChannelCtxD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 640|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(640|0);
 $157 = $0;
 $158 = $157;
 $159 = ((($158)) + 1264|0);
 __ZN7lazperf13decompressors7integerD2Ev($159);
 $160 = ((($158)) + 1184|0);
 __ZN7lazperf13decompressors7integerD2Ev($160);
 $161 = ((($158)) + 1104|0);
 __ZN7lazperf13decompressors7integerD2Ev($161);
 $162 = ((($158)) + 1024|0);
 __ZN7lazperf13decompressors7integerD2Ev($162);
 $163 = ((($158)) + 944|0);
 __ZN7lazperf13decompressors7integerD2Ev($163);
 $164 = ((($158)) + 864|0);
 __ZN7lazperf13decompressors7integerD2Ev($164);
 $165 = ((($158)) + 784|0);
 __ZN7lazperf13decompressors7integerD2Ev($165);
 $166 = ((($158)) + 708|0);
 __ZN7lazperf11compressors7integerD2Ev($166);
 $167 = ((($158)) + 632|0);
 __ZN7lazperf11compressors7integerD2Ev($167);
 $168 = ((($158)) + 556|0);
 __ZN7lazperf11compressors7integerD2Ev($168);
 $169 = ((($158)) + 480|0);
 __ZN7lazperf11compressors7integerD2Ev($169);
 $170 = ((($158)) + 404|0);
 __ZN7lazperf11compressors7integerD2Ev($170);
 $171 = ((($158)) + 328|0);
 __ZN7lazperf11compressors7integerD2Ev($171);
 $172 = ((($158)) + 252|0);
 __ZN7lazperf11compressors7integerD2Ev($172);
 $173 = ((($158)) + 208|0);
 __ZN7lazperf6models10arithmeticD2Ev($173);
 $174 = ((($158)) + 164|0);
 __ZN7lazperf6models10arithmeticD2Ev($174);
 $175 = ((($158)) + 152|0);
 $156 = $175;
 $176 = $156;
 $155 = $176;
 $177 = $155;
 $154 = $177;
 $178 = $154;
 $179 = HEAP32[$178>>2]|0;
 $153 = $179;
 $180 = $153;
 $132 = $177;
 $181 = $132;
 $182 = HEAP32[$181>>2]|0;
 $131 = $182;
 $183 = $131;
 $137 = $177;
 $184 = $137;
 $136 = $184;
 $185 = $136;
 $135 = $185;
 $186 = $135;
 $187 = ((($186)) + 8|0);
 $134 = $187;
 $188 = $134;
 $133 = $188;
 $189 = $133;
 $190 = HEAP32[$189>>2]|0;
 $191 = HEAP32[$185>>2]|0;
 $192 = $190;
 $193 = $191;
 $194 = (($192) - ($193))|0;
 $195 = (($194|0) / 44)&-1;
 $196 = (($183) + (($195*44)|0)|0);
 $139 = $177;
 $197 = $139;
 $198 = HEAP32[$197>>2]|0;
 $138 = $198;
 $199 = $138;
 $140 = $177;
 $200 = $140;
 $201 = ((($200)) + 4|0);
 $202 = HEAP32[$201>>2]|0;
 $203 = HEAP32[$200>>2]|0;
 $204 = $202;
 $205 = $203;
 $206 = (($204) - ($205))|0;
 $207 = (($206|0) / 44)&-1;
 $208 = (($199) + (($207*44)|0)|0);
 $142 = $177;
 $209 = $142;
 $210 = HEAP32[$209>>2]|0;
 $141 = $210;
 $211 = $141;
 $147 = $177;
 $212 = $147;
 $146 = $212;
 $213 = $146;
 $145 = $213;
 $214 = $145;
 $215 = ((($214)) + 8|0);
 $144 = $215;
 $216 = $144;
 $143 = $216;
 $217 = $143;
 $218 = HEAP32[$217>>2]|0;
 $219 = HEAP32[$213>>2]|0;
 $220 = $218;
 $221 = $219;
 $222 = (($220) - ($221))|0;
 $223 = (($222|0) / 44)&-1;
 $224 = (($211) + (($223*44)|0)|0);
 $148 = $177;
 $149 = $180;
 $150 = $196;
 $151 = $208;
 $152 = $224;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($176);
 $225 = ((($158)) + 140|0);
 $130 = $225;
 $226 = $130;
 $129 = $226;
 $227 = $129;
 $128 = $227;
 $228 = $128;
 $229 = HEAP32[$228>>2]|0;
 $127 = $229;
 $230 = $127;
 $106 = $227;
 $231 = $106;
 $232 = HEAP32[$231>>2]|0;
 $105 = $232;
 $233 = $105;
 $111 = $227;
 $234 = $111;
 $110 = $234;
 $235 = $110;
 $109 = $235;
 $236 = $109;
 $237 = ((($236)) + 8|0);
 $108 = $237;
 $238 = $108;
 $107 = $238;
 $239 = $107;
 $240 = HEAP32[$239>>2]|0;
 $241 = HEAP32[$235>>2]|0;
 $242 = $240;
 $243 = $241;
 $244 = (($242) - ($243))|0;
 $245 = (($244|0) / 44)&-1;
 $246 = (($233) + (($245*44)|0)|0);
 $113 = $227;
 $247 = $113;
 $248 = HEAP32[$247>>2]|0;
 $112 = $248;
 $249 = $112;
 $114 = $227;
 $250 = $114;
 $251 = ((($250)) + 4|0);
 $252 = HEAP32[$251>>2]|0;
 $253 = HEAP32[$250>>2]|0;
 $254 = $252;
 $255 = $253;
 $256 = (($254) - ($255))|0;
 $257 = (($256|0) / 44)&-1;
 $258 = (($249) + (($257*44)|0)|0);
 $116 = $227;
 $259 = $116;
 $260 = HEAP32[$259>>2]|0;
 $115 = $260;
 $261 = $115;
 $121 = $227;
 $262 = $121;
 $120 = $262;
 $263 = $120;
 $119 = $263;
 $264 = $119;
 $265 = ((($264)) + 8|0);
 $118 = $265;
 $266 = $118;
 $117 = $266;
 $267 = $117;
 $268 = HEAP32[$267>>2]|0;
 $269 = HEAP32[$263>>2]|0;
 $270 = $268;
 $271 = $269;
 $272 = (($270) - ($271))|0;
 $273 = (($272|0) / 44)&-1;
 $274 = (($261) + (($273*44)|0)|0);
 $122 = $227;
 $123 = $230;
 $124 = $246;
 $125 = $258;
 $126 = $274;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($226);
 $275 = ((($158)) + 128|0);
 $104 = $275;
 $276 = $104;
 $103 = $276;
 $277 = $103;
 $102 = $277;
 $278 = $102;
 $279 = HEAP32[$278>>2]|0;
 $101 = $279;
 $280 = $101;
 $80 = $277;
 $281 = $80;
 $282 = HEAP32[$281>>2]|0;
 $79 = $282;
 $283 = $79;
 $85 = $277;
 $284 = $85;
 $84 = $284;
 $285 = $84;
 $83 = $285;
 $286 = $83;
 $287 = ((($286)) + 8|0);
 $82 = $287;
 $288 = $82;
 $81 = $288;
 $289 = $81;
 $290 = HEAP32[$289>>2]|0;
 $291 = HEAP32[$285>>2]|0;
 $292 = $290;
 $293 = $291;
 $294 = (($292) - ($293))|0;
 $295 = (($294|0) / 44)&-1;
 $296 = (($283) + (($295*44)|0)|0);
 $87 = $277;
 $297 = $87;
 $298 = HEAP32[$297>>2]|0;
 $86 = $298;
 $299 = $86;
 $88 = $277;
 $300 = $88;
 $301 = ((($300)) + 4|0);
 $302 = HEAP32[$301>>2]|0;
 $303 = HEAP32[$300>>2]|0;
 $304 = $302;
 $305 = $303;
 $306 = (($304) - ($305))|0;
 $307 = (($306|0) / 44)&-1;
 $308 = (($299) + (($307*44)|0)|0);
 $90 = $277;
 $309 = $90;
 $310 = HEAP32[$309>>2]|0;
 $89 = $310;
 $311 = $89;
 $95 = $277;
 $312 = $95;
 $94 = $312;
 $313 = $94;
 $93 = $313;
 $314 = $93;
 $315 = ((($314)) + 8|0);
 $92 = $315;
 $316 = $92;
 $91 = $316;
 $317 = $91;
 $318 = HEAP32[$317>>2]|0;
 $319 = HEAP32[$313>>2]|0;
 $320 = $318;
 $321 = $319;
 $322 = (($320) - ($321))|0;
 $323 = (($322|0) / 44)&-1;
 $324 = (($311) + (($323*44)|0)|0);
 $96 = $277;
 $97 = $280;
 $98 = $296;
 $99 = $308;
 $100 = $324;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($276);
 $325 = ((($158)) + 116|0);
 $78 = $325;
 $326 = $78;
 $77 = $326;
 $327 = $77;
 $76 = $327;
 $328 = $76;
 $329 = HEAP32[$328>>2]|0;
 $75 = $329;
 $330 = $75;
 $54 = $327;
 $331 = $54;
 $332 = HEAP32[$331>>2]|0;
 $53 = $332;
 $333 = $53;
 $59 = $327;
 $334 = $59;
 $58 = $334;
 $335 = $58;
 $57 = $335;
 $336 = $57;
 $337 = ((($336)) + 8|0);
 $56 = $337;
 $338 = $56;
 $55 = $338;
 $339 = $55;
 $340 = HEAP32[$339>>2]|0;
 $341 = HEAP32[$335>>2]|0;
 $342 = $340;
 $343 = $341;
 $344 = (($342) - ($343))|0;
 $345 = (($344|0) / 44)&-1;
 $346 = (($333) + (($345*44)|0)|0);
 $61 = $327;
 $347 = $61;
 $348 = HEAP32[$347>>2]|0;
 $60 = $348;
 $349 = $60;
 $62 = $327;
 $350 = $62;
 $351 = ((($350)) + 4|0);
 $352 = HEAP32[$351>>2]|0;
 $353 = HEAP32[$350>>2]|0;
 $354 = $352;
 $355 = $353;
 $356 = (($354) - ($355))|0;
 $357 = (($356|0) / 44)&-1;
 $358 = (($349) + (($357*44)|0)|0);
 $64 = $327;
 $359 = $64;
 $360 = HEAP32[$359>>2]|0;
 $63 = $360;
 $361 = $63;
 $69 = $327;
 $362 = $69;
 $68 = $362;
 $363 = $68;
 $67 = $363;
 $364 = $67;
 $365 = ((($364)) + 8|0);
 $66 = $365;
 $366 = $66;
 $65 = $366;
 $367 = $65;
 $368 = HEAP32[$367>>2]|0;
 $369 = HEAP32[$363>>2]|0;
 $370 = $368;
 $371 = $369;
 $372 = (($370) - ($371))|0;
 $373 = (($372|0) / 44)&-1;
 $374 = (($361) + (($373*44)|0)|0);
 $70 = $327;
 $71 = $330;
 $72 = $346;
 $73 = $358;
 $74 = $374;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($326);
 $375 = ((($158)) + 104|0);
 $52 = $375;
 $376 = $52;
 $51 = $376;
 $377 = $51;
 $50 = $377;
 $378 = $50;
 $379 = HEAP32[$378>>2]|0;
 $49 = $379;
 $380 = $49;
 $28 = $377;
 $381 = $28;
 $382 = HEAP32[$381>>2]|0;
 $27 = $382;
 $383 = $27;
 $33 = $377;
 $384 = $33;
 $32 = $384;
 $385 = $32;
 $31 = $385;
 $386 = $31;
 $387 = ((($386)) + 8|0);
 $30 = $387;
 $388 = $30;
 $29 = $388;
 $389 = $29;
 $390 = HEAP32[$389>>2]|0;
 $391 = HEAP32[$385>>2]|0;
 $392 = $390;
 $393 = $391;
 $394 = (($392) - ($393))|0;
 $395 = (($394|0) / 44)&-1;
 $396 = (($383) + (($395*44)|0)|0);
 $35 = $377;
 $397 = $35;
 $398 = HEAP32[$397>>2]|0;
 $34 = $398;
 $399 = $34;
 $36 = $377;
 $400 = $36;
 $401 = ((($400)) + 4|0);
 $402 = HEAP32[$401>>2]|0;
 $403 = HEAP32[$400>>2]|0;
 $404 = $402;
 $405 = $403;
 $406 = (($404) - ($405))|0;
 $407 = (($406|0) / 44)&-1;
 $408 = (($399) + (($407*44)|0)|0);
 $38 = $377;
 $409 = $38;
 $410 = HEAP32[$409>>2]|0;
 $37 = $410;
 $411 = $37;
 $43 = $377;
 $412 = $43;
 $42 = $412;
 $413 = $42;
 $41 = $413;
 $414 = $41;
 $415 = ((($414)) + 8|0);
 $40 = $415;
 $416 = $40;
 $39 = $416;
 $417 = $39;
 $418 = HEAP32[$417>>2]|0;
 $419 = HEAP32[$413>>2]|0;
 $420 = $418;
 $421 = $419;
 $422 = (($420) - ($421))|0;
 $423 = (($422|0) / 44)&-1;
 $424 = (($411) + (($423*44)|0)|0);
 $44 = $377;
 $45 = $380;
 $46 = $396;
 $47 = $408;
 $48 = $424;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($376);
 $425 = ((($158)) + 60|0);
 __ZN7lazperf6models10arithmeticD2Ev($425);
 $426 = ((($158)) + 16|0);
 __ZN7lazperf6models10arithmeticD2Ev($426);
 $427 = ((($158)) + 4|0);
 $26 = $427;
 $428 = $26;
 $25 = $428;
 $429 = $25;
 $24 = $429;
 $430 = $24;
 $431 = HEAP32[$430>>2]|0;
 $23 = $431;
 $432 = $23;
 $2 = $429;
 $433 = $2;
 $434 = HEAP32[$433>>2]|0;
 $1 = $434;
 $435 = $1;
 $7 = $429;
 $436 = $7;
 $6 = $436;
 $437 = $6;
 $5 = $437;
 $438 = $5;
 $439 = ((($438)) + 8|0);
 $4 = $439;
 $440 = $4;
 $3 = $440;
 $441 = $3;
 $442 = HEAP32[$441>>2]|0;
 $443 = HEAP32[$437>>2]|0;
 $444 = $442;
 $445 = $443;
 $446 = (($444) - ($445))|0;
 $447 = (($446|0) / 44)&-1;
 $448 = (($435) + (($447*44)|0)|0);
 $9 = $429;
 $449 = $9;
 $450 = HEAP32[$449>>2]|0;
 $8 = $450;
 $451 = $8;
 $10 = $429;
 $452 = $10;
 $453 = ((($452)) + 4|0);
 $454 = HEAP32[$453>>2]|0;
 $455 = HEAP32[$452>>2]|0;
 $456 = $454;
 $457 = $455;
 $458 = (($456) - ($457))|0;
 $459 = (($458|0) / 44)&-1;
 $460 = (($451) + (($459*44)|0)|0);
 $12 = $429;
 $461 = $12;
 $462 = HEAP32[$461>>2]|0;
 $11 = $462;
 $463 = $11;
 $17 = $429;
 $464 = $17;
 $16 = $464;
 $465 = $16;
 $15 = $465;
 $466 = $15;
 $467 = ((($466)) + 8|0);
 $14 = $467;
 $468 = $14;
 $13 = $468;
 $469 = $13;
 $470 = HEAP32[$469>>2]|0;
 $471 = HEAP32[$465>>2]|0;
 $472 = $470;
 $473 = $471;
 $474 = (($472) - ($473))|0;
 $475 = (($474|0) / 44)&-1;
 $476 = (($463) + (($475*44)|0)|0);
 $18 = $429;
 $19 = $432;
 $20 = $448;
 $21 = $460;
 $22 = $476;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($428);
 STACKTOP = sp;return;
}
function __ZN7lazperf12MemoryStreamD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $27 = $0;
 $28 = $27;
 $26 = $28;
 $29 = $26;
 $25 = $29;
 $30 = $25;
 $24 = $30;
 $31 = $24;
 $32 = HEAP32[$31>>2]|0;
 $23 = $32;
 $33 = $23;
 $2 = $30;
 $34 = $2;
 $35 = HEAP32[$34>>2]|0;
 $1 = $35;
 $36 = $1;
 $7 = $30;
 $37 = $7;
 $6 = $37;
 $38 = $6;
 $5 = $38;
 $39 = $5;
 $40 = ((($39)) + 8|0);
 $4 = $40;
 $41 = $4;
 $3 = $41;
 $42 = $3;
 $43 = HEAP32[$42>>2]|0;
 $44 = HEAP32[$38>>2]|0;
 $45 = $43;
 $46 = $44;
 $47 = (($45) - ($46))|0;
 $48 = (($36) + ($47)|0);
 $9 = $30;
 $49 = $9;
 $50 = HEAP32[$49>>2]|0;
 $8 = $50;
 $51 = $8;
 $10 = $30;
 $52 = $10;
 $53 = ((($52)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = HEAP32[$52>>2]|0;
 $56 = $54;
 $57 = $55;
 $58 = (($56) - ($57))|0;
 $59 = (($51) + ($58)|0);
 $12 = $30;
 $60 = $12;
 $61 = HEAP32[$60>>2]|0;
 $11 = $61;
 $62 = $11;
 $17 = $30;
 $63 = $17;
 $16 = $63;
 $64 = $16;
 $15 = $64;
 $65 = $15;
 $66 = ((($65)) + 8|0);
 $14 = $66;
 $67 = $14;
 $13 = $67;
 $68 = $13;
 $69 = HEAP32[$68>>2]|0;
 $70 = HEAP32[$64>>2]|0;
 $71 = $69;
 $72 = $70;
 $73 = (($71) - ($72))|0;
 $74 = (($62) + ($73)|0);
 $18 = $30;
 $19 = $33;
 $20 = $48;
 $21 = $59;
 $22 = $74;
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($29);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Rgb14BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__25arrayIN7lazperf6detail9Rgb14Base10ChannelCtxELm4EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail9Rgb14Base10ChannelCtxELm4EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 1280|0);
 $5 = $3;
 while(1) {
  $4 = ((($5)) + -320|0);
  __ZN7lazperf6detail9Rgb14Base10ChannelCtxD2Ev($4);
  $6 = ($4|0)==($2|0);
  if ($6) {
   break;
  } else {
   $5 = $4;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Rgb14Base10ChannelCtxD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 56|0);
 __ZNSt3__25arrayIN7lazperf6models10arithmeticELm6EED2Ev($3);
 $4 = ((($2)) + 12|0);
 __ZN7lazperf6models10arithmeticD2Ev($4);
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6models10arithmeticELm6EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 264|0);
 $5 = $3;
 while(1) {
  $4 = ((($5)) + -44|0);
  __ZN7lazperf6models10arithmeticD2Ev($4);
  $6 = ($4|0)==($2|0);
  if ($6) {
   break;
  } else {
   $5 = $4;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Nir14BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__25arrayIN7lazperf6detail9Nir14Base10ChannelCtxELm4EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail9Nir14Base10ChannelCtxELm4EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 560|0);
 $5 = $3;
 while(1) {
  $4 = ((($5)) + -140|0);
  __ZN7lazperf6detail9Nir14Base10ChannelCtxD2Ev($4);
  $6 = ($4|0)==($2|0);
  if ($6) {
   break;
  } else {
   $5 = $4;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Nir14Base10ChannelCtxD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 52|0);
 __ZNSt3__25arrayIN7lazperf6models10arithmeticELm2EED2Ev($3);
 $4 = ((($2)) + 8|0);
 __ZN7lazperf6models10arithmeticD2Ev($4);
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6models10arithmeticELm2EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 88|0);
 $5 = $3;
 while(1) {
  $4 = ((($5)) + -44|0);
  __ZN7lazperf6models10arithmeticD2Ev($4);
  $6 = ($4|0)==($2|0);
  if ($6) {
   break;
  } else {
   $5 = $4;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail10Byte14BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $27 = $0;
 $28 = $27;
 $29 = ((($28)) + 120|0);
 $26 = $29;
 $30 = $26;
 $25 = $30;
 $31 = $25;
 $24 = $31;
 $32 = $24;
 $33 = HEAP32[$32>>2]|0;
 $23 = $33;
 $34 = $23;
 $2 = $31;
 $35 = $2;
 $36 = HEAP32[$35>>2]|0;
 $1 = $36;
 $37 = $1;
 $7 = $31;
 $38 = $7;
 $6 = $38;
 $39 = $6;
 $5 = $39;
 $40 = $5;
 $41 = ((($40)) + 8|0);
 $4 = $41;
 $42 = $4;
 $3 = $42;
 $43 = $3;
 $44 = HEAP32[$43>>2]|0;
 $45 = HEAP32[$39>>2]|0;
 $46 = $44;
 $47 = $45;
 $48 = (($46) - ($47))|0;
 $49 = (($48|0) / 20)&-1;
 $50 = (($37) + (($49*20)|0)|0);
 $9 = $31;
 $51 = $9;
 $52 = HEAP32[$51>>2]|0;
 $8 = $52;
 $53 = $8;
 $10 = $31;
 $54 = $10;
 $55 = ((($54)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$54>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 $61 = (($60|0) / 20)&-1;
 $62 = (($53) + (($61*20)|0)|0);
 $12 = $31;
 $63 = $12;
 $64 = HEAP32[$63>>2]|0;
 $11 = $64;
 $65 = $11;
 $17 = $31;
 $66 = $17;
 $16 = $66;
 $67 = $16;
 $15 = $67;
 $68 = $15;
 $69 = ((($68)) + 8|0);
 $14 = $69;
 $70 = $14;
 $13 = $70;
 $71 = $13;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 20)&-1;
 $78 = (($65) + (($77*20)|0)|0);
 $18 = $31;
 $19 = $34;
 $20 = $50;
 $21 = $62;
 $22 = $78;
 __ZNSt3__213__vector_baseIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEED2Ev($30);
 $79 = ((($28)) + 8|0);
 __ZNSt3__25arrayIN7lazperf6detail10Byte14Base10ChannelCtxELm4EED2Ev($79);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -20|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
  $59 = $21;
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($59);
 }
 $60 = $33;
 $61 = ((($42)) + 4|0);
 HEAP32[$61>>2] = $60;
 $19 = $37;
 $62 = $19;
 $63 = ((($62)) + 8|0);
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$37>>2]|0;
 $4 = $37;
 $67 = $4;
 $3 = $67;
 $68 = $3;
 $69 = ((($68)) + 8|0);
 $2 = $69;
 $70 = $2;
 $1 = $70;
 $71 = $1;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 20)&-1;
 $14 = $65;
 $15 = $66;
 $16 = $77;
 $78 = $14;
 $79 = $15;
 $80 = $16;
 $11 = $78;
 $12 = $79;
 $13 = $80;
 $81 = $12;
 $82 = $13;
 $83 = ($82*20)|0;
 $8 = $81;
 $9 = $83;
 $10 = 4;
 $84 = $8;
 $85 = $9;
 $86 = $10;
 $5 = $84;
 $6 = $85;
 $7 = $86;
 $87 = $5;
 $88 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($87,$88);
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail10Byte14Base10ChannelCtxELm4EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 112|0);
 $5 = $3;
 while(1) {
  $4 = ((($5)) + -28|0);
  __ZN7lazperf6detail10Byte14Base10ChannelCtxD2Ev($4);
  $6 = ($4|0)==($2|0);
  if ($6) {
   break;
  } else {
   $5 = $4;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail10Byte14Base10ChannelCtxD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $53 = $0;
 $54 = $53;
 $55 = ((($54)) + 16|0);
 $52 = $55;
 $56 = $52;
 $51 = $56;
 $57 = $51;
 $50 = $57;
 $58 = $50;
 $59 = HEAP32[$58>>2]|0;
 $49 = $59;
 $60 = $49;
 $28 = $57;
 $61 = $28;
 $62 = HEAP32[$61>>2]|0;
 $27 = $62;
 $63 = $27;
 $33 = $57;
 $64 = $33;
 $32 = $64;
 $65 = $32;
 $31 = $65;
 $66 = $31;
 $67 = ((($66)) + 8|0);
 $30 = $67;
 $68 = $30;
 $29 = $68;
 $69 = $29;
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$65>>2]|0;
 $72 = $70;
 $73 = $71;
 $74 = (($72) - ($73))|0;
 $75 = (($74|0) / 44)&-1;
 $76 = (($63) + (($75*44)|0)|0);
 $35 = $57;
 $77 = $35;
 $78 = HEAP32[$77>>2]|0;
 $34 = $78;
 $79 = $34;
 $36 = $57;
 $80 = $36;
 $81 = ((($80)) + 4|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = HEAP32[$80>>2]|0;
 $84 = $82;
 $85 = $83;
 $86 = (($84) - ($85))|0;
 $87 = (($86|0) / 44)&-1;
 $88 = (($79) + (($87*44)|0)|0);
 $38 = $57;
 $89 = $38;
 $90 = HEAP32[$89>>2]|0;
 $37 = $90;
 $91 = $37;
 $43 = $57;
 $92 = $43;
 $42 = $92;
 $93 = $42;
 $41 = $93;
 $94 = $41;
 $95 = ((($94)) + 8|0);
 $40 = $95;
 $96 = $40;
 $39 = $96;
 $97 = $39;
 $98 = HEAP32[$97>>2]|0;
 $99 = HEAP32[$93>>2]|0;
 $100 = $98;
 $101 = $99;
 $102 = (($100) - ($101))|0;
 $103 = (($102|0) / 44)&-1;
 $104 = (($91) + (($103*44)|0)|0);
 $44 = $57;
 $45 = $60;
 $46 = $76;
 $47 = $88;
 $48 = $104;
 __ZNSt3__213__vector_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEED2Ev($56);
 $105 = ((($54)) + 4|0);
 $26 = $105;
 $106 = $26;
 $25 = $106;
 $107 = $25;
 $24 = $107;
 $108 = $24;
 $109 = HEAP32[$108>>2]|0;
 $23 = $109;
 $110 = $23;
 $2 = $107;
 $111 = $2;
 $112 = HEAP32[$111>>2]|0;
 $1 = $112;
 $113 = $1;
 $7 = $107;
 $114 = $7;
 $6 = $114;
 $115 = $6;
 $5 = $115;
 $116 = $5;
 $117 = ((($116)) + 8|0);
 $4 = $117;
 $118 = $4;
 $3 = $118;
 $119 = $3;
 $120 = HEAP32[$119>>2]|0;
 $121 = HEAP32[$115>>2]|0;
 $122 = $120;
 $123 = $121;
 $124 = (($122) - ($123))|0;
 $125 = (($113) + ($124)|0);
 $9 = $107;
 $126 = $9;
 $127 = HEAP32[$126>>2]|0;
 $8 = $127;
 $128 = $8;
 $10 = $107;
 $129 = $10;
 $130 = ((($129)) + 4|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = HEAP32[$129>>2]|0;
 $133 = $131;
 $134 = $132;
 $135 = (($133) - ($134))|0;
 $136 = (($128) + ($135)|0);
 $12 = $107;
 $137 = $12;
 $138 = HEAP32[$137>>2]|0;
 $11 = $138;
 $139 = $11;
 $17 = $107;
 $140 = $17;
 $16 = $140;
 $141 = $16;
 $15 = $141;
 $142 = $15;
 $143 = ((($142)) + 8|0);
 $14 = $143;
 $144 = $14;
 $13 = $144;
 $145 = $13;
 $146 = HEAP32[$145>>2]|0;
 $147 = HEAP32[$141>>2]|0;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($139) + ($150)|0);
 $18 = $107;
 $19 = $110;
 $20 = $125;
 $21 = $136;
 $22 = $151;
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($106);
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 $15 = ((($14)) + 12|0);
 $12 = $15;
 $16 = $12;
 $9 = $16;
 $10 = 0;
 $17 = $9;
 $8 = $17;
 $18 = $8;
 $7 = $18;
 $19 = $7;
 $20 = HEAP32[$19>>2]|0;
 $11 = $20;
 $21 = $10;
 $4 = $17;
 $22 = $4;
 $3 = $22;
 $23 = $3;
 HEAP32[$23>>2] = $21;
 $24 = $11;
 $25 = ($24|0)!=(0|0);
 if (!($25)) {
  STACKTOP = sp;return;
 }
 $2 = $17;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $28 = $11;
 $5 = $27;
 $6 = $28;
 $29 = $6;
 $30 = ($29|0)==(0|0);
 if ($30) {
  STACKTOP = sp;return;
 }
 __ZN7lazperf12MemoryStreamD2Ev($29);
 __ZdlPv($29);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_2D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 _llvm_trap();
 // unreachable;
}
function __ZN7lazperf27point_decompressor_base_1_2D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 HEAP32[$14>>2] = (10408);
 $15 = ((($14)) + 4|0);
 $12 = $15;
 $16 = $12;
 $9 = $16;
 $10 = 0;
 $17 = $9;
 $8 = $17;
 $18 = $8;
 $7 = $18;
 $19 = $7;
 $20 = HEAP32[$19>>2]|0;
 $11 = $20;
 $21 = $10;
 $4 = $17;
 $22 = $4;
 $3 = $22;
 $23 = $3;
 HEAP32[$23>>2] = $21;
 $24 = $11;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $2 = $17;
  $26 = $2;
  $1 = $26;
  $27 = $1;
  $28 = $11;
  $5 = $27;
  $6 = $28;
  $29 = $6;
  $30 = ($29|0)==(0|0);
  if (!($30)) {
   __ZN7lazperf27point_decompressor_base_1_27PrivateD2Ev($29);
   __ZdlPv($29);
  }
 }
 __ZN7lazperf16las_decompressorD2Ev($14);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_27PrivateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4996|0);
 __ZN7lazperf6detail18Byte10DecompressorD2Ev($3);
 $4 = ((($2)) + 4676|0);
 __ZN7lazperf6detail17Rgb10DecompressorD2Ev($4);
 $5 = ((($2)) + 4424|0);
 __ZN7lazperf6detail21Gpstime10DecompressorD2Ev($5);
 $6 = ((($2)) + 36|0);
 __ZN7lazperf6detail19Point10DecompressorD2Ev($6);
 $7 = ((($2)) + 16|0);
 __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEED2Ev($7);
 __ZN7lazperf10InCbStreamD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf16las_decompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail18Byte10DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf6detail10Byte10BaseD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb10DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf6detail9Rgb10BaseD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail21Gpstime10DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 172|0);
 __ZN7lazperf13decompressors7integerD2Ev($3);
 __ZN7lazperf6detail13Gpstime10BaseD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point10DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4304|0);
 __ZN7lazperf13decompressors7integerD2Ev($3);
 $4 = ((($2)) + 4224|0);
 __ZN7lazperf13decompressors7integerD2Ev($4);
 $5 = ((($2)) + 4144|0);
 __ZN7lazperf13decompressors7integerD2Ev($5);
 $6 = ((($2)) + 4064|0);
 __ZN7lazperf13decompressors7integerD2Ev($6);
 $7 = ((($2)) + 3984|0);
 __ZN7lazperf13decompressors7integerD2Ev($7);
 __ZN7lazperf6detail11Point10BaseD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_010decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = $0;
 $9 = $1;
 $10 = $8;
 $11 = ((($10)) + 4|0);
 $7 = $11;
 $12 = $7;
 $6 = $12;
 $13 = $6;
 $5 = $13;
 $14 = $5;
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 36|0);
 $17 = $9;
 $18 = (__ZN7lazperf6detail19Point10Decompressor10decompressEPc($16,$17)|0);
 $9 = $18;
 $19 = ((($10)) + 4|0);
 $4 = $19;
 $20 = $4;
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($23)) + 4996|0);
 $25 = $9;
 $26 = (__ZN7lazperf6detail18Byte10Decompressor10decompressEPc($24,$25)|0);
 $9 = $26;
 __ZN7lazperf27point_decompressor_base_1_211handleFirstEv($10);
 $27 = $9;
 STACKTOP = sp;return ($27|0);
}
function __ZN7lazperf20point_decompressor_0D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_0D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_0D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf27point_decompressor_base_1_2D2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_211handleFirstEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $10;
 $12 = ((($11)) + 4|0);
 $9 = $12;
 $13 = $9;
 $8 = $13;
 $14 = $8;
 $7 = $14;
 $15 = $7;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($16)) + 5056|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18&1;
 if (!($19)) {
  STACKTOP = sp;return;
 }
 $20 = ((($11)) + 4|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $1 = $22;
 $23 = $1;
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($24)) + 16|0);
 __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE13readInitBytesEv($25);
 $26 = ((($11)) + 4|0);
 $6 = $26;
 $27 = $6;
 $5 = $27;
 $28 = $5;
 $4 = $28;
 $29 = $4;
 $30 = HEAP32[$29>>2]|0;
 $31 = ((($30)) + 5056|0);
 HEAP8[$31>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_110decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = $0;
 $12 = $1;
 $13 = $11;
 $14 = ((($13)) + 4|0);
 $10 = $14;
 $15 = $10;
 $9 = $15;
 $16 = $9;
 $8 = $16;
 $17 = $8;
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 36|0);
 $20 = $12;
 $21 = (__ZN7lazperf6detail19Point10Decompressor10decompressEPc($19,$20)|0);
 $12 = $21;
 $22 = ((($13)) + 4|0);
 $7 = $22;
 $23 = $7;
 $6 = $23;
 $24 = $6;
 $5 = $24;
 $25 = $5;
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($26)) + 4424|0);
 $28 = $12;
 $29 = (__ZN7lazperf6detail21Gpstime10Decompressor10decompressEPc($27,$28)|0);
 $12 = $29;
 $30 = ((($13)) + 4|0);
 $4 = $30;
 $31 = $4;
 $3 = $31;
 $32 = $3;
 $2 = $32;
 $33 = $2;
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 4996|0);
 $36 = $12;
 $37 = (__ZN7lazperf6detail18Byte10Decompressor10decompressEPc($35,$36)|0);
 $12 = $37;
 __ZN7lazperf27point_decompressor_base_1_211handleFirstEv($13);
 $38 = $12;
 STACKTOP = sp;return ($38|0);
}
function __ZN7lazperf20point_decompressor_1D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_1D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_1D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf27point_decompressor_base_1_2D2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_210decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = $0;
 $12 = $1;
 $13 = $11;
 $14 = ((($13)) + 4|0);
 $10 = $14;
 $15 = $10;
 $9 = $15;
 $16 = $9;
 $8 = $16;
 $17 = $8;
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 36|0);
 $20 = $12;
 $21 = (__ZN7lazperf6detail19Point10Decompressor10decompressEPc($19,$20)|0);
 $12 = $21;
 $22 = ((($13)) + 4|0);
 $7 = $22;
 $23 = $7;
 $6 = $23;
 $24 = $6;
 $5 = $24;
 $25 = $5;
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($26)) + 4676|0);
 $28 = $12;
 $29 = (__ZN7lazperf6detail17Rgb10Decompressor10decompressEPc($27,$28)|0);
 $12 = $29;
 $30 = ((($13)) + 4|0);
 $4 = $30;
 $31 = $4;
 $3 = $31;
 $32 = $3;
 $2 = $32;
 $33 = $2;
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 4996|0);
 $36 = $12;
 $37 = (__ZN7lazperf6detail18Byte10Decompressor10decompressEPc($35,$36)|0);
 $12 = $37;
 __ZN7lazperf27point_decompressor_base_1_211handleFirstEv($13);
 $38 = $12;
 STACKTOP = sp;return ($38|0);
}
function __ZN7lazperf20point_decompressor_2D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_2D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_2D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf27point_decompressor_base_1_2D2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_310decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $14 = $0;
 $15 = $1;
 $16 = $14;
 $17 = ((($16)) + 4|0);
 $13 = $17;
 $18 = $13;
 $12 = $18;
 $19 = $12;
 $11 = $19;
 $20 = $11;
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 36|0);
 $23 = $15;
 $24 = (__ZN7lazperf6detail19Point10Decompressor10decompressEPc($22,$23)|0);
 $15 = $24;
 $25 = ((($16)) + 4|0);
 $10 = $25;
 $26 = $10;
 $9 = $26;
 $27 = $9;
 $8 = $27;
 $28 = $8;
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($29)) + 4424|0);
 $31 = $15;
 $32 = (__ZN7lazperf6detail21Gpstime10Decompressor10decompressEPc($30,$31)|0);
 $15 = $32;
 $33 = ((($16)) + 4|0);
 $4 = $33;
 $34 = $4;
 $3 = $34;
 $35 = $3;
 $2 = $35;
 $36 = $2;
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($37)) + 4676|0);
 $39 = $15;
 $40 = (__ZN7lazperf6detail17Rgb10Decompressor10decompressEPc($38,$39)|0);
 $15 = $40;
 $41 = ((($16)) + 4|0);
 $7 = $41;
 $42 = $7;
 $6 = $42;
 $43 = $6;
 $5 = $43;
 $44 = $5;
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($45)) + 4996|0);
 $47 = $15;
 $48 = (__ZN7lazperf6detail18Byte10Decompressor10decompressEPc($46,$47)|0);
 $15 = $48;
 __ZN7lazperf27point_decompressor_base_1_211handleFirstEv($16);
 $49 = $15;
 STACKTOP = sp;return ($49|0);
}
function __ZN7lazperf20point_decompressor_3D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_3D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_3D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf27point_decompressor_base_1_2D2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_610decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $43 = sp;
 $41 = $0;
 $42 = $1;
 $44 = $41;
 HEAP32[$43>>2] = 0;
 $45 = ((($44)) + 4|0);
 $40 = $45;
 $46 = $40;
 $39 = $46;
 $47 = $39;
 $38 = $47;
 $48 = $38;
 $49 = HEAP32[$48>>2]|0;
 $50 = ((($49)) + 16|0);
 $51 = $42;
 $52 = (__ZN7lazperf6detail19Point14Decompressor10decompressEPcRi($50,$51,$43)|0);
 $42 = $52;
 $53 = ((($44)) + 4|0);
 $16 = $53;
 $54 = $16;
 $15 = $54;
 $55 = $15;
 $14 = $55;
 $56 = $14;
 $57 = HEAP32[$56>>2]|0;
 $58 = ((($57)) + 10568|0);
 $59 = (__ZNK7lazperf6detail10Byte14Base5countEv($58)|0);
 $60 = ($59|0)!=(0);
 if ($60) {
  $61 = ((($44)) + 4|0);
  $4 = $61;
  $62 = $4;
  $3 = $62;
  $63 = $3;
  $2 = $63;
  $64 = $2;
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($65)) + 10568|0);
  $67 = $42;
  $68 = (__ZN7lazperf6detail18Byte14Decompressor10decompressEPcRi($66,$67,$43)|0);
  $42 = $68;
 }
 $69 = ((($44)) + 4|0);
 $7 = $69;
 $70 = $7;
 $6 = $70;
 $71 = $6;
 $5 = $71;
 $72 = $5;
 $73 = HEAP32[$72>>2]|0;
 $74 = ((($73)) + 10740|0);
 $75 = HEAP8[$74>>0]|0;
 $76 = $75&1;
 if (!($76)) {
  $134 = $42;
  STACKTOP = sp;return ($134|0);
 }
 $77 = ((($44)) + 4|0);
 $10 = $77;
 $78 = $10;
 $9 = $78;
 $79 = $9;
 $8 = $79;
 $80 = $8;
 $81 = HEAP32[$80>>2]|0;
 $82 = ((($44)) + 4|0);
 $13 = $82;
 $83 = $13;
 $12 = $83;
 $84 = $12;
 $11 = $84;
 $85 = $11;
 $86 = HEAP32[$85>>2]|0;
 $87 = ((($86)) + 10736|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($81,$87)|0);
 $88 = ((($44)) + 4|0);
 $19 = $88;
 $89 = $19;
 $18 = $89;
 $90 = $18;
 $17 = $90;
 $91 = $17;
 $92 = HEAP32[$91>>2]|0;
 $93 = ((($92)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor9readSizesEv($93);
 $94 = ((($44)) + 4|0);
 $22 = $94;
 $95 = $22;
 $21 = $95;
 $96 = $21;
 $20 = $96;
 $97 = $20;
 $98 = HEAP32[$97>>2]|0;
 $99 = ((($98)) + 10568|0);
 $100 = (__ZNK7lazperf6detail10Byte14Base5countEv($99)|0);
 $101 = ($100|0)!=(0);
 if ($101) {
  $102 = ((($44)) + 4|0);
  $25 = $102;
  $103 = $25;
  $24 = $103;
  $104 = $24;
  $23 = $104;
  $105 = $23;
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($106)) + 10568|0);
  __ZN7lazperf6detail18Byte14Decompressor9readSizesEv($107);
 }
 $108 = ((($44)) + 4|0);
 $28 = $108;
 $109 = $28;
 $27 = $109;
 $110 = $27;
 $26 = $110;
 $111 = $26;
 $112 = HEAP32[$111>>2]|0;
 $113 = ((($112)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor8readDataEv($113);
 $114 = ((($44)) + 4|0);
 $31 = $114;
 $115 = $31;
 $30 = $115;
 $116 = $30;
 $29 = $116;
 $117 = $29;
 $118 = HEAP32[$117>>2]|0;
 $119 = ((($118)) + 10568|0);
 $120 = (__ZNK7lazperf6detail10Byte14Base5countEv($119)|0);
 $121 = ($120|0)!=(0);
 if ($121) {
  $122 = ((($44)) + 4|0);
  $34 = $122;
  $123 = $34;
  $33 = $123;
  $124 = $33;
  $32 = $124;
  $125 = $32;
  $126 = HEAP32[$125>>2]|0;
  $127 = ((($126)) + 10568|0);
  __ZN7lazperf6detail18Byte14Decompressor8readDataEv($127);
 }
 $128 = ((($44)) + 4|0);
 $37 = $128;
 $129 = $37;
 $36 = $129;
 $130 = $36;
 $35 = $130;
 $131 = $35;
 $132 = HEAP32[$131>>2]|0;
 $133 = ((($132)) + 10740|0);
 HEAP8[$133>>0] = 0;
 $134 = $42;
 STACKTOP = sp;return ($134|0);
}
function __ZN7lazperf20point_decompressor_6D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_6D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_6D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $10;
 HEAP32[$11>>2] = (10508);
 $12 = ((($11)) + 4|0);
 $9 = $12;
 $13 = $9;
 $8 = $13;
 $14 = $8;
 $7 = $14;
 $15 = $7;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($16)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor8dumpSumsEv($17);
 $18 = ((($11)) + 4|0);
 $6 = $18;
 $19 = $6;
 $5 = $19;
 $20 = $5;
 $4 = $20;
 $21 = $4;
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 10568|0);
 $24 = (__ZNK7lazperf6detail10Byte14Base5countEv($23)|0);
 $25 = ($24|0)!=(0);
 if (!($25)) {
  (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(36020,21164)|0);
  __ZN7lazperf27point_decompressor_base_1_4D2Ev($11);
  STACKTOP = sp;return;
 }
 $26 = ((($11)) + 4|0);
 $3 = $26;
 $27 = $3;
 $2 = $27;
 $28 = $2;
 $1 = $28;
 $29 = $1;
 $30 = HEAP32[$29>>2]|0;
 $31 = ((($30)) + 10568|0);
 __ZN7lazperf6detail18Byte14Decompressor8dumpSumsEv($31);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(36020,21164)|0);
 __ZN7lazperf27point_decompressor_base_1_4D2Ev($11);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_4D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 HEAP32[$14>>2] = (10528);
 $15 = ((($14)) + 4|0);
 $12 = $15;
 $16 = $12;
 $9 = $16;
 $10 = 0;
 $17 = $9;
 $8 = $17;
 $18 = $8;
 $7 = $18;
 $19 = $7;
 $20 = HEAP32[$19>>2]|0;
 $11 = $20;
 $21 = $10;
 $4 = $17;
 $22 = $4;
 $3 = $22;
 $23 = $3;
 HEAP32[$23>>2] = $21;
 $24 = $11;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $2 = $17;
  $26 = $2;
  $1 = $26;
  $27 = $1;
  $28 = $11;
  $5 = $27;
  $6 = $28;
  $29 = $6;
  $30 = ($29|0)==(0|0);
  if (!($30)) {
   __ZN7lazperf27point_decompressor_base_1_47PrivateD2Ev($29);
   __ZdlPv($29);
  }
 }
 __ZN7lazperf16las_decompressorD2Ev($14);
 STACKTOP = sp;return;
}
function __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = $3;
 $7 = (__ZNSt3__211char_traitsIcE6lengthEPKc($6)|0);
 $8 = (__ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m($4,$5,$7)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $$byval_copy = sp + 92|0;
 $8 = sp + 76|0;
 $24 = sp + 8|0;
 $25 = sp + 4|0;
 $26 = sp;
 $21 = $0;
 $22 = $1;
 $23 = $2;
 $27 = $21;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($24,$27);
 $20 = $24;
 $28 = $20;
 $29 = HEAP8[$28>>0]|0;
 $30 = $29&1;
 if (!($30)) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($24);
  $107 = $21;
  STACKTOP = sp;return ($107|0);
 }
 $31 = $21;
 $18 = $26;
 $19 = $31;
 $32 = $18;
 $33 = $19;
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + -12|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (($33) + ($36)|0);
 $17 = $37;
 $38 = $17;
 $16 = $38;
 $39 = $16;
 $40 = ((($39)) + 24|0);
 $41 = HEAP32[$40>>2]|0;
 HEAP32[$32>>2] = $41;
 $42 = $22;
 $43 = $21;
 $44 = HEAP32[$43>>2]|0;
 $45 = ((($44)) + -12|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (($43) + ($46)|0);
 $11 = $47;
 $48 = $11;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = $50 & 176;
 $52 = ($51|0)==(32);
 $53 = $22;
 $54 = $23;
 $55 = (($53) + ($54)|0);
 $56 = $22;
 $57 = $52 ? $55 : $56;
 $58 = $22;
 $59 = $23;
 $60 = (($58) + ($59)|0);
 $61 = $21;
 $62 = HEAP32[$61>>2]|0;
 $63 = ((($62)) + -12|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (($61) + ($64)|0);
 $66 = $21;
 $67 = HEAP32[$66>>2]|0;
 $68 = ((($67)) + -12|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = (($66) + ($69)|0);
 $9 = $70;
 $71 = $9;
 $72 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $73 = ((($71)) + 76|0);
 $74 = HEAP32[$73>>2]|0;
 $75 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($72,$74)|0);
 if ($75) {
  $6 = $71;
  $7 = 32;
  $76 = $6;
  __ZNKSt3__28ios_base6getlocEv($8,$76);
  $5 = $8;
  $77 = $5;
  $78 = (__ZNKSt3__26locale9use_facetERNS0_2idE($77,36724)|0);
  $79 = $7;
  $3 = $78;
  $4 = $79;
  $80 = $3;
  $81 = HEAP32[$80>>2]|0;
  $82 = ((($81)) + 28|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = $4;
  $85 = (FUNCTION_TABLE_iii[$83 & 1023]($80,$84)|0);
  __ZNSt3__26localeD2Ev($8);
  $86 = $85 << 24 >> 24;
  $87 = ((($71)) + 76|0);
  HEAP32[$87>>2] = $86;
 }
 $88 = ((($71)) + 76|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $89&255;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$26>>2]|0;
 $91 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$42,$57,$60,$65,$90)|0);
 HEAP32[$25>>2] = $91;
 $10 = $25;
 $92 = $10;
 $93 = HEAP32[$92>>2]|0;
 $94 = ($93|0)==(0|0);
 if (!($94)) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($24);
  $107 = $21;
  STACKTOP = sp;return ($107|0);
 }
 $95 = $21;
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($96)) + -12|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = (($95) + ($98)|0);
 $14 = $99;
 $15 = 5;
 $100 = $14;
 $101 = $15;
 $12 = $100;
 $13 = $101;
 $102 = $12;
 $103 = ((($102)) + 16|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = $13;
 $106 = $104 | $105;
 __ZNSt3__28ios_base5clearEj($102,$106);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($24);
 $107 = $21;
 STACKTOP = sp;return ($107|0);
}
function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $40 = sp + 44|0;
 $49 = sp + 4|0;
 $41 = $1;
 $42 = $2;
 $43 = $3;
 $44 = $4;
 $45 = $5;
 $51 = HEAP32[$0>>2]|0;
 $52 = ($51|0)==(0|0);
 if ($52) {
  ;HEAP32[$40>>2]=HEAP32[$0>>2]|0;
  $155 = HEAP32[$40>>2]|0;
  STACKTOP = sp;return ($155|0);
 }
 $53 = $43;
 $54 = $41;
 $55 = $53;
 $56 = $54;
 $57 = (($55) - ($56))|0;
 $46 = $57;
 $58 = $44;
 $39 = $58;
 $59 = $39;
 $60 = ((($59)) + 12|0);
 $61 = HEAP32[$60>>2]|0;
 $47 = $61;
 $62 = $47;
 $63 = $46;
 $64 = ($62|0)>($63|0);
 if ($64) {
  $65 = $46;
  $66 = $47;
  $67 = (($66) - ($65))|0;
  $47 = $67;
 } else {
  $47 = 0;
 }
 $68 = $42;
 $69 = $41;
 $70 = $68;
 $71 = $69;
 $72 = (($70) - ($71))|0;
 $48 = $72;
 $73 = $48;
 $74 = ($73|0)>(0);
 if ($74) {
  $75 = HEAP32[$0>>2]|0;
  $76 = $41;
  $77 = $48;
  $30 = $75;
  $31 = $76;
  $32 = $77;
  $78 = $30;
  $79 = HEAP32[$78>>2]|0;
  $80 = ((($79)) + 48|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = $31;
  $83 = $32;
  $84 = (FUNCTION_TABLE_iiii[$81 & 1023]($78,$82,$83)|0);
  $85 = $48;
  $86 = ($84|0)!=($85|0);
  if ($86) {
   HEAP32[$0>>2] = 0;
   ;HEAP32[$40>>2]=HEAP32[$0>>2]|0;
   $155 = HEAP32[$40>>2]|0;
   STACKTOP = sp;return ($155|0);
  }
 }
 $87 = $47;
 $88 = ($87|0)>(0);
 if ($88) {
  $89 = $47;
  $90 = $45;
  $27 = $49;
  $28 = $89;
  $29 = $90;
  $91 = $27;
  $26 = $91;
  $92 = $26;
  $25 = $92;
  $93 = $25;
  ;HEAP32[$93>>2]=0|0;HEAP32[$93+4>>2]=0|0;HEAP32[$93+8>>2]=0|0;
  $24 = $92;
  $94 = $24;
  $23 = $94;
  $95 = $28;
  $96 = $29;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($91,$95,$96);
  $97 = HEAP32[$0>>2]|0;
  $22 = $49;
  $98 = $22;
  $21 = $98;
  $99 = $21;
  $20 = $99;
  $100 = $20;
  $19 = $100;
  $101 = $19;
  $18 = $101;
  $102 = $18;
  $103 = ((($102)) + 11|0);
  $104 = HEAP8[$103>>0]|0;
  $105 = $104&255;
  $106 = $105 & 128;
  $107 = ($106|0)!=(0);
  if ($107) {
   $12 = $99;
   $108 = $12;
   $11 = $108;
   $109 = $11;
   $10 = $109;
   $110 = $10;
   $111 = HEAP32[$110>>2]|0;
   $117 = $111;
  } else {
   $17 = $99;
   $112 = $17;
   $16 = $112;
   $113 = $16;
   $15 = $113;
   $114 = $15;
   $14 = $114;
   $115 = $14;
   $13 = $115;
   $116 = $13;
   $117 = $116;
  }
  $9 = $117;
  $118 = $9;
  $119 = $47;
  $6 = $97;
  $7 = $118;
  $8 = $119;
  $120 = $6;
  $121 = HEAP32[$120>>2]|0;
  $122 = ((($121)) + 48|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = $7;
  $125 = $8;
  $126 = (FUNCTION_TABLE_iiii[$123 & 1023]($120,$124,$125)|0);
  $127 = $47;
  $128 = ($126|0)!=($127|0);
  if ($128) {
   HEAP32[$0>>2] = 0;
   ;HEAP32[$40>>2]=HEAP32[$0>>2]|0;
   $50 = 1;
  } else {
   $50 = 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
  $129 = $50;
  $switch = ($129>>>0)<(1);
  if (!($switch)) {
   $155 = HEAP32[$40>>2]|0;
   STACKTOP = sp;return ($155|0);
  }
 }
 $130 = $43;
 $131 = $42;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $48 = $134;
 $135 = $48;
 $136 = ($135|0)>(0);
 if ($136) {
  $137 = HEAP32[$0>>2]|0;
  $138 = $42;
  $139 = $48;
  $33 = $137;
  $34 = $138;
  $35 = $139;
  $140 = $33;
  $141 = HEAP32[$140>>2]|0;
  $142 = ((($141)) + 48|0);
  $143 = HEAP32[$142>>2]|0;
  $144 = $34;
  $145 = $35;
  $146 = (FUNCTION_TABLE_iiii[$143 & 1023]($140,$144,$145)|0);
  $147 = $48;
  $148 = ($146|0)!=($147|0);
  if ($148) {
   HEAP32[$0>>2] = 0;
   ;HEAP32[$40>>2]=HEAP32[$0>>2]|0;
   $155 = HEAP32[$40>>2]|0;
   STACKTOP = sp;return ($155|0);
  }
 }
 $149 = $44;
 $36 = $149;
 $37 = 0;
 $150 = $36;
 $151 = ((($150)) + 12|0);
 $152 = HEAP32[$151>>2]|0;
 $38 = $152;
 $153 = $37;
 $154 = ((($150)) + 12|0);
 HEAP32[$154>>2] = $153;
 ;HEAP32[$40>>2]=HEAP32[$0>>2]|0;
 $155 = HEAP32[$40>>2]|0;
 STACKTOP = sp;return ($155|0);
}
function __ZN7lazperf27point_decompressor_base_1_47PrivateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 10568|0);
 __ZN7lazperf6detail18Byte14DecompressorD2Ev($3);
 $4 = ((($2)) + 9968|0);
 __ZN7lazperf6detail17Nir14DecompressorD2Ev($4);
 $5 = ((($2)) + 8648|0);
 __ZN7lazperf6detail17Rgb14DecompressorD2Ev($5);
 $6 = ((($2)) + 16|0);
 __ZN7lazperf6detail19Point14DecompressorD2Ev($6);
 __ZN7lazperf10InCbStreamD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail18Byte14DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $53 = $0;
 $54 = $53;
 $55 = ((($54)) + 148|0);
 $52 = $55;
 $56 = $52;
 $51 = $56;
 $57 = $51;
 $50 = $57;
 $58 = $50;
 $59 = HEAP32[$58>>2]|0;
 $49 = $59;
 $60 = $49;
 $28 = $57;
 $61 = $28;
 $62 = HEAP32[$61>>2]|0;
 $27 = $62;
 $63 = $27;
 $33 = $57;
 $64 = $33;
 $32 = $64;
 $65 = $32;
 $31 = $65;
 $66 = $31;
 $67 = ((($66)) + 8|0);
 $30 = $67;
 $68 = $30;
 $29 = $68;
 $69 = $29;
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$65>>2]|0;
 $72 = $70;
 $73 = $71;
 $74 = (($72) - ($73))|0;
 $75 = (($74|0) / 20)&-1;
 $76 = (($63) + (($75*20)|0)|0);
 $35 = $57;
 $77 = $35;
 $78 = HEAP32[$77>>2]|0;
 $34 = $78;
 $79 = $34;
 $36 = $57;
 $80 = $36;
 $81 = ((($80)) + 4|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = HEAP32[$80>>2]|0;
 $84 = $82;
 $85 = $83;
 $86 = (($84) - ($85))|0;
 $87 = (($86|0) / 20)&-1;
 $88 = (($79) + (($87*20)|0)|0);
 $38 = $57;
 $89 = $38;
 $90 = HEAP32[$89>>2]|0;
 $37 = $90;
 $91 = $37;
 $43 = $57;
 $92 = $43;
 $42 = $92;
 $93 = $42;
 $41 = $93;
 $94 = $41;
 $95 = ((($94)) + 8|0);
 $40 = $95;
 $96 = $40;
 $39 = $96;
 $97 = $39;
 $98 = HEAP32[$97>>2]|0;
 $99 = HEAP32[$93>>2]|0;
 $100 = $98;
 $101 = $99;
 $102 = (($100) - ($101))|0;
 $103 = (($102|0) / 20)&-1;
 $104 = (($91) + (($103*20)|0)|0);
 $44 = $57;
 $45 = $60;
 $46 = $76;
 $47 = $88;
 $48 = $104;
 __ZNSt3__213__vector_baseIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEED2Ev($56);
 $105 = ((($54)) + 136|0);
 $26 = $105;
 $106 = $26;
 $25 = $106;
 $107 = $25;
 $24 = $107;
 $108 = $24;
 $109 = HEAP32[$108>>2]|0;
 $23 = $109;
 $110 = $23;
 $2 = $107;
 $111 = $2;
 $112 = HEAP32[$111>>2]|0;
 $1 = $112;
 $113 = $1;
 $7 = $107;
 $114 = $7;
 $6 = $114;
 $115 = $6;
 $5 = $115;
 $116 = $5;
 $117 = ((($116)) + 8|0);
 $4 = $117;
 $118 = $4;
 $3 = $118;
 $119 = $3;
 $120 = HEAP32[$119>>2]|0;
 $121 = HEAP32[$115>>2]|0;
 $122 = $120;
 $123 = $121;
 $124 = (($122) - ($123))|0;
 $125 = (($124|0) / 4)&-1;
 $126 = (($113) + ($125<<2)|0);
 $9 = $107;
 $127 = $9;
 $128 = HEAP32[$127>>2]|0;
 $8 = $128;
 $129 = $8;
 $10 = $107;
 $130 = $10;
 $131 = ((($130)) + 4|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = HEAP32[$130>>2]|0;
 $134 = $132;
 $135 = $133;
 $136 = (($134) - ($135))|0;
 $137 = (($136|0) / 4)&-1;
 $138 = (($129) + ($137<<2)|0);
 $12 = $107;
 $139 = $12;
 $140 = HEAP32[$139>>2]|0;
 $11 = $140;
 $141 = $11;
 $17 = $107;
 $142 = $17;
 $16 = $142;
 $143 = $16;
 $15 = $143;
 $144 = $15;
 $145 = ((($144)) + 8|0);
 $14 = $145;
 $146 = $14;
 $13 = $146;
 $147 = $13;
 $148 = HEAP32[$147>>2]|0;
 $149 = HEAP32[$143>>2]|0;
 $150 = $148;
 $151 = $149;
 $152 = (($150) - ($151))|0;
 $153 = (($152|0) / 4)&-1;
 $154 = (($141) + ($153<<2)|0);
 $18 = $107;
 $19 = $110;
 $20 = $126;
 $21 = $138;
 $22 = $154;
 __ZNSt3__213__vector_baseIjNS_9allocatorIjEEED2Ev($106);
 __ZN7lazperf6detail10Byte14BaseD2Ev($54);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Nir14DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 572|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($3);
 __ZN7lazperf6detail9Nir14BaseD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb14DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 1292|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($3);
 __ZN7lazperf6detail9Rgb14BaseD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point14DecompressorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $27 = $0;
 $28 = $27;
 $29 = ((($28)) + 8520|0);
 $26 = $29;
 $30 = $26;
 $25 = $30;
 $31 = $25;
 $24 = $31;
 $32 = $24;
 $33 = HEAP32[$32>>2]|0;
 $23 = $33;
 $34 = $23;
 $2 = $31;
 $35 = $2;
 $36 = HEAP32[$35>>2]|0;
 $1 = $36;
 $37 = $1;
 $7 = $31;
 $38 = $7;
 $6 = $38;
 $39 = $6;
 $5 = $39;
 $40 = $5;
 $41 = ((($40)) + 8|0);
 $4 = $41;
 $42 = $4;
 $3 = $42;
 $43 = $3;
 $44 = HEAP32[$43>>2]|0;
 $45 = HEAP32[$39>>2]|0;
 $46 = $44;
 $47 = $45;
 $48 = (($46) - ($47))|0;
 $49 = (($48|0) / 4)&-1;
 $50 = (($37) + ($49<<2)|0);
 $9 = $31;
 $51 = $9;
 $52 = HEAP32[$51>>2]|0;
 $8 = $52;
 $53 = $8;
 $10 = $31;
 $54 = $10;
 $55 = ((($54)) + 4|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = HEAP32[$54>>2]|0;
 $58 = $56;
 $59 = $57;
 $60 = (($58) - ($59))|0;
 $61 = (($60|0) / 4)&-1;
 $62 = (($53) + ($61<<2)|0);
 $12 = $31;
 $63 = $12;
 $64 = HEAP32[$63>>2]|0;
 $11 = $64;
 $65 = $11;
 $17 = $31;
 $66 = $17;
 $16 = $66;
 $67 = $16;
 $15 = $67;
 $68 = $15;
 $69 = ((($68)) + 8|0);
 $14 = $69;
 $70 = $14;
 $13 = $70;
 $71 = $13;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 4)&-1;
 $78 = (($65) + ($77<<2)|0);
 $18 = $31;
 $19 = $34;
 $20 = $50;
 $21 = $62;
 $22 = $78;
 __ZNSt3__213__vector_baseIjNS_9allocatorIjEEED2Ev($30);
 $79 = ((($28)) + 8500|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($79);
 $80 = ((($28)) + 8480|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($80);
 $81 = ((($28)) + 8460|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($81);
 $82 = ((($28)) + 8440|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($82);
 $83 = ((($28)) + 8420|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($83);
 $84 = ((($28)) + 8400|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($84);
 $85 = ((($28)) + 8380|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($85);
 $86 = ((($28)) + 8360|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($86);
 $87 = ((($28)) + 8340|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($87);
 $88 = ((($28)) + 8324|0);
 __ZN7lazperf10InCbStreamD2Ev($88);
 __ZN7lazperf6detail11Point14BaseD2Ev($28);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIjNS_9allocatorIjEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $24 = sp;
 $27 = sp + 140|0;
 $36 = $0;
 $37 = $36;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38|0)!=(0|0);
 if (!($39)) {
  STACKTOP = sp;return;
 }
 $35 = $37;
 $40 = $35;
 $41 = HEAP32[$40>>2]|0;
 $32 = $40;
 $33 = $41;
 $42 = $32;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $34 = $44;
 while(1) {
  $45 = $33;
  $46 = $34;
  $47 = ($45|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $31 = $42;
  $48 = $31;
  $49 = ((($48)) + 8|0);
  $30 = $49;
  $50 = $30;
  $29 = $50;
  $51 = $29;
  $52 = $34;
  $53 = ((($52)) + -4|0);
  $34 = $53;
  $28 = $53;
  $54 = $28;
  $25 = $51;
  $26 = $54;
  $55 = $25;
  $56 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $55;
  $23 = $56;
  $57 = $22;
  $58 = $23;
  $20 = $57;
  $21 = $58;
 }
 $59 = $33;
 $60 = ((($42)) + 4|0);
 HEAP32[$60>>2] = $59;
 $7 = $37;
 $61 = $7;
 $62 = ((($61)) + 8|0);
 $6 = $62;
 $63 = $6;
 $5 = $63;
 $64 = $5;
 $65 = HEAP32[$37>>2]|0;
 $4 = $37;
 $66 = $4;
 $3 = $66;
 $67 = $3;
 $68 = ((($67)) + 8|0);
 $2 = $68;
 $69 = $2;
 $1 = $69;
 $70 = $1;
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$66>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($75|0) / 4)&-1;
 $17 = $64;
 $18 = $65;
 $19 = $76;
 $77 = $17;
 $78 = $18;
 $79 = $19;
 $14 = $77;
 $15 = $78;
 $16 = $79;
 $80 = $15;
 $81 = $16;
 $82 = $81<<2;
 $11 = $80;
 $12 = $82;
 $13 = 4;
 $83 = $11;
 $84 = $12;
 $85 = $13;
 $8 = $83;
 $9 = $84;
 $10 = $85;
 $86 = $8;
 $87 = $9;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($86,$87);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_4D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 _llvm_trap();
 // unreachable;
}
function __ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 __ZN7lazperf10InCbStream8getBytesEPhm($5,$4,4);
 $6 = HEAP32[$4>>2]|0;
 $7 = $3;
 HEAP32[$7>>2] = $6;
 $8 = $2;
 STACKTOP = sp;return ($8|0);
}
function __ZN7lazperf10InCbStream8getBytesEPhm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZNKSt3__28functionIFvPhmEEclES1_m($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_710decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $52 = sp;
 $50 = $0;
 $51 = $1;
 $53 = $50;
 HEAP32[$52>>2] = 0;
 $54 = ((($53)) + 4|0);
 $49 = $54;
 $55 = $49;
 $48 = $55;
 $56 = $48;
 $47 = $56;
 $57 = $47;
 $58 = HEAP32[$57>>2]|0;
 $59 = ((($58)) + 16|0);
 $60 = $51;
 $61 = (__ZN7lazperf6detail19Point14Decompressor10decompressEPcRi($59,$60,$52)|0);
 $51 = $61;
 $62 = ((($53)) + 4|0);
 $19 = $62;
 $63 = $19;
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$65>>2]|0;
 $67 = ((($66)) + 8648|0);
 $68 = $51;
 $69 = (__ZN7lazperf6detail17Rgb14Decompressor10decompressEPcRi($67,$68,$52)|0);
 $51 = $69;
 $70 = ((($53)) + 4|0);
 $4 = $70;
 $71 = $4;
 $3 = $71;
 $72 = $3;
 $2 = $72;
 $73 = $2;
 $74 = HEAP32[$73>>2]|0;
 $75 = ((($74)) + 10568|0);
 $76 = (__ZNK7lazperf6detail10Byte14Base5countEv($75)|0);
 $77 = ($76|0)!=(0);
 if ($77) {
  $78 = ((($53)) + 4|0);
  $7 = $78;
  $79 = $7;
  $6 = $79;
  $80 = $6;
  $5 = $80;
  $81 = $5;
  $82 = HEAP32[$81>>2]|0;
  $83 = ((($82)) + 10568|0);
  $84 = $51;
  $85 = (__ZN7lazperf6detail18Byte14Decompressor10decompressEPcRi($83,$84,$52)|0);
  $51 = $85;
 }
 $86 = ((($53)) + 4|0);
 $10 = $86;
 $87 = $10;
 $9 = $87;
 $88 = $9;
 $8 = $88;
 $89 = $8;
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($90)) + 10740|0);
 $92 = HEAP8[$91>>0]|0;
 $93 = $92&1;
 if (!($93)) {
  $163 = $51;
  STACKTOP = sp;return ($163|0);
 }
 $94 = ((($53)) + 4|0);
 $13 = $94;
 $95 = $13;
 $12 = $95;
 $96 = $12;
 $11 = $96;
 $97 = $11;
 $98 = HEAP32[$97>>2]|0;
 $99 = ((($53)) + 4|0);
 $16 = $99;
 $100 = $16;
 $15 = $100;
 $101 = $15;
 $14 = $101;
 $102 = $14;
 $103 = HEAP32[$102>>2]|0;
 $104 = ((($103)) + 10736|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($98,$104)|0);
 $105 = ((($53)) + 4|0);
 $22 = $105;
 $106 = $22;
 $21 = $106;
 $107 = $21;
 $20 = $107;
 $108 = $20;
 $109 = HEAP32[$108>>2]|0;
 $110 = ((($109)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor9readSizesEv($110);
 $111 = ((($53)) + 4|0);
 $25 = $111;
 $112 = $25;
 $24 = $112;
 $113 = $24;
 $23 = $113;
 $114 = $23;
 $115 = HEAP32[$114>>2]|0;
 $116 = ((($115)) + 8648|0);
 __ZN7lazperf6detail17Rgb14Decompressor9readSizesEv($116);
 $117 = ((($53)) + 4|0);
 $28 = $117;
 $118 = $28;
 $27 = $118;
 $119 = $27;
 $26 = $119;
 $120 = $26;
 $121 = HEAP32[$120>>2]|0;
 $122 = ((($121)) + 10568|0);
 $123 = (__ZNK7lazperf6detail10Byte14Base5countEv($122)|0);
 $124 = ($123|0)!=(0);
 if ($124) {
  $125 = ((($53)) + 4|0);
  $31 = $125;
  $126 = $31;
  $30 = $126;
  $127 = $30;
  $29 = $127;
  $128 = $29;
  $129 = HEAP32[$128>>2]|0;
  $130 = ((($129)) + 10568|0);
  __ZN7lazperf6detail18Byte14Decompressor9readSizesEv($130);
 }
 $131 = ((($53)) + 4|0);
 $34 = $131;
 $132 = $34;
 $33 = $132;
 $133 = $33;
 $32 = $133;
 $134 = $32;
 $135 = HEAP32[$134>>2]|0;
 $136 = ((($135)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor8readDataEv($136);
 $137 = ((($53)) + 4|0);
 $37 = $137;
 $138 = $37;
 $36 = $138;
 $139 = $36;
 $35 = $139;
 $140 = $35;
 $141 = HEAP32[$140>>2]|0;
 $142 = ((($141)) + 8648|0);
 __ZN7lazperf6detail17Rgb14Decompressor8readDataEv($142);
 $143 = ((($53)) + 4|0);
 $40 = $143;
 $144 = $40;
 $39 = $144;
 $145 = $39;
 $38 = $145;
 $146 = $38;
 $147 = HEAP32[$146>>2]|0;
 $148 = ((($147)) + 10568|0);
 $149 = (__ZNK7lazperf6detail10Byte14Base5countEv($148)|0);
 $150 = ($149|0)!=(0);
 if ($150) {
  $151 = ((($53)) + 4|0);
  $43 = $151;
  $152 = $43;
  $42 = $152;
  $153 = $42;
  $41 = $153;
  $154 = $41;
  $155 = HEAP32[$154>>2]|0;
  $156 = ((($155)) + 10568|0);
  __ZN7lazperf6detail18Byte14Decompressor8readDataEv($156);
 }
 $157 = ((($53)) + 4|0);
 $46 = $157;
 $158 = $46;
 $45 = $158;
 $159 = $45;
 $44 = $159;
 $160 = $44;
 $161 = HEAP32[$160>>2]|0;
 $162 = ((($161)) + 10740|0);
 HEAP8[$162>>0] = 0;
 $163 = $51;
 STACKTOP = sp;return ($163|0);
}
function __ZN7lazperf20point_decompressor_7D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_7D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_7D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = $0;
 $14 = $13;
 HEAP32[$14>>2] = (10548);
 $15 = ((($14)) + 4|0);
 $12 = $15;
 $16 = $12;
 $11 = $16;
 $17 = $11;
 $10 = $17;
 $18 = $10;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($19)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor8dumpSumsEv($20);
 $21 = ((($14)) + 4|0);
 $9 = $21;
 $22 = $9;
 $8 = $22;
 $23 = $8;
 $7 = $23;
 $24 = $7;
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 8648|0);
 __ZN7lazperf6detail17Rgb14Decompressor8dumpSumsEv($26);
 $27 = ((($14)) + 4|0);
 $6 = $27;
 $28 = $6;
 $5 = $28;
 $29 = $5;
 $4 = $29;
 $30 = $4;
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 10568|0);
 $33 = (__ZNK7lazperf6detail10Byte14Base5countEv($32)|0);
 $34 = ($33|0)!=(0);
 if (!($34)) {
  (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(36020,21164)|0);
  __ZN7lazperf27point_decompressor_base_1_4D2Ev($14);
  STACKTOP = sp;return;
 }
 $35 = ((($14)) + 4|0);
 $3 = $35;
 $36 = $3;
 $2 = $36;
 $37 = $2;
 $1 = $37;
 $38 = $1;
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 10568|0);
 __ZN7lazperf6detail18Byte14Decompressor8dumpSumsEv($40);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(36020,21164)|0);
 __ZN7lazperf27point_decompressor_base_1_4D2Ev($14);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_810decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $61 = sp;
 $59 = $0;
 $60 = $1;
 $62 = $59;
 HEAP32[$61>>2] = 0;
 $63 = ((($62)) + 4|0);
 $58 = $63;
 $64 = $58;
 $57 = $64;
 $65 = $57;
 $56 = $65;
 $66 = $56;
 $67 = HEAP32[$66>>2]|0;
 $68 = ((($67)) + 16|0);
 $69 = $60;
 $70 = (__ZN7lazperf6detail19Point14Decompressor10decompressEPcRi($68,$69,$61)|0);
 $60 = $70;
 $71 = ((($62)) + 4|0);
 $22 = $71;
 $72 = $22;
 $21 = $72;
 $73 = $21;
 $20 = $73;
 $74 = $20;
 $75 = HEAP32[$74>>2]|0;
 $76 = ((($75)) + 8648|0);
 $77 = $60;
 $78 = (__ZN7lazperf6detail17Rgb14Decompressor10decompressEPcRi($76,$77,$61)|0);
 $60 = $78;
 $79 = ((($62)) + 4|0);
 $4 = $79;
 $80 = $4;
 $3 = $80;
 $81 = $3;
 $2 = $81;
 $82 = $2;
 $83 = HEAP32[$82>>2]|0;
 $84 = ((($83)) + 9968|0);
 $85 = $60;
 $86 = (__ZN7lazperf6detail17Nir14Decompressor10decompressEPcRi($84,$85,$61)|0);
 $60 = $86;
 $87 = ((($62)) + 4|0);
 $7 = $87;
 $88 = $7;
 $6 = $88;
 $89 = $6;
 $5 = $89;
 $90 = $5;
 $91 = HEAP32[$90>>2]|0;
 $92 = ((($91)) + 10568|0);
 $93 = (__ZNK7lazperf6detail10Byte14Base5countEv($92)|0);
 $94 = ($93|0)!=(0);
 if ($94) {
  $95 = ((($62)) + 4|0);
  $10 = $95;
  $96 = $10;
  $9 = $96;
  $97 = $9;
  $8 = $97;
  $98 = $8;
  $99 = HEAP32[$98>>2]|0;
  $100 = ((($99)) + 10568|0);
  $101 = $60;
  $102 = (__ZN7lazperf6detail18Byte14Decompressor10decompressEPcRi($100,$101,$61)|0);
  $60 = $102;
 }
 $103 = ((($62)) + 4|0);
 $13 = $103;
 $104 = $13;
 $12 = $104;
 $105 = $12;
 $11 = $105;
 $106 = $11;
 $107 = HEAP32[$106>>2]|0;
 $108 = ((($107)) + 10740|0);
 $109 = HEAP8[$108>>0]|0;
 $110 = $109&1;
 if (!($110)) {
  $192 = $60;
  STACKTOP = sp;return ($192|0);
 }
 $111 = ((($62)) + 4|0);
 $16 = $111;
 $112 = $16;
 $15 = $112;
 $113 = $15;
 $14 = $113;
 $114 = $14;
 $115 = HEAP32[$114>>2]|0;
 $116 = ((($62)) + 4|0);
 $19 = $116;
 $117 = $19;
 $18 = $117;
 $118 = $18;
 $17 = $118;
 $119 = $17;
 $120 = HEAP32[$119>>2]|0;
 $121 = ((($120)) + 10736|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($115,$121)|0);
 $122 = ((($62)) + 4|0);
 $25 = $122;
 $123 = $25;
 $24 = $123;
 $124 = $24;
 $23 = $124;
 $125 = $23;
 $126 = HEAP32[$125>>2]|0;
 $127 = ((($126)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor9readSizesEv($127);
 $128 = ((($62)) + 4|0);
 $28 = $128;
 $129 = $28;
 $27 = $129;
 $130 = $27;
 $26 = $130;
 $131 = $26;
 $132 = HEAP32[$131>>2]|0;
 $133 = ((($132)) + 8648|0);
 __ZN7lazperf6detail17Rgb14Decompressor9readSizesEv($133);
 $134 = ((($62)) + 4|0);
 $31 = $134;
 $135 = $31;
 $30 = $135;
 $136 = $30;
 $29 = $136;
 $137 = $29;
 $138 = HEAP32[$137>>2]|0;
 $139 = ((($138)) + 9968|0);
 __ZN7lazperf6detail17Nir14Decompressor9readSizesEv($139);
 $140 = ((($62)) + 4|0);
 $34 = $140;
 $141 = $34;
 $33 = $141;
 $142 = $33;
 $32 = $142;
 $143 = $32;
 $144 = HEAP32[$143>>2]|0;
 $145 = ((($144)) + 10568|0);
 $146 = (__ZNK7lazperf6detail10Byte14Base5countEv($145)|0);
 $147 = ($146|0)!=(0);
 if ($147) {
  $148 = ((($62)) + 4|0);
  $37 = $148;
  $149 = $37;
  $36 = $149;
  $150 = $36;
  $35 = $150;
  $151 = $35;
  $152 = HEAP32[$151>>2]|0;
  $153 = ((($152)) + 10568|0);
  __ZN7lazperf6detail18Byte14Decompressor9readSizesEv($153);
 }
 $154 = ((($62)) + 4|0);
 $40 = $154;
 $155 = $40;
 $39 = $155;
 $156 = $39;
 $38 = $156;
 $157 = $38;
 $158 = HEAP32[$157>>2]|0;
 $159 = ((($158)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor8readDataEv($159);
 $160 = ((($62)) + 4|0);
 $43 = $160;
 $161 = $43;
 $42 = $161;
 $162 = $42;
 $41 = $162;
 $163 = $41;
 $164 = HEAP32[$163>>2]|0;
 $165 = ((($164)) + 8648|0);
 __ZN7lazperf6detail17Rgb14Decompressor8readDataEv($165);
 $166 = ((($62)) + 4|0);
 $46 = $166;
 $167 = $46;
 $45 = $167;
 $168 = $45;
 $44 = $168;
 $169 = $44;
 $170 = HEAP32[$169>>2]|0;
 $171 = ((($170)) + 9968|0);
 __ZN7lazperf6detail17Nir14Decompressor8readDataEv($171);
 $172 = ((($62)) + 4|0);
 $49 = $172;
 $173 = $49;
 $48 = $173;
 $174 = $48;
 $47 = $174;
 $175 = $47;
 $176 = HEAP32[$175>>2]|0;
 $177 = ((($176)) + 10568|0);
 $178 = (__ZNK7lazperf6detail10Byte14Base5countEv($177)|0);
 $179 = ($178|0)!=(0);
 if ($179) {
  $180 = ((($62)) + 4|0);
  $52 = $180;
  $181 = $52;
  $51 = $181;
  $182 = $51;
  $50 = $182;
  $183 = $50;
  $184 = HEAP32[$183>>2]|0;
  $185 = ((($184)) + 10568|0);
  __ZN7lazperf6detail18Byte14Decompressor8readDataEv($185);
 }
 $186 = ((($62)) + 4|0);
 $55 = $186;
 $187 = $55;
 $54 = $187;
 $188 = $54;
 $53 = $188;
 $189 = $53;
 $190 = HEAP32[$189>>2]|0;
 $191 = ((($190)) + 10740|0);
 HEAP8[$191>>0] = 0;
 $192 = $60;
 STACKTOP = sp;return ($192|0);
}
function __ZN7lazperf20point_decompressor_8D0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf20point_decompressor_8D2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_8D2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $16 = $0;
 $17 = $16;
 HEAP32[$17>>2] = (10568);
 $18 = ((($17)) + 4|0);
 $15 = $18;
 $19 = $15;
 $14 = $19;
 $20 = $14;
 $13 = $20;
 $21 = $13;
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 16|0);
 __ZN7lazperf6detail19Point14Decompressor8dumpSumsEv($23);
 $24 = ((($17)) + 4|0);
 $12 = $24;
 $25 = $12;
 $11 = $25;
 $26 = $11;
 $10 = $26;
 $27 = $10;
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($28)) + 8648|0);
 __ZN7lazperf6detail17Rgb14Decompressor8dumpSumsEv($29);
 $30 = ((($17)) + 4|0);
 $9 = $30;
 $31 = $9;
 $8 = $31;
 $32 = $8;
 $7 = $32;
 $33 = $7;
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 9968|0);
 __ZN7lazperf6detail17Nir14Decompressor8dumpSumsEv($35);
 $36 = ((($17)) + 4|0);
 $6 = $36;
 $37 = $6;
 $5 = $37;
 $38 = $5;
 $4 = $38;
 $39 = $4;
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($40)) + 10568|0);
 $42 = (__ZNK7lazperf6detail10Byte14Base5countEv($41)|0);
 $43 = ($42|0)!=(0);
 if (!($43)) {
  (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(36020,21164)|0);
  __ZN7lazperf27point_decompressor_base_1_4D2Ev($17);
  STACKTOP = sp;return;
 }
 $44 = ((($17)) + 4|0);
 $3 = $44;
 $45 = $3;
 $2 = $45;
 $46 = $2;
 $1 = $46;
 $47 = $1;
 $48 = HEAP32[$47>>2]|0;
 $49 = ((($48)) + 10568|0);
 __ZN7lazperf6detail18Byte14Decompressor8dumpSumsEv($49);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(36020,21164)|0);
 __ZN7lazperf27point_decompressor_base_1_4D2Ev($17);
 STACKTOP = sp;return;
}
function __ZN7lazperf16las_decompressorD0Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 _llvm_trap();
 // unreachable;
}
function __ZN7lazperf6detail9Nir14BaseC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__25arrayIN7lazperf6detail9Nir14Base10ChannelCtxELm4EEC2Ev($2);
 $3 = ((($2)) + 560|0);
 HEAP32[$3>>2] = -1;
 STACKTOP = sp;return;
}
function __ZN7lazperf12MemoryStreamC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $11 = sp + 8|0;
 $13 = $0;
 $14 = $13;
 $12 = $14;
 $15 = $12;
 $10 = $15;
 $16 = $10;
 $9 = $16;
 HEAP32[$16>>2] = 0;
 $17 = ((($16)) + 4|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($16)) + 8|0);
 HEAP32[$11>>2] = 0;
 $7 = $18;
 $8 = $11;
 $19 = $7;
 $20 = $8;
 $6 = $20;
 $21 = $6;
 $2 = $19;
 $3 = $21;
 $22 = $2;
 $23 = $3;
 $1 = $23;
 HEAP32[$22>>2] = 0;
 $5 = $19;
 $24 = $5;
 $4 = $24;
 $25 = ((($14)) + 12|0);
 HEAP32[$25>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail9Nir14Base10ChannelCtxELm4EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 560|0);
 $4 = $2;
 while(1) {
  __ZN7lazperf6detail9Nir14Base10ChannelCtxC2Ev($4);
  $5 = ((($4)) + 140|0);
  $6 = ($5|0)==($3|0);
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Nir14Base10ChannelCtxC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 HEAP32[$3>>2] = 0;
 $4 = ((($3)) + 4|0);
 __ZN7lazperf3las5nir14C2Ev($4);
 $5 = ((($3)) + 8|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($5,4,0,0);
 $6 = ((($3)) + 52|0);
 $2 = $6;
 __ZN7lazperf6models10arithmeticC2EjbPj($6,256,0,0);
 $7 = ((($6)) + 44|0);
 $2 = $7;
 __ZN7lazperf6models10arithmeticC2EjbPj($7,256,0,0);
 STACKTOP = sp;return;
}
function __ZN7lazperf3las5nir14C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=0>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Rgb14BaseC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__25arrayIN7lazperf6detail9Rgb14Base10ChannelCtxELm4EEC2Ev($2);
 $3 = ((($2)) + 1280|0);
 HEAP32[$3>>2] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail9Rgb14Base10ChannelCtxELm4EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 1280|0);
 $4 = $2;
 while(1) {
  __ZN7lazperf6detail9Rgb14Base10ChannelCtxC2Ev($4);
  $5 = ((($4)) + 320|0);
  $6 = ($5|0)==($3|0);
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail9Rgb14Base10ChannelCtxC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 HEAP32[$3>>2] = 0;
 $4 = ((($3)) + 4|0);
 __ZN7lazperf3las5rgb14C2Ev($4);
 $5 = ((($3)) + 12|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($5,128,0,0);
 $6 = ((($3)) + 56|0);
 $2 = $6;
 __ZN7lazperf6models10arithmeticC2EjbPj($6,256,0,0);
 $7 = ((($6)) + 44|0);
 $2 = $7;
 __ZN7lazperf6models10arithmeticC2EjbPj($7,256,0,0);
 $8 = ((($7)) + 44|0);
 $2 = $8;
 __ZN7lazperf6models10arithmeticC2EjbPj($8,256,0,0);
 $9 = ((($8)) + 44|0);
 $2 = $9;
 __ZN7lazperf6models10arithmeticC2EjbPj($9,256,0,0);
 $10 = ((($9)) + 44|0);
 $2 = $10;
 __ZN7lazperf6models10arithmeticC2EjbPj($10,256,0,0);
 $11 = ((($10)) + 44|0);
 $2 = $11;
 __ZN7lazperf6models10arithmeticC2EjbPj($11,256,0,0);
 STACKTOP = sp;return;
}
function __ZN7lazperf3las5rgb14C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf3las3rgbC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf3las3rgbC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=0>>8;
 $3 = ((($2)) + 2|0);
 HEAP8[$3>>0]=0&255;HEAP8[$3+1>>0]=0>>8;
 $4 = ((($2)) + 4|0);
 HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=0>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_2C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $10 = sp + 24|0;
 $13 = sp;
 $14 = sp + 56|0;
 $11 = $0;
 $12 = $2;
 $15 = $11;
 __ZN7lazperf16las_decompressorC2Ev($15);
 HEAP32[$15>>2] = (10408);
 $16 = ((($15)) + 4|0);
 $17 = (__Znwm(5060)|0);
 $$expand_i1_val = 1;
 HEAP8[$14>>0] = $$expand_i1_val;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($13,$1);
 $18 = $12;
 __ZN7lazperf27point_decompressor_base_1_27PrivateC2ENSt3__28functionIFvPhmEEEm($17,$13,$18);
 $$expand_i1_val2 = 0;
 HEAP8[$14>>0] = $$expand_i1_val2;
 $9 = $16;
 HEAP32[$10>>2] = $17;
 $19 = $9;
 $7 = $19;
 $8 = $10;
 $20 = $7;
 $21 = $8;
 $6 = $21;
 $22 = $6;
 $4 = $20;
 $5 = $22;
 $23 = $4;
 $24 = $5;
 $3 = $24;
 $25 = $3;
 $26 = HEAP32[$25>>2]|0;
 HEAP32[$23>>2] = $26;
 __ZNSt3__28functionIFvPhmEED2Ev($13);
 STACKTOP = sp;return;
}
function __ZN7lazperf16las_decompressorC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = (10588);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_27PrivateC2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 __ZN7lazperf10InCbStreamC2ENSt3__28functionIFvPhmEEE($6,$5);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 $7 = ((($6)) + 16|0);
 __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEEC2ERS2_($7,$6);
 $8 = ((($6)) + 36|0);
 $9 = ((($6)) + 16|0);
 __ZN7lazperf6detail19Point10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEE($8,$9);
 $10 = ((($6)) + 4424|0);
 $11 = ((($6)) + 16|0);
 __ZN7lazperf6detail21Gpstime10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEE($10,$11);
 $12 = ((($6)) + 4676|0);
 $13 = ((($6)) + 16|0);
 __ZN7lazperf6detail17Rgb10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEE($12,$13);
 $14 = ((($6)) + 4996|0);
 $15 = ((($6)) + 16|0);
 $16 = $4;
 __ZN7lazperf6detail18Byte10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEEm($14,$15,$16);
 $17 = ((($6)) + 5056|0);
 HEAP8[$17>>0] = 1;
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_0C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_2C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10428);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_1C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_2C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10448);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_2C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_2C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10468);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_3C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_2C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10488);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_4C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $10 = sp + 24|0;
 $13 = sp;
 $14 = sp + 56|0;
 $11 = $0;
 $12 = $2;
 $15 = $11;
 __ZN7lazperf16las_decompressorC2Ev($15);
 HEAP32[$15>>2] = (10528);
 $16 = ((($15)) + 4|0);
 $17 = (__Znwm(10744)|0);
 $$expand_i1_val = 1;
 HEAP8[$14>>0] = $$expand_i1_val;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($13,$1);
 $18 = $12;
 __ZN7lazperf27point_decompressor_base_1_47PrivateC2ENSt3__28functionIFvPhmEEEm($17,$13,$18);
 $$expand_i1_val2 = 0;
 HEAP8[$14>>0] = $$expand_i1_val2;
 $9 = $16;
 HEAP32[$10>>2] = $17;
 $19 = $9;
 $7 = $19;
 $8 = $10;
 $20 = $7;
 $21 = $8;
 $6 = $21;
 $22 = $6;
 $4 = $20;
 $5 = $22;
 $23 = $4;
 $24 = $5;
 $3 = $24;
 $25 = $3;
 $26 = HEAP32[$25>>2]|0;
 HEAP32[$23>>2] = $26;
 __ZNSt3__28functionIFvPhmEED2Ev($13);
 STACKTOP = sp;return;
}
function __ZN7lazperf27point_decompressor_base_1_47PrivateC2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 __ZN7lazperf10InCbStreamC2ENSt3__28functionIFvPhmEEE($6,$5);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 $7 = ((($6)) + 16|0);
 __ZN7lazperf6detail19Point14DecompressorC2ERNS_10InCbStreamE($7,$6);
 $8 = ((($6)) + 8648|0);
 __ZN7lazperf6detail17Rgb14DecompressorC2ERNS_10InCbStreamE($8,$6);
 $9 = ((($6)) + 9968|0);
 __ZN7lazperf6detail17Nir14DecompressorC2ERNS_10InCbStreamE($9,$6);
 $10 = ((($6)) + 10568|0);
 $11 = $4;
 __ZN7lazperf6detail18Byte14DecompressorC2ERNS_10InCbStreamEm($10,$6,$11);
 $12 = ((($6)) + 10736|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($6)) + 10740|0);
 HEAP8[$13>>0] = 1;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point14DecompressorC2ERNS_10InCbStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 12|0;
 $14 = $0;
 $15 = $1;
 $16 = $14;
 __ZN7lazperf6detail11Point14BaseC2Ev($16);
 $17 = ((($16)) + 8324|0);
 $18 = $15;
 __ZN7lazperf10InCbStreamC2ERKS0_($17,$18);
 $19 = ((($16)) + 8340|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($19);
 $20 = ((($16)) + 8360|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($20);
 $21 = ((($16)) + 8380|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($21);
 $22 = ((($16)) + 8400|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($22);
 $23 = ((($16)) + 8420|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($23);
 $24 = ((($16)) + 8440|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($24);
 $25 = ((($16)) + 8460|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($25);
 $26 = ((($16)) + 8480|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($26);
 $27 = ((($16)) + 8500|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($27);
 $28 = ((($16)) + 8520|0);
 $13 = $28;
 $29 = $13;
 $11 = $29;
 $30 = $11;
 $10 = $30;
 HEAP32[$30>>2] = 0;
 $31 = ((($30)) + 4|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($30)) + 8|0);
 HEAP32[$12>>2] = 0;
 $8 = $32;
 $9 = $12;
 $33 = $8;
 $34 = $9;
 $7 = $34;
 $35 = $7;
 $3 = $33;
 $4 = $35;
 $36 = $3;
 $37 = $4;
 $2 = $37;
 HEAP32[$36>>2] = 0;
 $6 = $33;
 $38 = $6;
 $5 = $38;
 $39 = ((($16)) + 8532|0);
 __ZN7lazperf5utils6SummerC2Ev($39);
 $40 = ((($16)) + 8540|0);
 __ZN7lazperf5utils6SummerC2Ev($40);
 $41 = ((($16)) + 8548|0);
 __ZN7lazperf5utils6SummerC2Ev($41);
 $42 = ((($16)) + 8556|0);
 __ZN7lazperf5utils6SummerC2Ev($42);
 $43 = ((($16)) + 8564|0);
 __ZN7lazperf5utils6SummerC2Ev($43);
 $44 = ((($16)) + 8572|0);
 __ZN7lazperf5utils6SummerC2Ev($44);
 $45 = ((($16)) + 8580|0);
 __ZN7lazperf5utils6SummerC2Ev($45);
 $46 = ((($16)) + 8588|0);
 __ZN7lazperf5utils6SummerC2Ev($46);
 $47 = ((($16)) + 8596|0);
 __ZN7lazperf5utils6SummerC2Ev($47);
 $48 = ((($16)) + 8604|0);
 __ZN7lazperf5utils6SummerC2Ev($48);
 $49 = ((($16)) + 8612|0);
 __ZN7lazperf5utils6SummerC2Ev($49);
 $50 = ((($16)) + 8620|0);
 __ZN7lazperf5utils6SummerC2Ev($50);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb14DecompressorC2ERNS_10InCbStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN7lazperf6detail9Rgb14BaseC2Ev($4);
 $5 = ((($4)) + 1284|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 $7 = ((($4)) + 1292|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($7);
 $8 = ((($4)) + 1312|0);
 __ZN7lazperf5utils6SummerC2Ev($8);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Nir14DecompressorC2ERNS_10InCbStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN7lazperf6detail9Nir14BaseC2Ev($4);
 $5 = ((($4)) + 564|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 $7 = ((($4)) + 572|0);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($7);
 $8 = ((($4)) + 592|0);
 __ZN7lazperf5utils6SummerC2Ev($8);
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = sp + 4|0;
 $12 = $0;
 $13 = $12;
 $14 = ((($13)) + 12|0);
 $15 = (__Znwm(16)|0);
 __ZN7lazperf12MemoryStreamC2Ev($15);
 $10 = $14;
 HEAP32[$11>>2] = $15;
 $16 = $10;
 $8 = $16;
 $9 = $11;
 $17 = $8;
 $18 = $9;
 $7 = $18;
 $19 = $7;
 $5 = $17;
 $6 = $19;
 $20 = $5;
 $21 = $6;
 $4 = $21;
 $22 = $4;
 $23 = HEAP32[$22>>2]|0;
 HEAP32[$20>>2] = $23;
 $24 = ((($13)) + 16|0);
 $25 = ((($13)) + 12|0);
 $3 = $25;
 $26 = $3;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 $28 = $1;
 $29 = HEAP32[$28>>2]|0;
 HEAP32[$24>>2] = $29;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE4initEv($13);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6SummerC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = -1;
 $4 = ((($2)) + 8|0);
 HEAP8[$4>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf10InCbStreamC2ERKS0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_6C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_4C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10508);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_7C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_4C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10548);
 STACKTOP = sp;return;
}
function __ZN7lazperf20point_decompressor_8C2ENSt3__28functionIFvPhmEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $3 = $0;
 $4 = $2;
 $6 = $3;
 __ZNSt3__28functionIFvPhmEEC2ERKS3_($5,$1);
 $7 = $4;
 __ZN7lazperf27point_decompressor_base_1_4C2ENSt3__28functionIFvPhmEEEm($6,$5,$7);
 __ZNSt3__28functionIFvPhmEED2Ev($5);
 HEAP32[$6>>2] = (10568);
 STACKTOP = sp;return;
}
function __ZN7lazperf22build_las_decompressorENSt3__28functionIFvPhmEEEim($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val12 = 0, $$expand_i1_val14 = 0, $$expand_i1_val16 = 0, $$expand_i1_val18 = 0, $$expand_i1_val20 = 0, $$expand_i1_val22 = 0, $$expand_i1_val24 = 0, $$expand_i1_val26 = 0, $$expand_i1_val28 = 0, $$expand_i1_val30 = 0, $$expand_i1_val32 = 0;
 var $$expand_i1_val34 = 0, $$expand_i1_val36 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(720|0);
 $$byval_copy6 = sp + 704|0;
 $$byval_copy5 = sp + 700|0;
 $$byval_copy4 = sp + 696|0;
 $$byval_copy3 = sp + 692|0;
 $$byval_copy2 = sp + 688|0;
 $$byval_copy1 = sp + 684|0;
 $$byval_copy = sp + 680|0;
 $9 = sp + 656|0;
 $15 = sp + 632|0;
 $20 = sp + 608|0;
 $21 = sp + 600|0;
 $27 = sp + 576|0;
 $33 = sp + 552|0;
 $38 = sp + 528|0;
 $39 = sp + 520|0;
 $45 = sp + 496|0;
 $51 = sp + 472|0;
 $56 = sp + 448|0;
 $57 = sp + 440|0;
 $63 = sp + 416|0;
 $69 = sp + 392|0;
 $74 = sp + 368|0;
 $75 = sp + 360|0;
 $81 = sp + 336|0;
 $87 = sp + 312|0;
 $92 = sp + 288|0;
 $93 = sp + 280|0;
 $99 = sp + 256|0;
 $105 = sp + 232|0;
 $110 = sp + 208|0;
 $111 = sp + 200|0;
 $117 = sp + 176|0;
 $123 = sp + 152|0;
 $128 = sp + 128|0;
 $129 = sp + 124|0;
 $133 = sp + 715|0;
 $134 = sp + 96|0;
 $135 = sp + 714|0;
 $136 = sp + 80|0;
 $137 = sp + 713|0;
 $138 = sp + 64|0;
 $139 = sp + 712|0;
 $140 = sp + 48|0;
 $141 = sp + 711|0;
 $142 = sp + 32|0;
 $143 = sp + 710|0;
 $144 = sp + 16|0;
 $145 = sp + 709|0;
 $146 = sp;
 $147 = sp + 708|0;
 $131 = $2;
 $132 = $3;
 $$expand_i1_val = 0;
 HEAP8[$133>>0] = $$expand_i1_val;
 $130 = $0;
 $148 = $130;
 HEAP32[$148>>2] = 0;
 $149 = ((($148)) + 4|0);
 HEAP32[$149>>2] = 0;
 $150 = $131;
 switch ($150|0) {
 case 0:  {
  $151 = (__Znwm(8)|0);
  $$expand_i1_val8 = 1;
  HEAP8[$135>>0] = $$expand_i1_val8;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($134,$1);
  $152 = $132;
  __ZN7lazperf20point_decompressor_0C2ENSt3__28functionIFvPhmEEEm($151,$134,$152);
  $$expand_i1_val10 = 0;
  HEAP8[$135>>0] = $$expand_i1_val10;
  $126 = $0;
  $127 = $151;
  $153 = $126;
  $154 = $127;
  ;HEAP32[$129>>2]=0|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$129>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_0EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($128,$154,$$byval_copy);
  $124 = $128;
  $125 = $153;
  $155 = $124;
  $156 = $125;
  $121 = $155;
  $122 = $156;
  $157 = $121;
  $120 = $157;
  $158 = $120;
  $159 = HEAP32[$158>>2]|0;
  HEAP32[$123>>2] = $159;
  $160 = $122;
  $118 = $160;
  $161 = $118;
  $162 = HEAP32[$161>>2]|0;
  $163 = $121;
  HEAP32[$163>>2] = $162;
  $119 = $123;
  $164 = $119;
  $165 = HEAP32[$164>>2]|0;
  $166 = $122;
  HEAP32[$166>>2] = $165;
  $167 = ((($155)) + 4|0);
  $168 = $125;
  $169 = ((($168)) + 4|0);
  $115 = $167;
  $116 = $169;
  $170 = $115;
  $114 = $170;
  $171 = $114;
  $172 = HEAP32[$171>>2]|0;
  HEAP32[$117>>2] = $172;
  $173 = $116;
  $112 = $173;
  $174 = $112;
  $175 = HEAP32[$174>>2]|0;
  $176 = $115;
  HEAP32[$176>>2] = $175;
  $113 = $117;
  $177 = $113;
  $178 = HEAP32[$177>>2]|0;
  $179 = $116;
  HEAP32[$179>>2] = $178;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($128);
  __ZNSt3__28functionIFvPhmEED2Ev($134);
  break;
 }
 case 1:  {
  $180 = (__Znwm(8)|0);
  $$expand_i1_val12 = 1;
  HEAP8[$137>>0] = $$expand_i1_val12;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($136,$1);
  $181 = $132;
  __ZN7lazperf20point_decompressor_1C2ENSt3__28functionIFvPhmEEEm($180,$136,$181);
  $$expand_i1_val14 = 0;
  HEAP8[$137>>0] = $$expand_i1_val14;
  $108 = $0;
  $109 = $180;
  $182 = $108;
  $183 = $109;
  ;HEAP32[$111>>2]=0|0;
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$111>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_1EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($110,$183,$$byval_copy1);
  $106 = $110;
  $107 = $182;
  $184 = $106;
  $185 = $107;
  $103 = $184;
  $104 = $185;
  $186 = $103;
  $102 = $186;
  $187 = $102;
  $188 = HEAP32[$187>>2]|0;
  HEAP32[$105>>2] = $188;
  $189 = $104;
  $100 = $189;
  $190 = $100;
  $191 = HEAP32[$190>>2]|0;
  $192 = $103;
  HEAP32[$192>>2] = $191;
  $101 = $105;
  $193 = $101;
  $194 = HEAP32[$193>>2]|0;
  $195 = $104;
  HEAP32[$195>>2] = $194;
  $196 = ((($184)) + 4|0);
  $197 = $107;
  $198 = ((($197)) + 4|0);
  $97 = $196;
  $98 = $198;
  $199 = $97;
  $96 = $199;
  $200 = $96;
  $201 = HEAP32[$200>>2]|0;
  HEAP32[$99>>2] = $201;
  $202 = $98;
  $94 = $202;
  $203 = $94;
  $204 = HEAP32[$203>>2]|0;
  $205 = $97;
  HEAP32[$205>>2] = $204;
  $95 = $99;
  $206 = $95;
  $207 = HEAP32[$206>>2]|0;
  $208 = $98;
  HEAP32[$208>>2] = $207;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($110);
  __ZNSt3__28functionIFvPhmEED2Ev($136);
  break;
 }
 case 2:  {
  $209 = (__Znwm(8)|0);
  $$expand_i1_val16 = 1;
  HEAP8[$139>>0] = $$expand_i1_val16;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($138,$1);
  $210 = $132;
  __ZN7lazperf20point_decompressor_2C2ENSt3__28functionIFvPhmEEEm($209,$138,$210);
  $$expand_i1_val18 = 0;
  HEAP8[$139>>0] = $$expand_i1_val18;
  $90 = $0;
  $91 = $209;
  $211 = $90;
  $212 = $91;
  ;HEAP32[$93>>2]=0|0;
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$93>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_2EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($92,$212,$$byval_copy2);
  $88 = $92;
  $89 = $211;
  $213 = $88;
  $214 = $89;
  $85 = $213;
  $86 = $214;
  $215 = $85;
  $84 = $215;
  $216 = $84;
  $217 = HEAP32[$216>>2]|0;
  HEAP32[$87>>2] = $217;
  $218 = $86;
  $82 = $218;
  $219 = $82;
  $220 = HEAP32[$219>>2]|0;
  $221 = $85;
  HEAP32[$221>>2] = $220;
  $83 = $87;
  $222 = $83;
  $223 = HEAP32[$222>>2]|0;
  $224 = $86;
  HEAP32[$224>>2] = $223;
  $225 = ((($213)) + 4|0);
  $226 = $89;
  $227 = ((($226)) + 4|0);
  $79 = $225;
  $80 = $227;
  $228 = $79;
  $78 = $228;
  $229 = $78;
  $230 = HEAP32[$229>>2]|0;
  HEAP32[$81>>2] = $230;
  $231 = $80;
  $76 = $231;
  $232 = $76;
  $233 = HEAP32[$232>>2]|0;
  $234 = $79;
  HEAP32[$234>>2] = $233;
  $77 = $81;
  $235 = $77;
  $236 = HEAP32[$235>>2]|0;
  $237 = $80;
  HEAP32[$237>>2] = $236;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($92);
  __ZNSt3__28functionIFvPhmEED2Ev($138);
  break;
 }
 case 3:  {
  $238 = (__Znwm(8)|0);
  $$expand_i1_val20 = 1;
  HEAP8[$141>>0] = $$expand_i1_val20;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($140,$1);
  $239 = $132;
  __ZN7lazperf20point_decompressor_3C2ENSt3__28functionIFvPhmEEEm($238,$140,$239);
  $$expand_i1_val22 = 0;
  HEAP8[$141>>0] = $$expand_i1_val22;
  $72 = $0;
  $73 = $238;
  $240 = $72;
  $241 = $73;
  ;HEAP32[$75>>2]=0|0;
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$75>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_3EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($74,$241,$$byval_copy3);
  $70 = $74;
  $71 = $240;
  $242 = $70;
  $243 = $71;
  $67 = $242;
  $68 = $243;
  $244 = $67;
  $66 = $244;
  $245 = $66;
  $246 = HEAP32[$245>>2]|0;
  HEAP32[$69>>2] = $246;
  $247 = $68;
  $64 = $247;
  $248 = $64;
  $249 = HEAP32[$248>>2]|0;
  $250 = $67;
  HEAP32[$250>>2] = $249;
  $65 = $69;
  $251 = $65;
  $252 = HEAP32[$251>>2]|0;
  $253 = $68;
  HEAP32[$253>>2] = $252;
  $254 = ((($242)) + 4|0);
  $255 = $71;
  $256 = ((($255)) + 4|0);
  $61 = $254;
  $62 = $256;
  $257 = $61;
  $60 = $257;
  $258 = $60;
  $259 = HEAP32[$258>>2]|0;
  HEAP32[$63>>2] = $259;
  $260 = $62;
  $58 = $260;
  $261 = $58;
  $262 = HEAP32[$261>>2]|0;
  $263 = $61;
  HEAP32[$263>>2] = $262;
  $59 = $63;
  $264 = $59;
  $265 = HEAP32[$264>>2]|0;
  $266 = $62;
  HEAP32[$266>>2] = $265;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($74);
  __ZNSt3__28functionIFvPhmEED2Ev($140);
  break;
 }
 case 6:  {
  $267 = (__Znwm(8)|0);
  $$expand_i1_val24 = 1;
  HEAP8[$143>>0] = $$expand_i1_val24;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($142,$1);
  $268 = $132;
  __ZN7lazperf20point_decompressor_6C2ENSt3__28functionIFvPhmEEEm($267,$142,$268);
  $$expand_i1_val26 = 0;
  HEAP8[$143>>0] = $$expand_i1_val26;
  $54 = $0;
  $55 = $267;
  $269 = $54;
  $270 = $55;
  ;HEAP32[$57>>2]=0|0;
  ;HEAP32[$$byval_copy4>>2]=HEAP32[$57>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_6EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($56,$270,$$byval_copy4);
  $52 = $56;
  $53 = $269;
  $271 = $52;
  $272 = $53;
  $49 = $271;
  $50 = $272;
  $273 = $49;
  $48 = $273;
  $274 = $48;
  $275 = HEAP32[$274>>2]|0;
  HEAP32[$51>>2] = $275;
  $276 = $50;
  $46 = $276;
  $277 = $46;
  $278 = HEAP32[$277>>2]|0;
  $279 = $49;
  HEAP32[$279>>2] = $278;
  $47 = $51;
  $280 = $47;
  $281 = HEAP32[$280>>2]|0;
  $282 = $50;
  HEAP32[$282>>2] = $281;
  $283 = ((($271)) + 4|0);
  $284 = $53;
  $285 = ((($284)) + 4|0);
  $43 = $283;
  $44 = $285;
  $286 = $43;
  $42 = $286;
  $287 = $42;
  $288 = HEAP32[$287>>2]|0;
  HEAP32[$45>>2] = $288;
  $289 = $44;
  $40 = $289;
  $290 = $40;
  $291 = HEAP32[$290>>2]|0;
  $292 = $43;
  HEAP32[$292>>2] = $291;
  $41 = $45;
  $293 = $41;
  $294 = HEAP32[$293>>2]|0;
  $295 = $44;
  HEAP32[$295>>2] = $294;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($56);
  __ZNSt3__28functionIFvPhmEED2Ev($142);
  break;
 }
 case 7:  {
  $296 = (__Znwm(8)|0);
  $$expand_i1_val28 = 1;
  HEAP8[$145>>0] = $$expand_i1_val28;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($144,$1);
  $297 = $132;
  __ZN7lazperf20point_decompressor_7C2ENSt3__28functionIFvPhmEEEm($296,$144,$297);
  $$expand_i1_val30 = 0;
  HEAP8[$145>>0] = $$expand_i1_val30;
  $36 = $0;
  $37 = $296;
  $298 = $36;
  $299 = $37;
  ;HEAP32[$39>>2]=0|0;
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$39>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_7EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($38,$299,$$byval_copy5);
  $34 = $38;
  $35 = $298;
  $300 = $34;
  $301 = $35;
  $31 = $300;
  $32 = $301;
  $302 = $31;
  $30 = $302;
  $303 = $30;
  $304 = HEAP32[$303>>2]|0;
  HEAP32[$33>>2] = $304;
  $305 = $32;
  $28 = $305;
  $306 = $28;
  $307 = HEAP32[$306>>2]|0;
  $308 = $31;
  HEAP32[$308>>2] = $307;
  $29 = $33;
  $309 = $29;
  $310 = HEAP32[$309>>2]|0;
  $311 = $32;
  HEAP32[$311>>2] = $310;
  $312 = ((($300)) + 4|0);
  $313 = $35;
  $314 = ((($313)) + 4|0);
  $25 = $312;
  $26 = $314;
  $315 = $25;
  $24 = $315;
  $316 = $24;
  $317 = HEAP32[$316>>2]|0;
  HEAP32[$27>>2] = $317;
  $318 = $26;
  $22 = $318;
  $319 = $22;
  $320 = HEAP32[$319>>2]|0;
  $321 = $25;
  HEAP32[$321>>2] = $320;
  $23 = $27;
  $322 = $23;
  $323 = HEAP32[$322>>2]|0;
  $324 = $26;
  HEAP32[$324>>2] = $323;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($38);
  __ZNSt3__28functionIFvPhmEED2Ev($144);
  break;
 }
 case 8:  {
  $325 = (__Znwm(8)|0);
  $$expand_i1_val32 = 1;
  HEAP8[$147>>0] = $$expand_i1_val32;
  __ZNSt3__28functionIFvPhmEEC2ERKS3_($146,$1);
  $326 = $132;
  __ZN7lazperf20point_decompressor_8C2ENSt3__28functionIFvPhmEEEm($325,$146,$326);
  $$expand_i1_val34 = 0;
  HEAP8[$147>>0] = $$expand_i1_val34;
  $18 = $0;
  $19 = $325;
  $327 = $18;
  $328 = $19;
  ;HEAP32[$21>>2]=0|0;
  ;HEAP32[$$byval_copy6>>2]=HEAP32[$21>>2]|0;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_8EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($20,$328,$$byval_copy6);
  $16 = $20;
  $17 = $327;
  $329 = $16;
  $330 = $17;
  $13 = $329;
  $14 = $330;
  $331 = $13;
  $12 = $331;
  $332 = $12;
  $333 = HEAP32[$332>>2]|0;
  HEAP32[$15>>2] = $333;
  $334 = $14;
  $10 = $334;
  $335 = $10;
  $336 = HEAP32[$335>>2]|0;
  $337 = $13;
  HEAP32[$337>>2] = $336;
  $11 = $15;
  $338 = $11;
  $339 = HEAP32[$338>>2]|0;
  $340 = $14;
  HEAP32[$340>>2] = $339;
  $341 = ((($329)) + 4|0);
  $342 = $17;
  $343 = ((($342)) + 4|0);
  $7 = $341;
  $8 = $343;
  $344 = $7;
  $6 = $344;
  $345 = $6;
  $346 = HEAP32[$345>>2]|0;
  HEAP32[$9>>2] = $346;
  $347 = $8;
  $4 = $347;
  $348 = $4;
  $349 = HEAP32[$348>>2]|0;
  $350 = $7;
  HEAP32[$350>>2] = $349;
  $5 = $9;
  $351 = $5;
  $352 = HEAP32[$351>>2]|0;
  $353 = $8;
  HEAP32[$353>>2] = $352;
  __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($20);
  __ZNSt3__28functionIFvPhmEED2Ev($146);
  break;
 }
 default: {
 }
 }
 $$expand_i1_val36 = 1;
 HEAP8[$133>>0] = $$expand_i1_val36;
 $$pre_trunc = HEAP8[$133>>0]|0;
 $354 = $$pre_trunc&1;
 if ($354) {
  STACKTOP = sp;return;
 }
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEED2Ev($0);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_0EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10776);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_1EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10748);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_2EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10720);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_3EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10692);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_6EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10664);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_7EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10636);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEEC2INS1_20point_decompressor_8EEEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS2_EE5valueENS3_5__natEE4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $vararg_buffer = sp + 16|0;
 $38 = sp + 124|0;
 $39 = sp + 120|0;
 $40 = sp + 8|0;
 $41 = sp;
 $62 = sp + 36|0;
 $65 = sp + 24|0;
 $66 = sp + 269|0;
 $67 = sp + 268|0;
 $63 = $0;
 $64 = $1;
 $68 = $63;
 $69 = $64;
 HEAP32[$68>>2] = $69;
 $70 = $64;
 $61 = $65;
 HEAP32[$62>>2] = $70;
 $71 = $61;
 $59 = $71;
 $60 = $62;
 $72 = $59;
 $73 = $60;
 $58 = $73;
 $74 = $58;
 $56 = $72;
 $57 = $74;
 $75 = $56;
 $76 = $57;
 $55 = $76;
 $77 = $55;
 $78 = HEAP32[$77>>2]|0;
 HEAP32[$75>>2] = $78;
 $79 = (__Znwm(16)|0);
 $80 = $64;
 $54 = $67;
 ;HEAP8[$40>>0]=HEAP8[$67>>0]|0;
 ;HEAP8[$41>>0]=HEAP8[$66>>0]|0;
 $37 = $79;
 HEAP32[$38>>2] = $80;
 $81 = $37;
 $35 = $81;
 $36 = 0;
 $82 = $35;
 $83 = $36;
 $33 = $82;
 $34 = $83;
 $84 = $33;
 HEAP32[$84>>2] = (14408);
 $85 = ((($84)) + 4|0);
 $86 = $34;
 HEAP32[$85>>2] = $86;
 HEAP32[$82>>2] = (14428);
 $87 = ((($82)) + 8|0);
 $88 = $36;
 HEAP32[$87>>2] = $88;
 HEAP32[$81>>2] = (10608);
 $89 = ((($81)) + 12|0);
 $9 = $41;
 $90 = $9;
 $18 = $39;
 $19 = $38;
 $20 = $90;
 $91 = $18;
 $92 = $19;
 $17 = $92;
 $93 = $17;
 $11 = $91;
 $12 = $93;
 $94 = $11;
 $95 = $12;
 $10 = $95;
 $96 = $10;
 $97 = HEAP32[$96>>2]|0;
 HEAP32[$94>>2] = $97;
 $98 = $20;
 $13 = $98;
 $99 = $13;
 $15 = $91;
 $16 = $99;
 $100 = $16;
 $14 = $100;
 $21 = $40;
 $101 = $21;
 $30 = $89;
 $31 = $39;
 $32 = $101;
 $102 = $30;
 $103 = $31;
 $29 = $103;
 $104 = $29;
 $23 = $102;
 $24 = $104;
 $105 = $23;
 $106 = $24;
 $22 = $106;
 $107 = $22;
 ;HEAP32[$105>>2]=HEAP32[$107>>2]|0;
 $108 = $32;
 $25 = $108;
 $109 = $25;
 $27 = $102;
 $28 = $109;
 $110 = $28;
 $26 = $110;
 $111 = ((($68)) + 4|0);
 HEAP32[$111>>2] = $79;
 $7 = $65;
 $112 = $7;
 $6 = $112;
 $113 = $6;
 $5 = $113;
 $114 = $5;
 $115 = HEAP32[$114>>2]|0;
 $8 = $115;
 $4 = $112;
 $116 = $4;
 $3 = $116;
 $117 = $3;
 HEAP32[$117>>2] = 0;
 $118 = $64;
 $119 = $64;
 HEAP32[$vararg_buffer>>2] = $118;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $119;
 __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($68,$vararg_buffer);
 $53 = $65;
 $120 = $53;
 $50 = $120;
 $51 = 0;
 $121 = $50;
 $49 = $121;
 $122 = $49;
 $48 = $122;
 $123 = $48;
 $124 = HEAP32[$123>>2]|0;
 $52 = $124;
 $125 = $51;
 $45 = $121;
 $126 = $45;
 $44 = $126;
 $127 = $44;
 HEAP32[$127>>2] = $125;
 $128 = $52;
 $129 = ($128|0)!=(0|0);
 if (!($129)) {
  STACKTOP = sp;return;
 }
 $43 = $121;
 $130 = $43;
 $42 = $130;
 $131 = $42;
 $132 = $52;
 $46 = $131;
 $47 = $132;
 $133 = $47;
 $134 = ($133|0)==(0|0);
 if ($134) {
  STACKTOP = sp;return;
 }
 $135 = HEAP32[$133>>2]|0;
 $136 = ((($135)) + 8|0);
 $137 = HEAP32[$136>>2]|0;
 FUNCTION_TABLE_vi[$137 & 1023]($133);
 STACKTOP = sp;return;
}
function __ZNSt3__210shared_ptrIN7lazperf16las_decompressorEE18__enable_weak_thisEz($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6328;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6352;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6376;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6400;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6424;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6448;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__214__shared_countD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev($2);
 __ZdlPv($2);
 STACKTOP = sp;return;
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = $0;
 $16 = $15;
 $17 = ((($16)) + 12|0);
 $14 = $17;
 $18 = $14;
 $13 = $18;
 $19 = $13;
 $6 = $19;
 $20 = $6;
 $5 = $20;
 $21 = $5;
 $22 = ((($16)) + 12|0);
 $2 = $22;
 $23 = $2;
 $1 = $23;
 $24 = $1;
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $26 = $3;
 $27 = HEAP32[$26>>2]|0;
 $7 = $21;
 $8 = $27;
 $28 = $8;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$28>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vi[$32 & 1023]($28);
 }
 $33 = ((($16)) + 12|0);
 $10 = $33;
 $34 = $10;
 $9 = $34;
 $35 = $9;
 $12 = $35;
 $36 = $12;
 $11 = $36;
 STACKTOP = sp;return;
}
function __ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $1;
 $11 = $9;
 $12 = $10;
 $7 = $12;
 $8 = 6472;
 $13 = $7;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $8;
 $17 = ((($16)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($15|0)==($18|0);
 if (!($19)) {
  $26 = 0;
  STACKTOP = sp;return ($26|0);
 }
 $20 = ((($11)) + 12|0);
 $3 = $20;
 $21 = $3;
 $2 = $21;
 $22 = $2;
 $5 = $22;
 $23 = $5;
 $4 = $23;
 $24 = $4;
 $6 = $24;
 $25 = $6;
 $26 = $25;
 STACKTOP = sp;return ($26|0);
}
function __ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $19 = sp + 72|0;
 $18 = $0;
 $20 = $18;
 $21 = ((($20)) + 12|0);
 $17 = $21;
 $22 = $17;
 $16 = $22;
 $23 = $16;
 $5 = $19;
 $6 = $23;
 $24 = ((($20)) + 12|0);
 $4 = $24;
 $25 = $4;
 $3 = $25;
 $2 = $20;
 $26 = $2;
 $1 = $26;
 $27 = $1;
 $13 = $19;
 $14 = $27;
 $15 = 1;
 $28 = $14;
 $29 = $15;
 $30 = $29<<4;
 $10 = $28;
 $11 = $30;
 $12 = 4;
 $31 = $10;
 $32 = $11;
 $33 = $12;
 $7 = $31;
 $8 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($34,$35);
 STACKTOP = sp;return;
}
function __ZN7lazperf11compressors7integerC2Ejj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $13 = sp + 64|0;
 $25 = sp + 16|0;
 $27 = $0;
 $28 = $1;
 $29 = $2;
 $30 = $27;
 $31 = ((($30)) + 4|0);
 $32 = $28;
 HEAP32[$31>>2] = $32;
 $33 = ((($30)) + 8|0);
 $34 = $29;
 HEAP32[$33>>2] = $34;
 $35 = ((($30)) + 12|0);
 HEAP32[$35>>2] = 8;
 $36 = ((($30)) + 32|0);
 $26 = $36;
 $37 = $26;
 $24 = $37;
 $38 = $24;
 $23 = $38;
 HEAP32[$38>>2] = 0;
 $39 = ((($38)) + 4|0);
 HEAP32[$39>>2] = 0;
 $40 = ((($38)) + 8|0);
 HEAP32[$25>>2] = 0;
 $21 = $40;
 $22 = $25;
 $41 = $21;
 $42 = $22;
 $20 = $42;
 $43 = $20;
 $16 = $41;
 $17 = $43;
 $44 = $16;
 $45 = $17;
 $15 = $45;
 HEAP32[$44>>2] = 0;
 $19 = $41;
 $46 = $19;
 $18 = $46;
 $47 = ((($30)) + 44|0);
 __ZN7lazperf6models14arithmetic_bitC2Ev($47);
 $48 = ((($30)) + 64|0);
 $14 = $48;
 $49 = $14;
 $12 = $49;
 $50 = $12;
 $11 = $50;
 HEAP32[$50>>2] = 0;
 $51 = ((($50)) + 4|0);
 HEAP32[$51>>2] = 0;
 $52 = ((($50)) + 8|0);
 HEAP32[$13>>2] = 0;
 $9 = $52;
 $10 = $13;
 $53 = $9;
 $54 = $10;
 $8 = $54;
 $55 = $8;
 $4 = $53;
 $5 = $55;
 $56 = $4;
 $57 = $5;
 $3 = $57;
 HEAP32[$56>>2] = 0;
 $7 = $53;
 $58 = $7;
 $6 = $58;
 $59 = $28;
 $60 = ($59|0)!=(0);
 $61 = $28;
 $62 = ($61>>>0)<(32);
 $or$cond = $60 & $62;
 if ($or$cond) {
  $63 = $28;
  $64 = ((($30)) + 16|0);
  HEAP32[$64>>2] = $63;
  $65 = $28;
  $66 = 1 << $65;
  $67 = ((($30)) + 20|0);
  HEAP32[$67>>2] = $66;
  $68 = ((($30)) + 20|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = (($69>>>0) / 2)&-1;
  $71 = (0 - ($70))|0;
  $72 = ((($30)) + 24|0);
  HEAP32[$72>>2] = $71;
  $73 = ((($30)) + 24|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ((($30)) + 20|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (($74) + ($76))|0;
  $78 = (($77) - 1)|0;
  $79 = ((($30)) + 28|0);
  HEAP32[$79>>2] = $78;
  HEAP32[$30>>2] = 0;
  STACKTOP = sp;return;
 } else {
  $80 = ((($30)) + 16|0);
  HEAP32[$80>>2] = 32;
  $81 = ((($30)) + 20|0);
  HEAP32[$81>>2] = 0;
  $82 = ((($30)) + 24|0);
  HEAP32[$82>>2] = -2147483648;
  $83 = ((($30)) + 28|0);
  HEAP32[$83>>2] = 2147483647;
  HEAP32[$30>>2] = 0;
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf11compressors7integer4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $14 = sp + 8|0;
 $19 = sp + 339|0;
 $30 = sp + 338|0;
 $44 = sp;
 $49 = sp + 337|0;
 $60 = sp + 336|0;
 $64 = sp + 64|0;
 $67 = sp + 12|0;
 $62 = $0;
 $68 = $62;
 $69 = ((($68)) + 32|0);
 $61 = $69;
 $70 = $61;
 $71 = HEAP32[$70>>2]|0;
 $72 = ((($70)) + 4|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = ($71|0)==($73|0);
 if (!($74)) {
  STACKTOP = sp;return;
 }
 $63 = 0;
 while(1) {
  $75 = $63;
  $76 = ((($68)) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ($75>>>0)<($77>>>0);
  if (!($78)) {
   break;
  }
  $79 = ((($68)) + 32|0);
  $80 = ((($68)) + 16|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (($81) + 1)|0;
  __ZN7lazperf6models10arithmeticC2EjbPj($64,$82,0,0);
  $58 = $79;
  $59 = $64;
  $83 = $58;
  $84 = ((($83)) + 4|0);
  $85 = HEAP32[$84>>2]|0;
  $57 = $83;
  $86 = $57;
  $87 = ((($86)) + 8|0);
  $56 = $87;
  $88 = $56;
  $55 = $88;
  $89 = $55;
  $90 = HEAP32[$89>>2]|0;
  $91 = ($85>>>0)<($90>>>0);
  if ($91) {
   $52 = $60;
   $53 = $83;
   $54 = 1;
   $35 = $83;
   $92 = $35;
   $93 = ((($92)) + 8|0);
   $34 = $93;
   $94 = $34;
   $33 = $94;
   $95 = $33;
   $96 = ((($83)) + 4|0);
   $97 = HEAP32[$96>>2]|0;
   $31 = $97;
   $98 = $31;
   $99 = $59;
   $32 = $99;
   $100 = $32;
   $46 = $95;
   $47 = $98;
   $48 = $100;
   $101 = $46;
   $102 = $47;
   $103 = $48;
   $45 = $103;
   $104 = $45;
   ;HEAP8[$44>>0]=HEAP8[$49>>0]|0;
   $41 = $101;
   $42 = $102;
   $43 = $104;
   $105 = $41;
   $106 = $42;
   $107 = $43;
   $40 = $107;
   $108 = $40;
   $37 = $105;
   $38 = $106;
   $39 = $108;
   $109 = $38;
   $110 = $39;
   $36 = $110;
   $111 = $36;
   __ZN7lazperf6models10arithmeticC2EOS1_($109,$111);
   $50 = $60;
   $112 = ((($83)) + 4|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ((($113)) + 44|0);
   HEAP32[$112>>2] = $114;
  } else {
   $115 = $59;
   $51 = $115;
   $116 = $51;
   __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($83,$116);
  }
  __ZN7lazperf6models10arithmeticD2Ev($64);
  $117 = $63;
  $118 = (($117) + 1)|0;
  $63 = $118;
 }
 $65 = 1;
 while(1) {
  $119 = $65;
  $120 = ((($68)) + 16|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = ($119>>>0)<=($121>>>0);
  if (!($122)) {
   break;
  }
  $123 = $65;
  $124 = ((($68)) + 12|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123>>>0)<=($125>>>0);
  if ($126) {
   $127 = $65;
   $128 = 1 << $127;
   $132 = $128;
  } else {
   $129 = ((($68)) + 12|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = 1 << $130;
   $132 = $131;
  }
  $66 = $132;
  $133 = ((($68)) + 64|0);
  $134 = $66;
  __ZN7lazperf6models10arithmeticC2EjbPj($67,$134,0,0);
  $28 = $133;
  $29 = $67;
  $135 = $28;
  $136 = ((($135)) + 4|0);
  $137 = HEAP32[$136>>2]|0;
  $27 = $135;
  $138 = $27;
  $139 = ((($138)) + 8|0);
  $26 = $139;
  $140 = $26;
  $25 = $140;
  $141 = $25;
  $142 = HEAP32[$141>>2]|0;
  $143 = ($137>>>0)<($142>>>0);
  if ($143) {
   $22 = $30;
   $23 = $135;
   $24 = 1;
   $5 = $135;
   $144 = $5;
   $145 = ((($144)) + 8|0);
   $4 = $145;
   $146 = $4;
   $3 = $146;
   $147 = $3;
   $148 = ((($135)) + 4|0);
   $149 = HEAP32[$148>>2]|0;
   $1 = $149;
   $150 = $1;
   $151 = $29;
   $2 = $151;
   $152 = $2;
   $16 = $147;
   $17 = $150;
   $18 = $152;
   $153 = $16;
   $154 = $17;
   $155 = $18;
   $15 = $155;
   $156 = $15;
   ;HEAP8[$14>>0]=HEAP8[$19>>0]|0;
   $11 = $153;
   $12 = $154;
   $13 = $156;
   $157 = $11;
   $158 = $12;
   $159 = $13;
   $10 = $159;
   $160 = $10;
   $7 = $157;
   $8 = $158;
   $9 = $160;
   $161 = $8;
   $162 = $9;
   $6 = $162;
   $163 = $6;
   __ZN7lazperf6models10arithmeticC2EOS1_($161,$163);
   $20 = $30;
   $164 = ((($135)) + 4|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = ((($165)) + 44|0);
   HEAP32[$164>>2] = $166;
  } else {
   $167 = $29;
   $21 = $167;
   $168 = $21;
   __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($135,$168);
  }
  __ZN7lazperf6models10arithmeticD2Ev($67);
  $169 = $65;
  $170 = (($169) + 1)|0;
  $65 = $170;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail10Byte10BaseC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 HEAP32[$5>>2] = $6;
 $7 = ((($5)) + 4|0);
 HEAP8[$7>>0] = 0;
 $8 = ((($5)) + 8|0);
 $9 = $3;
 __ZNSt3__26vectorIhNS_9allocatorIhEEEC2Em($8,$9);
 $10 = ((($5)) + 20|0);
 $11 = $3;
 __ZNSt3__26vectorIhNS_9allocatorIhEEEC2Em($10,$11);
 $12 = ((($5)) + 32|0);
 $13 = $3;
 __ZN7lazperf6models10arithmeticC2EjbPj($4,256,0,0);
 __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($12,$13,$4);
 __ZN7lazperf6models10arithmeticD2Ev($4);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 8|0;
 $13 = $0;
 $14 = $1;
 $15 = $13;
 $11 = $15;
 $16 = $11;
 $10 = $16;
 HEAP32[$16>>2] = 0;
 $17 = ((($16)) + 4|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($16)) + 8|0);
 HEAP32[$12>>2] = 0;
 $8 = $18;
 $9 = $12;
 $19 = $8;
 $20 = $9;
 $7 = $20;
 $21 = $7;
 $3 = $19;
 $4 = $21;
 $22 = $3;
 $23 = $4;
 $2 = $23;
 HEAP32[$22>>2] = 0;
 $6 = $19;
 $24 = $6;
 $5 = $24;
 $25 = $14;
 $26 = ($25>>>0)>(0);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = $14;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE11__vallocateEm($15,$27);
 $28 = $14;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm($15,$28);
 STACKTOP = sp;return;
}
function __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $20 = sp + 20|0;
 $22 = sp + 12|0;
 $23 = $0;
 $24 = $1;
 $25 = $2;
 $26 = $23;
 $21 = $26;
 $27 = $21;
 $19 = $27;
 $28 = $19;
 HEAP32[$28>>2] = 0;
 $29 = ((($28)) + 4|0);
 HEAP32[$29>>2] = 0;
 $30 = ((($28)) + 8|0);
 HEAP32[$30>>2] = 0;
 $31 = ((($28)) + 12|0);
 HEAP32[$20>>2] = 0;
 $17 = $31;
 $18 = $20;
 $32 = $17;
 $33 = $18;
 $16 = $33;
 $34 = $16;
 $12 = $32;
 $13 = $34;
 $35 = $12;
 $36 = $13;
 $11 = $36;
 HEAP32[$35>>2] = 0;
 $15 = $32;
 $37 = $15;
 $14 = $37;
 $38 = ((($27)) + 16|0);
 HEAP32[$38>>2] = 0;
 $39 = ((($27)) + 20|0);
 HEAP32[$22>>2] = 0;
 $9 = $39;
 $10 = $22;
 $40 = $9;
 $41 = $10;
 $8 = $41;
 $42 = $8;
 $4 = $40;
 $5 = $42;
 $43 = $4;
 $44 = $5;
 $3 = $44;
 $45 = $3;
 $46 = HEAP32[$45>>2]|0;
 HEAP32[$43>>2] = $46;
 $7 = $40;
 $47 = $7;
 $6 = $47;
 $48 = $24;
 $49 = ($48>>>0)>(0);
 if (!($49)) {
  STACKTOP = sp;return;
 }
 $50 = $24;
 $51 = $25;
 __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE8__appendEmRKS3_($26,$50,$51);
 STACKTOP = sp;return;
}
function __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE8__appendEmRKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $20 = sp;
 $25 = sp + 148|0;
 $38 = sp + 8|0;
 $33 = $0;
 $34 = $1;
 $35 = $2;
 $39 = $33;
 $32 = $39;
 $40 = $32;
 $41 = ((($40)) + 20|0);
 $31 = $41;
 $42 = $31;
 $30 = $42;
 $43 = $30;
 $36 = $43;
 $11 = $39;
 $44 = $11;
 $10 = $44;
 $45 = $10;
 $9 = $45;
 $46 = $9;
 $47 = ((($46)) + 8|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = ((($46)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = $48;
 $52 = $50;
 $53 = (($51) - ($52))|0;
 $54 = (($53|0) / 4)&-1;
 $55 = ($54|0)==(0);
 if ($55) {
  $76 = 0;
 } else {
  $8 = $45;
  $56 = $8;
  $57 = ((($56)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($56)) + 4|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = $58;
  $62 = $60;
  $63 = (($61) - ($62))|0;
  $64 = (($63|0) / 4)&-1;
  $65 = ($64*93)|0;
  $66 = (($65) - 1)|0;
  $76 = $66;
 }
 $67 = ((($44)) + 16|0);
 $68 = HEAP32[$67>>2]|0;
 $7 = $44;
 $69 = $7;
 $70 = ((($69)) + 20|0);
 $6 = $70;
 $71 = $6;
 $5 = $71;
 $72 = $5;
 $73 = HEAP32[$72>>2]|0;
 $74 = (($68) + ($73))|0;
 $75 = (($76) - ($74))|0;
 $37 = $75;
 $77 = $34;
 $78 = $37;
 $79 = ($77>>>0)>($78>>>0);
 if ($79) {
  $80 = $34;
  $81 = $37;
  $82 = (($80) - ($81))|0;
  __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE19__add_back_capacityEm($39,$82);
 }
 __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE3endEv($38,$39);
 while(1) {
  $83 = $34;
  $84 = ($83|0)!=(0);
  if (!($84)) {
   break;
  }
  $85 = $36;
  $3 = $38;
  $86 = $3;
  $87 = ((($86)) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $4 = $88;
  $89 = $4;
  $90 = $35;
  $22 = $85;
  $23 = $89;
  $24 = $90;
  $91 = $22;
  $92 = $23;
  $93 = $24;
  $21 = $93;
  $94 = $21;
  ;HEAP8[$20>>0]=HEAP8[$25>>0]|0;
  $17 = $91;
  $18 = $92;
  $19 = $94;
  $95 = $17;
  $96 = $18;
  $97 = $19;
  $16 = $97;
  $98 = $16;
  $13 = $95;
  $14 = $96;
  $15 = $98;
  $99 = $14;
  $100 = $15;
  $12 = $100;
  $101 = $12;
  __ZN7lazperf6models10arithmeticC2ERKS1_($99,$101);
  $102 = $34;
  $103 = (($102) + -1)|0;
  $34 = $103;
  $26 = $38;
  $104 = $26;
  $105 = ((($104)) + 4|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = ((($106)) + 44|0);
  HEAP32[$105>>2] = $107;
  $108 = HEAP32[$104>>2]|0;
  $109 = HEAP32[$108>>2]|0;
  $110 = $107;
  $111 = $109;
  $112 = (($110) - ($111))|0;
  $113 = (($112|0) / 44)&-1;
  $114 = ($113|0)==(93);
  if ($114) {
   $115 = HEAP32[$104>>2]|0;
   $116 = ((($115)) + 4|0);
   HEAP32[$104>>2] = $116;
   $117 = HEAP32[$104>>2]|0;
   $118 = HEAP32[$117>>2]|0;
   $119 = ((($104)) + 4|0);
   HEAP32[$119>>2] = $118;
  }
  $29 = $39;
  $120 = $29;
  $121 = ((($120)) + 20|0);
  $28 = $121;
  $122 = $28;
  $27 = $122;
  $123 = $27;
  $124 = HEAP32[$123>>2]|0;
  $125 = (($124) + 1)|0;
  HEAP32[$123>>2] = $125;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__25dequeIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE19__add_back_capacityEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0;
 var $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0;
 var $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0;
 var $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0;
 var $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0;
 var $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0;
 var $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0;
 var $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0;
 var $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0;
 var $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0;
 var $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0;
 var $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0;
 var $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0;
 var $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0;
 var $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0;
 var $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0;
 var $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0;
 var $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0;
 var $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0;
 var $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0;
 var $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0;
 var $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0;
 var $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1760|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1760|0);
 $$byval_copy5 = sp + 1736|0;
 $$byval_copy4 = sp + 1732|0;
 $$byval_copy3 = sp + 1728|0;
 $$byval_copy2 = sp + 1724|0;
 $$byval_copy1 = sp + 1720|0;
 $$byval_copy = sp + 1716|0;
 $23 = sp + 80|0;
 $26 = sp + 1750|0;
 $44 = sp + 72|0;
 $47 = sp + 1749|0;
 $53 = sp + 1524|0;
 $59 = sp + 1500|0;
 $65 = sp + 1476|0;
 $77 = sp + 1428|0;
 $103 = sp + 64|0;
 $108 = sp + 1748|0;
 $116 = sp + 1280|0;
 $117 = sp + 1276|0;
 $118 = sp + 1256|0;
 $119 = sp + 1252|0;
 $120 = sp + 1248|0;
 $123 = sp + 56|0;
 $126 = sp + 1747|0;
 $173 = sp + 48|0;
 $176 = sp + 1746|0;
 $182 = sp + 1016|0;
 $188 = sp + 992|0;
 $194 = sp + 968|0;
 $206 = sp + 920|0;
 $232 = sp + 40|0;
 $237 = sp + 1745|0;
 $245 = sp + 772|0;
 $246 = sp + 768|0;
 $247 = sp + 748|0;
 $248 = sp + 744|0;
 $249 = sp + 740|0;
 $252 = sp + 32|0;
 $255 = sp + 1744|0;
 $270 = sp + 24|0;
 $273 = sp + 1743|0;
 $279 = sp + 636|0;
 $285 = sp + 612|0;
 $291 = sp + 588|0;
 $303 = sp + 540|0;
 $329 = sp + 16|0;
 $334 = sp + 1742|0;
 $342 = sp + 392|0;
 $343 = sp + 388|0;
 $344 = sp + 368|0;
 $345 = sp + 364|0;
 $346 = sp + 360|0;
 $349 = sp + 8|0;
 $352 = sp + 1741|0;
 $361 = sp;
 $364 = sp + 1740|0;
 $370 = sp + 280|0;
 $376 = sp + 256|0;
 $382 = sp + 232|0;
 $394 = sp + 184|0;
 $404 = sp + 144|0;
 $405 = sp + 140|0;
 $406 = sp + 136|0;
 $407 = sp + 132|0;
 $408 = sp + 128|0;
 $409 = sp + 124|0;
 $411 = sp + 100|0;
 $412 = sp + 96|0;
 $413 = sp + 92|0;
 $414 = sp + 88|0;
 $401 = $0;
 $402 = $1;
 $416 = $401;
 $400 = $416;
 $417 = $400;
 $418 = ((($417)) + 20|0);
 $399 = $418;
 $419 = $399;
 $398 = $419;
 $420 = $398;
 $403 = $420;
 $421 = $402;
 $397 = $416;
 $422 = $397;
 $423 = ((($422)) + 8|0);
 $424 = HEAP32[$423>>2]|0;
 $425 = ((($422)) + 4|0);
 $426 = HEAP32[$425>>2]|0;
 $427 = ($424|0)==($426|0);
 $428 = $427&1;
 $429 = (($421) + ($428))|0;
 $396 = $429;
 $430 = $396;
 $431 = (($430>>>0) / 93)&-1;
 $432 = $396;
 $433 = (($432>>>0) % 93)&-1;
 $434 = ($433|0)!=(0);
 $435 = $434&1;
 $436 = (($431) + ($435))|0;
 HEAP32[$404>>2] = $436;
 $395 = $416;
 $437 = $395;
 $438 = ((($437)) + 16|0);
 $439 = HEAP32[$438>>2]|0;
 $440 = (($439>>>0) / 93)&-1;
 HEAP32[$405>>2] = $440;
 $362 = $405;
 $363 = $404;
 $441 = $362;
 $442 = $363;
 ;HEAP8[$361>>0]=HEAP8[$364>>0]|0;
 $359 = $441;
 $360 = $442;
 $443 = $360;
 $444 = $359;
 $356 = $361;
 $357 = $443;
 $358 = $444;
 $445 = $357;
 $446 = HEAP32[$445>>2]|0;
 $447 = $358;
 $448 = HEAP32[$447>>2]|0;
 $449 = ($446>>>0)<($448>>>0);
 $450 = $360;
 $451 = $359;
 $452 = $449 ? $450 : $451;
 $453 = HEAP32[$452>>2]|0;
 HEAP32[$405>>2] = $453;
 $454 = HEAP32[$405>>2]|0;
 $455 = HEAP32[$404>>2]|0;
 $456 = (($455) - ($454))|0;
 HEAP32[$404>>2] = $456;
 $457 = HEAP32[$404>>2]|0;
 $458 = ($457|0)==(0);
 if ($458) {
  $459 = HEAP32[$405>>2]|0;
  $460 = ($459*93)|0;
  $461 = ((($416)) + 16|0);
  $462 = HEAP32[$461>>2]|0;
  $463 = (($462) - ($460))|0;
  HEAP32[$461>>2] = $463;
  while(1) {
   $464 = HEAP32[$405>>2]|0;
   $465 = ($464>>>0)>(0);
   if (!($465)) {
    break;
   }
   $257 = $416;
   $466 = $257;
   $467 = ((($466)) + 4|0);
   $468 = HEAP32[$467>>2]|0;
   $469 = HEAP32[$468>>2]|0;
   HEAP32[$406>>2] = $469;
   $256 = $416;
   $470 = $256;
   $471 = ((($470)) + 4|0);
   $472 = HEAP32[$471>>2]|0;
   $473 = ((($472)) + 4|0);
   $253 = $470;
   $254 = $473;
   $474 = $253;
   $475 = $254;
   ;HEAP8[$252>>0]=HEAP8[$255>>0]|0;
   $250 = $474;
   $251 = $475;
   $476 = $250;
   $477 = $251;
   $478 = ((($476)) + 4|0);
   HEAP32[$478>>2] = $477;
   $241 = $416;
   $242 = $406;
   $479 = $241;
   $480 = ((($479)) + 8|0);
   $481 = HEAP32[$480>>2]|0;
   $240 = $479;
   $482 = $240;
   $483 = ((($482)) + 12|0);
   $239 = $483;
   $484 = $239;
   $238 = $484;
   $485 = $238;
   $486 = HEAP32[$485>>2]|0;
   $487 = ($481|0)==($486|0);
   do {
    if ($487) {
     $488 = ((($479)) + 4|0);
     $489 = HEAP32[$488>>2]|0;
     $490 = HEAP32[$479>>2]|0;
     $491 = ($489>>>0)>($490>>>0);
     if (!($491)) {
      $209 = $479;
      $538 = $209;
      $539 = ((($538)) + 12|0);
      $208 = $539;
      $540 = $208;
      $207 = $540;
      $541 = $207;
      $542 = HEAP32[$541>>2]|0;
      $543 = HEAP32[$479>>2]|0;
      $544 = $542;
      $545 = $543;
      $546 = (($544) - ($545))|0;
      $547 = (($546|0) / 4)&-1;
      $548 = $547<<1;
      HEAP32[$245>>2] = $548;
      HEAP32[$246>>2] = 1;
      $174 = $245;
      $175 = $246;
      $549 = $174;
      $550 = $175;
      ;HEAP8[$173>>0]=HEAP8[$176>>0]|0;
      $171 = $549;
      $172 = $550;
      $551 = $171;
      $552 = $172;
      $168 = $173;
      $169 = $551;
      $170 = $552;
      $553 = $169;
      $554 = HEAP32[$553>>2]|0;
      $555 = $170;
      $556 = HEAP32[$555>>2]|0;
      $557 = ($554>>>0)<($556>>>0);
      $558 = $172;
      $559 = $171;
      $560 = $557 ? $558 : $559;
      $561 = HEAP32[$560>>2]|0;
      $244 = $561;
      $562 = $244;
      $563 = $244;
      $564 = (($563>>>0) / 4)&-1;
      $163 = $479;
      $565 = $163;
      $566 = ((($565)) + 12|0);
      $162 = $566;
      $567 = $162;
      $161 = $567;
      $568 = $161;
      __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($247,$562,$564,$568);
      $569 = ((($479)) + 4|0);
      $570 = HEAP32[$569>>2]|0;
      $164 = $248;
      $165 = $570;
      $571 = $164;
      $572 = $165;
      HEAP32[$571>>2] = $572;
      $573 = ((($479)) + 8|0);
      $574 = HEAP32[$573>>2]|0;
      $166 = $249;
      $167 = $574;
      $575 = $166;
      $576 = $167;
      HEAP32[$575>>2] = $576;
      ;HEAP32[$$byval_copy>>2]=HEAP32[$248>>2]|0;
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$249>>2]|0;
      __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($247,$$byval_copy,$$byval_copy1);
      $180 = $479;
      $181 = $247;
      $577 = $180;
      $179 = $577;
      $578 = $179;
      $579 = HEAP32[$578>>2]|0;
      HEAP32[$182>>2] = $579;
      $580 = $181;
      $177 = $580;
      $581 = $177;
      $582 = HEAP32[$581>>2]|0;
      $583 = $180;
      HEAP32[$583>>2] = $582;
      $178 = $182;
      $584 = $178;
      $585 = HEAP32[$584>>2]|0;
      $586 = $181;
      HEAP32[$586>>2] = $585;
      $587 = ((($479)) + 4|0);
      $588 = ((($247)) + 4|0);
      $186 = $587;
      $187 = $588;
      $589 = $186;
      $185 = $589;
      $590 = $185;
      $591 = HEAP32[$590>>2]|0;
      HEAP32[$188>>2] = $591;
      $592 = $187;
      $183 = $592;
      $593 = $183;
      $594 = HEAP32[$593>>2]|0;
      $595 = $186;
      HEAP32[$595>>2] = $594;
      $184 = $188;
      $596 = $184;
      $597 = HEAP32[$596>>2]|0;
      $598 = $187;
      HEAP32[$598>>2] = $597;
      $599 = ((($479)) + 8|0);
      $600 = ((($247)) + 8|0);
      $192 = $599;
      $193 = $600;
      $601 = $192;
      $191 = $601;
      $602 = $191;
      $603 = HEAP32[$602>>2]|0;
      HEAP32[$194>>2] = $603;
      $604 = $193;
      $189 = $604;
      $605 = $189;
      $606 = HEAP32[$605>>2]|0;
      $607 = $192;
      HEAP32[$607>>2] = $606;
      $190 = $194;
      $608 = $190;
      $609 = HEAP32[$608>>2]|0;
      $610 = $193;
      HEAP32[$610>>2] = $609;
      $197 = $479;
      $611 = $197;
      $612 = ((($611)) + 12|0);
      $196 = $612;
      $613 = $196;
      $195 = $613;
      $614 = $195;
      $200 = $247;
      $615 = $200;
      $616 = ((($615)) + 12|0);
      $199 = $616;
      $617 = $199;
      $198 = $617;
      $618 = $198;
      $204 = $614;
      $205 = $618;
      $619 = $204;
      $203 = $619;
      $620 = $203;
      $621 = HEAP32[$620>>2]|0;
      HEAP32[$206>>2] = $621;
      $622 = $205;
      $201 = $622;
      $623 = $201;
      $624 = HEAP32[$623>>2]|0;
      $625 = $204;
      HEAP32[$625>>2] = $624;
      $202 = $206;
      $626 = $202;
      $627 = HEAP32[$626>>2]|0;
      $628 = $205;
      HEAP32[$628>>2] = $627;
      __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($247);
      break;
     }
     $492 = ((($479)) + 4|0);
     $493 = HEAP32[$492>>2]|0;
     $494 = HEAP32[$479>>2]|0;
     $495 = $493;
     $496 = $494;
     $497 = (($495) - ($496))|0;
     $498 = (($497|0) / 4)&-1;
     $243 = $498;
     $499 = $243;
     $500 = (($499) + 1)|0;
     $501 = (($500|0) / 2)&-1;
     $243 = $501;
     $502 = ((($479)) + 4|0);
     $503 = HEAP32[$502>>2]|0;
     $504 = ((($479)) + 8|0);
     $505 = HEAP32[$504>>2]|0;
     $506 = ((($479)) + 4|0);
     $507 = HEAP32[$506>>2]|0;
     $508 = $243;
     $509 = (0 - ($508))|0;
     $510 = (($507) + ($509<<2)|0);
     $217 = $503;
     $218 = $505;
     $219 = $510;
     $511 = $217;
     $216 = $511;
     $512 = $216;
     $513 = $218;
     $210 = $513;
     $514 = $210;
     $515 = $219;
     $211 = $515;
     $516 = $211;
     $212 = $512;
     $213 = $514;
     $214 = $516;
     $517 = $213;
     $518 = $212;
     $519 = $517;
     $520 = $518;
     $521 = (($519) - ($520))|0;
     $522 = (($521|0) / 4)&-1;
     $215 = $522;
     $523 = $215;
     $524 = ($523>>>0)>(0);
     if ($524) {
      $525 = $214;
      $526 = $212;
      $527 = $215;
      $528 = $527<<2;
      _memmove(($525|0),($526|0),($528|0))|0;
     }
     $529 = $214;
     $530 = $215;
     $531 = (($529) + ($530<<2)|0);
     $532 = ((($479)) + 8|0);
     HEAP32[$532>>2] = $531;
     $533 = $243;
     $534 = ((($479)) + 4|0);
     $535 = HEAP32[$534>>2]|0;
     $536 = (0 - ($533))|0;
     $537 = (($535) + ($536<<2)|0);
     HEAP32[$534>>2] = $537;
    }
   } while(0);
   $222 = $479;
   $629 = $222;
   $630 = ((($629)) + 12|0);
   $221 = $630;
   $631 = $221;
   $220 = $631;
   $632 = $220;
   $633 = ((($479)) + 8|0);
   $634 = HEAP32[$633>>2]|0;
   $223 = $634;
   $635 = $223;
   $636 = $242;
   $234 = $632;
   $235 = $635;
   $236 = $636;
   $637 = $234;
   $638 = $235;
   $639 = $236;
   $233 = $639;
   $640 = $233;
   ;HEAP8[$232>>0]=HEAP8[$237>>0]|0;
   $229 = $637;
   $230 = $638;
   $231 = $640;
   $641 = $229;
   $642 = $230;
   $643 = $231;
   $228 = $643;
   $644 = $228;
   $225 = $641;
   $226 = $642;
   $227 = $644;
   $645 = $226;
   $646 = $227;
   $224 = $646;
   $647 = $224;
   $648 = HEAP32[$647>>2]|0;
   HEAP32[$645>>2] = $648;
   $649 = ((($479)) + 8|0);
   $650 = HEAP32[$649>>2]|0;
   $651 = ((($650)) + 4|0);
   HEAP32[$649>>2] = $651;
   $652 = HEAP32[$405>>2]|0;
   $653 = (($652) + -1)|0;
   HEAP32[$405>>2] = $653;
  }
  STACKTOP = sp;return;
 }
 $654 = HEAP32[$404>>2]|0;
 $160 = $416;
 $655 = $160;
 $159 = $655;
 $656 = $159;
 $657 = ((($656)) + 12|0);
 $158 = $657;
 $658 = $158;
 $157 = $658;
 $659 = $157;
 $660 = HEAP32[$659>>2]|0;
 $661 = HEAP32[$655>>2]|0;
 $662 = $660;
 $663 = $661;
 $664 = (($662) - ($663))|0;
 $665 = (($664|0) / 4)&-1;
 $156 = $416;
 $666 = $156;
 $667 = ((($666)) + 8|0);
 $668 = HEAP32[$667>>2]|0;
 $669 = ((($666)) + 4|0);
 $670 = HEAP32[$669>>2]|0;
 $671 = $668;
 $672 = $670;
 $673 = (($671) - ($672))|0;
 $674 = (($673|0) / 4)&-1;
 $675 = (($665) - ($674))|0;
 $676 = ($654>>>0)<=($675>>>0);
 if (!($676)) {
  $938 = HEAP32[$405>>2]|0;
  $939 = ($938*93)|0;
  $410 = $939;
  $31 = $416;
  $940 = $31;
  $30 = $940;
  $941 = $30;
  $942 = ((($941)) + 12|0);
  $29 = $942;
  $943 = $29;
  $28 = $943;
  $944 = $28;
  $945 = HEAP32[$944>>2]|0;
  $946 = HEAP32[$940>>2]|0;
  $947 = $945;
  $948 = $946;
  $949 = (($947) - ($948))|0;
  $950 = (($949|0) / 4)&-1;
  $951 = $950<<1;
  HEAP32[$412>>2] = $951;
  $952 = HEAP32[$404>>2]|0;
  $27 = $416;
  $953 = $27;
  $954 = ((($953)) + 8|0);
  $955 = HEAP32[$954>>2]|0;
  $956 = ((($953)) + 4|0);
  $957 = HEAP32[$956>>2]|0;
  $958 = $955;
  $959 = $957;
  $960 = (($958) - ($959))|0;
  $961 = (($960|0) / 4)&-1;
  $962 = (($952) + ($961))|0;
  HEAP32[$413>>2] = $962;
  $24 = $412;
  $25 = $413;
  $963 = $24;
  $964 = $25;
  ;HEAP8[$23>>0]=HEAP8[$26>>0]|0;
  $21 = $963;
  $22 = $964;
  $965 = $21;
  $966 = $22;
  $18 = $23;
  $19 = $965;
  $20 = $966;
  $967 = $19;
  $968 = HEAP32[$967>>2]|0;
  $969 = $20;
  $970 = HEAP32[$969>>2]|0;
  $971 = ($968>>>0)<($970>>>0);
  $972 = $22;
  $973 = $21;
  $974 = $971 ? $972 : $973;
  $975 = HEAP32[$974>>2]|0;
  $17 = $416;
  $976 = $17;
  $977 = ((($976)) + 8|0);
  $978 = HEAP32[$977>>2]|0;
  $979 = ((($976)) + 4|0);
  $980 = HEAP32[$979>>2]|0;
  $981 = $978;
  $982 = $980;
  $983 = (($981) - ($982))|0;
  $984 = (($983|0) / 4)&-1;
  $985 = HEAP32[$405>>2]|0;
  $986 = (($984) - ($985))|0;
  $16 = $416;
  $987 = $16;
  $988 = ((($987)) + 12|0);
  $15 = $988;
  $989 = $15;
  $14 = $989;
  $990 = $14;
  __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($411,$975,$986,$990);
  while(1) {
   $991 = HEAP32[$404>>2]|0;
   $992 = ($991>>>0)>(0);
   if (!($992)) {
    break;
   }
   $993 = $403;
   $12 = $993;
   $13 = 93;
   $994 = $12;
   $995 = $13;
   $9 = $994;
   $10 = $995;
   $11 = 0;
   $996 = $9;
   $997 = $10;
   $8 = $996;
   $998 = ($997>>>0)>(97612893);
   if ($998) {
    label = 35;
    break;
   }
   $1003 = $10;
   $1004 = ($1003*44)|0;
   $6 = $1004;
   $7 = 4;
   $1005 = $6;
   $1006 = (__Znwm($1005)|0);
   HEAP32[$414>>2] = $1006;
   __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE9push_backEOS4_($411,$414);
   $1007 = HEAP32[$404>>2]|0;
   $1008 = (($1007) + -1)|0;
   HEAP32[$404>>2] = $1008;
  }
  if ((label|0) == 35) {
   $5 = 21003;
   $999 = (___cxa_allocate_exception(8)|0);
   $1000 = $5;
   $3 = $999;
   $4 = $1000;
   $1001 = $3;
   $1002 = $4;
   __ZNSt11logic_errorC2EPKc($1001,$1002);
   HEAP32[$1001>>2] = (17588);
   ___cxa_throw(($999|0),(9800|0),(617|0));
   // unreachable;
  }
  while(1) {
   $1009 = HEAP32[$405>>2]|0;
   $1010 = ($1009>>>0)>(0);
   if (!($1010)) {
    break;
   }
   $2 = $416;
   $1011 = $2;
   $1012 = ((($1011)) + 4|0);
   $1013 = HEAP32[$1012>>2]|0;
   $338 = $411;
   $339 = $1013;
   $1014 = $338;
   $1015 = ((($1014)) + 8|0);
   $1016 = HEAP32[$1015>>2]|0;
   $337 = $1014;
   $1017 = $337;
   $1018 = ((($1017)) + 12|0);
   $336 = $1018;
   $1019 = $336;
   $335 = $1019;
   $1020 = $335;
   $1021 = HEAP32[$1020>>2]|0;
   $1022 = ($1016|0)==($1021|0);
   do {
    if ($1022) {
     $1023 = ((($1014)) + 4|0);
     $1024 = HEAP32[$1023>>2]|0;
     $1025 = HEAP32[$1014>>2]|0;
     $1026 = ($1024>>>0)>($1025>>>0);
     if (!($1026)) {
      $306 = $1014;
      $1073 = $306;
      $1074 = ((($1073)) + 12|0);
      $305 = $1074;
      $1075 = $305;
      $304 = $1075;
      $1076 = $304;
      $1077 = HEAP32[$1076>>2]|0;
      $1078 = HEAP32[$1014>>2]|0;
      $1079 = $1077;
      $1080 = $1078;
      $1081 = (($1079) - ($1080))|0;
      $1082 = (($1081|0) / 4)&-1;
      $1083 = $1082<<1;
      HEAP32[$342>>2] = $1083;
      HEAP32[$343>>2] = 1;
      $271 = $342;
      $272 = $343;
      $1084 = $271;
      $1085 = $272;
      ;HEAP8[$270>>0]=HEAP8[$273>>0]|0;
      $268 = $1084;
      $269 = $1085;
      $1086 = $268;
      $1087 = $269;
      $265 = $270;
      $266 = $1086;
      $267 = $1087;
      $1088 = $266;
      $1089 = HEAP32[$1088>>2]|0;
      $1090 = $267;
      $1091 = HEAP32[$1090>>2]|0;
      $1092 = ($1089>>>0)<($1091>>>0);
      $1093 = $269;
      $1094 = $268;
      $1095 = $1092 ? $1093 : $1094;
      $1096 = HEAP32[$1095>>2]|0;
      $341 = $1096;
      $1097 = $341;
      $1098 = $341;
      $1099 = (($1098>>>0) / 4)&-1;
      $260 = $1014;
      $1100 = $260;
      $1101 = ((($1100)) + 12|0);
      $259 = $1101;
      $1102 = $259;
      $1103 = ((($1102)) + 4|0);
      $258 = $1103;
      $1104 = $258;
      $1105 = HEAP32[$1104>>2]|0;
      __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($344,$1097,$1099,$1105);
      $1106 = ((($1014)) + 4|0);
      $1107 = HEAP32[$1106>>2]|0;
      $261 = $345;
      $262 = $1107;
      $1108 = $261;
      $1109 = $262;
      HEAP32[$1108>>2] = $1109;
      $1110 = ((($1014)) + 8|0);
      $1111 = HEAP32[$1110>>2]|0;
      $263 = $346;
      $264 = $1111;
      $1112 = $263;
      $1113 = $264;
      HEAP32[$1112>>2] = $1113;
      ;HEAP32[$$byval_copy4>>2]=HEAP32[$345>>2]|0;
      ;HEAP32[$$byval_copy5>>2]=HEAP32[$346>>2]|0;
      __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($344,$$byval_copy4,$$byval_copy5);
      $277 = $1014;
      $278 = $344;
      $1114 = $277;
      $276 = $1114;
      $1115 = $276;
      $1116 = HEAP32[$1115>>2]|0;
      HEAP32[$279>>2] = $1116;
      $1117 = $278;
      $274 = $1117;
      $1118 = $274;
      $1119 = HEAP32[$1118>>2]|0;
      $1120 = $277;
      HEAP32[$1120>>2] = $1119;
      $275 = $279;
      $1121 = $275;
      $1122 = HEAP32[$1121>>2]|0;
      $1123 = $278;
      HEAP32[$1123>>2] = $1122;
      $1124 = ((($1014)) + 4|0);
      $1125 = ((($344)) + 4|0);
      $283 = $1124;
      $284 = $1125;
      $1126 = $283;
      $282 = $1126;
      $1127 = $282;
      $1128 = HEAP32[$1127>>2]|0;
      HEAP32[$285>>2] = $1128;
      $1129 = $284;
      $280 = $1129;
      $1130 = $280;
      $1131 = HEAP32[$1130>>2]|0;
      $1132 = $283;
      HEAP32[$1132>>2] = $1131;
      $281 = $285;
      $1133 = $281;
      $1134 = HEAP32[$1133>>2]|0;
      $1135 = $284;
      HEAP32[$1135>>2] = $1134;
      $1136 = ((($1014)) + 8|0);
      $1137 = ((($344)) + 8|0);
      $289 = $1136;
      $290 = $1137;
      $1138 = $289;
      $288 = $1138;
      $1139 = $288;
      $1140 = HEAP32[$1139>>2]|0;
      HEAP32[$291>>2] = $1140;
      $1141 = $290;
      $286 = $1141;
      $1142 = $286;
      $1143 = HEAP32[$1142>>2]|0;
      $1144 = $289;
      HEAP32[$1144>>2] = $1143;
      $287 = $291;
      $1145 = $287;
      $1146 = HEAP32[$1145>>2]|0;
      $1147 = $290;
      HEAP32[$1147>>2] = $1146;
      $294 = $1014;
      $1148 = $294;
      $1149 = ((($1148)) + 12|0);
      $293 = $1149;
      $1150 = $293;
      $292 = $1150;
      $1151 = $292;
      $297 = $344;
      $1152 = $297;
      $1153 = ((($1152)) + 12|0);
      $296 = $1153;
      $1154 = $296;
      $295 = $1154;
      $1155 = $295;
      $301 = $1151;
      $302 = $1155;
      $1156 = $301;
      $300 = $1156;
      $1157 = $300;
      $1158 = HEAP32[$1157>>2]|0;
      HEAP32[$303>>2] = $1158;
      $1159 = $302;
      $298 = $1159;
      $1160 = $298;
      $1161 = HEAP32[$1160>>2]|0;
      $1162 = $301;
      HEAP32[$1162>>2] = $1161;
      $299 = $303;
      $1163 = $299;
      $1164 = HEAP32[$1163>>2]|0;
      $1165 = $302;
      HEAP32[$1165>>2] = $1164;
      __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($344);
      break;
     }
     $1027 = ((($1014)) + 4|0);
     $1028 = HEAP32[$1027>>2]|0;
     $1029 = HEAP32[$1014>>2]|0;
     $1030 = $1028;
     $1031 = $1029;
     $1032 = (($1030) - ($1031))|0;
     $1033 = (($1032|0) / 4)&-1;
     $340 = $1033;
     $1034 = $340;
     $1035 = (($1034) + 1)|0;
     $1036 = (($1035|0) / 2)&-1;
     $340 = $1036;
     $1037 = ((($1014)) + 4|0);
     $1038 = HEAP32[$1037>>2]|0;
     $1039 = ((($1014)) + 8|0);
     $1040 = HEAP32[$1039>>2]|0;
     $1041 = ((($1014)) + 4|0);
     $1042 = HEAP32[$1041>>2]|0;
     $1043 = $340;
     $1044 = (0 - ($1043))|0;
     $1045 = (($1042) + ($1044<<2)|0);
     $314 = $1038;
     $315 = $1040;
     $316 = $1045;
     $1046 = $314;
     $313 = $1046;
     $1047 = $313;
     $1048 = $315;
     $307 = $1048;
     $1049 = $307;
     $1050 = $316;
     $308 = $1050;
     $1051 = $308;
     $309 = $1047;
     $310 = $1049;
     $311 = $1051;
     $1052 = $310;
     $1053 = $309;
     $1054 = $1052;
     $1055 = $1053;
     $1056 = (($1054) - ($1055))|0;
     $1057 = (($1056|0) / 4)&-1;
     $312 = $1057;
     $1058 = $312;
     $1059 = ($1058>>>0)>(0);
     if ($1059) {
      $1060 = $311;
      $1061 = $309;
      $1062 = $312;
      $1063 = $1062<<2;
      _memmove(($1060|0),($1061|0),($1063|0))|0;
     }
     $1064 = $311;
     $1065 = $312;
     $1066 = (($1064) + ($1065<<2)|0);
     $1067 = ((($1014)) + 8|0);
     HEAP32[$1067>>2] = $1066;
     $1068 = $340;
     $1069 = ((($1014)) + 4|0);
     $1070 = HEAP32[$1069>>2]|0;
     $1071 = (0 - ($1068))|0;
     $1072 = (($1070) + ($1071<<2)|0);
     HEAP32[$1069>>2] = $1072;
    }
   } while(0);
   $319 = $1014;
   $1166 = $319;
   $1167 = ((($1166)) + 12|0);
   $318 = $1167;
   $1168 = $318;
   $1169 = ((($1168)) + 4|0);
   $317 = $1169;
   $1170 = $317;
   $1171 = HEAP32[$1170>>2]|0;
   $1172 = ((($1014)) + 8|0);
   $1173 = HEAP32[$1172>>2]|0;
   $320 = $1173;
   $1174 = $320;
   $1175 = $339;
   $331 = $1171;
   $332 = $1174;
   $333 = $1175;
   $1176 = $331;
   $1177 = $332;
   $1178 = $333;
   $330 = $1178;
   $1179 = $330;
   ;HEAP8[$329>>0]=HEAP8[$334>>0]|0;
   $326 = $1176;
   $327 = $1177;
   $328 = $1179;
   $1180 = $326;
   $1181 = $327;
   $1182 = $328;
   $325 = $1182;
   $1183 = $325;
   $322 = $1180;
   $323 = $1181;
   $324 = $1183;
   $1184 = $323;
   $1185 = $324;
   $321 = $1185;
   $1186 = $321;
   $1187 = HEAP32[$1186>>2]|0;
   HEAP32[$1184>>2] = $1187;
   $1188 = ((($1014)) + 8|0);
   $1189 = HEAP32[$1188>>2]|0;
   $1190 = ((($1189)) + 4|0);
   HEAP32[$1188>>2] = $1190;
   $353 = $416;
   $1191 = $353;
   $1192 = ((($1191)) + 4|0);
   $1193 = HEAP32[$1192>>2]|0;
   $1194 = ((($1193)) + 4|0);
   $350 = $1191;
   $351 = $1194;
   $1195 = $350;
   $1196 = $351;
   ;HEAP8[$349>>0]=HEAP8[$352>>0]|0;
   $347 = $1195;
   $348 = $1196;
   $1197 = $347;
   $1198 = $348;
   $1199 = ((($1197)) + 4|0);
   HEAP32[$1199>>2] = $1198;
   $1200 = HEAP32[$405>>2]|0;
   $1201 = (($1200) + -1)|0;
   HEAP32[$405>>2] = $1201;
  }
  $354 = $416;
  $1202 = $354;
  $1203 = ((($1202)) + 8|0);
  $1204 = HEAP32[$1203>>2]|0;
  $415 = $1204;
  while(1) {
   $1205 = $415;
   $355 = $416;
   $1206 = $355;
   $1207 = ((($1206)) + 4|0);
   $1208 = HEAP32[$1207>>2]|0;
   $1209 = ($1205|0)!=($1208|0);
   if (!($1209)) {
    break;
   }
   $1210 = $415;
   $1211 = ((($1210)) + -4|0);
   $415 = $1211;
   __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE10push_frontERKS4_($411,$1211);
  }
  $368 = $416;
  $369 = $411;
  $1212 = $368;
  $367 = $1212;
  $1213 = $367;
  $1214 = HEAP32[$1213>>2]|0;
  HEAP32[$370>>2] = $1214;
  $1215 = $369;
  $365 = $1215;
  $1216 = $365;
  $1217 = HEAP32[$1216>>2]|0;
  $1218 = $368;
  HEAP32[$1218>>2] = $1217;
  $366 = $370;
  $1219 = $366;
  $1220 = HEAP32[$1219>>2]|0;
  $1221 = $369;
  HEAP32[$1221>>2] = $1220;
  $1222 = ((($416)) + 4|0);
  $1223 = ((($411)) + 4|0);
  $374 = $1222;
  $375 = $1223;
  $1224 = $374;
  $373 = $1224;
  $1225 = $373;
  $1226 = HEAP32[$1225>>2]|0;
  HEAP32[$376>>2] = $1226;
  $1227 = $375;
  $371 = $1227;
  $1228 = $371;
  $1229 = HEAP32[$1228>>2]|0;
  $1230 = $374;
  HEAP32[$1230>>2] = $1229;
  $372 = $376;
  $1231 = $372;
  $1232 = HEAP32[$1231>>2]|0;
  $1233 = $375;
  HEAP32[$1233>>2] = $1232;
  $1234 = ((($416)) + 8|0);
  $1235 = ((($411)) + 8|0);
  $380 = $1234;
  $381 = $1235;
  $1236 = $380;
  $379 = $1236;
  $1237 = $379;
  $1238 = HEAP32[$1237>>2]|0;
  HEAP32[$382>>2] = $1238;
  $1239 = $381;
  $377 = $1239;
  $1240 = $377;
  $1241 = HEAP32[$1240>>2]|0;
  $1242 = $380;
  HEAP32[$1242>>2] = $1241;
  $378 = $382;
  $1243 = $378;
  $1244 = HEAP32[$1243>>2]|0;
  $1245 = $381;
  HEAP32[$1245>>2] = $1244;
  $385 = $416;
  $1246 = $385;
  $1247 = ((($1246)) + 12|0);
  $384 = $1247;
  $1248 = $384;
  $383 = $1248;
  $1249 = $383;
  $388 = $411;
  $1250 = $388;
  $1251 = ((($1250)) + 12|0);
  $387 = $1251;
  $1252 = $387;
  $386 = $1252;
  $1253 = $386;
  $392 = $1249;
  $393 = $1253;
  $1254 = $392;
  $391 = $1254;
  $1255 = $391;
  $1256 = HEAP32[$1255>>2]|0;
  HEAP32[$394>>2] = $1256;
  $1257 = $393;
  $389 = $1257;
  $1258 = $389;
  $1259 = HEAP32[$1258>>2]|0;
  $1260 = $392;
  HEAP32[$1260>>2] = $1259;
  $390 = $394;
  $1261 = $390;
  $1262 = HEAP32[$1261>>2]|0;
  $1263 = $393;
  HEAP32[$1263>>2] = $1262;
  $1264 = $410;
  $1265 = ((($416)) + 16|0);
  $1266 = HEAP32[$1265>>2]|0;
  $1267 = (($1266) - ($1264))|0;
  HEAP32[$1265>>2] = $1267;
  __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($411);
  STACKTOP = sp;return;
 }
 while(1) {
  $677 = HEAP32[$404>>2]|0;
  $678 = ($677>>>0)>(0);
  if (!($678)) {
   break;
  }
  $155 = $416;
  $679 = $155;
  $154 = $679;
  $680 = $154;
  $681 = ((($680)) + 12|0);
  $153 = $681;
  $682 = $153;
  $152 = $682;
  $683 = $152;
  $684 = HEAP32[$683>>2]|0;
  $685 = ((($679)) + 8|0);
  $686 = HEAP32[$685>>2]|0;
  $687 = $684;
  $688 = $686;
  $689 = (($687) - ($688))|0;
  $690 = (($689|0) / 4)&-1;
  $691 = ($690|0)==(0);
  if ($691) {
   break;
  }
  $692 = $403;
  $150 = $692;
  $151 = 93;
  $693 = $150;
  $694 = $151;
  $147 = $693;
  $148 = $694;
  $149 = 0;
  $695 = $147;
  $696 = $148;
  $146 = $695;
  $697 = ($696>>>0)>(97612893);
  if ($697) {
   label = 16;
   break;
  }
  $702 = $148;
  $703 = ($702*44)|0;
  $144 = $703;
  $145 = 4;
  $704 = $144;
  $705 = (__Znwm($704)|0);
  HEAP32[$407>>2] = $705;
  __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticENS_9allocatorIS4_EEE9push_backEOS4_($416,$407);
  $706 = HEAP32[$404>>2]|0;
  $707 = (($706) + -1)|0;
  HEAP32[$404>>2] = $707;
 }
 if ((label|0) == 16) {
  $143 = 21003;
  $698 = (___cxa_allocate_exception(8)|0);
  $699 = $143;
  $141 = $698;
  $142 = $699;
  $700 = $141;
  $701 = $142;
  __ZNSt11logic_errorC2EPKc($700,$701);
  HEAP32[$700>>2] = (17588);
  ___cxa_throw(($698|0),(9800|0),(617|0));
  // unreachable;
 }
 while(1) {
  $708 = HEAP32[$404>>2]|0;
  $709 = ($708>>>0)>(0);
  if (!($709)) {
   break;
  }
  $710 = $403;
  $139 = $710;
  $140 = 93;
  $711 = $139;
  $712 = $140;
  $136 = $711;
  $137 = $712;
  $138 = 0;
  $713 = $136;
  $714 = $137;
  $135 = $713;
  $715 = ($714>>>0)>(97612893);
  if ($715) {
   label = 21;
   break;
  }
  $720 = $137;
  $721 = ($720*44)|0;
  $133 = $721;
  $134 = 4;
  $722 = $133;
  $723 = (__Znwm($722)|0);
  HEAP32[$408>>2] = $723;
  __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticENS_9allocatorIS4_EEE10push_frontEOS4_($416,$408);
  $724 = HEAP32[$404>>2]|0;
  $725 = (($724) + -1)|0;
  HEAP32[$404>>2] = $725;
  $726 = HEAP32[$405>>2]|0;
  $727 = (($726) + 1)|0;
  HEAP32[$405>>2] = $727;
  $129 = $416;
  $728 = $129;
  $729 = ((($728)) + 8|0);
  $730 = HEAP32[$729>>2]|0;
  $731 = ((($728)) + 4|0);
  $732 = HEAP32[$731>>2]|0;
  $733 = $730;
  $734 = $732;
  $735 = (($733) - ($734))|0;
  $736 = (($735|0) / 4)&-1;
  $737 = ($736|0)==(1);
  $738 = $737&1;
  $739 = (93 - ($738))|0;
  $740 = ((($416)) + 16|0);
  $741 = HEAP32[$740>>2]|0;
  $742 = (($741) + ($739))|0;
  HEAP32[$740>>2] = $742;
 }
 if ((label|0) == 21) {
  $132 = 21003;
  $716 = (___cxa_allocate_exception(8)|0);
  $717 = $132;
  $130 = $716;
  $131 = $717;
  $718 = $130;
  $719 = $131;
  __ZNSt11logic_errorC2EPKc($718,$719);
  HEAP32[$718>>2] = (17588);
  ___cxa_throw(($716|0),(9800|0),(617|0));
  // unreachable;
 }
 $743 = HEAP32[$405>>2]|0;
 $744 = ($743*93)|0;
 $745 = ((($416)) + 16|0);
 $746 = HEAP32[$745>>2]|0;
 $747 = (($746) - ($744))|0;
 HEAP32[$745>>2] = $747;
 while(1) {
  $748 = HEAP32[$405>>2]|0;
  $749 = ($748>>>0)>(0);
  if (!($749)) {
   break;
  }
  $128 = $416;
  $750 = $128;
  $751 = ((($750)) + 4|0);
  $752 = HEAP32[$751>>2]|0;
  $753 = HEAP32[$752>>2]|0;
  HEAP32[$409>>2] = $753;
  $127 = $416;
  $754 = $127;
  $755 = ((($754)) + 4|0);
  $756 = HEAP32[$755>>2]|0;
  $757 = ((($756)) + 4|0);
  $124 = $754;
  $125 = $757;
  $758 = $124;
  $759 = $125;
  ;HEAP8[$123>>0]=HEAP8[$126>>0]|0;
  $121 = $758;
  $122 = $759;
  $760 = $121;
  $761 = $122;
  $762 = ((($760)) + 4|0);
  HEAP32[$762>>2] = $761;
  $112 = $416;
  $113 = $409;
  $763 = $112;
  $764 = ((($763)) + 8|0);
  $765 = HEAP32[$764>>2]|0;
  $111 = $763;
  $766 = $111;
  $767 = ((($766)) + 12|0);
  $110 = $767;
  $768 = $110;
  $109 = $768;
  $769 = $109;
  $770 = HEAP32[$769>>2]|0;
  $771 = ($765|0)==($770|0);
  do {
   if ($771) {
    $772 = ((($763)) + 4|0);
    $773 = HEAP32[$772>>2]|0;
    $774 = HEAP32[$763>>2]|0;
    $775 = ($773>>>0)>($774>>>0);
    if (!($775)) {
     $80 = $763;
     $822 = $80;
     $823 = ((($822)) + 12|0);
     $79 = $823;
     $824 = $79;
     $78 = $824;
     $825 = $78;
     $826 = HEAP32[$825>>2]|0;
     $827 = HEAP32[$763>>2]|0;
     $828 = $826;
     $829 = $827;
     $830 = (($828) - ($829))|0;
     $831 = (($830|0) / 4)&-1;
     $832 = $831<<1;
     HEAP32[$116>>2] = $832;
     HEAP32[$117>>2] = 1;
     $45 = $116;
     $46 = $117;
     $833 = $45;
     $834 = $46;
     ;HEAP8[$44>>0]=HEAP8[$47>>0]|0;
     $42 = $833;
     $43 = $834;
     $835 = $42;
     $836 = $43;
     $39 = $44;
     $40 = $835;
     $41 = $836;
     $837 = $40;
     $838 = HEAP32[$837>>2]|0;
     $839 = $41;
     $840 = HEAP32[$839>>2]|0;
     $841 = ($838>>>0)<($840>>>0);
     $842 = $43;
     $843 = $42;
     $844 = $841 ? $842 : $843;
     $845 = HEAP32[$844>>2]|0;
     $115 = $845;
     $846 = $115;
     $847 = $115;
     $848 = (($847>>>0) / 4)&-1;
     $34 = $763;
     $849 = $34;
     $850 = ((($849)) + 12|0);
     $33 = $850;
     $851 = $33;
     $32 = $851;
     $852 = $32;
     __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($118,$846,$848,$852);
     $853 = ((($763)) + 4|0);
     $854 = HEAP32[$853>>2]|0;
     $35 = $119;
     $36 = $854;
     $855 = $35;
     $856 = $36;
     HEAP32[$855>>2] = $856;
     $857 = ((($763)) + 8|0);
     $858 = HEAP32[$857>>2]|0;
     $37 = $120;
     $38 = $858;
     $859 = $37;
     $860 = $38;
     HEAP32[$859>>2] = $860;
     ;HEAP32[$$byval_copy2>>2]=HEAP32[$119>>2]|0;
     ;HEAP32[$$byval_copy3>>2]=HEAP32[$120>>2]|0;
     __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($118,$$byval_copy2,$$byval_copy3);
     $51 = $763;
     $52 = $118;
     $861 = $51;
     $50 = $861;
     $862 = $50;
     $863 = HEAP32[$862>>2]|0;
     HEAP32[$53>>2] = $863;
     $864 = $52;
     $48 = $864;
     $865 = $48;
     $866 = HEAP32[$865>>2]|0;
     $867 = $51;
     HEAP32[$867>>2] = $866;
     $49 = $53;
     $868 = $49;
     $869 = HEAP32[$868>>2]|0;
     $870 = $52;
     HEAP32[$870>>2] = $869;
     $871 = ((($763)) + 4|0);
     $872 = ((($118)) + 4|0);
     $57 = $871;
     $58 = $872;
     $873 = $57;
     $56 = $873;
     $874 = $56;
     $875 = HEAP32[$874>>2]|0;
     HEAP32[$59>>2] = $875;
     $876 = $58;
     $54 = $876;
     $877 = $54;
     $878 = HEAP32[$877>>2]|0;
     $879 = $57;
     HEAP32[$879>>2] = $878;
     $55 = $59;
     $880 = $55;
     $881 = HEAP32[$880>>2]|0;
     $882 = $58;
     HEAP32[$882>>2] = $881;
     $883 = ((($763)) + 8|0);
     $884 = ((($118)) + 8|0);
     $63 = $883;
     $64 = $884;
     $885 = $63;
     $62 = $885;
     $886 = $62;
     $887 = HEAP32[$886>>2]|0;
     HEAP32[$65>>2] = $887;
     $888 = $64;
     $60 = $888;
     $889 = $60;
     $890 = HEAP32[$889>>2]|0;
     $891 = $63;
     HEAP32[$891>>2] = $890;
     $61 = $65;
     $892 = $61;
     $893 = HEAP32[$892>>2]|0;
     $894 = $64;
     HEAP32[$894>>2] = $893;
     $68 = $763;
     $895 = $68;
     $896 = ((($895)) + 12|0);
     $67 = $896;
     $897 = $67;
     $66 = $897;
     $898 = $66;
     $71 = $118;
     $899 = $71;
     $900 = ((($899)) + 12|0);
     $70 = $900;
     $901 = $70;
     $69 = $901;
     $902 = $69;
     $75 = $898;
     $76 = $902;
     $903 = $75;
     $74 = $903;
     $904 = $74;
     $905 = HEAP32[$904>>2]|0;
     HEAP32[$77>>2] = $905;
     $906 = $76;
     $72 = $906;
     $907 = $72;
     $908 = HEAP32[$907>>2]|0;
     $909 = $75;
     HEAP32[$909>>2] = $908;
     $73 = $77;
     $910 = $73;
     $911 = HEAP32[$910>>2]|0;
     $912 = $76;
     HEAP32[$912>>2] = $911;
     __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($118);
     break;
    }
    $776 = ((($763)) + 4|0);
    $777 = HEAP32[$776>>2]|0;
    $778 = HEAP32[$763>>2]|0;
    $779 = $777;
    $780 = $778;
    $781 = (($779) - ($780))|0;
    $782 = (($781|0) / 4)&-1;
    $114 = $782;
    $783 = $114;
    $784 = (($783) + 1)|0;
    $785 = (($784|0) / 2)&-1;
    $114 = $785;
    $786 = ((($763)) + 4|0);
    $787 = HEAP32[$786>>2]|0;
    $788 = ((($763)) + 8|0);
    $789 = HEAP32[$788>>2]|0;
    $790 = ((($763)) + 4|0);
    $791 = HEAP32[$790>>2]|0;
    $792 = $114;
    $793 = (0 - ($792))|0;
    $794 = (($791) + ($793<<2)|0);
    $88 = $787;
    $89 = $789;
    $90 = $794;
    $795 = $88;
    $87 = $795;
    $796 = $87;
    $797 = $89;
    $81 = $797;
    $798 = $81;
    $799 = $90;
    $82 = $799;
    $800 = $82;
    $83 = $796;
    $84 = $798;
    $85 = $800;
    $801 = $84;
    $802 = $83;
    $803 = $801;
    $804 = $802;
    $805 = (($803) - ($804))|0;
    $806 = (($805|0) / 4)&-1;
    $86 = $806;
    $807 = $86;
    $808 = ($807>>>0)>(0);
    if ($808) {
     $809 = $85;
     $810 = $83;
     $811 = $86;
     $812 = $811<<2;
     _memmove(($809|0),($810|0),($812|0))|0;
    }
    $813 = $85;
    $814 = $86;
    $815 = (($813) + ($814<<2)|0);
    $816 = ((($763)) + 8|0);
    HEAP32[$816>>2] = $815;
    $817 = $114;
    $818 = ((($763)) + 4|0);
    $819 = HEAP32[$818>>2]|0;
    $820 = (0 - ($817))|0;
    $821 = (($819) + ($820<<2)|0);
    HEAP32[$818>>2] = $821;
   }
  } while(0);
  $93 = $763;
  $913 = $93;
  $914 = ((($913)) + 12|0);
  $92 = $914;
  $915 = $92;
  $91 = $915;
  $916 = $91;
  $917 = ((($763)) + 8|0);
  $918 = HEAP32[$917>>2]|0;
  $94 = $918;
  $919 = $94;
  $920 = $113;
  $105 = $916;
  $106 = $919;
  $107 = $920;
  $921 = $105;
  $922 = $106;
  $923 = $107;
  $104 = $923;
  $924 = $104;
  ;HEAP8[$103>>0]=HEAP8[$108>>0]|0;
  $100 = $921;
  $101 = $922;
  $102 = $924;
  $925 = $100;
  $926 = $101;
  $927 = $102;
  $99 = $927;
  $928 = $99;
  $96 = $925;
  $97 = $926;
  $98 = $928;
  $929 = $97;
  $930 = $98;
  $95 = $930;
  $931 = $95;
  $932 = HEAP32[$931>>2]|0;
  HEAP32[$929>>2] = $932;
  $933 = ((($763)) + 8|0);
  $934 = HEAP32[$933>>2]|0;
  $935 = ((($934)) + 4|0);
  HEAP32[$933>>2] = $935;
  $936 = HEAP32[$405>>2]|0;
  $937 = (($936) + -1)|0;
  HEAP32[$405>>2] = $937;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $36 = sp;
 $32 = $0;
 $33 = $1;
 $34 = $2;
 $35 = $3;
 $37 = $32;
 $38 = ((($37)) + 12|0);
 HEAP32[$36>>2] = 0;
 $39 = $35;
 $29 = $38;
 $30 = $36;
 $31 = $39;
 $40 = $29;
 $41 = $30;
 $28 = $41;
 $42 = $28;
 $22 = $40;
 $23 = $42;
 $43 = $22;
 $44 = $23;
 $21 = $44;
 HEAP32[$43>>2] = 0;
 $45 = ((($40)) + 4|0);
 $46 = $31;
 $24 = $46;
 $47 = $24;
 $26 = $45;
 $27 = $47;
 $48 = $26;
 $49 = $27;
 $25 = $49;
 $50 = $25;
 HEAP32[$48>>2] = $50;
 $51 = $33;
 $52 = ($51|0)!=(0);
 do {
  if ($52) {
   $6 = $37;
   $53 = $6;
   $54 = ((($53)) + 12|0);
   $5 = $54;
   $55 = $5;
   $56 = ((($55)) + 4|0);
   $4 = $56;
   $57 = $4;
   $58 = HEAP32[$57>>2]|0;
   $59 = $33;
   $16 = $58;
   $17 = $59;
   $60 = $16;
   $61 = $17;
   $13 = $60;
   $14 = $61;
   $15 = 0;
   $62 = $13;
   $63 = $14;
   $12 = $62;
   $64 = ($63>>>0)>(1073741823);
   if ($64) {
    $9 = 21003;
    $65 = (___cxa_allocate_exception(8)|0);
    $66 = $9;
    $7 = $65;
    $8 = $66;
    $67 = $7;
    $68 = $8;
    __ZNSt11logic_errorC2EPKc($67,$68);
    HEAP32[$67>>2] = (17588);
    ___cxa_throw(($65|0),(9800|0),(617|0));
    // unreachable;
   } else {
    $69 = $14;
    $70 = $69<<2;
    $10 = $70;
    $11 = 4;
    $71 = $10;
    $72 = (__Znwm($71)|0);
    $73 = $72;
    break;
   }
  } else {
   $73 = 0;
  }
 } while(0);
 HEAP32[$37>>2] = $73;
 $74 = HEAP32[$37>>2]|0;
 $75 = $34;
 $76 = (($74) + ($75<<2)|0);
 $77 = ((($37)) + 8|0);
 HEAP32[$77>>2] = $76;
 $78 = ((($37)) + 4|0);
 HEAP32[$78>>2] = $76;
 $79 = HEAP32[$37>>2]|0;
 $80 = $33;
 $81 = (($79) + ($80<<2)|0);
 $20 = $37;
 $82 = $20;
 $83 = ((($82)) + 12|0);
 $19 = $83;
 $84 = $19;
 $18 = $84;
 $85 = $18;
 HEAP32[$85>>2] = $81;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $17 = sp;
 $22 = sp + 100|0;
 $27 = $0;
 $29 = $27;
 $26 = $29;
 $30 = $26;
 $31 = ((($30)) + 12|0);
 $25 = $31;
 $32 = $25;
 $33 = ((($32)) + 4|0);
 $24 = $33;
 $34 = $24;
 $35 = HEAP32[$34>>2]|0;
 $28 = $35;
 while(1) {
  $5 = $1;
  $6 = $2;
  $36 = $5;
  $4 = $36;
  $37 = $4;
  $38 = HEAP32[$37>>2]|0;
  $39 = $6;
  $3 = $39;
  $40 = $3;
  $41 = HEAP32[$40>>2]|0;
  $42 = ($38|0)!=($41|0);
  if (!($42)) {
   break;
  }
  $43 = $28;
  $44 = ((($29)) + 8|0);
  $45 = HEAP32[$44>>2]|0;
  $7 = $45;
  $46 = $7;
  $8 = $1;
  $47 = $8;
  $48 = HEAP32[$47>>2]|0;
  $19 = $43;
  $20 = $46;
  $21 = $48;
  $49 = $19;
  $50 = $20;
  $51 = $21;
  $18 = $51;
  $52 = $18;
  ;HEAP8[$17>>0]=HEAP8[$22>>0]|0;
  $14 = $49;
  $15 = $50;
  $16 = $52;
  $53 = $14;
  $54 = $15;
  $55 = $16;
  $13 = $55;
  $56 = $13;
  $10 = $53;
  $11 = $54;
  $12 = $56;
  $57 = $11;
  $58 = $12;
  $9 = $58;
  $59 = $9;
  $60 = HEAP32[$59>>2]|0;
  HEAP32[$57>>2] = $60;
  $61 = ((($29)) + 8|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ((($62)) + 4|0);
  HEAP32[$61>>2] = $63;
  $23 = $1;
  $64 = $23;
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($65)) + 4|0);
  HEAP32[$64>>2] = $66;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -4|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
 }
 $65 = HEAP32[$40>>2]|0;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $67 = $19;
 $68 = ((($67)) + 12|0);
 $18 = $68;
 $69 = $18;
 $70 = ((($69)) + 4|0);
 $17 = $70;
 $71 = $17;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$40>>2]|0;
 $4 = $40;
 $74 = $4;
 $3 = $74;
 $75 = $3;
 $76 = ((($75)) + 12|0);
 $2 = $76;
 $77 = $2;
 $1 = $77;
 $78 = $1;
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$74>>2]|0;
 $81 = $79;
 $82 = $80;
 $83 = (($81) - ($82))|0;
 $84 = (($83|0) / 4)&-1;
 $14 = $72;
 $15 = $73;
 $16 = $84;
 $85 = $14;
 $86 = $15;
 $87 = $16;
 $11 = $85;
 $12 = $86;
 $13 = $87;
 $88 = $12;
 $89 = $13;
 $90 = $89<<2;
 $8 = $88;
 $9 = $90;
 $10 = 4;
 $91 = $8;
 $92 = $9;
 $93 = $10;
 $5 = $91;
 $6 = $92;
 $7 = $93;
 $94 = $5;
 $95 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($94,$95);
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticENS_9allocatorIS4_EEE9push_backEOS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(384|0);
 $$byval_copy1 = sp + 376|0;
 $$byval_copy = sp + 372|0;
 $14 = sp + 8|0;
 $17 = sp + 381|0;
 $23 = sp + 292|0;
 $29 = sp + 268|0;
 $35 = sp + 244|0;
 $47 = sp + 196|0;
 $74 = sp;
 $79 = sp + 380|0;
 $87 = sp + 44|0;
 $88 = sp + 40|0;
 $89 = sp + 20|0;
 $90 = sp + 16|0;
 $91 = sp + 12|0;
 $83 = $0;
 $84 = $1;
 $92 = $83;
 $93 = ((($92)) + 8|0);
 $94 = HEAP32[$93>>2]|0;
 $82 = $92;
 $95 = $82;
 $96 = ((($95)) + 12|0);
 $81 = $96;
 $97 = $81;
 $80 = $97;
 $98 = $80;
 $99 = HEAP32[$98>>2]|0;
 $100 = ($94|0)==($99|0);
 do {
  if ($100) {
   $101 = ((($92)) + 4|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = HEAP32[$92>>2]|0;
   $104 = ($102>>>0)>($103>>>0);
   if (!($104)) {
    $50 = $92;
    $151 = $50;
    $152 = ((($151)) + 12|0);
    $49 = $152;
    $153 = $49;
    $48 = $153;
    $154 = $48;
    $155 = HEAP32[$154>>2]|0;
    $156 = HEAP32[$92>>2]|0;
    $157 = $155;
    $158 = $156;
    $159 = (($157) - ($158))|0;
    $160 = (($159|0) / 4)&-1;
    $161 = $160<<1;
    HEAP32[$87>>2] = $161;
    HEAP32[$88>>2] = 1;
    $15 = $87;
    $16 = $88;
    $162 = $15;
    $163 = $16;
    ;HEAP8[$14>>0]=HEAP8[$17>>0]|0;
    $12 = $162;
    $13 = $163;
    $164 = $12;
    $165 = $13;
    $9 = $14;
    $10 = $164;
    $11 = $165;
    $166 = $10;
    $167 = HEAP32[$166>>2]|0;
    $168 = $11;
    $169 = HEAP32[$168>>2]|0;
    $170 = ($167>>>0)<($169>>>0);
    $171 = $13;
    $172 = $12;
    $173 = $170 ? $171 : $172;
    $174 = HEAP32[$173>>2]|0;
    $86 = $174;
    $175 = $86;
    $176 = $86;
    $177 = (($176>>>0) / 4)&-1;
    $4 = $92;
    $178 = $4;
    $179 = ((($178)) + 12|0);
    $3 = $179;
    $180 = $3;
    $2 = $180;
    $181 = $2;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($89,$175,$177,$181);
    $182 = ((($92)) + 4|0);
    $183 = HEAP32[$182>>2]|0;
    $5 = $90;
    $6 = $183;
    $184 = $5;
    $185 = $6;
    HEAP32[$184>>2] = $185;
    $186 = ((($92)) + 8|0);
    $187 = HEAP32[$186>>2]|0;
    $7 = $91;
    $8 = $187;
    $188 = $7;
    $189 = $8;
    HEAP32[$188>>2] = $189;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$90>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$91>>2]|0;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($89,$$byval_copy,$$byval_copy1);
    $21 = $92;
    $22 = $89;
    $190 = $21;
    $20 = $190;
    $191 = $20;
    $192 = HEAP32[$191>>2]|0;
    HEAP32[$23>>2] = $192;
    $193 = $22;
    $18 = $193;
    $194 = $18;
    $195 = HEAP32[$194>>2]|0;
    $196 = $21;
    HEAP32[$196>>2] = $195;
    $19 = $23;
    $197 = $19;
    $198 = HEAP32[$197>>2]|0;
    $199 = $22;
    HEAP32[$199>>2] = $198;
    $200 = ((($92)) + 4|0);
    $201 = ((($89)) + 4|0);
    $27 = $200;
    $28 = $201;
    $202 = $27;
    $26 = $202;
    $203 = $26;
    $204 = HEAP32[$203>>2]|0;
    HEAP32[$29>>2] = $204;
    $205 = $28;
    $24 = $205;
    $206 = $24;
    $207 = HEAP32[$206>>2]|0;
    $208 = $27;
    HEAP32[$208>>2] = $207;
    $25 = $29;
    $209 = $25;
    $210 = HEAP32[$209>>2]|0;
    $211 = $28;
    HEAP32[$211>>2] = $210;
    $212 = ((($92)) + 8|0);
    $213 = ((($89)) + 8|0);
    $33 = $212;
    $34 = $213;
    $214 = $33;
    $32 = $214;
    $215 = $32;
    $216 = HEAP32[$215>>2]|0;
    HEAP32[$35>>2] = $216;
    $217 = $34;
    $30 = $217;
    $218 = $30;
    $219 = HEAP32[$218>>2]|0;
    $220 = $33;
    HEAP32[$220>>2] = $219;
    $31 = $35;
    $221 = $31;
    $222 = HEAP32[$221>>2]|0;
    $223 = $34;
    HEAP32[$223>>2] = $222;
    $38 = $92;
    $224 = $38;
    $225 = ((($224)) + 12|0);
    $37 = $225;
    $226 = $37;
    $36 = $226;
    $227 = $36;
    $41 = $89;
    $228 = $41;
    $229 = ((($228)) + 12|0);
    $40 = $229;
    $230 = $40;
    $39 = $230;
    $231 = $39;
    $45 = $227;
    $46 = $231;
    $232 = $45;
    $44 = $232;
    $233 = $44;
    $234 = HEAP32[$233>>2]|0;
    HEAP32[$47>>2] = $234;
    $235 = $46;
    $42 = $235;
    $236 = $42;
    $237 = HEAP32[$236>>2]|0;
    $238 = $45;
    HEAP32[$238>>2] = $237;
    $43 = $47;
    $239 = $43;
    $240 = HEAP32[$239>>2]|0;
    $241 = $46;
    HEAP32[$241>>2] = $240;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($89);
    break;
   }
   $105 = ((($92)) + 4|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = HEAP32[$92>>2]|0;
   $108 = $106;
   $109 = $107;
   $110 = (($108) - ($109))|0;
   $111 = (($110|0) / 4)&-1;
   $85 = $111;
   $112 = $85;
   $113 = (($112) + 1)|0;
   $114 = (($113|0) / 2)&-1;
   $85 = $114;
   $115 = ((($92)) + 4|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = ((($92)) + 8|0);
   $118 = HEAP32[$117>>2]|0;
   $119 = ((($92)) + 4|0);
   $120 = HEAP32[$119>>2]|0;
   $121 = $85;
   $122 = (0 - ($121))|0;
   $123 = (($120) + ($122<<2)|0);
   $58 = $116;
   $59 = $118;
   $60 = $123;
   $124 = $58;
   $57 = $124;
   $125 = $57;
   $126 = $59;
   $51 = $126;
   $127 = $51;
   $128 = $60;
   $52 = $128;
   $129 = $52;
   $53 = $125;
   $54 = $127;
   $55 = $129;
   $130 = $54;
   $131 = $53;
   $132 = $130;
   $133 = $131;
   $134 = (($132) - ($133))|0;
   $135 = (($134|0) / 4)&-1;
   $56 = $135;
   $136 = $56;
   $137 = ($136>>>0)>(0);
   if ($137) {
    $138 = $55;
    $139 = $53;
    $140 = $56;
    $141 = $140<<2;
    _memmove(($138|0),($139|0),($141|0))|0;
   }
   $142 = $55;
   $143 = $56;
   $144 = (($142) + ($143<<2)|0);
   $145 = ((($92)) + 8|0);
   HEAP32[$145>>2] = $144;
   $146 = $85;
   $147 = ((($92)) + 4|0);
   $148 = HEAP32[$147>>2]|0;
   $149 = (0 - ($146))|0;
   $150 = (($148) + ($149<<2)|0);
   HEAP32[$147>>2] = $150;
  }
 } while(0);
 $63 = $92;
 $242 = $63;
 $243 = ((($242)) + 12|0);
 $62 = $243;
 $244 = $62;
 $61 = $244;
 $245 = $61;
 $246 = ((($92)) + 8|0);
 $247 = HEAP32[$246>>2]|0;
 $64 = $247;
 $248 = $64;
 $249 = $84;
 $65 = $249;
 $250 = $65;
 $76 = $245;
 $77 = $248;
 $78 = $250;
 $251 = $76;
 $252 = $77;
 $253 = $78;
 $75 = $253;
 $254 = $75;
 ;HEAP8[$74>>0]=HEAP8[$79>>0]|0;
 $71 = $251;
 $72 = $252;
 $73 = $254;
 $255 = $71;
 $256 = $72;
 $257 = $73;
 $70 = $257;
 $258 = $70;
 $67 = $255;
 $68 = $256;
 $69 = $258;
 $259 = $68;
 $260 = $69;
 $66 = $260;
 $261 = $66;
 $262 = HEAP32[$261>>2]|0;
 HEAP32[$259>>2] = $262;
 $263 = ((($92)) + 8|0);
 $264 = HEAP32[$263>>2]|0;
 $265 = ((($264)) + 4|0);
 HEAP32[$263>>2] = $265;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticENS_9allocatorIS4_EEE10push_frontEOS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $$byval_copy1 = sp + 388|0;
 $$byval_copy = sp + 384|0;
 $10 = sp + 8|0;
 $13 = sp + 393|0;
 $26 = sp + 292|0;
 $32 = sp + 268|0;
 $38 = sp + 244|0;
 $50 = sp + 196|0;
 $77 = sp;
 $82 = sp + 392|0;
 $90 = sp + 44|0;
 $91 = sp + 40|0;
 $92 = sp + 20|0;
 $93 = sp + 16|0;
 $94 = sp + 12|0;
 $86 = $0;
 $87 = $1;
 $95 = $86;
 $96 = ((($95)) + 4|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$95>>2]|0;
 $99 = ($97|0)==($98|0);
 do {
  if ($99) {
   $100 = ((($95)) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   $85 = $95;
   $102 = $85;
   $103 = ((($102)) + 12|0);
   $84 = $103;
   $104 = $84;
   $83 = $104;
   $105 = $83;
   $106 = HEAP32[$105>>2]|0;
   $107 = ($101>>>0)<($106>>>0);
   if (!($107)) {
    $20 = $95;
    $158 = $20;
    $159 = ((($158)) + 12|0);
    $19 = $159;
    $160 = $19;
    $18 = $160;
    $161 = $18;
    $162 = HEAP32[$161>>2]|0;
    $163 = HEAP32[$95>>2]|0;
    $164 = $162;
    $165 = $163;
    $166 = (($164) - ($165))|0;
    $167 = (($166|0) / 4)&-1;
    $168 = $167<<1;
    HEAP32[$90>>2] = $168;
    HEAP32[$91>>2] = 1;
    $11 = $90;
    $12 = $91;
    $169 = $11;
    $170 = $12;
    ;HEAP8[$10>>0]=HEAP8[$13>>0]|0;
    $8 = $169;
    $9 = $170;
    $171 = $8;
    $172 = $9;
    $5 = $10;
    $6 = $171;
    $7 = $172;
    $173 = $6;
    $174 = HEAP32[$173>>2]|0;
    $175 = $7;
    $176 = HEAP32[$175>>2]|0;
    $177 = ($174>>>0)<($176>>>0);
    $178 = $9;
    $179 = $8;
    $180 = $177 ? $178 : $179;
    $181 = HEAP32[$180>>2]|0;
    $89 = $181;
    $182 = $89;
    $183 = $89;
    $184 = (($183) + 3)|0;
    $185 = (($184>>>0) / 4)&-1;
    $4 = $95;
    $186 = $4;
    $187 = ((($186)) + 12|0);
    $3 = $187;
    $188 = $3;
    $2 = $188;
    $189 = $2;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($92,$182,$185,$189);
    $190 = ((($95)) + 4|0);
    $191 = HEAP32[$190>>2]|0;
    $14 = $93;
    $15 = $191;
    $192 = $14;
    $193 = $15;
    HEAP32[$192>>2] = $193;
    $194 = ((($95)) + 8|0);
    $195 = HEAP32[$194>>2]|0;
    $16 = $94;
    $17 = $195;
    $196 = $16;
    $197 = $17;
    HEAP32[$196>>2] = $197;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$93>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$94>>2]|0;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($92,$$byval_copy,$$byval_copy1);
    $24 = $95;
    $25 = $92;
    $198 = $24;
    $23 = $198;
    $199 = $23;
    $200 = HEAP32[$199>>2]|0;
    HEAP32[$26>>2] = $200;
    $201 = $25;
    $21 = $201;
    $202 = $21;
    $203 = HEAP32[$202>>2]|0;
    $204 = $24;
    HEAP32[$204>>2] = $203;
    $22 = $26;
    $205 = $22;
    $206 = HEAP32[$205>>2]|0;
    $207 = $25;
    HEAP32[$207>>2] = $206;
    $208 = ((($95)) + 4|0);
    $209 = ((($92)) + 4|0);
    $30 = $208;
    $31 = $209;
    $210 = $30;
    $29 = $210;
    $211 = $29;
    $212 = HEAP32[$211>>2]|0;
    HEAP32[$32>>2] = $212;
    $213 = $31;
    $27 = $213;
    $214 = $27;
    $215 = HEAP32[$214>>2]|0;
    $216 = $30;
    HEAP32[$216>>2] = $215;
    $28 = $32;
    $217 = $28;
    $218 = HEAP32[$217>>2]|0;
    $219 = $31;
    HEAP32[$219>>2] = $218;
    $220 = ((($95)) + 8|0);
    $221 = ((($92)) + 8|0);
    $36 = $220;
    $37 = $221;
    $222 = $36;
    $35 = $222;
    $223 = $35;
    $224 = HEAP32[$223>>2]|0;
    HEAP32[$38>>2] = $224;
    $225 = $37;
    $33 = $225;
    $226 = $33;
    $227 = HEAP32[$226>>2]|0;
    $228 = $36;
    HEAP32[$228>>2] = $227;
    $34 = $38;
    $229 = $34;
    $230 = HEAP32[$229>>2]|0;
    $231 = $37;
    HEAP32[$231>>2] = $230;
    $41 = $95;
    $232 = $41;
    $233 = ((($232)) + 12|0);
    $40 = $233;
    $234 = $40;
    $39 = $234;
    $235 = $39;
    $44 = $92;
    $236 = $44;
    $237 = ((($236)) + 12|0);
    $43 = $237;
    $238 = $43;
    $42 = $238;
    $239 = $42;
    $48 = $235;
    $49 = $239;
    $240 = $48;
    $47 = $240;
    $241 = $47;
    $242 = HEAP32[$241>>2]|0;
    HEAP32[$50>>2] = $242;
    $243 = $49;
    $45 = $243;
    $244 = $45;
    $245 = HEAP32[$244>>2]|0;
    $246 = $48;
    HEAP32[$246>>2] = $245;
    $46 = $50;
    $247 = $46;
    $248 = HEAP32[$247>>2]|0;
    $249 = $49;
    HEAP32[$249>>2] = $248;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($92);
    break;
   }
   $63 = $95;
   $108 = $63;
   $109 = ((($108)) + 12|0);
   $62 = $109;
   $110 = $62;
   $61 = $110;
   $111 = $61;
   $112 = HEAP32[$111>>2]|0;
   $113 = ((($95)) + 8|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = $112;
   $116 = $114;
   $117 = (($115) - ($116))|0;
   $118 = (($117|0) / 4)&-1;
   $88 = $118;
   $119 = $88;
   $120 = (($119) + 1)|0;
   $121 = (($120|0) / 2)&-1;
   $88 = $121;
   $122 = ((($95)) + 4|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ((($95)) + 8|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = ((($95)) + 8|0);
   $127 = HEAP32[$126>>2]|0;
   $128 = $88;
   $129 = (($127) + ($128<<2)|0);
   $58 = $123;
   $59 = $125;
   $60 = $129;
   $130 = $58;
   $57 = $130;
   $131 = $57;
   $132 = $59;
   $51 = $132;
   $133 = $51;
   $134 = $60;
   $52 = $134;
   $135 = $52;
   $53 = $131;
   $54 = $133;
   $55 = $135;
   $136 = $54;
   $137 = $53;
   $138 = $136;
   $139 = $137;
   $140 = (($138) - ($139))|0;
   $141 = (($140|0) / 4)&-1;
   $56 = $141;
   $142 = $56;
   $143 = ($142>>>0)>(0);
   if ($143) {
    $144 = $56;
    $145 = $55;
    $146 = (0 - ($144))|0;
    $147 = (($145) + ($146<<2)|0);
    $55 = $147;
    $148 = $55;
    $149 = $53;
    $150 = $56;
    $151 = $150<<2;
    _memmove(($148|0),($149|0),($151|0))|0;
   }
   $152 = $55;
   $153 = ((($95)) + 4|0);
   HEAP32[$153>>2] = $152;
   $154 = $88;
   $155 = ((($95)) + 8|0);
   $156 = HEAP32[$155>>2]|0;
   $157 = (($156) + ($154<<2)|0);
   HEAP32[$155>>2] = $157;
  }
 } while(0);
 $66 = $95;
 $250 = $66;
 $251 = ((($250)) + 12|0);
 $65 = $251;
 $252 = $65;
 $64 = $252;
 $253 = $64;
 $254 = ((($95)) + 4|0);
 $255 = HEAP32[$254>>2]|0;
 $256 = ((($255)) + -4|0);
 $67 = $256;
 $257 = $67;
 $258 = $87;
 $68 = $258;
 $259 = $68;
 $79 = $253;
 $80 = $257;
 $81 = $259;
 $260 = $79;
 $261 = $80;
 $262 = $81;
 $78 = $262;
 $263 = $78;
 ;HEAP8[$77>>0]=HEAP8[$82>>0]|0;
 $74 = $260;
 $75 = $261;
 $76 = $263;
 $264 = $74;
 $265 = $75;
 $266 = $76;
 $73 = $266;
 $267 = $73;
 $70 = $264;
 $71 = $265;
 $72 = $267;
 $268 = $71;
 $269 = $72;
 $69 = $269;
 $270 = $69;
 $271 = HEAP32[$270>>2]|0;
 HEAP32[$268>>2] = $271;
 $272 = ((($95)) + 4|0);
 $273 = HEAP32[$272>>2]|0;
 $274 = ((($273)) + -4|0);
 HEAP32[$272>>2] = $274;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE9push_backEOS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(384|0);
 $$byval_copy1 = sp + 376|0;
 $$byval_copy = sp + 372|0;
 $14 = sp + 8|0;
 $17 = sp + 381|0;
 $23 = sp + 292|0;
 $29 = sp + 268|0;
 $35 = sp + 244|0;
 $47 = sp + 196|0;
 $74 = sp;
 $79 = sp + 380|0;
 $87 = sp + 44|0;
 $88 = sp + 40|0;
 $89 = sp + 20|0;
 $90 = sp + 16|0;
 $91 = sp + 12|0;
 $83 = $0;
 $84 = $1;
 $92 = $83;
 $93 = ((($92)) + 8|0);
 $94 = HEAP32[$93>>2]|0;
 $82 = $92;
 $95 = $82;
 $96 = ((($95)) + 12|0);
 $81 = $96;
 $97 = $81;
 $80 = $97;
 $98 = $80;
 $99 = HEAP32[$98>>2]|0;
 $100 = ($94|0)==($99|0);
 do {
  if ($100) {
   $101 = ((($92)) + 4|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = HEAP32[$92>>2]|0;
   $104 = ($102>>>0)>($103>>>0);
   if (!($104)) {
    $50 = $92;
    $151 = $50;
    $152 = ((($151)) + 12|0);
    $49 = $152;
    $153 = $49;
    $48 = $153;
    $154 = $48;
    $155 = HEAP32[$154>>2]|0;
    $156 = HEAP32[$92>>2]|0;
    $157 = $155;
    $158 = $156;
    $159 = (($157) - ($158))|0;
    $160 = (($159|0) / 4)&-1;
    $161 = $160<<1;
    HEAP32[$87>>2] = $161;
    HEAP32[$88>>2] = 1;
    $15 = $87;
    $16 = $88;
    $162 = $15;
    $163 = $16;
    ;HEAP8[$14>>0]=HEAP8[$17>>0]|0;
    $12 = $162;
    $13 = $163;
    $164 = $12;
    $165 = $13;
    $9 = $14;
    $10 = $164;
    $11 = $165;
    $166 = $10;
    $167 = HEAP32[$166>>2]|0;
    $168 = $11;
    $169 = HEAP32[$168>>2]|0;
    $170 = ($167>>>0)<($169>>>0);
    $171 = $13;
    $172 = $12;
    $173 = $170 ? $171 : $172;
    $174 = HEAP32[$173>>2]|0;
    $86 = $174;
    $175 = $86;
    $176 = $86;
    $177 = (($176>>>0) / 4)&-1;
    $4 = $92;
    $178 = $4;
    $179 = ((($178)) + 12|0);
    $3 = $179;
    $180 = $3;
    $181 = ((($180)) + 4|0);
    $2 = $181;
    $182 = $2;
    $183 = HEAP32[$182>>2]|0;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($89,$175,$177,$183);
    $184 = ((($92)) + 4|0);
    $185 = HEAP32[$184>>2]|0;
    $5 = $90;
    $6 = $185;
    $186 = $5;
    $187 = $6;
    HEAP32[$186>>2] = $187;
    $188 = ((($92)) + 8|0);
    $189 = HEAP32[$188>>2]|0;
    $7 = $91;
    $8 = $189;
    $190 = $7;
    $191 = $8;
    HEAP32[$190>>2] = $191;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$90>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$91>>2]|0;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($89,$$byval_copy,$$byval_copy1);
    $21 = $92;
    $22 = $89;
    $192 = $21;
    $20 = $192;
    $193 = $20;
    $194 = HEAP32[$193>>2]|0;
    HEAP32[$23>>2] = $194;
    $195 = $22;
    $18 = $195;
    $196 = $18;
    $197 = HEAP32[$196>>2]|0;
    $198 = $21;
    HEAP32[$198>>2] = $197;
    $19 = $23;
    $199 = $19;
    $200 = HEAP32[$199>>2]|0;
    $201 = $22;
    HEAP32[$201>>2] = $200;
    $202 = ((($92)) + 4|0);
    $203 = ((($89)) + 4|0);
    $27 = $202;
    $28 = $203;
    $204 = $27;
    $26 = $204;
    $205 = $26;
    $206 = HEAP32[$205>>2]|0;
    HEAP32[$29>>2] = $206;
    $207 = $28;
    $24 = $207;
    $208 = $24;
    $209 = HEAP32[$208>>2]|0;
    $210 = $27;
    HEAP32[$210>>2] = $209;
    $25 = $29;
    $211 = $25;
    $212 = HEAP32[$211>>2]|0;
    $213 = $28;
    HEAP32[$213>>2] = $212;
    $214 = ((($92)) + 8|0);
    $215 = ((($89)) + 8|0);
    $33 = $214;
    $34 = $215;
    $216 = $33;
    $32 = $216;
    $217 = $32;
    $218 = HEAP32[$217>>2]|0;
    HEAP32[$35>>2] = $218;
    $219 = $34;
    $30 = $219;
    $220 = $30;
    $221 = HEAP32[$220>>2]|0;
    $222 = $33;
    HEAP32[$222>>2] = $221;
    $31 = $35;
    $223 = $31;
    $224 = HEAP32[$223>>2]|0;
    $225 = $34;
    HEAP32[$225>>2] = $224;
    $38 = $92;
    $226 = $38;
    $227 = ((($226)) + 12|0);
    $37 = $227;
    $228 = $37;
    $36 = $228;
    $229 = $36;
    $41 = $89;
    $230 = $41;
    $231 = ((($230)) + 12|0);
    $40 = $231;
    $232 = $40;
    $39 = $232;
    $233 = $39;
    $45 = $229;
    $46 = $233;
    $234 = $45;
    $44 = $234;
    $235 = $44;
    $236 = HEAP32[$235>>2]|0;
    HEAP32[$47>>2] = $236;
    $237 = $46;
    $42 = $237;
    $238 = $42;
    $239 = HEAP32[$238>>2]|0;
    $240 = $45;
    HEAP32[$240>>2] = $239;
    $43 = $47;
    $241 = $43;
    $242 = HEAP32[$241>>2]|0;
    $243 = $46;
    HEAP32[$243>>2] = $242;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($89);
    break;
   }
   $105 = ((($92)) + 4|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = HEAP32[$92>>2]|0;
   $108 = $106;
   $109 = $107;
   $110 = (($108) - ($109))|0;
   $111 = (($110|0) / 4)&-1;
   $85 = $111;
   $112 = $85;
   $113 = (($112) + 1)|0;
   $114 = (($113|0) / 2)&-1;
   $85 = $114;
   $115 = ((($92)) + 4|0);
   $116 = HEAP32[$115>>2]|0;
   $117 = ((($92)) + 8|0);
   $118 = HEAP32[$117>>2]|0;
   $119 = ((($92)) + 4|0);
   $120 = HEAP32[$119>>2]|0;
   $121 = $85;
   $122 = (0 - ($121))|0;
   $123 = (($120) + ($122<<2)|0);
   $58 = $116;
   $59 = $118;
   $60 = $123;
   $124 = $58;
   $57 = $124;
   $125 = $57;
   $126 = $59;
   $51 = $126;
   $127 = $51;
   $128 = $60;
   $52 = $128;
   $129 = $52;
   $53 = $125;
   $54 = $127;
   $55 = $129;
   $130 = $54;
   $131 = $53;
   $132 = $130;
   $133 = $131;
   $134 = (($132) - ($133))|0;
   $135 = (($134|0) / 4)&-1;
   $56 = $135;
   $136 = $56;
   $137 = ($136>>>0)>(0);
   if ($137) {
    $138 = $55;
    $139 = $53;
    $140 = $56;
    $141 = $140<<2;
    _memmove(($138|0),($139|0),($141|0))|0;
   }
   $142 = $55;
   $143 = $56;
   $144 = (($142) + ($143<<2)|0);
   $145 = ((($92)) + 8|0);
   HEAP32[$145>>2] = $144;
   $146 = $85;
   $147 = ((($92)) + 4|0);
   $148 = HEAP32[$147>>2]|0;
   $149 = (0 - ($146))|0;
   $150 = (($148) + ($149<<2)|0);
   HEAP32[$147>>2] = $150;
  }
 } while(0);
 $63 = $92;
 $244 = $63;
 $245 = ((($244)) + 12|0);
 $62 = $245;
 $246 = $62;
 $247 = ((($246)) + 4|0);
 $61 = $247;
 $248 = $61;
 $249 = HEAP32[$248>>2]|0;
 $250 = ((($92)) + 8|0);
 $251 = HEAP32[$250>>2]|0;
 $64 = $251;
 $252 = $64;
 $253 = $84;
 $65 = $253;
 $254 = $65;
 $76 = $249;
 $77 = $252;
 $78 = $254;
 $255 = $76;
 $256 = $77;
 $257 = $78;
 $75 = $257;
 $258 = $75;
 ;HEAP8[$74>>0]=HEAP8[$79>>0]|0;
 $71 = $255;
 $72 = $256;
 $73 = $258;
 $259 = $71;
 $260 = $72;
 $261 = $73;
 $70 = $261;
 $262 = $70;
 $67 = $259;
 $68 = $260;
 $69 = $262;
 $263 = $68;
 $264 = $69;
 $66 = $264;
 $265 = $66;
 $266 = HEAP32[$265>>2]|0;
 HEAP32[$263>>2] = $266;
 $267 = ((($92)) + 8|0);
 $268 = HEAP32[$267>>2]|0;
 $269 = ((($268)) + 4|0);
 HEAP32[$267>>2] = $269;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE10push_frontERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $$byval_copy1 = sp + 384|0;
 $$byval_copy = sp + 380|0;
 $10 = sp + 8|0;
 $13 = sp + 389|0;
 $26 = sp + 288|0;
 $32 = sp + 264|0;
 $38 = sp + 240|0;
 $50 = sp + 192|0;
 $76 = sp;
 $81 = sp + 388|0;
 $89 = sp + 44|0;
 $90 = sp + 40|0;
 $91 = sp + 20|0;
 $92 = sp + 16|0;
 $93 = sp + 12|0;
 $85 = $0;
 $86 = $1;
 $94 = $85;
 $95 = ((($94)) + 4|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = HEAP32[$94>>2]|0;
 $98 = ($96|0)==($97|0);
 do {
  if ($98) {
   $99 = ((($94)) + 8|0);
   $100 = HEAP32[$99>>2]|0;
   $84 = $94;
   $101 = $84;
   $102 = ((($101)) + 12|0);
   $83 = $102;
   $103 = $83;
   $82 = $103;
   $104 = $82;
   $105 = HEAP32[$104>>2]|0;
   $106 = ($100>>>0)<($105>>>0);
   if (!($106)) {
    $20 = $94;
    $157 = $20;
    $158 = ((($157)) + 12|0);
    $19 = $158;
    $159 = $19;
    $18 = $159;
    $160 = $18;
    $161 = HEAP32[$160>>2]|0;
    $162 = HEAP32[$94>>2]|0;
    $163 = $161;
    $164 = $162;
    $165 = (($163) - ($164))|0;
    $166 = (($165|0) / 4)&-1;
    $167 = $166<<1;
    HEAP32[$89>>2] = $167;
    HEAP32[$90>>2] = 1;
    $11 = $89;
    $12 = $90;
    $168 = $11;
    $169 = $12;
    ;HEAP8[$10>>0]=HEAP8[$13>>0]|0;
    $8 = $168;
    $9 = $169;
    $170 = $8;
    $171 = $9;
    $5 = $10;
    $6 = $170;
    $7 = $171;
    $172 = $6;
    $173 = HEAP32[$172>>2]|0;
    $174 = $7;
    $175 = HEAP32[$174>>2]|0;
    $176 = ($173>>>0)<($175>>>0);
    $177 = $9;
    $178 = $8;
    $179 = $176 ? $177 : $178;
    $180 = HEAP32[$179>>2]|0;
    $88 = $180;
    $181 = $88;
    $182 = $88;
    $183 = (($182) + 3)|0;
    $184 = (($183>>>0) / 4)&-1;
    $4 = $94;
    $185 = $4;
    $186 = ((($185)) + 12|0);
    $3 = $186;
    $187 = $3;
    $188 = ((($187)) + 4|0);
    $2 = $188;
    $189 = $2;
    $190 = HEAP32[$189>>2]|0;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEEC2EmmS7_($91,$181,$184,$190);
    $191 = ((($94)) + 4|0);
    $192 = HEAP32[$191>>2]|0;
    $14 = $92;
    $15 = $192;
    $193 = $14;
    $194 = $15;
    HEAP32[$193>>2] = $194;
    $195 = ((($94)) + 8|0);
    $196 = HEAP32[$195>>2]|0;
    $16 = $93;
    $17 = $196;
    $197 = $16;
    $198 = $17;
    HEAP32[$197>>2] = $198;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$92>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$93>>2]|0;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEE18__construct_at_endINS_13move_iteratorIPS4_EEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESE_SE_($91,$$byval_copy,$$byval_copy1);
    $24 = $94;
    $25 = $91;
    $199 = $24;
    $23 = $199;
    $200 = $23;
    $201 = HEAP32[$200>>2]|0;
    HEAP32[$26>>2] = $201;
    $202 = $25;
    $21 = $202;
    $203 = $21;
    $204 = HEAP32[$203>>2]|0;
    $205 = $24;
    HEAP32[$205>>2] = $204;
    $22 = $26;
    $206 = $22;
    $207 = HEAP32[$206>>2]|0;
    $208 = $25;
    HEAP32[$208>>2] = $207;
    $209 = ((($94)) + 4|0);
    $210 = ((($91)) + 4|0);
    $30 = $209;
    $31 = $210;
    $211 = $30;
    $29 = $211;
    $212 = $29;
    $213 = HEAP32[$212>>2]|0;
    HEAP32[$32>>2] = $213;
    $214 = $31;
    $27 = $214;
    $215 = $27;
    $216 = HEAP32[$215>>2]|0;
    $217 = $30;
    HEAP32[$217>>2] = $216;
    $28 = $32;
    $218 = $28;
    $219 = HEAP32[$218>>2]|0;
    $220 = $31;
    HEAP32[$220>>2] = $219;
    $221 = ((($94)) + 8|0);
    $222 = ((($91)) + 8|0);
    $36 = $221;
    $37 = $222;
    $223 = $36;
    $35 = $223;
    $224 = $35;
    $225 = HEAP32[$224>>2]|0;
    HEAP32[$38>>2] = $225;
    $226 = $37;
    $33 = $226;
    $227 = $33;
    $228 = HEAP32[$227>>2]|0;
    $229 = $36;
    HEAP32[$229>>2] = $228;
    $34 = $38;
    $230 = $34;
    $231 = HEAP32[$230>>2]|0;
    $232 = $37;
    HEAP32[$232>>2] = $231;
    $41 = $94;
    $233 = $41;
    $234 = ((($233)) + 12|0);
    $40 = $234;
    $235 = $40;
    $39 = $235;
    $236 = $39;
    $44 = $91;
    $237 = $44;
    $238 = ((($237)) + 12|0);
    $43 = $238;
    $239 = $43;
    $42 = $239;
    $240 = $42;
    $48 = $236;
    $49 = $240;
    $241 = $48;
    $47 = $241;
    $242 = $47;
    $243 = HEAP32[$242>>2]|0;
    HEAP32[$50>>2] = $243;
    $244 = $49;
    $45 = $244;
    $245 = $45;
    $246 = HEAP32[$245>>2]|0;
    $247 = $48;
    HEAP32[$247>>2] = $246;
    $46 = $50;
    $248 = $46;
    $249 = HEAP32[$248>>2]|0;
    $250 = $49;
    HEAP32[$250>>2] = $249;
    __ZNSt3__214__split_bufferIPN7lazperf6models10arithmeticERNS_9allocatorIS4_EEED2Ev($91);
    break;
   }
   $63 = $94;
   $107 = $63;
   $108 = ((($107)) + 12|0);
   $62 = $108;
   $109 = $62;
   $61 = $109;
   $110 = $61;
   $111 = HEAP32[$110>>2]|0;
   $112 = ((($94)) + 8|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = $111;
   $115 = $113;
   $116 = (($114) - ($115))|0;
   $117 = (($116|0) / 4)&-1;
   $87 = $117;
   $118 = $87;
   $119 = (($118) + 1)|0;
   $120 = (($119|0) / 2)&-1;
   $87 = $120;
   $121 = ((($94)) + 4|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($94)) + 8|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($94)) + 8|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = $87;
   $128 = (($126) + ($127<<2)|0);
   $58 = $122;
   $59 = $124;
   $60 = $128;
   $129 = $58;
   $57 = $129;
   $130 = $57;
   $131 = $59;
   $51 = $131;
   $132 = $51;
   $133 = $60;
   $52 = $133;
   $134 = $52;
   $53 = $130;
   $54 = $132;
   $55 = $134;
   $135 = $54;
   $136 = $53;
   $137 = $135;
   $138 = $136;
   $139 = (($137) - ($138))|0;
   $140 = (($139|0) / 4)&-1;
   $56 = $140;
   $141 = $56;
   $142 = ($141>>>0)>(0);
   if ($142) {
    $143 = $56;
    $144 = $55;
    $145 = (0 - ($143))|0;
    $146 = (($144) + ($145<<2)|0);
    $55 = $146;
    $147 = $55;
    $148 = $53;
    $149 = $56;
    $150 = $149<<2;
    _memmove(($147|0),($148|0),($150|0))|0;
   }
   $151 = $55;
   $152 = ((($94)) + 4|0);
   HEAP32[$152>>2] = $151;
   $153 = $87;
   $154 = ((($94)) + 8|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = (($155) + ($153<<2)|0);
   HEAP32[$154>>2] = $156;
  }
 } while(0);
 $66 = $94;
 $251 = $66;
 $252 = ((($251)) + 12|0);
 $65 = $252;
 $253 = $65;
 $254 = ((($253)) + 4|0);
 $64 = $254;
 $255 = $64;
 $256 = HEAP32[$255>>2]|0;
 $257 = ((($94)) + 4|0);
 $258 = HEAP32[$257>>2]|0;
 $259 = ((($258)) + -4|0);
 $67 = $259;
 $260 = $67;
 $261 = $86;
 $78 = $256;
 $79 = $260;
 $80 = $261;
 $262 = $78;
 $263 = $79;
 $264 = $80;
 $77 = $264;
 $265 = $77;
 ;HEAP8[$76>>0]=HEAP8[$81>>0]|0;
 $73 = $262;
 $74 = $263;
 $75 = $265;
 $266 = $73;
 $267 = $74;
 $268 = $75;
 $72 = $268;
 $269 = $72;
 $69 = $266;
 $70 = $267;
 $71 = $269;
 $270 = $70;
 $271 = $71;
 $68 = $271;
 $272 = $68;
 $273 = HEAP32[$272>>2]|0;
 HEAP32[$270>>2] = $273;
 $274 = ((($94)) + 4|0);
 $275 = HEAP32[$274>>2]|0;
 $276 = ((($275)) + -4|0);
 HEAP32[$274>>2] = $276;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE11__vallocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $41 = $0;
 $42 = $1;
 $43 = $41;
 $44 = $42;
 $45 = (__ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($43)|0);
 $46 = ($44>>>0)>($45>>>0);
 if ($46) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($43);
  // unreachable;
 } else {
  $40 = $43;
  $47 = $40;
  $48 = ((($47)) + 8|0);
  $39 = $48;
  $49 = $39;
  $38 = $49;
  $50 = $38;
  $51 = $42;
  $8 = $50;
  $9 = $51;
  $52 = $8;
  $53 = $9;
  $5 = $52;
  $6 = $53;
  $7 = 0;
  $54 = $5;
  $4 = $54;
  $55 = $6;
  $2 = $55;
  $3 = 1;
  $56 = $2;
  $57 = (__Znwm($56)|0);
  $58 = ((($43)) + 4|0);
  HEAP32[$58>>2] = $57;
  HEAP32[$43>>2] = $57;
  $59 = HEAP32[$43>>2]|0;
  $60 = $42;
  $61 = (($59) + ($60)|0);
  $12 = $43;
  $62 = $12;
  $63 = ((($62)) + 8|0);
  $11 = $63;
  $64 = $11;
  $10 = $64;
  $65 = $10;
  HEAP32[$65>>2] = $61;
  $36 = $43;
  $37 = 0;
  $66 = $36;
  $35 = $66;
  $67 = $35;
  $68 = HEAP32[$67>>2]|0;
  $34 = $68;
  $69 = $34;
  $14 = $66;
  $70 = $14;
  $71 = HEAP32[$70>>2]|0;
  $13 = $71;
  $72 = $13;
  $19 = $66;
  $73 = $19;
  $18 = $73;
  $74 = $18;
  $17 = $74;
  $75 = $17;
  $76 = ((($75)) + 8|0);
  $16 = $76;
  $77 = $16;
  $15 = $77;
  $78 = $15;
  $79 = HEAP32[$78>>2]|0;
  $80 = HEAP32[$74>>2]|0;
  $81 = $79;
  $82 = $80;
  $83 = (($81) - ($82))|0;
  $84 = (($72) + ($83)|0);
  $21 = $66;
  $85 = $21;
  $86 = HEAP32[$85>>2]|0;
  $20 = $86;
  $87 = $20;
  $26 = $66;
  $88 = $26;
  $25 = $88;
  $89 = $25;
  $24 = $89;
  $90 = $24;
  $91 = ((($90)) + 8|0);
  $23 = $91;
  $92 = $23;
  $22 = $92;
  $93 = $22;
  $94 = HEAP32[$93>>2]|0;
  $95 = HEAP32[$89>>2]|0;
  $96 = $94;
  $97 = $95;
  $98 = (($96) - ($97))|0;
  $99 = (($87) + ($98)|0);
  $28 = $66;
  $100 = $28;
  $101 = HEAP32[$100>>2]|0;
  $27 = $101;
  $102 = $27;
  $103 = $37;
  $104 = (($102) + ($103)|0);
  $29 = $66;
  $30 = $69;
  $31 = $84;
  $32 = $99;
  $33 = $104;
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf6detail18Byte10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 __ZN7lazperf6detail10Byte10BaseC2Em($6,$7);
 $8 = ((($6)) + 56|0);
 $9 = $4;
 HEAP32[$8>>2] = $9;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail18Byte10Decompressor10decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(288|0);
 $4 = sp + 264|0;
 $7 = sp + 252|0;
 $11 = sp + 236|0;
 $14 = sp + 224|0;
 $19 = sp + 204|0;
 $22 = sp + 192|0;
 $45 = sp + 100|0;
 $49 = sp + 84|0;
 $61 = sp + 36|0;
 $62 = sp + 32|0;
 $63 = sp + 24|0;
 $64 = sp + 16|0;
 $65 = sp + 12|0;
 $66 = sp + 8|0;
 $67 = sp;
 $58 = $0;
 $59 = $1;
 $68 = $58;
 $69 = HEAP32[$68>>2]|0;
 $70 = ($69|0)==(0);
 if ($70) {
  $71 = $59;
  $57 = $71;
  $196 = $57;
  STACKTOP = sp;return ($196|0);
 }
 $72 = ((($68)) + 4|0);
 $73 = HEAP8[$72>>0]|0;
 $74 = $73&1;
 if (!($74)) {
  $75 = ((($68)) + 56|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE11getInStreamEv($76)|0);
  $78 = $59;
  $79 = HEAP32[$68>>2]|0;
  __ZN7lazperf10InCbStream8getBytesEPhm($77,$78,$79);
  $80 = $59;
  $81 = $59;
  $82 = HEAP32[$68>>2]|0;
  $83 = (($81) + ($82)|0);
  $84 = ((($68)) + 8|0);
  $56 = $84;
  $85 = $56;
  $86 = HEAP32[$85>>2]|0;
  $55 = $86;
  $87 = $55;
  $38 = $80;
  $39 = $83;
  $40 = $87;
  $88 = $38;
  $37 = $88;
  $89 = $37;
  $90 = $39;
  $32 = $90;
  $91 = $32;
  $92 = $40;
  $33 = $92;
  $93 = $33;
  $34 = $89;
  $35 = $91;
  $36 = $93;
  while(1) {
   $94 = $34;
   $95 = $35;
   $96 = ($94|0)!=($95|0);
   if (!($96)) {
    break;
   }
   $97 = $34;
   $98 = HEAP8[$97>>0]|0;
   $99 = $36;
   HEAP8[$99>>0] = $98;
   $100 = $34;
   $101 = ((($100)) + 1|0);
   $34 = $101;
   $102 = $36;
   $103 = ((($102)) + 1|0);
   $36 = $103;
  }
  $104 = ((($68)) + 4|0);
  HEAP8[$104>>0] = 1;
  $105 = $59;
  $106 = HEAP32[$68>>2]|0;
  $107 = (($105) + ($106)|0);
  $57 = $107;
  $196 = $57;
  STACKTOP = sp;return ($196|0);
 }
 $108 = ((($68)) + 20|0);
 $60 = $108;
 $109 = $60;
 $15 = $109;
 $110 = $15;
 $111 = HEAP32[$110>>2]|0;
 $12 = $110;
 $13 = $111;
 $112 = $13;
 $9 = $11;
 $10 = $112;
 $113 = $9;
 $114 = $10;
 HEAP32[$113>>2] = $114;
 $115 = HEAP32[$11>>2]|0;
 HEAP32[$14>>2] = $115;
 $116 = HEAP32[$14>>2]|0;
 HEAP32[$61>>2] = $116;
 $117 = ((($68)) + 8|0);
 $8 = $117;
 $118 = $8;
 $119 = HEAP32[$118>>2]|0;
 $5 = $118;
 $6 = $119;
 $120 = $6;
 $2 = $4;
 $3 = $120;
 $121 = $2;
 $122 = $3;
 HEAP32[$121>>2] = $122;
 $123 = HEAP32[$4>>2]|0;
 HEAP32[$7>>2] = $123;
 $124 = HEAP32[$7>>2]|0;
 HEAP32[$62>>2] = $124;
 $125 = ((($68)) + 32|0);
 $16 = $125;
 $126 = $16;
 __ZNSt3__212__deque_baseIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE5beginEv($63,$126);
 while(1) {
  $127 = ((($68)) + 8|0);
  $23 = $127;
  $128 = $23;
  $129 = ((($128)) + 4|0);
  $130 = HEAP32[$129>>2]|0;
  $20 = $128;
  $21 = $130;
  $131 = $21;
  $17 = $19;
  $18 = $131;
  $132 = $17;
  $133 = $18;
  HEAP32[$132>>2] = $133;
  $134 = HEAP32[$19>>2]|0;
  HEAP32[$22>>2] = $134;
  $135 = HEAP32[$22>>2]|0;
  HEAP32[$64>>2] = $135;
  $28 = $62;
  $29 = $64;
  $136 = $28;
  $137 = $29;
  $26 = $136;
  $27 = $137;
  $138 = $26;
  $25 = $138;
  $139 = $25;
  $140 = HEAP32[$139>>2]|0;
  $141 = $27;
  $24 = $141;
  $142 = $24;
  $143 = HEAP32[$142>>2]|0;
  $144 = ($140|0)==($143|0);
  $145 = $144 ^ 1;
  if (!($145)) {
   break;
  }
  $30 = $62;
  $146 = $30;
  $147 = HEAP32[$146>>2]|0;
  $148 = HEAP8[$147>>0]|0;
  $149 = $148&255;
  $150 = ((($68)) + 56|0);
  $151 = HEAP32[$150>>2]|0;
  $31 = $63;
  $152 = $31;
  $153 = ((($152)) + 4|0);
  $154 = HEAP32[$153>>2]|0;
  $155 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($151,$154)|0);
  $156 = (($149) + ($155))|0;
  $157 = $156&255;
  $41 = $61;
  $158 = $41;
  $159 = HEAP32[$158>>2]|0;
  HEAP8[$159>>0] = $157;
  $42 = $61;
  $160 = $42;
  $161 = HEAP32[$160>>2]|0;
  $162 = HEAP8[$161>>0]|0;
  $163 = $59;
  HEAP8[$163>>0] = $162;
  $43 = $62;
  $164 = $43;
  $165 = HEAP32[$164>>2]|0;
  HEAP8[$165>>0] = $162;
  $46 = $62;
  $47 = 0;
  $166 = $46;
  ;HEAP32[$45>>2]=HEAP32[$166>>2]|0;
  $44 = $166;
  $167 = $44;
  $168 = HEAP32[$167>>2]|0;
  $169 = ((($168)) + 1|0);
  HEAP32[$167>>2] = $169;
  $170 = HEAP32[$45>>2]|0;
  HEAP32[$65>>2] = $170;
  $171 = $59;
  $172 = ((($171)) + 1|0);
  $59 = $172;
  $50 = $61;
  $51 = 0;
  $173 = $50;
  ;HEAP32[$49>>2]=HEAP32[$173>>2]|0;
  $48 = $173;
  $174 = $48;
  $175 = HEAP32[$174>>2]|0;
  $176 = ((($175)) + 1|0);
  HEAP32[$174>>2] = $176;
  $177 = HEAP32[$49>>2]|0;
  HEAP32[$66>>2] = $177;
  $53 = $63;
  $54 = 0;
  $178 = $53;
  ;HEAP32[$67>>2]=HEAP32[$178>>2]|0;HEAP32[$67+4>>2]=HEAP32[$178+4>>2]|0;
  $52 = $178;
  $179 = $52;
  $180 = ((($179)) + 4|0);
  $181 = HEAP32[$180>>2]|0;
  $182 = ((($181)) + 44|0);
  HEAP32[$180>>2] = $182;
  $183 = HEAP32[$179>>2]|0;
  $184 = HEAP32[$183>>2]|0;
  $185 = $182;
  $186 = $184;
  $187 = (($185) - ($186))|0;
  $188 = (($187|0) / 44)&-1;
  $189 = ($188|0)==(93);
  if ($189) {
   $190 = HEAP32[$179>>2]|0;
   $191 = ((($190)) + 4|0);
   HEAP32[$179>>2] = $191;
   $192 = HEAP32[$179>>2]|0;
   $193 = HEAP32[$192>>2]|0;
   $194 = ((($179)) + 4|0);
   HEAP32[$194>>2] = $193;
  }
 }
 $195 = $59;
 $57 = $195;
 $196 = $57;
 STACKTOP = sp;return ($196|0);
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE11getInStreamEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf6detail10Byte14BaseC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 16|0;
 $14 = $0;
 $15 = $1;
 $17 = $14;
 $18 = $15;
 HEAP32[$17>>2] = $18;
 $19 = ((($17)) + 4|0);
 HEAP32[$19>>2] = -1;
 $20 = ((($17)) + 8|0);
 $16 = $20;
 $21 = HEAP32[$17>>2]|0;
 __ZN7lazperf6detail10Byte14Base10ChannelCtxC2Em($20,$21);
 $22 = ((($20)) + 28|0);
 $16 = $22;
 $23 = HEAP32[$17>>2]|0;
 __ZN7lazperf6detail10Byte14Base10ChannelCtxC2Em($22,$23);
 $24 = ((($22)) + 28|0);
 $16 = $24;
 $25 = HEAP32[$17>>2]|0;
 __ZN7lazperf6detail10Byte14Base10ChannelCtxC2Em($24,$25);
 $26 = ((($24)) + 28|0);
 $16 = $26;
 $27 = HEAP32[$17>>2]|0;
 __ZN7lazperf6detail10Byte14Base10ChannelCtxC2Em($26,$27);
 $28 = ((($17)) + 120|0);
 $13 = $28;
 $29 = $13;
 $11 = $29;
 $30 = $11;
 $10 = $30;
 HEAP32[$30>>2] = 0;
 $31 = ((($30)) + 4|0);
 HEAP32[$31>>2] = 0;
 $32 = ((($30)) + 8|0);
 HEAP32[$12>>2] = 0;
 $8 = $32;
 $9 = $12;
 $33 = $8;
 $34 = $9;
 $7 = $34;
 $35 = $7;
 $3 = $33;
 $4 = $35;
 $36 = $3;
 $37 = $4;
 $2 = $37;
 HEAP32[$36>>2] = 0;
 $6 = $33;
 $38 = $6;
 $5 = $38;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail10Byte14Base10ChannelCtxC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 HEAP32[$5>>2] = 0;
 $6 = ((($5)) + 4|0);
 $7 = $3;
 __ZNSt3__26vectorIhNS_9allocatorIhEEEC2Em($6,$7);
 $8 = ((($5)) + 16|0);
 $9 = $3;
 __ZN7lazperf6models10arithmeticC2EjbPj($4,256,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($8,$9,$4);
 __ZN7lazperf6models10arithmeticD2Ev($4);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $15 = sp;
 $20 = sp + 157|0;
 $29 = sp + 156|0;
 $40 = sp + 16|0;
 $41 = $0;
 $42 = $1;
 $43 = $2;
 $44 = $41;
 $39 = $44;
 $45 = $39;
 $38 = $45;
 HEAP32[$45>>2] = 0;
 $46 = ((($45)) + 4|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($45)) + 8|0);
 HEAP32[$40>>2] = 0;
 $36 = $47;
 $37 = $40;
 $48 = $36;
 $49 = $37;
 $35 = $49;
 $50 = $35;
 $31 = $48;
 $32 = $50;
 $51 = $31;
 $52 = $32;
 $30 = $52;
 HEAP32[$51>>2] = 0;
 $34 = $48;
 $53 = $34;
 $33 = $53;
 $54 = $42;
 $55 = ($54>>>0)>(0);
 if (!($55)) {
  STACKTOP = sp;return;
 }
 $56 = $42;
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE11__vallocateEm($44,$56);
 $57 = $42;
 $58 = $43;
 $25 = $44;
 $26 = $57;
 $27 = $58;
 $59 = $25;
 $24 = $59;
 $60 = $24;
 $61 = ((($60)) + 8|0);
 $23 = $61;
 $62 = $23;
 $22 = $62;
 $63 = $22;
 $28 = $63;
 while(1) {
  $4 = $29;
  $5 = $59;
  $6 = 1;
  $64 = $28;
  $65 = ((($59)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $3 = $66;
  $67 = $3;
  $68 = $27;
  $17 = $64;
  $18 = $67;
  $19 = $68;
  $69 = $17;
  $70 = $18;
  $71 = $19;
  $16 = $71;
  $72 = $16;
  ;HEAP8[$15>>0]=HEAP8[$20>>0]|0;
  $12 = $69;
  $13 = $70;
  $14 = $72;
  $73 = $12;
  $74 = $13;
  $75 = $14;
  $11 = $75;
  $76 = $11;
  $8 = $73;
  $9 = $74;
  $10 = $76;
  $77 = $9;
  $78 = $10;
  $7 = $78;
  $79 = $7;
  __ZN7lazperf6models10arithmeticC2ERKS1_($77,$79);
  $80 = ((($59)) + 4|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = ((($81)) + 44|0);
  HEAP32[$80>>2] = $82;
  $83 = $26;
  $84 = (($83) + -1)|0;
  $26 = $84;
  $21 = $29;
  $85 = $26;
  $86 = ($85>>>0)>(0);
  if (!($86)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE11__vallocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $44 = $0;
 $45 = $1;
 $46 = $44;
 $47 = $45;
 $48 = (__ZNKSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEE8max_sizeEv($46)|0);
 $49 = ($47>>>0)>($48>>>0);
 if ($49) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($46);
  // unreachable;
 }
 $43 = $46;
 $50 = $43;
 $51 = ((($50)) + 8|0);
 $42 = $51;
 $52 = $42;
 $41 = $52;
 $53 = $41;
 $54 = $45;
 $11 = $53;
 $12 = $54;
 $55 = $11;
 $56 = $12;
 $8 = $55;
 $9 = $56;
 $10 = 0;
 $57 = $8;
 $58 = $9;
 $7 = $57;
 $59 = ($58>>>0)>(97612893);
 if ($59) {
  $4 = 21003;
  $60 = (___cxa_allocate_exception(8)|0);
  $61 = $4;
  $2 = $60;
  $3 = $61;
  $62 = $2;
  $63 = $3;
  __ZNSt11logic_errorC2EPKc($62,$63);
  HEAP32[$62>>2] = (17588);
  ___cxa_throw(($60|0),(9800|0),(617|0));
  // unreachable;
 } else {
  $64 = $9;
  $65 = ($64*44)|0;
  $5 = $65;
  $6 = 4;
  $66 = $5;
  $67 = (__Znwm($66)|0);
  $68 = ((($46)) + 4|0);
  HEAP32[$68>>2] = $67;
  HEAP32[$46>>2] = $67;
  $69 = HEAP32[$46>>2]|0;
  $70 = $45;
  $71 = (($69) + (($70*44)|0)|0);
  $15 = $46;
  $72 = $15;
  $73 = ((($72)) + 8|0);
  $14 = $73;
  $74 = $14;
  $13 = $74;
  $75 = $13;
  HEAP32[$75>>2] = $71;
  $39 = $46;
  $40 = 0;
  $76 = $39;
  $38 = $76;
  $77 = $38;
  $78 = HEAP32[$77>>2]|0;
  $37 = $78;
  $79 = $37;
  $17 = $76;
  $80 = $17;
  $81 = HEAP32[$80>>2]|0;
  $16 = $81;
  $82 = $16;
  $22 = $76;
  $83 = $22;
  $21 = $83;
  $84 = $21;
  $20 = $84;
  $85 = $20;
  $86 = ((($85)) + 8|0);
  $19 = $86;
  $87 = $19;
  $18 = $87;
  $88 = $18;
  $89 = HEAP32[$88>>2]|0;
  $90 = HEAP32[$84>>2]|0;
  $91 = $89;
  $92 = $90;
  $93 = (($91) - ($92))|0;
  $94 = (($93|0) / 44)&-1;
  $95 = (($82) + (($94*44)|0)|0);
  $24 = $76;
  $96 = $24;
  $97 = HEAP32[$96>>2]|0;
  $23 = $97;
  $98 = $23;
  $29 = $76;
  $99 = $29;
  $28 = $99;
  $100 = $28;
  $27 = $100;
  $101 = $27;
  $102 = ((($101)) + 8|0);
  $26 = $102;
  $103 = $26;
  $25 = $103;
  $104 = $25;
  $105 = HEAP32[$104>>2]|0;
  $106 = HEAP32[$100>>2]|0;
  $107 = $105;
  $108 = $106;
  $109 = (($107) - ($108))|0;
  $110 = (($109|0) / 44)&-1;
  $111 = (($98) + (($110*44)|0)|0);
  $31 = $76;
  $112 = $31;
  $113 = HEAP32[$112>>2]|0;
  $30 = $113;
  $114 = $30;
  $115 = $40;
  $116 = (($114) + (($115*44)|0)|0);
  $32 = $76;
  $33 = $79;
  $34 = $95;
  $35 = $111;
  $36 = $116;
  STACKTOP = sp;return;
 }
}
function __ZNK7lazperf6detail10Byte14Base5countEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf12MemoryStreamC2ERKS0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZNSt3__26vectorIhNS_9allocatorIhEEEC2ERKS3_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$6>>2] = $9;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $18 = sp + 36|0;
 $20 = sp;
 $22 = sp + 105|0;
 $28 = sp + 104|0;
 $26 = $0;
 $27 = $1;
 $30 = $26;
 $31 = $27;
 $25 = $31;
 $32 = $25;
 $33 = ((($32)) + 8|0);
 $24 = $33;
 $34 = $24;
 $23 = $34;
 $35 = $23;
 $21 = $35;
 $36 = $21;
 ;HEAP8[$20>>0]=HEAP8[$22>>0]|0;
 $19 = $36;
 $16 = $30;
 $17 = $28;
 $37 = $16;
 $15 = $37;
 HEAP32[$37>>2] = 0;
 $38 = ((($37)) + 4|0);
 HEAP32[$38>>2] = 0;
 $39 = ((($37)) + 8|0);
 HEAP32[$18>>2] = 0;
 $40 = $17;
 $14 = $40;
 $41 = $14;
 $11 = $39;
 $12 = $18;
 $13 = $41;
 $42 = $11;
 $43 = $12;
 $10 = $43;
 $44 = $10;
 $4 = $42;
 $5 = $44;
 $45 = $4;
 $46 = $5;
 $3 = $46;
 HEAP32[$45>>2] = 0;
 $47 = $13;
 $6 = $47;
 $48 = $6;
 $8 = $42;
 $9 = $48;
 $49 = $9;
 $7 = $49;
 $50 = $27;
 $2 = $50;
 $51 = $2;
 $52 = ((($51)) + 4|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = HEAP32[$51>>2]|0;
 $55 = $53;
 $56 = $54;
 $57 = (($55) - ($56))|0;
 $29 = $57;
 $58 = $29;
 $59 = ($58>>>0)>(0);
 if (!($59)) {
  STACKTOP = sp;return;
 }
 $60 = $29;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE11__vallocateEm($30,$60);
 $61 = $27;
 $62 = HEAP32[$61>>2]|0;
 $63 = $27;
 $64 = ((($63)) + 4|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = $29;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($30,$62,$65,$66);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $21 = sp + 68|0;
 $16 = $0;
 $17 = $1;
 $18 = $2;
 $19 = $3;
 $22 = $16;
 $15 = $22;
 $23 = $15;
 $24 = ((($23)) + 8|0);
 $14 = $24;
 $25 = $14;
 $13 = $25;
 $26 = $13;
 $20 = $26;
 $27 = $19;
 $4 = $21;
 $5 = $22;
 $6 = $27;
 $28 = $20;
 $29 = $17;
 $30 = $18;
 $31 = ((($22)) + 4|0);
 $7 = $28;
 $8 = $29;
 $9 = $30;
 $10 = $31;
 $32 = $9;
 $33 = $8;
 $34 = $32;
 $35 = $33;
 $36 = (($34) - ($35))|0;
 $11 = $36;
 $37 = $11;
 $38 = ($37|0)>(0);
 if (!($38)) {
  $12 = $21;
  STACKTOP = sp;return;
 }
 $39 = $10;
 $40 = HEAP32[$39>>2]|0;
 $41 = $8;
 $42 = $11;
 _memcpy(($40|0),($41|0),($42|0))|0;
 $43 = $11;
 $44 = $10;
 $45 = HEAP32[$44>>2]|0;
 $46 = (($45) + ($43)|0);
 HEAP32[$44>>2] = $46;
 $12 = $21;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils3sumEPKhj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0;
 while(1) {
  $5 = $3;
  $6 = (($5) + -1)|0;
  $3 = $6;
  $7 = ($5|0)!=(0);
  if (!($7)) {
   break;
  }
  $8 = $2;
  $9 = ((($8)) + 1|0);
  $2 = $9;
  $10 = HEAP8[$8>>0]|0;
  $11 = $10&255;
  $12 = $4;
  $13 = (($12) + ($11))|0;
  $4 = $13;
 }
 $14 = $4;
 STACKTOP = sp;return ($14|0);
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $8 = sp + 24|0;
 $11 = sp + 396|0;
 $58 = sp + 16|0;
 $61 = sp + 395|0;
 $68 = sp + 8|0;
 $71 = sp + 394|0;
 $79 = sp + 108|0;
 $82 = sp + 96|0;
 $92 = sp;
 $95 = sp + 393|0;
 $100 = sp + 32|0;
 $96 = $0;
 $97 = $1;
 $98 = $2;
 $103 = $96;
 $104 = $97;
 $105 = $98;
 $93 = $104;
 $94 = $105;
 $106 = $93;
 $107 = $94;
 ;HEAP8[$92>>0]=HEAP8[$95>>0]|0;
 $90 = $106;
 $91 = $107;
 $108 = $91;
 $109 = $90;
 $110 = $108;
 $111 = $109;
 $112 = (($110) - ($111))|0;
 $99 = $112;
 $113 = $99;
 $88 = $103;
 $114 = $88;
 $87 = $114;
 $115 = $87;
 $86 = $115;
 $116 = $86;
 $117 = ((($116)) + 8|0);
 $85 = $117;
 $118 = $85;
 $84 = $118;
 $119 = $84;
 $120 = HEAP32[$119>>2]|0;
 $121 = HEAP32[$115>>2]|0;
 $122 = $120;
 $123 = $121;
 $124 = (($122) - ($123))|0;
 $125 = ($113>>>0)<=($124>>>0);
 if (!($125)) {
  __ZNSt3__26vectorIhNS_9allocatorIhEEE13__vdeallocateEv($103);
  $251 = $99;
  $78 = $103;
  HEAP32[$79>>2] = $251;
  $252 = $78;
  $253 = (__ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($252)|0);
  $80 = $253;
  $254 = HEAP32[$79>>2]|0;
  $255 = $80;
  $256 = ($254>>>0)>($255>>>0);
  if ($256) {
   __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($252);
   // unreachable;
  }
  $76 = $252;
  $257 = $76;
  $75 = $257;
  $258 = $75;
  $74 = $258;
  $259 = $74;
  $260 = ((($259)) + 8|0);
  $73 = $260;
  $261 = $73;
  $72 = $261;
  $262 = $72;
  $263 = HEAP32[$262>>2]|0;
  $264 = HEAP32[$258>>2]|0;
  $265 = $263;
  $266 = $264;
  $267 = (($265) - ($266))|0;
  $81 = $267;
  $268 = $81;
  $269 = $80;
  $270 = (($269>>>0) / 2)&-1;
  $271 = ($268>>>0)>=($270>>>0);
  if ($271) {
   $272 = $80;
   $77 = $272;
  } else {
   $273 = $81;
   $274 = $273<<1;
   HEAP32[$82>>2] = $274;
   $69 = $82;
   $70 = $79;
   $275 = $69;
   $276 = $70;
   ;HEAP8[$68>>0]=HEAP8[$71>>0]|0;
   $66 = $275;
   $67 = $276;
   $277 = $66;
   $278 = $67;
   $63 = $68;
   $64 = $277;
   $65 = $278;
   $279 = $64;
   $280 = HEAP32[$279>>2]|0;
   $281 = $65;
   $282 = HEAP32[$281>>2]|0;
   $283 = ($280>>>0)<($282>>>0);
   $284 = $67;
   $285 = $66;
   $286 = $283 ? $284 : $285;
   $287 = HEAP32[$286>>2]|0;
   $77 = $287;
  }
  $288 = $77;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE11__vallocateEm($103,$288);
  $289 = $97;
  $290 = $98;
  $291 = $99;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($103,$289,$290,$291);
  $89 = $103;
  STACKTOP = sp;return;
 }
 $126 = $98;
 HEAP32[$100>>2] = $126;
 $101 = 0;
 $127 = $99;
 $83 = $103;
 $128 = $83;
 $129 = ((($128)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$128>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = ($127>>>0)>($134>>>0);
 if ($135) {
  $101 = 1;
  $136 = $97;
  HEAP32[$100>>2] = $136;
  $62 = $103;
  $137 = $62;
  $138 = ((($137)) + 4|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = HEAP32[$137>>2]|0;
  $141 = $139;
  $142 = $140;
  $143 = (($141) - ($142))|0;
  $59 = $100;
  $60 = $143;
  $144 = $59;
  $145 = $60;
  ;HEAP8[$58>>0]=HEAP8[$61>>0]|0;
  $56 = $144;
  $57 = $145;
  $146 = $57;
  $147 = $56;
  $148 = HEAP32[$147>>2]|0;
  $149 = (($148) + ($146)|0);
  HEAP32[$147>>2] = $149;
 }
 $150 = $97;
 $151 = HEAP32[$100>>2]|0;
 $152 = HEAP32[$103>>2]|0;
 $53 = $150;
 $54 = $151;
 $55 = $152;
 $153 = $53;
 $52 = $153;
 $154 = $52;
 $155 = $54;
 $46 = $155;
 $156 = $46;
 $157 = $55;
 $47 = $157;
 $158 = $47;
 $48 = $154;
 $49 = $156;
 $50 = $158;
 $159 = $49;
 $160 = $48;
 $161 = $159;
 $162 = $160;
 $163 = (($161) - ($162))|0;
 $51 = $163;
 $164 = $51;
 $165 = ($164>>>0)>(0);
 if ($165) {
  $166 = $50;
  $167 = $48;
  $168 = $51;
  _memmove(($166|0),($167|0),($168|0))|0;
 }
 $169 = $50;
 $170 = $51;
 $171 = (($169) + ($170)|0);
 $102 = $171;
 $172 = $101;
 $173 = $172&1;
 if ($173) {
  $174 = HEAP32[$100>>2]|0;
  $175 = $98;
  $176 = $99;
  $3 = $103;
  $177 = $3;
  $178 = ((($177)) + 4|0);
  $179 = HEAP32[$178>>2]|0;
  $180 = HEAP32[$177>>2]|0;
  $181 = $179;
  $182 = $180;
  $183 = (($181) - ($182))|0;
  $184 = (($176) - ($183))|0;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($103,$174,$175,$184);
  $89 = $103;
  STACKTOP = sp;return;
 }
 $185 = $102;
 $43 = $103;
 $44 = $185;
 $186 = $43;
 $187 = $44;
 $41 = $186;
 $42 = $187;
 $40 = $186;
 $188 = $40;
 $189 = ((($188)) + 4|0);
 $190 = HEAP32[$189>>2]|0;
 $191 = HEAP32[$188>>2]|0;
 $192 = $190;
 $193 = $191;
 $194 = (($192) - ($193))|0;
 $45 = $194;
 $195 = $44;
 $16 = $186;
 $17 = $195;
 $196 = $16;
 $197 = ((($196)) + 4|0);
 $198 = HEAP32[$197>>2]|0;
 $18 = $198;
 while(1) {
  $199 = $17;
  $200 = $18;
  $201 = ($199|0)!=($200|0);
  if (!($201)) {
   break;
  }
  $15 = $196;
  $202 = $15;
  $203 = ((($202)) + 8|0);
  $14 = $203;
  $204 = $14;
  $13 = $204;
  $205 = $13;
  $206 = $18;
  $207 = ((($206)) + -1|0);
  $18 = $207;
  $12 = $207;
  $208 = $12;
  $9 = $205;
  $10 = $208;
  $209 = $9;
  $210 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $209;
  $7 = $210;
  $211 = $6;
  $212 = $7;
  $4 = $211;
  $5 = $212;
 }
 $213 = $17;
 $214 = ((($196)) + 4|0);
 HEAP32[$214>>2] = $213;
 $215 = $45;
 $38 = $186;
 $39 = $215;
 $216 = $38;
 $37 = $216;
 $217 = $37;
 $218 = HEAP32[$217>>2]|0;
 $36 = $218;
 $219 = $36;
 $20 = $216;
 $220 = $20;
 $221 = HEAP32[$220>>2]|0;
 $19 = $221;
 $222 = $19;
 $25 = $216;
 $223 = $25;
 $24 = $223;
 $224 = $24;
 $23 = $224;
 $225 = $23;
 $226 = ((($225)) + 8|0);
 $22 = $226;
 $227 = $22;
 $21 = $227;
 $228 = $21;
 $229 = HEAP32[$228>>2]|0;
 $230 = HEAP32[$224>>2]|0;
 $231 = $229;
 $232 = $230;
 $233 = (($231) - ($232))|0;
 $234 = (($222) + ($233)|0);
 $27 = $216;
 $235 = $27;
 $236 = HEAP32[$235>>2]|0;
 $26 = $236;
 $237 = $26;
 $238 = $39;
 $239 = (($237) + ($238)|0);
 $29 = $216;
 $240 = $29;
 $241 = HEAP32[$240>>2]|0;
 $28 = $241;
 $242 = $28;
 $30 = $216;
 $243 = $30;
 $244 = ((($243)) + 4|0);
 $245 = HEAP32[$244>>2]|0;
 $246 = HEAP32[$243>>2]|0;
 $247 = $245;
 $248 = $246;
 $249 = (($247) - ($248))|0;
 $250 = (($242) + ($249)|0);
 $31 = $216;
 $32 = $219;
 $33 = $234;
 $34 = $239;
 $35 = $250;
 $89 = $103;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE13__vdeallocateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $50 = sp;
 $53 = sp + 256|0;
 $65 = $0;
 $66 = $65;
 $67 = HEAP32[$66>>2]|0;
 $68 = ($67|0)!=(0|0);
 if (!($68)) {
  STACKTOP = sp;return;
 }
 $63 = $66;
 $69 = $63;
 $62 = $69;
 $70 = $62;
 $71 = ((($70)) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$70>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $64 = $76;
 $61 = $69;
 $77 = $61;
 $78 = HEAP32[$77>>2]|0;
 $58 = $77;
 $59 = $78;
 $79 = $58;
 $80 = ((($79)) + 4|0);
 $81 = HEAP32[$80>>2]|0;
 $60 = $81;
 while(1) {
  $82 = $59;
  $83 = $60;
  $84 = ($82|0)!=($83|0);
  if (!($84)) {
   break;
  }
  $57 = $79;
  $85 = $57;
  $86 = ((($85)) + 8|0);
  $56 = $86;
  $87 = $56;
  $55 = $87;
  $88 = $55;
  $89 = $60;
  $90 = ((($89)) + -1|0);
  $60 = $90;
  $54 = $90;
  $91 = $54;
  $51 = $88;
  $52 = $91;
  $92 = $51;
  $93 = $52;
  ;HEAP8[$50>>0]=HEAP8[$53>>0]|0;
  $48 = $92;
  $49 = $93;
  $94 = $48;
  $95 = $49;
  $46 = $94;
  $47 = $95;
 }
 $96 = $59;
 $97 = ((($79)) + 4|0);
 HEAP32[$97>>2] = $96;
 $98 = $64;
 $43 = $69;
 $44 = $98;
 $99 = $43;
 $42 = $99;
 $100 = $42;
 $101 = HEAP32[$100>>2]|0;
 $41 = $101;
 $102 = $41;
 $25 = $99;
 $103 = $25;
 $104 = HEAP32[$103>>2]|0;
 $24 = $104;
 $105 = $24;
 $30 = $99;
 $106 = $30;
 $29 = $106;
 $107 = $29;
 $28 = $107;
 $108 = $28;
 $109 = ((($108)) + 8|0);
 $27 = $109;
 $110 = $27;
 $26 = $110;
 $111 = $26;
 $112 = HEAP32[$111>>2]|0;
 $113 = HEAP32[$107>>2]|0;
 $114 = $112;
 $115 = $113;
 $116 = (($114) - ($115))|0;
 $117 = (($105) + ($116)|0);
 $32 = $99;
 $118 = $32;
 $119 = HEAP32[$118>>2]|0;
 $31 = $119;
 $120 = $31;
 $121 = $44;
 $122 = (($120) + ($121)|0);
 $34 = $99;
 $123 = $34;
 $124 = HEAP32[$123>>2]|0;
 $33 = $124;
 $125 = $33;
 $35 = $99;
 $126 = $35;
 $127 = ((($126)) + 4|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = HEAP32[$126>>2]|0;
 $130 = $128;
 $131 = $129;
 $132 = (($130) - ($131))|0;
 $133 = (($125) + ($132)|0);
 $36 = $99;
 $37 = $102;
 $38 = $117;
 $39 = $122;
 $40 = $133;
 $45 = $69;
 $8 = $66;
 $134 = $8;
 $135 = ((($134)) + 8|0);
 $7 = $135;
 $136 = $7;
 $6 = $136;
 $137 = $6;
 $138 = HEAP32[$66>>2]|0;
 $5 = $66;
 $139 = $5;
 $4 = $139;
 $140 = $4;
 $3 = $140;
 $141 = $3;
 $142 = ((($141)) + 8|0);
 $2 = $142;
 $143 = $2;
 $1 = $143;
 $144 = $1;
 $145 = HEAP32[$144>>2]|0;
 $146 = HEAP32[$140>>2]|0;
 $147 = $145;
 $148 = $146;
 $149 = (($147) - ($148))|0;
 $18 = $137;
 $19 = $138;
 $20 = $149;
 $150 = $18;
 $151 = $19;
 $152 = $20;
 $15 = $150;
 $16 = $151;
 $17 = $152;
 $153 = $16;
 $154 = $17;
 $12 = $153;
 $13 = $154;
 $14 = 1;
 $155 = $12;
 $156 = $13;
 $157 = $14;
 $9 = $155;
 $10 = $156;
 $11 = $157;
 $158 = $9;
 $159 = $10;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($158,$159);
 $23 = $66;
 $160 = $23;
 $161 = ((($160)) + 8|0);
 $22 = $161;
 $162 = $22;
 $21 = $162;
 $163 = $21;
 HEAP32[$163>>2] = 0;
 $164 = ((($66)) + 4|0);
 HEAP32[$164>>2] = 0;
 HEAP32[$66>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail18Byte14DecompressorC2ERNS_10InCbStreamEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = $5;
 __ZN7lazperf6detail10Byte14BaseC2Em($7,$8);
 $9 = ((($7)) + 132|0);
 $10 = $4;
 HEAP32[$9>>2] = $10;
 $11 = ((($7)) + 136|0);
 $12 = HEAP32[$7>>2]|0;
 __ZNSt3__26vectorIjNS_9allocatorIjEEEC2Em($11,$12);
 $13 = ((($7)) + 148|0);
 $14 = HEAP32[$7>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2Ev($6);
 __ZNSt3__26vectorIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEEC2EmRKS5_($13,$14,$6);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEED2Ev($6);
 $15 = ((($7)) + 160|0);
 __ZN7lazperf5utils6SummerC2Ev($15);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIjNS_9allocatorIjEEEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 8|0;
 $13 = $0;
 $14 = $1;
 $15 = $13;
 $11 = $15;
 $16 = $11;
 $10 = $16;
 HEAP32[$16>>2] = 0;
 $17 = ((($16)) + 4|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($16)) + 8|0);
 HEAP32[$12>>2] = 0;
 $8 = $18;
 $9 = $12;
 $19 = $8;
 $20 = $9;
 $7 = $20;
 $21 = $7;
 $3 = $19;
 $4 = $21;
 $22 = $3;
 $23 = $4;
 $2 = $23;
 HEAP32[$22>>2] = 0;
 $6 = $19;
 $24 = $6;
 $5 = $24;
 $25 = $14;
 $26 = ($25>>>0)>(0);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = $14;
 __ZNSt3__26vectorIjNS_9allocatorIjEEE11__vallocateEm($15,$27);
 $28 = $14;
 __ZNSt3__26vectorIjNS_9allocatorIjEEE18__construct_at_endEm($15,$28);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEEC2EmRKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $15 = sp;
 $20 = sp + 157|0;
 $29 = sp + 156|0;
 $40 = sp + 16|0;
 $41 = $0;
 $42 = $1;
 $43 = $2;
 $44 = $41;
 $39 = $44;
 $45 = $39;
 $38 = $45;
 HEAP32[$45>>2] = 0;
 $46 = ((($45)) + 4|0);
 HEAP32[$46>>2] = 0;
 $47 = ((($45)) + 8|0);
 HEAP32[$40>>2] = 0;
 $36 = $47;
 $37 = $40;
 $48 = $36;
 $49 = $37;
 $35 = $49;
 $50 = $35;
 $31 = $48;
 $32 = $50;
 $51 = $31;
 $52 = $32;
 $30 = $52;
 HEAP32[$51>>2] = 0;
 $34 = $48;
 $53 = $34;
 $33 = $53;
 $54 = $42;
 $55 = ($54>>>0)>(0);
 if (!($55)) {
  STACKTOP = sp;return;
 }
 $56 = $42;
 __ZNSt3__26vectorIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEE11__vallocateEm($44,$56);
 $57 = $42;
 $58 = $43;
 $25 = $44;
 $26 = $57;
 $27 = $58;
 $59 = $25;
 $24 = $59;
 $60 = $24;
 $61 = ((($60)) + 8|0);
 $23 = $61;
 $62 = $23;
 $22 = $62;
 $63 = $22;
 $28 = $63;
 while(1) {
  $4 = $29;
  $5 = $59;
  $6 = 1;
  $64 = $28;
  $65 = ((($59)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $3 = $66;
  $67 = $3;
  $68 = $27;
  $17 = $64;
  $18 = $67;
  $19 = $68;
  $69 = $17;
  $70 = $18;
  $71 = $19;
  $16 = $71;
  $72 = $16;
  ;HEAP8[$15>>0]=HEAP8[$20>>0]|0;
  $12 = $69;
  $13 = $70;
  $14 = $72;
  $73 = $12;
  $74 = $13;
  $75 = $14;
  $11 = $75;
  $76 = $11;
  $8 = $73;
  $9 = $74;
  $10 = $76;
  $77 = $9;
  $78 = $10;
  $7 = $78;
  $79 = $7;
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2ERKS3_($77,$79);
  $80 = ((($59)) + 4|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = ((($81)) + 20|0);
  HEAP32[$80>>2] = $82;
  $83 = $26;
  $84 = (($83) + -1)|0;
  $26 = $84;
  $21 = $29;
  $85 = $26;
  $86 = ($85>>>0)>(0);
  if (!($86)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEE11__vallocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $44 = $0;
 $45 = $1;
 $46 = $44;
 $47 = $45;
 $48 = (__ZNKSt3__26vectorIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEE8max_sizeEv($46)|0);
 $49 = ($47>>>0)>($48>>>0);
 if ($49) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($46);
  // unreachable;
 }
 $43 = $46;
 $50 = $43;
 $51 = ((($50)) + 8|0);
 $42 = $51;
 $52 = $42;
 $41 = $52;
 $53 = $41;
 $54 = $45;
 $11 = $53;
 $12 = $54;
 $55 = $11;
 $56 = $12;
 $8 = $55;
 $9 = $56;
 $10 = 0;
 $57 = $8;
 $58 = $9;
 $7 = $57;
 $59 = ($58>>>0)>(214748364);
 if ($59) {
  $4 = 21003;
  $60 = (___cxa_allocate_exception(8)|0);
  $61 = $4;
  $2 = $60;
  $3 = $61;
  $62 = $2;
  $63 = $3;
  __ZNSt11logic_errorC2EPKc($62,$63);
  HEAP32[$62>>2] = (17588);
  ___cxa_throw(($60|0),(9800|0),(617|0));
  // unreachable;
 } else {
  $64 = $9;
  $65 = ($64*20)|0;
  $5 = $65;
  $6 = 4;
  $66 = $5;
  $67 = (__Znwm($66)|0);
  $68 = ((($46)) + 4|0);
  HEAP32[$68>>2] = $67;
  HEAP32[$46>>2] = $67;
  $69 = HEAP32[$46>>2]|0;
  $70 = $45;
  $71 = (($69) + (($70*20)|0)|0);
  $15 = $46;
  $72 = $15;
  $73 = ((($72)) + 8|0);
  $14 = $73;
  $74 = $14;
  $13 = $74;
  $75 = $13;
  HEAP32[$75>>2] = $71;
  $39 = $46;
  $40 = 0;
  $76 = $39;
  $38 = $76;
  $77 = $38;
  $78 = HEAP32[$77>>2]|0;
  $37 = $78;
  $79 = $37;
  $17 = $76;
  $80 = $17;
  $81 = HEAP32[$80>>2]|0;
  $16 = $81;
  $82 = $16;
  $22 = $76;
  $83 = $22;
  $21 = $83;
  $84 = $21;
  $20 = $84;
  $85 = $20;
  $86 = ((($85)) + 8|0);
  $19 = $86;
  $87 = $19;
  $18 = $87;
  $88 = $18;
  $89 = HEAP32[$88>>2]|0;
  $90 = HEAP32[$84>>2]|0;
  $91 = $89;
  $92 = $90;
  $93 = (($91) - ($92))|0;
  $94 = (($93|0) / 20)&-1;
  $95 = (($82) + (($94*20)|0)|0);
  $24 = $76;
  $96 = $24;
  $97 = HEAP32[$96>>2]|0;
  $23 = $97;
  $98 = $23;
  $29 = $76;
  $99 = $29;
  $28 = $99;
  $100 = $28;
  $27 = $100;
  $101 = $27;
  $102 = ((($101)) + 8|0);
  $26 = $102;
  $103 = $26;
  $25 = $103;
  $104 = $25;
  $105 = HEAP32[$104>>2]|0;
  $106 = HEAP32[$100>>2]|0;
  $107 = $105;
  $108 = $106;
  $109 = (($107) - ($108))|0;
  $110 = (($109|0) / 20)&-1;
  $111 = (($98) + (($110*20)|0)|0);
  $31 = $76;
  $112 = $31;
  $113 = HEAP32[$112>>2]|0;
  $30 = $113;
  $114 = $30;
  $115 = $40;
  $116 = (($114) + (($115*20)|0)|0);
  $32 = $76;
  $33 = $79;
  $34 = $95;
  $35 = $111;
  $36 = $116;
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $12 = sp + 20|0;
 $16 = $0;
 $17 = $1;
 $18 = $16;
 $19 = ((($18)) + 12|0);
 $20 = (__Znwm(16)|0);
 $21 = $17;
 $22 = ((($21)) + 12|0);
 $15 = $22;
 $23 = $15;
 $14 = $23;
 $24 = $14;
 $13 = $24;
 $25 = $13;
 $26 = HEAP32[$25>>2]|0;
 __ZN7lazperf12MemoryStreamC2ERKS0_($20,$26);
 $11 = $19;
 HEAP32[$12>>2] = $20;
 $27 = $11;
 $9 = $27;
 $10 = $12;
 $28 = $9;
 $29 = $10;
 $8 = $29;
 $30 = $8;
 $6 = $28;
 $7 = $30;
 $31 = $6;
 $32 = $7;
 $5 = $32;
 $33 = $5;
 $34 = HEAP32[$33>>2]|0;
 HEAP32[$31>>2] = $34;
 $35 = ((($18)) + 16|0);
 $36 = ((($18)) + 12|0);
 $4 = $36;
 $37 = $4;
 $3 = $37;
 $38 = $3;
 $2 = $38;
 $39 = $2;
 $40 = HEAP32[$39>>2]|0;
 HEAP32[$35>>2] = $40;
 $41 = $17;
 $42 = HEAP32[$41>>2]|0;
 HEAP32[$18>>2] = $42;
 $43 = $17;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ((($18)) + 4|0);
 HEAP32[$46>>2] = $45;
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN7lazperf8decoders10arithmeticINS1_12MemoryStreamEEENS_9allocatorIS5_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = 214748364;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__26vectorIjNS_9allocatorIjEEE11__vallocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $44 = $0;
 $45 = $1;
 $46 = $44;
 $47 = $45;
 $48 = (__ZNKSt3__26vectorIjNS_9allocatorIjEEE8max_sizeEv($46)|0);
 $49 = ($47>>>0)>($48>>>0);
 if ($49) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($46);
  // unreachable;
 }
 $43 = $46;
 $50 = $43;
 $51 = ((($50)) + 8|0);
 $42 = $51;
 $52 = $42;
 $41 = $52;
 $53 = $41;
 $54 = $45;
 $11 = $53;
 $12 = $54;
 $55 = $11;
 $56 = $12;
 $8 = $55;
 $9 = $56;
 $10 = 0;
 $57 = $8;
 $58 = $9;
 $7 = $57;
 $59 = ($58>>>0)>(1073741823);
 if ($59) {
  $4 = 21003;
  $60 = (___cxa_allocate_exception(8)|0);
  $61 = $4;
  $2 = $60;
  $3 = $61;
  $62 = $2;
  $63 = $3;
  __ZNSt11logic_errorC2EPKc($62,$63);
  HEAP32[$62>>2] = (17588);
  ___cxa_throw(($60|0),(9800|0),(617|0));
  // unreachable;
 } else {
  $64 = $9;
  $65 = $64<<2;
  $5 = $65;
  $6 = 4;
  $66 = $5;
  $67 = (__Znwm($66)|0);
  $68 = ((($46)) + 4|0);
  HEAP32[$68>>2] = $67;
  HEAP32[$46>>2] = $67;
  $69 = HEAP32[$46>>2]|0;
  $70 = $45;
  $71 = (($69) + ($70<<2)|0);
  $15 = $46;
  $72 = $15;
  $73 = ((($72)) + 8|0);
  $14 = $73;
  $74 = $14;
  $13 = $74;
  $75 = $13;
  HEAP32[$75>>2] = $71;
  $39 = $46;
  $40 = 0;
  $76 = $39;
  $38 = $76;
  $77 = $38;
  $78 = HEAP32[$77>>2]|0;
  $37 = $78;
  $79 = $37;
  $17 = $76;
  $80 = $17;
  $81 = HEAP32[$80>>2]|0;
  $16 = $81;
  $82 = $16;
  $22 = $76;
  $83 = $22;
  $21 = $83;
  $84 = $21;
  $20 = $84;
  $85 = $20;
  $86 = ((($85)) + 8|0);
  $19 = $86;
  $87 = $19;
  $18 = $87;
  $88 = $18;
  $89 = HEAP32[$88>>2]|0;
  $90 = HEAP32[$84>>2]|0;
  $91 = $89;
  $92 = $90;
  $93 = (($91) - ($92))|0;
  $94 = (($93|0) / 4)&-1;
  $95 = (($82) + ($94<<2)|0);
  $24 = $76;
  $96 = $24;
  $97 = HEAP32[$96>>2]|0;
  $23 = $97;
  $98 = $23;
  $29 = $76;
  $99 = $29;
  $28 = $99;
  $100 = $28;
  $27 = $100;
  $101 = $27;
  $102 = ((($101)) + 8|0);
  $26 = $102;
  $103 = $26;
  $25 = $103;
  $104 = $25;
  $105 = HEAP32[$104>>2]|0;
  $106 = HEAP32[$100>>2]|0;
  $107 = $105;
  $108 = $106;
  $109 = (($107) - ($108))|0;
  $110 = (($109|0) / 4)&-1;
  $111 = (($98) + ($110<<2)|0);
  $31 = $76;
  $112 = $31;
  $113 = HEAP32[$112>>2]|0;
  $30 = $113;
  $114 = $30;
  $115 = $40;
  $116 = (($114) + ($115<<2)|0);
  $32 = $76;
  $33 = $79;
  $34 = $95;
  $35 = $111;
  $36 = $116;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__26vectorIjNS_9allocatorIjEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $10 = sp;
 $13 = sp + 73|0;
 $21 = sp + 72|0;
 $18 = $0;
 $19 = $1;
 $22 = $18;
 $17 = $22;
 $23 = $17;
 $24 = ((($23)) + 8|0);
 $16 = $24;
 $25 = $16;
 $15 = $25;
 $26 = $15;
 $20 = $26;
 while(1) {
  $2 = $21;
  $3 = $22;
  $4 = 1;
  $27 = $20;
  $28 = ((($22)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  $5 = $29;
  $30 = $5;
  $11 = $27;
  $12 = $30;
  $31 = $11;
  $32 = $12;
  ;HEAP8[$10>>0]=HEAP8[$13>>0]|0;
  $8 = $31;
  $9 = $32;
  $33 = $8;
  $34 = $9;
  $6 = $33;
  $7 = $34;
  $35 = $7;
  HEAP32[$35>>2] = 0;
  $36 = ((($22)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($37)) + 4|0);
  HEAP32[$36>>2] = $38;
  $39 = $19;
  $40 = (($39) + -1)|0;
  $19 = $40;
  $14 = $21;
  $41 = $19;
  $42 = ($41>>>0)>(0);
  if (!($42)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIjNS_9allocatorIjEEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 8|0;
 $9 = sp + 77|0;
 $12 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $13 = $25;
 $26 = $13;
 ;HEAP8[$12>>0]=HEAP8[$14>>0]|0;
 $11 = $26;
 $27 = $11;
 $10 = $27;
 HEAP32[$19>>2] = 1073741823;
 HEAP32[$20>>2] = 2147483647;
 $7 = $19;
 $8 = $20;
 $28 = $7;
 $29 = $8;
 ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
 $4 = $28;
 $5 = $29;
 $30 = $5;
 $31 = $4;
 $1 = $6;
 $2 = $30;
 $3 = $31;
 $32 = $2;
 $33 = HEAP32[$32>>2]|0;
 $34 = $3;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $5;
 $38 = $4;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZN7lazperf6detail18Byte14Decompressor9readSizesEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $5 = $3;
 $4 = 0;
 while(1) {
  $6 = $4;
  $7 = HEAP32[$5>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if (!($8)) {
   break;
  }
  $9 = ((($5)) + 132|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($5)) + 136|0);
  $12 = $4;
  $1 = $11;
  $2 = $12;
  $13 = $1;
  $14 = HEAP32[$13>>2]|0;
  $15 = $2;
  $16 = (($14) + ($15<<2)|0);
  (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($10,$16)|0);
  $17 = $4;
  $18 = (($17) + 1)|0;
  $4 = $18;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail18Byte14Decompressor8readDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $7 = $5;
 $6 = 0;
 while(1) {
  $8 = $6;
  $9 = HEAP32[$7>>2]|0;
  $10 = ($8>>>0)<($9>>>0);
  if (!($10)) {
   break;
  }
  $11 = ((($7)) + 148|0);
  $12 = $6;
  $3 = $11;
  $4 = $12;
  $13 = $3;
  $14 = HEAP32[$13>>2]|0;
  $15 = $4;
  $16 = (($14) + (($15*20)|0)|0);
  $17 = ((($7)) + 132|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($7)) + 136|0);
  $20 = $6;
  $1 = $19;
  $2 = $20;
  $21 = $1;
  $22 = HEAP32[$21>>2]|0;
  $23 = $2;
  $24 = (($22) + ($23<<2)|0);
  $25 = HEAP32[$24>>2]|0;
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($16,$18,$25);
  $26 = $6;
  $27 = (($26) + 1)|0;
  $6 = $27;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 $8 = ($7|0)!=(0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ((($6)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $5;
 __ZN7lazperf12MemoryStream4copyINS_10InCbStreamEEEvRT_m($10,$11,$12);
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE13readInitBytesEv($6);
 $13 = ((($6)) + 8|0);
 HEAP8[$13>>0] = 1;
 STACKTOP = sp;return;
}
function __ZN7lazperf12MemoryStream4copyINS_10InCbStreamEEEvRT_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $5;
 $9 = $7;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($8,$9);
 $10 = $6;
 $4 = $8;
 $11 = $4;
 $12 = HEAP32[$11>>2]|0;
 $3 = $12;
 $13 = $3;
 $14 = $7;
 __ZN7lazperf10InCbStream8getBytesEPhm($10,$13,$14);
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE13readInitBytesEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZN7lazperf12MemoryStream7getByteEv($4)|0);
 $6 = $5&255;
 $7 = $6 << 24;
 $8 = ((($2)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZN7lazperf12MemoryStream7getByteEv($9)|0);
 $11 = $10&255;
 $12 = $11 << 16;
 $13 = $7 | $12;
 $14 = ((($2)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (__ZN7lazperf12MemoryStream7getByteEv($15)|0);
 $17 = $16&255;
 $18 = $17 << 8;
 $19 = $13 | $18;
 $20 = ((($2)) + 16|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (__ZN7lazperf12MemoryStream7getByteEv($21)|0);
 $23 = $22&255;
 $24 = $19 | $23;
 HEAP32[$2>>2] = $24;
 STACKTOP = sp;return;
}
function __ZN7lazperf12MemoryStream7getByteEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $3;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1)|0;
 HEAP32[$5>>2] = $7;
 $1 = $4;
 $2 = $6;
 $8 = $1;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = (($9) + ($10)|0);
 $12 = HEAP8[$11>>0]|0;
 STACKTOP = sp;return ($12|0);
}
function __ZN7lazperf6detail18Byte14Decompressor8dumpSumsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20835)|0);
 $4 = ((($2)) + 160|0);
 $5 = (__ZN7lazperf5utils6Summer5valueEv($4)|0);
 $6 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($3,$5)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($6,21164)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6Summer5valueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $2 = $4;
 HEAP32[$3>>2] = 0;
 $5 = $2;
 STACKTOP = sp;return ($5|0);
}
function __ZN7lazperf6detail18Byte14Decompressor10decompressEPcRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $5 = sp;
 $8 = sp + 152|0;
 $34 = $0;
 $35 = $1;
 $36 = $2;
 $42 = $34;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ($44|0)==(-1);
 $46 = ((($42)) + 8|0);
 $47 = $36;
 $48 = HEAP32[$47>>2]|0;
 if ($45) {
  $31 = $46;
  $32 = $48;
  $49 = $31;
  $50 = $32;
  $51 = (($49) + (($50*28)|0)|0);
  $37 = $51;
  $52 = ((($42)) + 132|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = $35;
  $55 = HEAP32[$42>>2]|0;
  __ZN7lazperf10InCbStream8getBytesEPhm($53,$54,$55);
  $56 = $37;
  $57 = ((($56)) + 4|0);
  $58 = $35;
  $59 = $35;
  $60 = HEAP32[$42>>2]|0;
  $61 = (($59) + ($60)|0);
  __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($57,$58,$61);
  $62 = $37;
  HEAP32[$62>>2] = 1;
  $63 = $36;
  $64 = HEAP32[$63>>2]|0;
  $65 = ((($42)) + 4|0);
  HEAP32[$65>>2] = $64;
  $66 = $35;
  $67 = HEAP32[$42>>2]|0;
  $68 = (($66) + ($67)|0);
  $33 = $68;
  $174 = $33;
  STACKTOP = sp;return ($174|0);
 }
 $29 = $46;
 $30 = $48;
 $69 = $29;
 $70 = $30;
 $71 = (($69) + (($70*28)|0)|0);
 $38 = $71;
 $72 = ((($42)) + 8|0);
 $73 = ((($42)) + 4|0);
 $74 = HEAP32[$73>>2]|0;
 $21 = $72;
 $22 = $74;
 $75 = $21;
 $76 = $22;
 $77 = (($75) + (($76*28)|0)|0);
 $78 = ((($77)) + 4|0);
 $39 = $78;
 $79 = $36;
 $80 = HEAP32[$79>>2]|0;
 $81 = ((($42)) + 4|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = ($80|0)!=($82|0);
 if ($83) {
  $84 = $36;
  $85 = HEAP32[$84>>2]|0;
  $86 = ((($42)) + 4|0);
  HEAP32[$86>>2] = $85;
  $87 = $38;
  $88 = HEAP32[$87>>2]|0;
  $89 = ($88|0)!=(0);
  if (!($89)) {
   $90 = $38;
   HEAP32[$90>>2] = 1;
   $91 = $39;
   $92 = $38;
   $93 = ((($92)) + 4|0);
   $9 = $93;
   $10 = $91;
   $94 = $9;
   $95 = $10;
   $96 = ($94|0)!=($95|0);
   if ($96) {
    $97 = $10;
    $6 = $94;
    $7 = $97;
    $98 = $6;
    $99 = $7;
    ;HEAP8[$5>>0]=HEAP8[$8>>0]|0;
    $3 = $98;
    $4 = $99;
    $100 = $10;
    $101 = HEAP32[$100>>2]|0;
    $102 = $10;
    $103 = ((($102)) + 4|0);
    $104 = HEAP32[$103>>2]|0;
    __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($94,$101,$104);
   }
   $105 = ((($42)) + 8|0);
   $106 = ((($42)) + 4|0);
   $107 = HEAP32[$106>>2]|0;
   $11 = $105;
   $12 = $107;
   $108 = $11;
   $109 = $12;
   $110 = (($108) + (($109*28)|0)|0);
   $111 = ((($110)) + 4|0);
   $39 = $111;
  }
 }
 $112 = $39;
 $40 = $112;
 $41 = 0;
 while(1) {
  $113 = $41;
  $114 = HEAP32[$42>>2]|0;
  $115 = ($113>>>0)<($114>>>0);
  if (!($115)) {
   break;
  }
  $116 = ((($42)) + 136|0);
  $117 = $41;
  $13 = $116;
  $14 = $117;
  $118 = $13;
  $119 = HEAP32[$118>>2]|0;
  $120 = $14;
  $121 = (($119) + ($120<<2)|0);
  $122 = HEAP32[$121>>2]|0;
  $123 = ($122|0)!=(0);
  $124 = $40;
  $125 = $41;
  if ($123) {
   $15 = $124;
   $16 = $125;
   $126 = $15;
   $127 = HEAP32[$126>>2]|0;
   $128 = $16;
   $129 = (($127) + ($128)|0);
   $130 = HEAP8[$129>>0]|0;
   $131 = $130&255;
   $132 = ((($42)) + 148|0);
   $133 = $41;
   $17 = $132;
   $18 = $133;
   $134 = $17;
   $135 = HEAP32[$134>>2]|0;
   $136 = $18;
   $137 = (($135) + (($136*20)|0)|0);
   $138 = $38;
   $139 = ((($138)) + 16|0);
   $140 = $41;
   $19 = $139;
   $20 = $140;
   $141 = $19;
   $142 = HEAP32[$141>>2]|0;
   $143 = $20;
   $144 = (($142) + (($143*44)|0)|0);
   $145 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($137,$144)|0);
   $146 = (($131) + ($145))|0;
   $147 = $146&255;
   $148 = $35;
   HEAP8[$148>>0] = $147;
   $149 = $35;
   $150 = HEAP8[$149>>0]|0;
   $151 = $40;
   $152 = $41;
   $23 = $151;
   $24 = $152;
   $153 = $23;
   $154 = HEAP32[$153>>2]|0;
   $155 = $24;
   $156 = (($154) + ($155)|0);
   HEAP8[$156>>0] = $150;
  } else {
   $25 = $124;
   $26 = $125;
   $157 = $25;
   $158 = HEAP32[$157>>2]|0;
   $159 = $26;
   $160 = (($158) + ($159)|0);
   $161 = HEAP8[$160>>0]|0;
   $162 = $35;
   HEAP8[$162>>0] = $161;
  }
  $163 = $41;
  $164 = (($163) + 1)|0;
  $41 = $164;
  $165 = $35;
  $166 = ((($165)) + 1|0);
  $35 = $166;
 }
 $167 = ((($42)) + 160|0);
 $168 = $40;
 $28 = $168;
 $169 = $28;
 $170 = HEAP32[$169>>2]|0;
 $27 = $170;
 $171 = $27;
 $172 = HEAP32[$42>>2]|0;
 __ZN7lazperf5utils6Summer3addEPhm($167,$171,$172);
 $173 = $35;
 $33 = $173;
 $174 = $33;
 STACKTOP = sp;return ($174|0);
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $8 = sp + 24|0;
 $11 = sp + 392|0;
 $57 = sp + 16|0;
 $60 = sp + 391|0;
 $67 = sp + 8|0;
 $70 = sp + 390|0;
 $78 = sp + 108|0;
 $81 = sp + 96|0;
 $91 = sp;
 $94 = sp + 389|0;
 $99 = sp + 32|0;
 $95 = $0;
 $96 = $1;
 $97 = $2;
 $102 = $95;
 $103 = $96;
 $104 = $97;
 $92 = $103;
 $93 = $104;
 $105 = $92;
 $106 = $93;
 ;HEAP8[$91>>0]=HEAP8[$94>>0]|0;
 $89 = $105;
 $90 = $106;
 $107 = $90;
 $108 = $89;
 $109 = $107;
 $110 = $108;
 $111 = (($109) - ($110))|0;
 $98 = $111;
 $112 = $98;
 $87 = $102;
 $113 = $87;
 $86 = $113;
 $114 = $86;
 $85 = $114;
 $115 = $85;
 $116 = ((($115)) + 8|0);
 $84 = $116;
 $117 = $84;
 $83 = $117;
 $118 = $83;
 $119 = HEAP32[$118>>2]|0;
 $120 = HEAP32[$114>>2]|0;
 $121 = $119;
 $122 = $120;
 $123 = (($121) - ($122))|0;
 $124 = ($112>>>0)<=($123>>>0);
 if (!($124)) {
  __ZNSt3__26vectorIhNS_9allocatorIhEEE13__vdeallocateEv($102);
  $248 = $98;
  $77 = $102;
  HEAP32[$78>>2] = $248;
  $249 = $77;
  $250 = (__ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($249)|0);
  $79 = $250;
  $251 = HEAP32[$78>>2]|0;
  $252 = $79;
  $253 = ($251>>>0)>($252>>>0);
  if ($253) {
   __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($249);
   // unreachable;
  }
  $75 = $249;
  $254 = $75;
  $74 = $254;
  $255 = $74;
  $73 = $255;
  $256 = $73;
  $257 = ((($256)) + 8|0);
  $72 = $257;
  $258 = $72;
  $71 = $258;
  $259 = $71;
  $260 = HEAP32[$259>>2]|0;
  $261 = HEAP32[$255>>2]|0;
  $262 = $260;
  $263 = $261;
  $264 = (($262) - ($263))|0;
  $80 = $264;
  $265 = $80;
  $266 = $79;
  $267 = (($266>>>0) / 2)&-1;
  $268 = ($265>>>0)>=($267>>>0);
  if ($268) {
   $269 = $79;
   $76 = $269;
  } else {
   $270 = $80;
   $271 = $270<<1;
   HEAP32[$81>>2] = $271;
   $68 = $81;
   $69 = $78;
   $272 = $68;
   $273 = $69;
   ;HEAP8[$67>>0]=HEAP8[$70>>0]|0;
   $65 = $272;
   $66 = $273;
   $274 = $65;
   $275 = $66;
   $62 = $67;
   $63 = $274;
   $64 = $275;
   $276 = $63;
   $277 = HEAP32[$276>>2]|0;
   $278 = $64;
   $279 = HEAP32[$278>>2]|0;
   $280 = ($277>>>0)<($279>>>0);
   $281 = $66;
   $282 = $65;
   $283 = $280 ? $281 : $282;
   $284 = HEAP32[$283>>2]|0;
   $76 = $284;
  }
  $285 = $76;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE11__vallocateEm($102,$285);
  $286 = $96;
  $287 = $97;
  $288 = $98;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($102,$286,$287,$288);
  $88 = $102;
  STACKTOP = sp;return;
 }
 $125 = $97;
 HEAP32[$99>>2] = $125;
 $100 = 0;
 $126 = $98;
 $82 = $102;
 $127 = $82;
 $128 = ((($127)) + 4|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = HEAP32[$127>>2]|0;
 $131 = $129;
 $132 = $130;
 $133 = (($131) - ($132))|0;
 $134 = ($126>>>0)>($133>>>0);
 if ($134) {
  $100 = 1;
  $135 = $96;
  HEAP32[$99>>2] = $135;
  $61 = $102;
  $136 = $61;
  $137 = ((($136)) + 4|0);
  $138 = HEAP32[$137>>2]|0;
  $139 = HEAP32[$136>>2]|0;
  $140 = $138;
  $141 = $139;
  $142 = (($140) - ($141))|0;
  $58 = $99;
  $59 = $142;
  $143 = $58;
  $144 = $59;
  ;HEAP8[$57>>0]=HEAP8[$60>>0]|0;
  $55 = $143;
  $56 = $144;
  $145 = $56;
  $146 = $55;
  $147 = HEAP32[$146>>2]|0;
  $148 = (($147) + ($145)|0);
  HEAP32[$146>>2] = $148;
 }
 $149 = $96;
 $150 = HEAP32[$99>>2]|0;
 $151 = HEAP32[$102>>2]|0;
 $52 = $149;
 $53 = $150;
 $54 = $151;
 $152 = $52;
 $51 = $152;
 $153 = $51;
 $154 = $53;
 $46 = $154;
 $155 = $46;
 $156 = $54;
 $47 = $156;
 $157 = $47;
 $48 = $153;
 $49 = $155;
 $50 = $157;
 while(1) {
  $158 = $48;
  $159 = $49;
  $160 = ($158|0)!=($159|0);
  if (!($160)) {
   break;
  }
  $161 = $48;
  $162 = HEAP8[$161>>0]|0;
  $163 = $50;
  HEAP8[$163>>0] = $162;
  $164 = $48;
  $165 = ((($164)) + 1|0);
  $48 = $165;
  $166 = $50;
  $167 = ((($166)) + 1|0);
  $50 = $167;
 }
 $168 = $50;
 $101 = $168;
 $169 = $100;
 $170 = $169&1;
 if ($170) {
  $171 = HEAP32[$99>>2]|0;
  $172 = $97;
  $173 = $98;
  $3 = $102;
  $174 = $3;
  $175 = ((($174)) + 4|0);
  $176 = HEAP32[$175>>2]|0;
  $177 = HEAP32[$174>>2]|0;
  $178 = $176;
  $179 = $177;
  $180 = (($178) - ($179))|0;
  $181 = (($173) - ($180))|0;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($102,$171,$172,$181);
  $88 = $102;
  STACKTOP = sp;return;
 }
 $182 = $101;
 $43 = $102;
 $44 = $182;
 $183 = $43;
 $184 = $44;
 $41 = $183;
 $42 = $184;
 $40 = $183;
 $185 = $40;
 $186 = ((($185)) + 4|0);
 $187 = HEAP32[$186>>2]|0;
 $188 = HEAP32[$185>>2]|0;
 $189 = $187;
 $190 = $188;
 $191 = (($189) - ($190))|0;
 $45 = $191;
 $192 = $44;
 $16 = $183;
 $17 = $192;
 $193 = $16;
 $194 = ((($193)) + 4|0);
 $195 = HEAP32[$194>>2]|0;
 $18 = $195;
 while(1) {
  $196 = $17;
  $197 = $18;
  $198 = ($196|0)!=($197|0);
  if (!($198)) {
   break;
  }
  $15 = $193;
  $199 = $15;
  $200 = ((($199)) + 8|0);
  $14 = $200;
  $201 = $14;
  $13 = $201;
  $202 = $13;
  $203 = $18;
  $204 = ((($203)) + -1|0);
  $18 = $204;
  $12 = $204;
  $205 = $12;
  $9 = $202;
  $10 = $205;
  $206 = $9;
  $207 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $206;
  $7 = $207;
  $208 = $6;
  $209 = $7;
  $4 = $208;
  $5 = $209;
 }
 $210 = $17;
 $211 = ((($193)) + 4|0);
 HEAP32[$211>>2] = $210;
 $212 = $45;
 $38 = $183;
 $39 = $212;
 $213 = $38;
 $37 = $213;
 $214 = $37;
 $215 = HEAP32[$214>>2]|0;
 $36 = $215;
 $216 = $36;
 $20 = $213;
 $217 = $20;
 $218 = HEAP32[$217>>2]|0;
 $19 = $218;
 $219 = $19;
 $25 = $213;
 $220 = $25;
 $24 = $220;
 $221 = $24;
 $23 = $221;
 $222 = $23;
 $223 = ((($222)) + 8|0);
 $22 = $223;
 $224 = $22;
 $21 = $224;
 $225 = $21;
 $226 = HEAP32[$225>>2]|0;
 $227 = HEAP32[$221>>2]|0;
 $228 = $226;
 $229 = $227;
 $230 = (($228) - ($229))|0;
 $231 = (($219) + ($230)|0);
 $27 = $213;
 $232 = $27;
 $233 = HEAP32[$232>>2]|0;
 $26 = $233;
 $234 = $26;
 $235 = $39;
 $236 = (($234) + ($235)|0);
 $29 = $213;
 $237 = $29;
 $238 = HEAP32[$237>>2]|0;
 $28 = $238;
 $239 = $28;
 $30 = $213;
 $240 = $30;
 $241 = ((($240)) + 4|0);
 $242 = HEAP32[$241>>2]|0;
 $243 = HEAP32[$240>>2]|0;
 $244 = $242;
 $245 = $243;
 $246 = (($244) - ($245))|0;
 $247 = (($239) + ($246)|0);
 $31 = $213;
 $32 = $216;
 $33 = $231;
 $34 = $236;
 $35 = $247;
 $88 = $102;
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = $0;
 $3 = $1;
 $13 = $2;
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $7 = $15;
 $16 = $3;
 $17 = ((($16)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = HEAP32[$13>>2]|0;
  $21 = ((($13)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 >>> 15;
  HEAP32[$21>>2] = $23;
  $24 = (($20>>>0) / ($23>>>0))&-1;
  $8 = $24;
  $25 = $8;
  $26 = $3;
  $27 = ((($26)) + 40|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = $25 >>> $28;
  $9 = $29;
  $30 = $3;
  $31 = ((($30)) + 16|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = $9;
  $34 = (($32) + ($33<<2)|0);
  $35 = HEAP32[$34>>2]|0;
  $5 = $35;
  $36 = $3;
  $37 = ((($36)) + 16|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = $9;
  $40 = (($39) + 1)|0;
  $41 = (($38) + ($40<<2)|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + 1)|0;
  $4 = $43;
  while(1) {
   $44 = $4;
   $45 = $5;
   $46 = (($45) + 1)|0;
   $47 = ($44>>>0)>($46>>>0);
   if (!($47)) {
    break;
   }
   $48 = $5;
   $49 = $4;
   $50 = (($48) + ($49))|0;
   $51 = $50 >>> 1;
   $10 = $51;
   $52 = $3;
   $53 = ((($52)) + 8|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = $10;
   $56 = (($54) + ($55<<2)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $8;
   $59 = ($57>>>0)>($58>>>0);
   $60 = $10;
   if ($59) {
    $4 = $60;
   } else {
    $5 = $60;
   }
  }
  $61 = $3;
  $62 = ((($61)) + 8|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $5;
  $65 = (($63) + ($64<<2)|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ((($13)) + 4|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = Math_imul($66, $68)|0;
  $6 = $69;
  $70 = $5;
  $71 = $3;
  $72 = ((($71)) + 32|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = ($70|0)!=($73|0);
  if ($74) {
   $75 = $3;
   $76 = ((($75)) + 8|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = $5;
   $79 = (($78) + 1)|0;
   $80 = (($77) + ($79<<2)|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = ((($13)) + 4|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = Math_imul($81, $83)|0;
   $7 = $84;
  }
 } else {
  $5 = 0;
  $6 = 0;
  $85 = ((($13)) + 4|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = $86 >>> 15;
  HEAP32[$85>>2] = $87;
  $88 = $3;
  $89 = HEAP32[$88>>2]|0;
  $4 = $89;
  $90 = $89 >>> 1;
  $11 = $90;
  while(1) {
   $91 = ((($13)) + 4|0);
   $92 = HEAP32[$91>>2]|0;
   $93 = $3;
   $94 = ((($93)) + 8|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = $11;
   $97 = (($95) + ($96<<2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = Math_imul($92, $98)|0;
   $12 = $99;
   $100 = $12;
   $101 = HEAP32[$13>>2]|0;
   $102 = ($100>>>0)>($101>>>0);
   $103 = $11;
   if ($102) {
    $4 = $103;
    $104 = $12;
    $7 = $104;
   } else {
    $5 = $103;
    $105 = $12;
    $6 = $105;
   }
   $106 = $5;
   $107 = $4;
   $108 = (($106) + ($107))|0;
   $109 = $108 >>> 1;
   $11 = $109;
   $110 = $5;
   $111 = ($109|0)!=($110|0);
   if (!($111)) {
    break;
   }
  }
 }
 $112 = $6;
 $113 = HEAP32[$13>>2]|0;
 $114 = (($113) - ($112))|0;
 HEAP32[$13>>2] = $114;
 $115 = $7;
 $116 = $6;
 $117 = (($115) - ($116))|0;
 $118 = ((($13)) + 4|0);
 HEAP32[$118>>2] = $117;
 $119 = ((($13)) + 4|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = ($120>>>0)<(16777216);
 if ($121) {
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE19renorm_dec_intervalEv($13);
 }
 $122 = $3;
 $123 = ((($122)) + 12|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = $5;
 $126 = (($124) + ($125<<2)|0);
 $127 = HEAP32[$126>>2]|0;
 $128 = (($127) + 1)|0;
 HEAP32[$126>>2] = $128;
 $129 = $3;
 $130 = ((($129)) + 28|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = (($131) + -1)|0;
 HEAP32[$130>>2] = $132;
 $133 = ($132|0)==(0);
 if (!($133)) {
  $135 = $5;
  STACKTOP = sp;return ($135|0);
 }
 $134 = $3;
 __ZN7lazperf6models10arithmetic6updateEv($134);
 $135 = $5;
 STACKTOP = sp;return ($135|0);
}
function __ZN7lazperf5utils6Summer3addEPhm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = (__ZN7lazperf5utils3sumEPKhj($7,$8)|0);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + ($9))|0;
 HEAP32[$6>>2] = $11;
 STACKTOP = sp;return;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE19renorm_dec_intervalEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 while(1) {
  $3 = HEAP32[$2>>2]|0;
  $4 = $3 << 8;
  $5 = ((($2)) + 16|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (__ZN7lazperf12MemoryStream7getByteEv($6)|0);
  $8 = $7&255;
  $9 = $4 | $8;
  HEAP32[$2>>2] = $9;
  $10 = ((($2)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 << 8;
  HEAP32[$10>>2] = $12;
  $13 = ($12>>>0)<(16777216);
  if (!($13)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $15 = sp;
 $20 = sp + 121|0;
 $35 = sp + 120|0;
 $30 = $0;
 $31 = $1;
 $32 = $2;
 $33 = $3;
 $36 = $30;
 $29 = $36;
 $37 = $29;
 $38 = ((($37)) + 8|0);
 $28 = $38;
 $39 = $28;
 $27 = $39;
 $40 = $27;
 $34 = $40;
 $41 = $33;
 $4 = $35;
 $5 = $36;
 $6 = $41;
 $42 = $34;
 $43 = $31;
 $44 = $32;
 $45 = ((($36)) + 4|0);
 $22 = $42;
 $23 = $43;
 $24 = $44;
 $25 = $45;
 while(1) {
  $46 = $23;
  $47 = $24;
  $48 = ($46|0)!=($47|0);
  if (!($48)) {
   break;
  }
  $49 = $22;
  $50 = $25;
  $51 = HEAP32[$50>>2]|0;
  $21 = $51;
  $52 = $21;
  $53 = $23;
  $17 = $49;
  $18 = $52;
  $19 = $53;
  $54 = $17;
  $55 = $18;
  $56 = $19;
  $16 = $56;
  $57 = $16;
  ;HEAP8[$15>>0]=HEAP8[$20>>0]|0;
  $12 = $54;
  $13 = $55;
  $14 = $57;
  $58 = $12;
  $59 = $13;
  $60 = $14;
  $11 = $60;
  $61 = $11;
  $8 = $58;
  $9 = $59;
  $10 = $61;
  $62 = $9;
  $63 = $10;
  $7 = $63;
  $64 = $7;
  $65 = HEAP8[$64>>0]|0;
  HEAP8[$62>>0] = $65;
  $66 = $23;
  $67 = ((($66)) + 1|0);
  $23 = $67;
  $68 = $25;
  $69 = HEAP32[$68>>2]|0;
  $70 = ((($69)) + 1|0);
  HEAP32[$68>>2] = $70;
 }
 $26 = $35;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail13Gpstime10BaseC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $29 = sp + 120|0;
 $30 = sp + 4|0;
 $31 = sp;
 $28 = $0;
 $32 = $28;
 HEAP8[$32>>0] = 0;
 $33 = ((($32)) + 4|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($33,516,0,0);
 $34 = ((($32)) + 48|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($34,6,0,0);
 $35 = ((($32)) + 92|0);
 HEAP32[$35>>2] = 0;
 $36 = ((($32)) + 96|0);
 HEAP32[$36>>2] = 0;
 $37 = ((($32)) + 100|0);
 __ZNSt3__25arrayIN7lazperf3las7gpstimeELm4EEC2Ev($37);
 $38 = ((($32)) + 100|0);
 __ZN7lazperf3las7gpstimeC2Ev($29);
 $26 = $38;
 $27 = $29;
 $39 = $26;
 $40 = $27;
 $23 = $39;
 $24 = 4;
 $25 = $40;
 $41 = $23;
 $42 = $24;
 $22 = $42;
 $43 = $22;
 $44 = $25;
 $19 = $41;
 $20 = $43;
 $21 = $44;
 while(1) {
  $45 = $20;
  $46 = ($45>>>0)>(0);
  if (!($46)) {
   break;
  }
  $47 = $21;
  $48 = $19;
  ;HEAP8[$48>>0]=HEAP8[$47>>0]|0;HEAP8[$48+1>>0]=HEAP8[$47+1>>0]|0;HEAP8[$48+2>>0]=HEAP8[$47+2>>0]|0;HEAP8[$48+3>>0]=HEAP8[$47+3>>0]|0;HEAP8[$48+4>>0]=HEAP8[$47+4>>0]|0;HEAP8[$48+5>>0]=HEAP8[$47+5>>0]|0;HEAP8[$48+6>>0]=HEAP8[$47+6>>0]|0;HEAP8[$48+7>>0]=HEAP8[$47+7>>0]|0;
  $49 = $19;
  $50 = ((($49)) + 8|0);
  $19 = $50;
  $51 = $20;
  $52 = (($51) + -1)|0;
  $20 = $52;
 }
 $53 = ((($32)) + 132|0);
 HEAP32[$30>>2] = 0;
 $17 = $53;
 $18 = $30;
 $54 = $17;
 $55 = $18;
 $14 = $54;
 $15 = 4;
 $16 = $55;
 $56 = $14;
 $57 = $15;
 $13 = $57;
 $58 = $13;
 $59 = $16;
 $10 = $56;
 $11 = $58;
 $12 = $59;
 while(1) {
  $60 = $11;
  $61 = ($60>>>0)>(0);
  if (!($61)) {
   break;
  }
  $62 = $12;
  $63 = HEAP32[$62>>2]|0;
  $64 = $10;
  HEAP32[$64>>2] = $63;
  $65 = $10;
  $66 = ((($65)) + 4|0);
  $10 = $66;
  $67 = $11;
  $68 = (($67) + -1)|0;
  $11 = $68;
 }
 $69 = ((($32)) + 148|0);
 HEAP32[$31>>2] = 0;
 $8 = $69;
 $9 = $31;
 $70 = $8;
 $71 = $9;
 $5 = $70;
 $6 = 4;
 $7 = $71;
 $72 = $5;
 $73 = $6;
 $4 = $73;
 $74 = $4;
 $75 = $7;
 $1 = $72;
 $2 = $74;
 $3 = $75;
 while(1) {
  $76 = $2;
  $77 = ($76>>>0)>(0);
  if (!($77)) {
   break;
  }
  $78 = $3;
  $79 = HEAP32[$78>>2]|0;
  $80 = $1;
  HEAP32[$80>>2] = $79;
  $81 = $1;
  $82 = ((($81)) + 4|0);
  $1 = $82;
  $83 = $2;
  $84 = (($83) + -1)|0;
  $2 = $84;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf3las7gpstimeELm4EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = $2;
 while(1) {
  __ZN7lazperf3las7gpstimeC2Ev($4);
  $5 = ((($4)) + 8|0);
  $6 = ($5|0)==($3|0);
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7gpstimeC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2;
 $4 = $3;
 HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7gpstime6unpackEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZN7lazperf5utils6unpackIjEET_PKc($7)|0);
 $9 = $4;
 $10 = $9;
 HEAP32[$10>>2] = $8;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = 0;
 $13 = $3;
 $14 = ((($13)) + 4|0);
 $15 = (__ZN7lazperf5utils6unpackIjEET_PKc($14)|0);
 $16 = $5;
 $17 = $16;
 HEAP32[$17>>2] = $15;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 $20 = $5;
 $21 = $20;
 $22 = HEAP32[$21>>2]|0;
 $23 = (($20) + 4)|0;
 $24 = $23;
 $25 = HEAP32[$24>>2]|0;
 $26 = $4;
 $27 = $26;
 $28 = HEAP32[$27>>2]|0;
 $29 = (($26) + 4)|0;
 $30 = $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = $22 | $31;
 $33 = $6;
 $34 = $33;
 HEAP8[$34>>0]=$28&255;HEAP8[$34+1>>0]=($28>>8)&255;HEAP8[$34+2>>0]=($28>>16)&255;HEAP8[$34+3>>0]=$28>>24;
 $35 = (($33) + 4)|0;
 $36 = $35;
 HEAP8[$36>>0]=$32&255;HEAP8[$36+1>>0]=($32>>8)&255;HEAP8[$36+2>>0]=($32>>16)&255;HEAP8[$36+3>>0]=$32>>24;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6unpackIjEET_PKc($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $6 = $1;
 $7 = HEAP8[$6>>0]|0;
 $8 = $7 << 24 >> 24;
 $2 = $8;
 $9 = $1;
 $10 = ((($9)) + 1|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 << 24 >> 24;
 $3 = $12;
 $13 = $1;
 $14 = ((($13)) + 2|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15 << 24 >> 24;
 $4 = $16;
 $17 = $1;
 $18 = ((($17)) + 3|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = $19 << 24 >> 24;
 $5 = $20;
 $21 = $5;
 $22 = $21 << 24;
 $23 = $4;
 $24 = $23 & 255;
 $25 = $24 << 16;
 $26 = $22 | $25;
 $27 = $3;
 $28 = $27 & 255;
 $29 = $28 << 8;
 $30 = $26 | $29;
 $31 = $2;
 $32 = $31 & 255;
 $33 = $30 | $32;
 STACKTOP = sp;return ($33|0);
}
function __ZN7lazperf6detail21Gpstime10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN7lazperf6detail13Gpstime10BaseC2Ev($4);
 $5 = ((($4)) + 164|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 $7 = ((($4)) + 168|0);
 HEAP8[$7>>0] = 0;
 $8 = ((($4)) + 172|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($8,32,9,8,0);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail21Gpstime10Decompressor4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 172|0);
 __ZN7lazperf13decompressors7integer4initEv($3);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail21Gpstime10Decompressor10decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(368|0);
 $87 = $0;
 $88 = $1;
 $91 = $87;
 $92 = ((($91)) + 168|0);
 $93 = HEAP8[$92>>0]|0;
 $94 = $93&1;
 if (!($94)) {
  __ZN7lazperf6detail21Gpstime10Decompressor4initEv($91);
  $95 = ((($91)) + 168|0);
  HEAP8[$95>>0] = 1;
 }
 $96 = HEAP8[$91>>0]|0;
 $97 = $96&1;
 if (!($97)) {
  HEAP8[$91>>0] = 1;
  $98 = ((($91)) + 164|0);
  $99 = HEAP32[$98>>2]|0;
  $100 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE11getInStreamEv($99)|0);
  $101 = $88;
  __ZN7lazperf10InCbStream8getBytesEPhm($100,$101,8);
  $102 = ((($91)) + 100|0);
  $84 = $102;
  $85 = 0;
  $103 = $84;
  $104 = $85;
  $105 = (($103) + ($104<<3)|0);
  $106 = $88;
  __ZN7lazperf3las7gpstime6unpackEPKc($105,$106);
  $107 = $88;
  $108 = ((($107)) + 8|0);
  $86 = $108;
  $601 = $86;
  STACKTOP = sp;return ($601|0);
 }
 $109 = ((($91)) + 132|0);
 $110 = ((($91)) + 92|0);
 $111 = HEAP32[$110>>2]|0;
 $82 = $109;
 $83 = $111;
 $112 = $82;
 $113 = $83;
 $114 = (($112) + ($113<<2)|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = ($115|0)==(0);
 $117 = ((($91)) + 164|0);
 $118 = HEAP32[$117>>2]|0;
 do {
  if ($116) {
   $119 = ((($91)) + 48|0);
   $120 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($118,$119)|0);
   $89 = $120;
   $121 = $89;
   $122 = ($121|0)==(1);
   if ($122) {
    $123 = ((($91)) + 172|0);
    $124 = ((($91)) + 164|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($123,$125,0,0)|0);
    $127 = ((($91)) + 132|0);
    $128 = ((($91)) + 92|0);
    $129 = HEAP32[$128>>2]|0;
    $80 = $127;
    $81 = $129;
    $130 = $80;
    $131 = $81;
    $132 = (($130) + ($131<<2)|0);
    HEAP32[$132>>2] = $126;
    $133 = ((($91)) + 132|0);
    $134 = ((($91)) + 92|0);
    $135 = HEAP32[$134>>2]|0;
    $70 = $133;
    $71 = $135;
    $136 = $70;
    $137 = $71;
    $138 = (($136) + ($137<<2)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ($139|0)<(0);
    $141 = $140 << 31 >> 31;
    $142 = ((($91)) + 100|0);
    $143 = ((($91)) + 92|0);
    $144 = HEAP32[$143>>2]|0;
    $62 = $142;
    $63 = $144;
    $145 = $62;
    $146 = $63;
    $147 = (($145) + ($146<<3)|0);
    $148 = $147;
    $149 = $148;
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    $151 = (($148) + 4)|0;
    $152 = $151;
    $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
    $154 = (_i64Add(($150|0),($153|0),($139|0),($141|0))|0);
    $155 = (getTempRet0() | 0);
    $156 = $147;
    $157 = $156;
    HEAP8[$157>>0]=$154&255;HEAP8[$157+1>>0]=($154>>8)&255;HEAP8[$157+2>>0]=($154>>16)&255;HEAP8[$157+3>>0]=$154>>24;
    $158 = (($156) + 4)|0;
    $159 = $158;
    HEAP8[$159>>0]=$155&255;HEAP8[$159+1>>0]=($155>>8)&255;HEAP8[$159+2>>0]=($155>>16)&255;HEAP8[$159+3>>0]=$155>>24;
    $160 = ((($91)) + 148|0);
    $161 = ((($91)) + 92|0);
    $162 = HEAP32[$161>>2]|0;
    $48 = $160;
    $49 = $162;
    $163 = $48;
    $164 = $49;
    $165 = (($163) + ($164<<2)|0);
    HEAP32[$165>>2] = 0;
    break;
   }
   $166 = $89;
   $167 = ($166|0)==(2);
   if ($167) {
    $168 = ((($91)) + 96|0);
    $169 = HEAP32[$168>>2]|0;
    $170 = (($169) + 1)|0;
    $171 = $170 & 3;
    $172 = ((($91)) + 96|0);
    HEAP32[$172>>2] = $171;
    $173 = ((($91)) + 172|0);
    $174 = ((($91)) + 164|0);
    $175 = HEAP32[$174>>2]|0;
    $176 = ((($91)) + 100|0);
    $177 = ((($91)) + 92|0);
    $178 = HEAP32[$177>>2]|0;
    $44 = $176;
    $45 = $178;
    $179 = $44;
    $180 = $45;
    $181 = (($179) + ($180<<3)|0);
    $182 = $181;
    $183 = $182;
    $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
    $185 = (($182) + 4)|0;
    $186 = $185;
    $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
    $188 = (_bitshift64Ashr(($184|0),($187|0),32)|0);
    $189 = (getTempRet0() | 0);
    $190 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($173,$175,$188,8)|0);
    $191 = ($190|0)<(0);
    $192 = $191 << 31 >> 31;
    $193 = ((($91)) + 100|0);
    $194 = ((($91)) + 96|0);
    $195 = HEAP32[$194>>2]|0;
    $32 = $193;
    $33 = $195;
    $196 = $32;
    $197 = $33;
    $198 = (($196) + ($197<<3)|0);
    $199 = $198;
    $200 = $199;
    HEAP8[$200>>0]=$190&255;HEAP8[$200+1>>0]=($190>>8)&255;HEAP8[$200+2>>0]=($190>>16)&255;HEAP8[$200+3>>0]=$190>>24;
    $201 = (($199) + 4)|0;
    $202 = $201;
    HEAP8[$202>>0]=$192&255;HEAP8[$202+1>>0]=($192>>8)&255;HEAP8[$202+2>>0]=($192>>16)&255;HEAP8[$202+3>>0]=$192>>24;
    $203 = ((($91)) + 100|0);
    $204 = ((($91)) + 96|0);
    $205 = HEAP32[$204>>2]|0;
    $28 = $203;
    $29 = $205;
    $206 = $28;
    $207 = $29;
    $208 = (($206) + ($207<<3)|0);
    $209 = $208;
    $210 = $209;
    $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
    $212 = (($209) + 4)|0;
    $213 = $212;
    $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
    $215 = ((($91)) + 100|0);
    $216 = ((($91)) + 96|0);
    $217 = HEAP32[$216>>2]|0;
    $24 = $215;
    $25 = $217;
    $218 = $24;
    $219 = $25;
    $220 = (($218) + ($219<<3)|0);
    $221 = $220;
    $222 = $221;
    HEAP8[$222>>0]=0&255;HEAP8[$222+1>>0]=(0>>8)&255;HEAP8[$222+2>>0]=(0>>16)&255;HEAP8[$222+3>>0]=0>>24;
    $223 = (($221) + 4)|0;
    $224 = $223;
    HEAP8[$224>>0]=$211&255;HEAP8[$224+1>>0]=($211>>8)&255;HEAP8[$224+2>>0]=($211>>16)&255;HEAP8[$224+3>>0]=$211>>24;
    $225 = ((($91)) + 164|0);
    $226 = HEAP32[$225>>2]|0;
    $227 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE7readIntEv($226)|0);
    $228 = ((($91)) + 100|0);
    $229 = ((($91)) + 96|0);
    $230 = HEAP32[$229>>2]|0;
    $12 = $228;
    $13 = $230;
    $231 = $12;
    $232 = $13;
    $233 = (($231) + ($232<<3)|0);
    $234 = $233;
    $235 = $234;
    $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
    $237 = (($234) + 4)|0;
    $238 = $237;
    $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
    $240 = $236 | $227;
    $241 = $233;
    $242 = $241;
    HEAP8[$242>>0]=$240&255;HEAP8[$242+1>>0]=($240>>8)&255;HEAP8[$242+2>>0]=($240>>16)&255;HEAP8[$242+3>>0]=$240>>24;
    $243 = (($241) + 4)|0;
    $244 = $243;
    HEAP8[$244>>0]=$239&255;HEAP8[$244+1>>0]=($239>>8)&255;HEAP8[$244+2>>0]=($239>>16)&255;HEAP8[$244+3>>0]=$239>>24;
    $245 = ((($91)) + 96|0);
    $246 = HEAP32[$245>>2]|0;
    $247 = ((($91)) + 92|0);
    HEAP32[$247>>2] = $246;
    $248 = ((($91)) + 132|0);
    $249 = ((($91)) + 92|0);
    $250 = HEAP32[$249>>2]|0;
    $6 = $248;
    $7 = $250;
    $251 = $6;
    $252 = $7;
    $253 = (($251) + ($252<<2)|0);
    HEAP32[$253>>2] = 0;
    $254 = ((($91)) + 148|0);
    $255 = ((($91)) + 92|0);
    $256 = HEAP32[$255>>2]|0;
    $2 = $254;
    $3 = $256;
    $257 = $2;
    $258 = $3;
    $259 = (($257) + ($258<<2)|0);
    HEAP32[$259>>2] = 0;
    break;
   }
   $260 = $89;
   $261 = ($260|0)>(2);
   if ($261) {
    $262 = ((($91)) + 92|0);
    $263 = HEAP32[$262>>2]|0;
    $264 = $89;
    $265 = (($263) + ($264))|0;
    $266 = (($265) - 2)|0;
    $267 = $266 & 3;
    $268 = ((($91)) + 92|0);
    HEAP32[$268>>2] = $267;
    $269 = $88;
    (__ZN7lazperf6detail21Gpstime10Decompressor10decompressEPc($91,$269)|0);
   }
  } else {
   $270 = ((($91)) + 4|0);
   $271 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($118,$270)|0);
   $89 = $271;
   $272 = $89;
   $273 = ($272|0)==(1);
   if ($273) {
    $274 = ((($91)) + 172|0);
    $275 = ((($91)) + 164|0);
    $276 = HEAP32[$275>>2]|0;
    $277 = ((($91)) + 132|0);
    $278 = ((($91)) + 92|0);
    $279 = HEAP32[$278>>2]|0;
    $4 = $277;
    $5 = $279;
    $280 = $4;
    $281 = $5;
    $282 = (($280) + ($281<<2)|0);
    $283 = HEAP32[$282>>2]|0;
    $284 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($274,$276,$283,1)|0);
    $285 = ($284|0)<(0);
    $286 = $285 << 31 >> 31;
    $287 = ((($91)) + 100|0);
    $288 = ((($91)) + 92|0);
    $289 = HEAP32[$288>>2]|0;
    $8 = $287;
    $9 = $289;
    $290 = $8;
    $291 = $9;
    $292 = (($290) + ($291<<3)|0);
    $293 = $292;
    $294 = $293;
    $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
    $296 = (($293) + 4)|0;
    $297 = $296;
    $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
    $299 = (_i64Add(($295|0),($298|0),($284|0),($286|0))|0);
    $300 = (getTempRet0() | 0);
    $301 = $292;
    $302 = $301;
    HEAP8[$302>>0]=$299&255;HEAP8[$302+1>>0]=($299>>8)&255;HEAP8[$302+2>>0]=($299>>16)&255;HEAP8[$302+3>>0]=$299>>24;
    $303 = (($301) + 4)|0;
    $304 = $303;
    HEAP8[$304>>0]=$300&255;HEAP8[$304+1>>0]=($300>>8)&255;HEAP8[$304+2>>0]=($300>>16)&255;HEAP8[$304+3>>0]=$300>>24;
    $305 = ((($91)) + 148|0);
    $306 = ((($91)) + 92|0);
    $307 = HEAP32[$306>>2]|0;
    $10 = $305;
    $11 = $307;
    $308 = $10;
    $309 = $11;
    $310 = (($308) + ($309<<2)|0);
    HEAP32[$310>>2] = 0;
    break;
   }
   $311 = $89;
   $312 = ($311|0)<(511);
   $313 = $89;
   if (!($312)) {
    $489 = ($313|0)==(512);
    if ($489) {
     $490 = ((($91)) + 96|0);
     $491 = HEAP32[$490>>2]|0;
     $492 = (($491) + 1)|0;
     $493 = $492 & 3;
     $494 = ((($91)) + 96|0);
     HEAP32[$494>>2] = $493;
     $495 = ((($91)) + 172|0);
     $496 = ((($91)) + 164|0);
     $497 = HEAP32[$496>>2]|0;
     $498 = ((($91)) + 100|0);
     $499 = ((($91)) + 92|0);
     $500 = HEAP32[$499>>2]|0;
     $60 = $498;
     $61 = $500;
     $501 = $60;
     $502 = $61;
     $503 = (($501) + ($502<<3)|0);
     $504 = $503;
     $505 = $504;
     $506 = HEAPU8[$505>>0]|(HEAPU8[$505+1>>0]<<8)|(HEAPU8[$505+2>>0]<<16)|(HEAPU8[$505+3>>0]<<24);
     $507 = (($504) + 4)|0;
     $508 = $507;
     $509 = HEAPU8[$508>>0]|(HEAPU8[$508+1>>0]<<8)|(HEAPU8[$508+2>>0]<<16)|(HEAPU8[$508+3>>0]<<24);
     $510 = (_bitshift64Ashr(($506|0),($509|0),32)|0);
     $511 = (getTempRet0() | 0);
     $512 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($495,$497,$510,8)|0);
     $513 = ($512|0)<(0);
     $514 = $513 << 31 >> 31;
     $515 = ((($91)) + 100|0);
     $516 = ((($91)) + 96|0);
     $517 = HEAP32[$516>>2]|0;
     $64 = $515;
     $65 = $517;
     $518 = $64;
     $519 = $65;
     $520 = (($518) + ($519<<3)|0);
     $521 = $520;
     $522 = $521;
     HEAP8[$522>>0]=$512&255;HEAP8[$522+1>>0]=($512>>8)&255;HEAP8[$522+2>>0]=($512>>16)&255;HEAP8[$522+3>>0]=$512>>24;
     $523 = (($521) + 4)|0;
     $524 = $523;
     HEAP8[$524>>0]=$514&255;HEAP8[$524+1>>0]=($514>>8)&255;HEAP8[$524+2>>0]=($514>>16)&255;HEAP8[$524+3>>0]=$514>>24;
     $525 = ((($91)) + 100|0);
     $526 = ((($91)) + 96|0);
     $527 = HEAP32[$526>>2]|0;
     $66 = $525;
     $67 = $527;
     $528 = $66;
     $529 = $67;
     $530 = (($528) + ($529<<3)|0);
     $531 = $530;
     $532 = $531;
     $533 = HEAPU8[$532>>0]|(HEAPU8[$532+1>>0]<<8)|(HEAPU8[$532+2>>0]<<16)|(HEAPU8[$532+3>>0]<<24);
     $534 = (($531) + 4)|0;
     $535 = $534;
     $536 = HEAPU8[$535>>0]|(HEAPU8[$535+1>>0]<<8)|(HEAPU8[$535+2>>0]<<16)|(HEAPU8[$535+3>>0]<<24);
     $537 = ((($91)) + 100|0);
     $538 = ((($91)) + 96|0);
     $539 = HEAP32[$538>>2]|0;
     $68 = $537;
     $69 = $539;
     $540 = $68;
     $541 = $69;
     $542 = (($540) + ($541<<3)|0);
     $543 = $542;
     $544 = $543;
     HEAP8[$544>>0]=0&255;HEAP8[$544+1>>0]=(0>>8)&255;HEAP8[$544+2>>0]=(0>>16)&255;HEAP8[$544+3>>0]=0>>24;
     $545 = (($543) + 4)|0;
     $546 = $545;
     HEAP8[$546>>0]=$533&255;HEAP8[$546+1>>0]=($533>>8)&255;HEAP8[$546+2>>0]=($533>>16)&255;HEAP8[$546+3>>0]=$533>>24;
     $547 = ((($91)) + 164|0);
     $548 = HEAP32[$547>>2]|0;
     $549 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE7readIntEv($548)|0);
     $550 = ((($91)) + 100|0);
     $551 = ((($91)) + 96|0);
     $552 = HEAP32[$551>>2]|0;
     $72 = $550;
     $73 = $552;
     $553 = $72;
     $554 = $73;
     $555 = (($553) + ($554<<3)|0);
     $556 = $555;
     $557 = $556;
     $558 = HEAPU8[$557>>0]|(HEAPU8[$557+1>>0]<<8)|(HEAPU8[$557+2>>0]<<16)|(HEAPU8[$557+3>>0]<<24);
     $559 = (($556) + 4)|0;
     $560 = $559;
     $561 = HEAPU8[$560>>0]|(HEAPU8[$560+1>>0]<<8)|(HEAPU8[$560+2>>0]<<16)|(HEAPU8[$560+3>>0]<<24);
     $562 = $558 | $549;
     $563 = $555;
     $564 = $563;
     HEAP8[$564>>0]=$562&255;HEAP8[$564+1>>0]=($562>>8)&255;HEAP8[$564+2>>0]=($562>>16)&255;HEAP8[$564+3>>0]=$562>>24;
     $565 = (($563) + 4)|0;
     $566 = $565;
     HEAP8[$566>>0]=$561&255;HEAP8[$566+1>>0]=($561>>8)&255;HEAP8[$566+2>>0]=($561>>16)&255;HEAP8[$566+3>>0]=$561>>24;
     $567 = ((($91)) + 96|0);
     $568 = HEAP32[$567>>2]|0;
     $569 = ((($91)) + 92|0);
     HEAP32[$569>>2] = $568;
     $570 = ((($91)) + 132|0);
     $571 = ((($91)) + 92|0);
     $572 = HEAP32[$571>>2]|0;
     $74 = $570;
     $75 = $572;
     $573 = $74;
     $574 = $75;
     $575 = (($573) + ($574<<2)|0);
     HEAP32[$575>>2] = 0;
     $576 = ((($91)) + 148|0);
     $577 = ((($91)) + 92|0);
     $578 = HEAP32[$577>>2]|0;
     $76 = $576;
     $77 = $578;
     $579 = $76;
     $580 = $77;
     $581 = (($579) + ($580<<2)|0);
     HEAP32[$581>>2] = 0;
     break;
    }
    $582 = $89;
    $583 = ($582|0)>=(512);
    if (!($583)) {
     break;
    }
    $584 = ((($91)) + 92|0);
    $585 = HEAP32[$584>>2]|0;
    $586 = $89;
    $587 = (($585) + ($586))|0;
    $588 = (($587) - 512)|0;
    $589 = $588 & 3;
    $590 = ((($91)) + 92|0);
    HEAP32[$590>>2] = $589;
    $591 = $88;
    (__ZN7lazperf6detail21Gpstime10Decompressor10decompressEPc($91,$591)|0);
    break;
   }
   $314 = ($313|0)==(0);
   do {
    if ($314) {
     $315 = ((($91)) + 172|0);
     $316 = ((($91)) + 164|0);
     $317 = HEAP32[$316>>2]|0;
     $318 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($315,$317,0,7)|0);
     $90 = $318;
     $319 = ((($91)) + 148|0);
     $320 = ((($91)) + 92|0);
     $321 = HEAP32[$320>>2]|0;
     $14 = $319;
     $15 = $321;
     $322 = $14;
     $323 = $15;
     $324 = (($322) + ($323<<2)|0);
     $325 = HEAP32[$324>>2]|0;
     $326 = (($325) + 1)|0;
     HEAP32[$324>>2] = $326;
     $327 = ((($91)) + 148|0);
     $328 = ((($91)) + 92|0);
     $329 = HEAP32[$328>>2]|0;
     $16 = $327;
     $17 = $329;
     $330 = $16;
     $331 = $17;
     $332 = (($330) + ($331<<2)|0);
     $333 = HEAP32[$332>>2]|0;
     $334 = ($333|0)>(3);
     if ($334) {
      $335 = $90;
      $336 = ((($91)) + 132|0);
      $337 = ((($91)) + 92|0);
      $338 = HEAP32[$337>>2]|0;
      $18 = $336;
      $19 = $338;
      $339 = $18;
      $340 = $19;
      $341 = (($339) + ($340<<2)|0);
      HEAP32[$341>>2] = $335;
      $342 = ((($91)) + 148|0);
      $343 = ((($91)) + 92|0);
      $344 = HEAP32[$343>>2]|0;
      $20 = $342;
      $21 = $344;
      $345 = $20;
      $346 = $21;
      $347 = (($345) + ($346<<2)|0);
      HEAP32[$347>>2] = 0;
     }
    } else {
     $348 = $89;
     $349 = ($348|0)<(500);
     $350 = $89;
     if ($349) {
      $351 = ($350|0)<(10);
      $352 = ((($91)) + 172|0);
      $353 = ((($91)) + 164|0);
      $354 = HEAP32[$353>>2]|0;
      $355 = $89;
      $356 = ((($91)) + 132|0);
      $357 = ((($91)) + 92|0);
      $358 = HEAP32[$357>>2]|0;
      if ($351) {
       $22 = $356;
       $23 = $358;
       $359 = $22;
       $360 = $23;
       $361 = (($359) + ($360<<2)|0);
       $362 = HEAP32[$361>>2]|0;
       $363 = Math_imul($355, $362)|0;
       $364 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($352,$354,$363,2)|0);
       $90 = $364;
       break;
      } else {
       $26 = $356;
       $27 = $358;
       $365 = $26;
       $366 = $27;
       $367 = (($365) + ($366<<2)|0);
       $368 = HEAP32[$367>>2]|0;
       $369 = Math_imul($355, $368)|0;
       $370 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($352,$354,$369,3)|0);
       $90 = $370;
       break;
      }
     }
     $371 = ($350|0)==(500);
     if ($371) {
      $372 = ((($91)) + 172|0);
      $373 = ((($91)) + 164|0);
      $374 = HEAP32[$373>>2]|0;
      $375 = ((($91)) + 132|0);
      $376 = ((($91)) + 92|0);
      $377 = HEAP32[$376>>2]|0;
      $30 = $375;
      $31 = $377;
      $378 = $30;
      $379 = $31;
      $380 = (($378) + ($379<<2)|0);
      $381 = HEAP32[$380>>2]|0;
      $382 = ($381*500)|0;
      $383 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($372,$374,$382,4)|0);
      $90 = $383;
      $384 = ((($91)) + 148|0);
      $385 = ((($91)) + 92|0);
      $386 = HEAP32[$385>>2]|0;
      $34 = $384;
      $35 = $386;
      $387 = $34;
      $388 = $35;
      $389 = (($387) + ($388<<2)|0);
      $390 = HEAP32[$389>>2]|0;
      $391 = (($390) + 1)|0;
      HEAP32[$389>>2] = $391;
      $392 = ((($91)) + 148|0);
      $393 = ((($91)) + 92|0);
      $394 = HEAP32[$393>>2]|0;
      $36 = $392;
      $37 = $394;
      $395 = $36;
      $396 = $37;
      $397 = (($395) + ($396<<2)|0);
      $398 = HEAP32[$397>>2]|0;
      $399 = ($398|0)>(3);
      if (!($399)) {
       break;
      }
      $400 = $90;
      $401 = ((($91)) + 132|0);
      $402 = ((($91)) + 92|0);
      $403 = HEAP32[$402>>2]|0;
      $38 = $401;
      $39 = $403;
      $404 = $38;
      $405 = $39;
      $406 = (($404) + ($405<<2)|0);
      HEAP32[$406>>2] = $400;
      $407 = ((($91)) + 148|0);
      $408 = ((($91)) + 92|0);
      $409 = HEAP32[$408>>2]|0;
      $40 = $407;
      $41 = $409;
      $410 = $40;
      $411 = $41;
      $412 = (($410) + ($411<<2)|0);
      HEAP32[$412>>2] = 0;
      break;
     }
     $413 = $89;
     $414 = (500 - ($413))|0;
     $89 = $414;
     $415 = $89;
     $416 = ($415|0)>(-10);
     $417 = ((($91)) + 172|0);
     $418 = ((($91)) + 164|0);
     $419 = HEAP32[$418>>2]|0;
     if ($416) {
      $420 = $89;
      $421 = ((($91)) + 132|0);
      $422 = ((($91)) + 92|0);
      $423 = HEAP32[$422>>2]|0;
      $42 = $421;
      $43 = $423;
      $424 = $42;
      $425 = $43;
      $426 = (($424) + ($425<<2)|0);
      $427 = HEAP32[$426>>2]|0;
      $428 = Math_imul($420, $427)|0;
      $429 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($417,$419,$428,5)|0);
      $90 = $429;
      break;
     }
     $430 = ((($91)) + 132|0);
     $431 = ((($91)) + 92|0);
     $432 = HEAP32[$431>>2]|0;
     $46 = $430;
     $47 = $432;
     $433 = $46;
     $434 = $47;
     $435 = (($433) + ($434<<2)|0);
     $436 = HEAP32[$435>>2]|0;
     $437 = Math_imul(-10, $436)|0;
     $438 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($417,$419,$437,6)|0);
     $90 = $438;
     $439 = ((($91)) + 148|0);
     $440 = ((($91)) + 92|0);
     $441 = HEAP32[$440>>2]|0;
     $50 = $439;
     $51 = $441;
     $442 = $50;
     $443 = $51;
     $444 = (($442) + ($443<<2)|0);
     $445 = HEAP32[$444>>2]|0;
     $446 = (($445) + 1)|0;
     HEAP32[$444>>2] = $446;
     $447 = ((($91)) + 148|0);
     $448 = ((($91)) + 92|0);
     $449 = HEAP32[$448>>2]|0;
     $52 = $447;
     $53 = $449;
     $450 = $52;
     $451 = $53;
     $452 = (($450) + ($451<<2)|0);
     $453 = HEAP32[$452>>2]|0;
     $454 = ($453|0)>(3);
     if ($454) {
      $455 = $90;
      $456 = ((($91)) + 132|0);
      $457 = ((($91)) + 92|0);
      $458 = HEAP32[$457>>2]|0;
      $54 = $456;
      $55 = $458;
      $459 = $54;
      $460 = $55;
      $461 = (($459) + ($460<<2)|0);
      HEAP32[$461>>2] = $455;
      $462 = ((($91)) + 148|0);
      $463 = ((($91)) + 92|0);
      $464 = HEAP32[$463>>2]|0;
      $56 = $462;
      $57 = $464;
      $465 = $56;
      $466 = $57;
      $467 = (($465) + ($466<<2)|0);
      HEAP32[$467>>2] = 0;
     }
    }
   } while(0);
   $468 = $90;
   $469 = ($468|0)<(0);
   $470 = $469 << 31 >> 31;
   $471 = ((($91)) + 100|0);
   $472 = ((($91)) + 92|0);
   $473 = HEAP32[$472>>2]|0;
   $58 = $471;
   $59 = $473;
   $474 = $58;
   $475 = $59;
   $476 = (($474) + ($475<<3)|0);
   $477 = $476;
   $478 = $477;
   $479 = HEAPU8[$478>>0]|(HEAPU8[$478+1>>0]<<8)|(HEAPU8[$478+2>>0]<<16)|(HEAPU8[$478+3>>0]<<24);
   $480 = (($477) + 4)|0;
   $481 = $480;
   $482 = HEAPU8[$481>>0]|(HEAPU8[$481+1>>0]<<8)|(HEAPU8[$481+2>>0]<<16)|(HEAPU8[$481+3>>0]<<24);
   $483 = (_i64Add(($479|0),($482|0),($468|0),($470|0))|0);
   $484 = (getTempRet0() | 0);
   $485 = $476;
   $486 = $485;
   HEAP8[$486>>0]=$483&255;HEAP8[$486+1>>0]=($483>>8)&255;HEAP8[$486+2>>0]=($483>>16)&255;HEAP8[$486+3>>0]=$483>>24;
   $487 = (($485) + 4)|0;
   $488 = $487;
   HEAP8[$488>>0]=$484&255;HEAP8[$488+1>>0]=($484>>8)&255;HEAP8[$488+2>>0]=($484>>16)&255;HEAP8[$488+3>>0]=$484>>24;
  }
 } while(0);
 $592 = ((($91)) + 100|0);
 $593 = ((($91)) + 92|0);
 $594 = HEAP32[$593>>2]|0;
 $78 = $592;
 $79 = $594;
 $595 = $78;
 $596 = $79;
 $597 = (($595) + ($596<<3)|0);
 $598 = $88;
 __ZN7lazperf3las7gpstime4packEPc($597,$598);
 $599 = $88;
 $600 = ((($599)) + 8|0);
 $86 = $600;
 $601 = $86;
 STACKTOP = sp;return ($601|0);
}
function __ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE7readIntEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE9readShortEv($4)|0);
 $6 = $5&65535;
 $2 = $6;
 $7 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE9readShortEv($4)|0);
 $8 = $7&65535;
 $3 = $8;
 $9 = $3;
 $10 = $9 << 16;
 $11 = $2;
 $12 = $10 | $11;
 STACKTOP = sp;return ($12|0);
}
function __ZN7lazperf3las7gpstime4packEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $4;
 $6 = $5;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $3;
 __ZN7lazperf5utils4packEjPc($7,$11);
 $12 = $4;
 $13 = $12;
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = (($12) + 4)|0;
 $16 = $15;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = (_bitshift64Ashr(($14|0),($17|0),32)|0);
 $19 = (getTempRet0() | 0);
 $20 = $3;
 $21 = ((($20)) + 4|0);
 __ZN7lazperf5utils4packEjPc($18,$21);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils4packEjPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $4 >>> 24;
 $6 = $5 & 255;
 $7 = $6&255;
 $8 = $3;
 $9 = ((($8)) + 3|0);
 HEAP8[$9>>0] = $7;
 $10 = $2;
 $11 = $10 >>> 16;
 $12 = $11 & 255;
 $13 = $12&255;
 $14 = $3;
 $15 = ((($14)) + 2|0);
 HEAP8[$15>>0] = $13;
 $16 = $2;
 $17 = $16 >>> 8;
 $18 = $17 & 255;
 $19 = $18&255;
 $20 = $3;
 $21 = ((($20)) + 1|0);
 HEAP8[$21>>0] = $19;
 $22 = $2;
 $23 = $22 & 255;
 $24 = $23&255;
 $25 = $3;
 HEAP8[$25>>0] = $24;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las5nir146unpackEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN7lazperf5utils6unpackItEET_PKc($5)|0);
 HEAP8[$4>>0]=$6&255;HEAP8[$4+1>>0]=$6>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6unpackItEET_PKc($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = HEAP8[$4>>0]|0;
 $6 = $5 << 24 >> 24;
 $2 = $6;
 $7 = $1;
 $8 = ((($7)) + 1|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9 << 24 >> 24;
 $3 = $10;
 $11 = $3;
 $12 = $11&65535;
 $13 = $12 & 255;
 $14 = $13 << 8;
 $15 = $2;
 $16 = $15&65535;
 $17 = $16 & 255;
 $18 = $14 | $17;
 $19 = $18&65535;
 STACKTOP = sp;return ($19|0);
}
function __ZN7lazperf6detail17Nir14Decompressor8dumpSumsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20847)|0);
 $4 = ((($2)) + 592|0);
 $5 = (__ZN7lazperf5utils6Summer5valueEv($4)|0);
 $6 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($3,$5)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($6,21164)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Nir14Decompressor9readSizesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 564|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 568|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($4,$5)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Nir14Decompressor8readDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 572|0);
 $4 = ((($2)) + 564|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 568|0);
 $7 = HEAP32[$6>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Nir14Decompressor10decompressEPcRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $27 = sp + 98|0;
 $18 = $0;
 $19 = $1;
 $20 = $2;
 $30 = $18;
 $31 = ((($30)) + 560|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)==(-1);
 if ($33) {
  $34 = $20;
  $35 = HEAP32[$34>>2]|0;
  $15 = $30;
  $16 = $35;
  $36 = $15;
  $37 = $16;
  $38 = (($36) + (($37*140)|0)|0);
  $21 = $38;
  $39 = ((($30)) + 564|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = $19;
  __ZN7lazperf10InCbStream8getBytesEPhm($40,$41,2);
  $42 = $21;
  $43 = ((($42)) + 4|0);
  $44 = $19;
  __ZN7lazperf3las5nir146unpackEPKc($43,$44);
  $45 = $21;
  HEAP32[$45>>2] = 1;
  $46 = $20;
  $47 = HEAP32[$46>>2]|0;
  $48 = ((($30)) + 560|0);
  HEAP32[$48>>2] = $47;
  $49 = $19;
  $50 = ((($49)) + 2|0);
  $17 = $50;
  $165 = $17;
  STACKTOP = sp;return ($165|0);
 }
 $51 = ((($30)) + 568|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ($52|0)==(0);
 if ($53) {
  $54 = $19;
  $22 = $54;
  $55 = ((($30)) + 560|0);
  $56 = HEAP32[$55>>2]|0;
  $13 = $30;
  $14 = $56;
  $57 = $13;
  $58 = $14;
  $59 = (($57) + (($58*140)|0)|0);
  $60 = ((($59)) + 4|0);
  $61 = $22;
  ;HEAP8[$61>>0]=HEAP8[$60>>0]|0;HEAP8[$61+1>>0]=HEAP8[$60+1>>0]|0;
  $62 = $19;
  $63 = ((($62)) + 2|0);
  $17 = $63;
  $165 = $17;
  STACKTOP = sp;return ($165|0);
 }
 $64 = $20;
 $65 = HEAP32[$64>>2]|0;
 $11 = $30;
 $12 = $65;
 $66 = $11;
 $67 = $12;
 $68 = (($66) + (($67*140)|0)|0);
 $23 = $68;
 $69 = ((($30)) + 560|0);
 $70 = HEAP32[$69>>2]|0;
 $9 = $30;
 $10 = $70;
 $71 = $9;
 $72 = $10;
 $73 = (($71) + (($72*140)|0)|0);
 $74 = ((($73)) + 4|0);
 $24 = $74;
 $75 = $20;
 $76 = HEAP32[$75>>2]|0;
 $77 = ((($30)) + 560|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = ($76|0)!=($78|0);
 if ($79) {
  $80 = $20;
  $81 = HEAP32[$80>>2]|0;
  $82 = ((($30)) + 560|0);
  HEAP32[$82>>2] = $81;
  $83 = $23;
  $84 = HEAP32[$83>>2]|0;
  $85 = ($84|0)!=(0);
  if (!($85)) {
   $86 = $23;
   HEAP32[$86>>2] = 1;
   $87 = $24;
   $88 = $23;
   $89 = ((($88)) + 4|0);
   ;HEAP8[$89>>0]=HEAP8[$87>>0]|0;HEAP8[$89+1>>0]=HEAP8[$87+1>>0]|0;
   $90 = ((($30)) + 560|0);
   $91 = HEAP32[$90>>2]|0;
   $5 = $30;
   $6 = $91;
   $92 = $5;
   $93 = $6;
   $94 = (($92) + (($93*140)|0)|0);
   $95 = ((($94)) + 4|0);
   $24 = $95;
  }
 }
 $96 = $24;
 $25 = $96;
 $97 = ((($30)) + 572|0);
 $98 = $23;
 $99 = ((($98)) + 8|0);
 $100 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($97,$99)|0);
 $26 = $100;
 __ZN7lazperf3las5nir14C2Ev($27);
 $101 = $26;
 $102 = $101 & 1;
 $103 = ($102|0)!=(0);
 if ($103) {
  $104 = ((($30)) + 572|0);
  $105 = $23;
  $106 = ((($105)) + 52|0);
  $3 = $106;
  $4 = 0;
  $107 = $3;
  $108 = $4;
  $109 = (($107) + (($108*44)|0)|0);
  $110 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($104,$109)|0);
  $111 = $110&255;
  $28 = $111;
  $112 = $28;
  $113 = $112&255;
  $114 = $25;
  $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8);
  $116 = $115&65535;
  $117 = $116 & 255;
  $118 = (($113) + ($117))|0;
  $119 = $118&255;
  $120 = $119&255;
  HEAP8[$27>>0]=$120&255;HEAP8[$27+1>>0]=$120>>8;
 } else {
  $121 = $25;
  $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8);
  $123 = $122&65535;
  $124 = $123 & 255;
  $125 = $124&65535;
  HEAP8[$27>>0]=$125&255;HEAP8[$27+1>>0]=$125>>8;
 }
 $126 = $26;
 $127 = $126 & 2;
 $128 = ($127|0)!=(0);
 if ($128) {
  $129 = ((($30)) + 572|0);
  $130 = $23;
  $131 = ((($130)) + 52|0);
  $7 = $131;
  $8 = 1;
  $132 = $7;
  $133 = $8;
  $134 = (($132) + (($133*44)|0)|0);
  $135 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($129,$134)|0);
  $136 = $135&255;
  $29 = $136;
  $137 = $29;
  $138 = $137&255;
  $139 = $25;
  $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8);
  $141 = $140&65535;
  $142 = $141 >> 8;
  $143 = (($138) + ($142))|0;
  $144 = $143&255;
  $145 = $144&255;
  $146 = $145&65535;
  $147 = $146 << 8;
  $148 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
  $149 = $148&65535;
  $150 = $149 | $147;
  $151 = $150&65535;
  HEAP8[$27>>0]=$151&255;HEAP8[$27+1>>0]=$151>>8;
 } else {
  $152 = $25;
  $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8);
  $154 = $153&65535;
  $155 = $154 & 65280;
  $156 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
  $157 = $156&65535;
  $158 = $157 | $155;
  $159 = $158&65535;
  HEAP8[$27>>0]=$159&255;HEAP8[$27+1>>0]=$159>>8;
 }
 $160 = ((($30)) + 592|0);
 __ZN7lazperf5utils6Summer3addINS_3las5nir14EEEvRKT_($160,$27);
 $161 = $25;
 ;HEAP8[$161>>0]=HEAP8[$27>>0]|0;HEAP8[$161+1>>0]=HEAP8[$27+1>>0]|0;
 $162 = $19;
 __ZN7lazperf3las5nir144packEPc($27,$162);
 $163 = $19;
 $164 = ((($163)) + 2|0);
 $17 = $164;
 $165 = $17;
 STACKTOP = sp;return ($165|0);
}
function __ZN7lazperf5utils6Summer3addINS_3las5nir14EEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,2)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las5nir144packEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8);
 $6 = $3;
 __ZN7lazperf5utils4packEtPc($5,$6);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils4packEtPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $4&65535;
 $6 = $5 >> 8;
 $7 = $6 & 255;
 $8 = $7&255;
 $9 = $3;
 $10 = ((($9)) + 1|0);
 HEAP8[$10>>0] = $8;
 $11 = $2;
 $12 = $11&65535;
 $13 = $12 & 255;
 $14 = $13&255;
 $15 = $3;
 HEAP8[$15>>0] = $14;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail11Point10BaseC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $30 = sp + 124|0;
 $31 = sp + 4|0;
 $29 = $0;
 $33 = $29;
 __ZN7lazperf3las7point10C2Ev($33);
 $34 = ((($33)) + 52|0);
 __ZNSt3__25arrayIN7lazperf5utils16streaming_medianIiEELm16EEC2Ev($34);
 $35 = ((($33)) + 436|0);
 __ZNSt3__25arrayIN7lazperf5utils16streaming_medianIiEELm16EEC2Ev($35);
 $36 = ((($33)) + 852|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($36,64,0,0);
 $37 = ((($33)) + 3976|0);
 HEAP8[$37>>0] = 0;
 $38 = ((($33)) + 20|0);
 HEAP16[$30>>1] = 0;
 $27 = $38;
 $28 = $30;
 $39 = $27;
 $40 = $28;
 $24 = $39;
 $25 = 16;
 $26 = $40;
 $41 = $24;
 $42 = $25;
 $23 = $42;
 $43 = $23;
 $44 = $26;
 $20 = $41;
 $21 = $43;
 $22 = $44;
 while(1) {
  $45 = $21;
  $46 = ($45>>>0)>(0);
  if (!($46)) {
   break;
  }
  $47 = $22;
  $48 = HEAP16[$47>>1]|0;
  $49 = $20;
  HEAP16[$49>>1] = $48;
  $50 = $20;
  $51 = ((($50)) + 2|0);
  $20 = $51;
  $52 = $21;
  $53 = (($52) + -1)|0;
  $21 = $53;
 }
 $54 = (__Znwm(44)|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($54,256,0,0);
 $55 = ((($33)) + 896|0);
 $18 = $55;
 $19 = 0;
 $56 = $18;
 $57 = $19;
 $58 = (($56) + ($57<<2)|0);
 HEAP32[$58>>2] = $54;
 $59 = (__Znwm(44)|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($59,256,0,0);
 $60 = ((($33)) + 896|0);
 $14 = $60;
 $15 = 1;
 $61 = $14;
 $62 = $15;
 $63 = (($61) + ($62<<2)|0);
 HEAP32[$63>>2] = $59;
 $64 = ((($33)) + 820|0);
 HEAP32[$31>>2] = 0;
 $10 = $64;
 $11 = $31;
 $65 = $10;
 $66 = $11;
 $7 = $65;
 $8 = 8;
 $9 = $66;
 $67 = $7;
 $68 = $8;
 $6 = $68;
 $69 = $6;
 $70 = $9;
 $3 = $67;
 $4 = $69;
 $5 = $70;
 while(1) {
  $71 = $4;
  $72 = ($71>>>0)>(0);
  if (!($72)) {
   break;
  }
  $73 = $5;
  $74 = HEAP32[$73>>2]|0;
  $75 = $3;
  HEAP32[$75>>2] = $74;
  $76 = $3;
  $77 = ((($76)) + 4|0);
  $3 = $77;
  $78 = $4;
  $79 = (($78) + -1)|0;
  $4 = $79;
 }
 $32 = 0;
 while(1) {
  $80 = $32;
  $81 = ($80|0)<(256);
  if (!($81)) {
   break;
  }
  $82 = (__Znwm(44)|0);
  __ZN7lazperf6models10arithmeticC2EjbPj($82,256,0,0);
  $83 = ((($33)) + 904|0);
  $84 = $32;
  $1 = $83;
  $2 = $84;
  $85 = $1;
  $86 = $2;
  $87 = (($85) + ($86<<2)|0);
  HEAP32[$87>>2] = $82;
  $88 = (__Znwm(44)|0);
  __ZN7lazperf6models10arithmeticC2EjbPj($88,256,0,0);
  $89 = ((($33)) + 1928|0);
  $90 = $32;
  $12 = $89;
  $13 = $90;
  $91 = $12;
  $92 = $13;
  $93 = (($91) + ($92<<2)|0);
  HEAP32[$93>>2] = $88;
  $94 = (__Znwm(44)|0);
  __ZN7lazperf6models10arithmeticC2EjbPj($94,256,0,0);
  $95 = ((($33)) + 2952|0);
  $96 = $32;
  $16 = $95;
  $17 = $96;
  $97 = $16;
  $98 = $17;
  $99 = (($97) + ($98<<2)|0);
  HEAP32[$99>>2] = $94;
  $100 = $32;
  $101 = (($100) + 1)|0;
  $32 = $101;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point10C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 $3 = ((($2)) + 4|0);
 HEAP8[$3>>0]=0&255;HEAP8[$3+1>>0]=(0>>8)&255;HEAP8[$3+2>>0]=(0>>16)&255;HEAP8[$3+3>>0]=0>>24;
 $4 = ((($2)) + 12|0);
 HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=0>>8;
 $5 = ((($2)) + 14|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 & -8;
 HEAP8[$5>>0] = $7;
 $8 = ((($2)) + 14|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9 & -57;
 HEAP8[$8>>0] = $10;
 $11 = ((($2)) + 14|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12 & -65;
 HEAP8[$11>>0] = $13;
 $14 = ((($2)) + 14|0);
 $15 = HEAP8[$14>>0]|0;
 $16 = $15 & 127;
 HEAP8[$14>>0] = $16;
 $17 = ((($2)) + 15|0);
 HEAP8[$17>>0] = 0;
 $18 = ((($2)) + 16|0);
 HEAP8[$18>>0] = 0;
 $19 = ((($2)) + 17|0);
 HEAP8[$19>>0] = 0;
 $20 = ((($2)) + 18|0);
 HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=0>>8;
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf5utils16streaming_medianIiEELm16EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 384|0);
 $4 = $2;
 while(1) {
  __ZN7lazperf5utils16streaming_medianIiEC2Ev($4);
  $5 = ((($4)) + 24|0);
  $6 = ($5|0)==($3|0);
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils16streaming_medianIiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN7lazperf5utils16streaming_medianIiE4initEv($2);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils16streaming_medianIiE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = sp;
 $10 = $0;
 $12 = $10;
 HEAP32[$11>>2] = 0;
 $8 = $12;
 $9 = $11;
 $13 = $8;
 $14 = $9;
 $5 = $13;
 $6 = 5;
 $7 = $14;
 $15 = $5;
 $16 = $6;
 $4 = $16;
 $17 = $4;
 $18 = $7;
 $1 = $15;
 $2 = $17;
 $3 = $18;
 while(1) {
  $19 = $2;
  $20 = ($19>>>0)>(0);
  if (!($20)) {
   break;
  }
  $21 = $3;
  $22 = HEAP32[$21>>2]|0;
  $23 = $1;
  HEAP32[$23>>2] = $22;
  $24 = $1;
  $25 = ((($24)) + 4|0);
  $1 = $25;
  $26 = $2;
  $27 = (($26) + -1)|0;
  $2 = $27;
 }
 $28 = ((($12)) + 20|0);
 HEAP8[$28>>0] = 1;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail11Point10BaseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = $0;
 $13 = $11;
 $14 = ((($13)) + 896|0);
 $9 = $14;
 $10 = 0;
 $15 = $9;
 $16 = $10;
 $17 = (($15) + ($16<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if (!($19)) {
  __ZN7lazperf6models10arithmeticD2Ev($18);
  __ZdlPv($18);
 }
 $20 = ((($13)) + 896|0);
 $7 = $20;
 $8 = 1;
 $21 = $7;
 $22 = $8;
 $23 = (($21) + ($22<<2)|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(0|0);
 if (!($25)) {
  __ZN7lazperf6models10arithmeticD2Ev($24);
  __ZdlPv($24);
 }
 $12 = 0;
 while(1) {
  $26 = $12;
  $27 = ($26|0)<(256);
  if (!($27)) {
   break;
  }
  $28 = ((($13)) + 904|0);
  $29 = $12;
  $5 = $28;
  $6 = $29;
  $30 = $5;
  $31 = $6;
  $32 = (($30) + ($31<<2)|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ($33|0)==(0|0);
  if (!($34)) {
   __ZN7lazperf6models10arithmeticD2Ev($33);
   __ZdlPv($33);
  }
  $35 = ((($13)) + 1928|0);
  $36 = $12;
  $3 = $35;
  $4 = $36;
  $37 = $3;
  $38 = $4;
  $39 = (($37) + ($38<<2)|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($40|0)==(0|0);
  if (!($41)) {
   __ZN7lazperf6models10arithmeticD2Ev($40);
   __ZdlPv($40);
  }
  $42 = ((($13)) + 2952|0);
  $43 = $12;
  $1 = $42;
  $2 = $43;
  $44 = $1;
  $45 = $2;
  $46 = (($44) + ($45<<2)|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = ($47|0)==(0|0);
  if (!($48)) {
   __ZN7lazperf6models10arithmeticD2Ev($47);
   __ZdlPv($47);
  }
  $49 = $12;
  $50 = (($49) + 1)|0;
  $12 = $50;
 }
 $51 = ((($13)) + 852|0);
 __ZN7lazperf6models10arithmeticD2Ev($51);
 STACKTOP = sp;return;
}
function __ZNK7lazperf3las7point1014from_bitfieldsEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 14|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4&255) >>> 7;
 $6 = $5&255;
 $7 = $6 & 1;
 $8 = $7 << 7;
 $9 = ((($2)) + 14|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10&255) >>> 6;
 $12 = $11 & 1;
 $13 = $12&255;
 $14 = $13 & 1;
 $15 = $14 << 6;
 $16 = $8 | $15;
 $17 = ((($2)) + 14|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = ($18&255) >>> 3;
 $20 = $19 & 7;
 $21 = $20&255;
 $22 = $21 & 7;
 $23 = $22 << 3;
 $24 = $16 | $23;
 $25 = ((($2)) + 14|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = $26 & 7;
 $28 = $27&255;
 $29 = $28 & 7;
 $30 = $24 | $29;
 $31 = $30&255;
 STACKTOP = sp;return ($31|0);
}
function __ZNK7lazperf5utils16streaming_medianIiE3getEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $3;
 $1 = $4;
 $2 = 2;
 $5 = $1;
 $6 = $2;
 $7 = (($5) + ($6<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZN7lazperf5utils16streaming_medianIiE3addERKi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $89 = ((($88)) + 20|0);
 $90 = HEAP8[$89>>0]|0;
 $91 = $90&1;
 if ($91) {
  $92 = $87;
  $93 = HEAP32[$92>>2]|0;
  $84 = $88;
  $85 = 2;
  $94 = $84;
  $95 = $85;
  $96 = (($94) + ($95<<2)|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ($93|0)<($97|0);
  if (!($98)) {
   $163 = $87;
   $164 = HEAP32[$163>>2]|0;
   $32 = $88;
   $33 = 3;
   $165 = $32;
   $166 = $33;
   $167 = (($165) + ($166<<2)|0);
   $168 = HEAP32[$167>>2]|0;
   $169 = ($164|0)<($168|0);
   if ($169) {
    $34 = $88;
    $35 = 3;
    $170 = $34;
    $171 = $35;
    $172 = (($170) + ($171<<2)|0);
    $173 = HEAP32[$172>>2]|0;
    $36 = $88;
    $37 = 4;
    $174 = $36;
    $175 = $37;
    $176 = (($174) + ($175<<2)|0);
    HEAP32[$176>>2] = $173;
    $177 = $87;
    $178 = HEAP32[$177>>2]|0;
    $38 = $88;
    $39 = 3;
    $179 = $38;
    $180 = $39;
    $181 = (($179) + ($180<<2)|0);
    HEAP32[$181>>2] = $178;
   } else {
    $182 = $87;
    $183 = HEAP32[$182>>2]|0;
    $40 = $88;
    $41 = 4;
    $184 = $40;
    $185 = $41;
    $186 = (($184) + ($185<<2)|0);
    HEAP32[$186>>2] = $183;
   }
   $187 = ((($88)) + 20|0);
   HEAP8[$187>>0] = 0;
   STACKTOP = sp;return;
  }
  $2 = $88;
  $3 = 3;
  $99 = $2;
  $100 = $3;
  $101 = (($99) + ($100<<2)|0);
  $102 = HEAP32[$101>>2]|0;
  $4 = $88;
  $5 = 4;
  $103 = $4;
  $104 = $5;
  $105 = (($103) + ($104<<2)|0);
  HEAP32[$105>>2] = $102;
  $6 = $88;
  $7 = 2;
  $106 = $6;
  $107 = $7;
  $108 = (($106) + ($107<<2)|0);
  $109 = HEAP32[$108>>2]|0;
  $8 = $88;
  $9 = 3;
  $110 = $8;
  $111 = $9;
  $112 = (($110) + ($111<<2)|0);
  HEAP32[$112>>2] = $109;
  $113 = $87;
  $114 = HEAP32[$113>>2]|0;
  $10 = $88;
  $11 = 0;
  $115 = $10;
  $116 = $11;
  $117 = (($115) + ($116<<2)|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = ($114|0)<($118|0);
  if ($119) {
   $12 = $88;
   $13 = 1;
   $120 = $12;
   $121 = $13;
   $122 = (($120) + ($121<<2)|0);
   $123 = HEAP32[$122>>2]|0;
   $14 = $88;
   $15 = 2;
   $124 = $14;
   $125 = $15;
   $126 = (($124) + ($125<<2)|0);
   HEAP32[$126>>2] = $123;
   $16 = $88;
   $17 = 0;
   $127 = $16;
   $128 = $17;
   $129 = (($127) + ($128<<2)|0);
   $130 = HEAP32[$129>>2]|0;
   $18 = $88;
   $19 = 1;
   $131 = $18;
   $132 = $19;
   $133 = (($131) + ($132<<2)|0);
   HEAP32[$133>>2] = $130;
   $134 = $87;
   $135 = HEAP32[$134>>2]|0;
   $20 = $88;
   $21 = 0;
   $136 = $20;
   $137 = $21;
   $138 = (($136) + ($137<<2)|0);
   HEAP32[$138>>2] = $135;
   STACKTOP = sp;return;
  }
  $139 = $87;
  $140 = HEAP32[$139>>2]|0;
  $22 = $88;
  $23 = 1;
  $141 = $22;
  $142 = $23;
  $143 = (($141) + ($142<<2)|0);
  $144 = HEAP32[$143>>2]|0;
  $145 = ($140|0)<($144|0);
  if ($145) {
   $24 = $88;
   $25 = 1;
   $146 = $24;
   $147 = $25;
   $148 = (($146) + ($147<<2)|0);
   $149 = HEAP32[$148>>2]|0;
   $26 = $88;
   $27 = 2;
   $150 = $26;
   $151 = $27;
   $152 = (($150) + ($151<<2)|0);
   HEAP32[$152>>2] = $149;
   $153 = $87;
   $154 = HEAP32[$153>>2]|0;
   $28 = $88;
   $29 = 1;
   $155 = $28;
   $156 = $29;
   $157 = (($155) + ($156<<2)|0);
   HEAP32[$157>>2] = $154;
   STACKTOP = sp;return;
  } else {
   $158 = $87;
   $159 = HEAP32[$158>>2]|0;
   $30 = $88;
   $31 = 2;
   $160 = $30;
   $161 = $31;
   $162 = (($160) + ($161<<2)|0);
   HEAP32[$162>>2] = $159;
   STACKTOP = sp;return;
  }
 } else {
  $42 = $88;
  $43 = 2;
  $188 = $42;
  $189 = $43;
  $190 = (($188) + ($189<<2)|0);
  $191 = HEAP32[$190>>2]|0;
  $192 = $87;
  $193 = HEAP32[$192>>2]|0;
  $194 = ($191|0)<($193|0);
  if (!($194)) {
   $74 = $88;
   $75 = 1;
   $259 = $74;
   $260 = $75;
   $261 = (($259) + ($260<<2)|0);
   $262 = HEAP32[$261>>2]|0;
   $263 = $87;
   $264 = HEAP32[$263>>2]|0;
   $265 = ($262|0)<($264|0);
   if ($265) {
    $76 = $88;
    $77 = 1;
    $266 = $76;
    $267 = $77;
    $268 = (($266) + ($267<<2)|0);
    $269 = HEAP32[$268>>2]|0;
    $78 = $88;
    $79 = 0;
    $270 = $78;
    $271 = $79;
    $272 = (($270) + ($271<<2)|0);
    HEAP32[$272>>2] = $269;
    $273 = $87;
    $274 = HEAP32[$273>>2]|0;
    $80 = $88;
    $81 = 1;
    $275 = $80;
    $276 = $81;
    $277 = (($275) + ($276<<2)|0);
    HEAP32[$277>>2] = $274;
   } else {
    $278 = $87;
    $279 = HEAP32[$278>>2]|0;
    $82 = $88;
    $83 = 0;
    $280 = $82;
    $281 = $83;
    $282 = (($280) + ($281<<2)|0);
    HEAP32[$282>>2] = $279;
   }
   $283 = ((($88)) + 20|0);
   HEAP8[$283>>0] = 1;
   STACKTOP = sp;return;
  }
  $44 = $88;
  $45 = 1;
  $195 = $44;
  $196 = $45;
  $197 = (($195) + ($196<<2)|0);
  $198 = HEAP32[$197>>2]|0;
  $46 = $88;
  $47 = 0;
  $199 = $46;
  $200 = $47;
  $201 = (($199) + ($200<<2)|0);
  HEAP32[$201>>2] = $198;
  $48 = $88;
  $49 = 2;
  $202 = $48;
  $203 = $49;
  $204 = (($202) + ($203<<2)|0);
  $205 = HEAP32[$204>>2]|0;
  $50 = $88;
  $51 = 1;
  $206 = $50;
  $207 = $51;
  $208 = (($206) + ($207<<2)|0);
  HEAP32[$208>>2] = $205;
  $52 = $88;
  $53 = 4;
  $209 = $52;
  $210 = $53;
  $211 = (($209) + ($210<<2)|0);
  $212 = HEAP32[$211>>2]|0;
  $213 = $87;
  $214 = HEAP32[$213>>2]|0;
  $215 = ($212|0)<($214|0);
  if ($215) {
   $54 = $88;
   $55 = 3;
   $216 = $54;
   $217 = $55;
   $218 = (($216) + ($217<<2)|0);
   $219 = HEAP32[$218>>2]|0;
   $56 = $88;
   $57 = 2;
   $220 = $56;
   $221 = $57;
   $222 = (($220) + ($221<<2)|0);
   HEAP32[$222>>2] = $219;
   $58 = $88;
   $59 = 4;
   $223 = $58;
   $224 = $59;
   $225 = (($223) + ($224<<2)|0);
   $226 = HEAP32[$225>>2]|0;
   $60 = $88;
   $61 = 3;
   $227 = $60;
   $228 = $61;
   $229 = (($227) + ($228<<2)|0);
   HEAP32[$229>>2] = $226;
   $230 = $87;
   $231 = HEAP32[$230>>2]|0;
   $62 = $88;
   $63 = 4;
   $232 = $62;
   $233 = $63;
   $234 = (($232) + ($233<<2)|0);
   HEAP32[$234>>2] = $231;
   STACKTOP = sp;return;
  }
  $64 = $88;
  $65 = 3;
  $235 = $64;
  $236 = $65;
  $237 = (($235) + ($236<<2)|0);
  $238 = HEAP32[$237>>2]|0;
  $239 = $87;
  $240 = HEAP32[$239>>2]|0;
  $241 = ($238|0)<($240|0);
  if ($241) {
   $66 = $88;
   $67 = 3;
   $242 = $66;
   $243 = $67;
   $244 = (($242) + ($243<<2)|0);
   $245 = HEAP32[$244>>2]|0;
   $68 = $88;
   $69 = 2;
   $246 = $68;
   $247 = $69;
   $248 = (($246) + ($247<<2)|0);
   HEAP32[$248>>2] = $245;
   $249 = $87;
   $250 = HEAP32[$249>>2]|0;
   $70 = $88;
   $71 = 3;
   $251 = $70;
   $252 = $71;
   $253 = (($251) + ($252<<2)|0);
   HEAP32[$253>>2] = $250;
   STACKTOP = sp;return;
  } else {
   $254 = $87;
   $255 = HEAP32[$254>>2]|0;
   $72 = $88;
   $73 = 2;
   $256 = $72;
   $257 = $73;
   $258 = (($256) + ($257<<2)|0);
   HEAP32[$258>>2] = $255;
   STACKTOP = sp;return;
  }
 }
}
function __ZN7lazperf5utils8clearBitILi0EjEET0_S2_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = $2 & -2;
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf3las7point106unpackEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN7lazperf5utils6unpackIiEET_PKc($5)|0);
 HEAP8[$4>>0]=$6&255;HEAP8[$4+1>>0]=($6>>8)&255;HEAP8[$4+2>>0]=($6>>16)&255;HEAP8[$4+3>>0]=$6>>24;
 $7 = $3;
 $8 = ((($7)) + 4|0);
 $3 = $8;
 $9 = $3;
 $10 = (__ZN7lazperf5utils6unpackIiEET_PKc($9)|0);
 $11 = ((($4)) + 4|0);
 HEAP8[$11>>0]=$10&255;HEAP8[$11+1>>0]=($10>>8)&255;HEAP8[$11+2>>0]=($10>>16)&255;HEAP8[$11+3>>0]=$10>>24;
 $12 = $3;
 $13 = ((($12)) + 4|0);
 $3 = $13;
 $14 = $3;
 $15 = (__ZN7lazperf5utils6unpackIiEET_PKc($14)|0);
 $16 = ((($4)) + 8|0);
 HEAP8[$16>>0]=$15&255;HEAP8[$16+1>>0]=($15>>8)&255;HEAP8[$16+2>>0]=($15>>16)&255;HEAP8[$16+3>>0]=$15>>24;
 $17 = $3;
 $18 = ((($17)) + 4|0);
 $3 = $18;
 $19 = $3;
 $20 = (__ZN7lazperf5utils6unpackItEET_PKc($19)|0);
 $21 = ((($4)) + 12|0);
 HEAP8[$21>>0]=$20&255;HEAP8[$21+1>>0]=$20>>8;
 $22 = $3;
 $23 = ((($22)) + 2|0);
 $3 = $23;
 $24 = $3;
 $25 = ((($24)) + 1|0);
 $3 = $25;
 $26 = HEAP8[$24>>0]|0;
 __ZN7lazperf3las7point1012to_bitfieldsEh($4,$26);
 $27 = $3;
 $28 = ((($27)) + 1|0);
 $3 = $28;
 $29 = HEAP8[$27>>0]|0;
 $30 = ((($4)) + 15|0);
 HEAP8[$30>>0] = $29;
 $31 = $3;
 $32 = ((($31)) + 1|0);
 $3 = $32;
 $33 = HEAP8[$31>>0]|0;
 $34 = ((($4)) + 16|0);
 HEAP8[$34>>0] = $33;
 $35 = $3;
 $36 = ((($35)) + 1|0);
 $3 = $36;
 $37 = HEAP8[$35>>0]|0;
 $38 = ((($4)) + 17|0);
 HEAP8[$38>>0] = $37;
 $39 = $3;
 $40 = (__ZN7lazperf5utils6unpackItEET_PKc($39)|0);
 $41 = ((($4)) + 18|0);
 HEAP8[$41>>0]=$40&255;HEAP8[$41+1>>0]=$40>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6unpackIiEET_PKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN7lazperf5utils6unpackIjEET_PKc($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf3las7point1012to_bitfieldsEh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = $5&255;
 $7 = $6 & 7;
 $8 = $7&255;
 $9 = ((($4)) + 14|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $8 & 7;
 $12 = $10 & -8;
 $13 = $12 | $11;
 HEAP8[$9>>0] = $13;
 $14 = $3;
 $15 = $14&255;
 $16 = $15 >> 3;
 $17 = $16 & 7;
 $18 = $17&255;
 $19 = ((($4)) + 14|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $18 & 7;
 $22 = ($21 << 3)&255;
 $23 = $20 & -57;
 $24 = $23 | $22;
 HEAP8[$19>>0] = $24;
 $25 = $3;
 $26 = $25&255;
 $27 = $26 >> 6;
 $28 = $27 & 1;
 $29 = $28&255;
 $30 = ((($4)) + 14|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $29 & 1;
 $33 = ($32 << 6)&255;
 $34 = $31 & -65;
 $35 = $34 | $33;
 HEAP8[$30>>0] = $35;
 $36 = $3;
 $37 = $36&255;
 $38 = $37 >> 7;
 $39 = $38 & 1;
 $40 = $39&255;
 $41 = ((($4)) + 14|0);
 $42 = HEAP8[$41>>0]|0;
 $43 = $40 & 1;
 $44 = ($43 << 7)&255;
 $45 = $42 & 127;
 $46 = $45 | $44;
 HEAP8[$41>>0] = $46;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN7lazperf6detail11Point10BaseC2Ev($4);
 $5 = ((($4)) + 3980|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 $7 = ((($4)) + 3984|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($7,16,4,8,0);
 $8 = ((($4)) + 4064|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($8,16,1,8,0);
 $9 = ((($4)) + 4144|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($9,32,2,8,0);
 $10 = ((($4)) + 4224|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($10,32,22,8,0);
 $11 = ((($4)) + 4304|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($11,32,20,8,0);
 $12 = ((($4)) + 4384|0);
 HEAP8[$12>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point10Decompressor4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 3984|0);
 __ZN7lazperf13decompressors7integer4initEv($3);
 $4 = ((($2)) + 4064|0);
 __ZN7lazperf13decompressors7integer4initEv($4);
 $5 = ((($2)) + 4144|0);
 __ZN7lazperf13decompressors7integer4initEv($5);
 $6 = ((($2)) + 4224|0);
 __ZN7lazperf13decompressors7integer4initEv($6);
 $7 = ((($2)) + 4304|0);
 __ZN7lazperf13decompressors7integer4initEv($7);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point10Decompressor10decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $37 = sp + 8|0;
 $29 = $0;
 $30 = $1;
 $41 = $29;
 $42 = ((($41)) + 4384|0);
 $43 = HEAP8[$42>>0]|0;
 $44 = $43&1;
 if (!($44)) {
  __ZN7lazperf6detail19Point10Decompressor4initEv($41);
  $45 = ((($41)) + 4384|0);
  HEAP8[$45>>0] = 1;
 }
 $46 = ((($41)) + 3976|0);
 $47 = HEAP8[$46>>0]|0;
 $48 = $47&1;
 if (!($48)) {
  $49 = ((($41)) + 3976|0);
  HEAP8[$49>>0] = 1;
  $50 = ((($41)) + 3980|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE11getInStreamEv($51)|0);
  $53 = $30;
  __ZN7lazperf10InCbStream8getBytesEPhm($52,$53,20);
  $54 = $30;
  __ZN7lazperf3las7point106unpackEPKc($41,$54);
  $55 = ((($41)) + 12|0);
  HEAP16[$55>>1] = 0;
  $56 = $30;
  $57 = ((($56)) + 20|0);
  $28 = $57;
  $312 = $28;
  STACKTOP = sp;return ($312|0);
 }
 $58 = ((($41)) + 3980|0);
 $59 = HEAP32[$58>>2]|0;
 $60 = ((($41)) + 852|0);
 $61 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($59,$60)|0);
 $38 = $61;
 $62 = $38;
 $63 = ($62|0)!=(0);
 if ($63) {
  $64 = $38;
  $65 = $64 & 32;
  $66 = ($65|0)!=(0);
  if ($66) {
   $67 = (__ZNK7lazperf3las7point1014from_bitfieldsEv($41)|0);
   $39 = $67;
   $68 = ((($41)) + 3980|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ((($41)) + 904|0);
   $71 = $39;
   $72 = $71&255;
   $26 = $70;
   $27 = $72;
   $73 = $26;
   $74 = $27;
   $75 = (($73) + ($74<<2)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($69,$76)|0);
   $78 = $77&255;
   $39 = $78;
   $79 = $39;
   __ZN7lazperf3las7point1012to_bitfieldsEh($41,$79);
  }
  $80 = ((($41)) + 14|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = $81 & 7;
  $83 = $82&255;
  $31 = $83;
  $84 = ((($41)) + 14|0);
  $85 = HEAP8[$84>>0]|0;
  $86 = ($85&255) >>> 3;
  $87 = $86 & 7;
  $88 = $87&255;
  $32 = $88;
  $89 = $32;
  $90 = (64 + ($89<<3)|0);
  $91 = $31;
  $92 = (($90) + ($91)|0);
  $93 = HEAP8[$92>>0]|0;
  $94 = $93&255;
  $33 = $94;
  $95 = $32;
  $96 = (128 + ($95<<3)|0);
  $97 = $31;
  $98 = (($96) + ($97)|0);
  $99 = HEAP8[$98>>0]|0;
  $100 = $99&255;
  $34 = $100;
  $101 = $38;
  $102 = $101 & 16;
  $103 = ($102|0)!=(0);
  if ($103) {
   $104 = ((($41)) + 3984|0);
   $105 = ((($41)) + 3980|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = ((($41)) + 20|0);
   $108 = $33;
   $24 = $107;
   $25 = $108;
   $109 = $24;
   $110 = $25;
   $111 = (($109) + ($110<<1)|0);
   $112 = HEAP16[$111>>1]|0;
   $113 = $112&65535;
   $114 = $33;
   $115 = ($114>>>0)<(3);
   $116 = $33;
   $117 = $115 ? $116 : 3;
   $118 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($104,$106,$113,$117)|0);
   $119 = $118&65535;
   $120 = ((($41)) + 12|0);
   HEAP16[$120>>1] = $119;
   $121 = ((($41)) + 12|0);
   $122 = HEAP16[$121>>1]|0;
   $123 = ((($41)) + 20|0);
   $124 = $33;
   $20 = $123;
   $21 = $124;
   $125 = $20;
   $126 = $21;
   $127 = (($125) + ($126<<1)|0);
   HEAP16[$127>>1] = $122;
  } else {
   $128 = ((($41)) + 20|0);
   $129 = $33;
   $18 = $128;
   $19 = $129;
   $130 = $18;
   $131 = $19;
   $132 = (($130) + ($131<<1)|0);
   $133 = HEAP16[$132>>1]|0;
   $134 = ((($41)) + 12|0);
   HEAP16[$134>>1] = $133;
  }
  $135 = $38;
  $136 = $135 & 8;
  $137 = ($136|0)!=(0);
  if ($137) {
   $138 = ((($41)) + 3980|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = ((($41)) + 1928|0);
   $141 = ((($41)) + 15|0);
   $142 = HEAP8[$141>>0]|0;
   $143 = $142&255;
   $14 = $140;
   $15 = $143;
   $144 = $14;
   $145 = $15;
   $146 = (($144) + ($145<<2)|0);
   $147 = HEAP32[$146>>2]|0;
   $148 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($139,$147)|0);
   $149 = $148&255;
   $150 = ((($41)) + 15|0);
   HEAP8[$150>>0] = $149;
  }
  $151 = $38;
  $152 = $151 & 4;
  $153 = ($152|0)!=(0);
  if ($153) {
   $154 = ((($41)) + 3980|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = ((($41)) + 896|0);
   $157 = ((($41)) + 14|0);
   $158 = HEAP8[$157>>0]|0;
   $159 = ($158&255) >>> 6;
   $160 = $159 & 1;
   $161 = $160&255;
   $12 = $156;
   $13 = $161;
   $162 = $12;
   $163 = $13;
   $164 = (($162) + ($163<<2)|0);
   $165 = HEAP32[$164>>2]|0;
   $166 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($155,$165)|0);
   $40 = $166;
   $167 = $40;
   $168 = ((($41)) + 16|0);
   $169 = HEAP8[$168>>0]|0;
   $170 = $169 << 24 >> 24;
   $171 = (($167) + ($170))|0;
   $172 = $171&255;
   $173 = ((($41)) + 16|0);
   HEAP8[$173>>0] = $172;
  }
  $174 = $38;
  $175 = $174 & 2;
  $176 = ($175|0)!=(0);
  if ($176) {
   $177 = ((($41)) + 3980|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = ((($41)) + 2952|0);
   $180 = ((($41)) + 17|0);
   $181 = HEAP8[$180>>0]|0;
   $182 = $181&255;
   $10 = $179;
   $11 = $182;
   $183 = $10;
   $184 = $11;
   $185 = (($183) + ($184<<2)|0);
   $186 = HEAP32[$185>>2]|0;
   $187 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($178,$186)|0);
   $188 = $187&255;
   $189 = ((($41)) + 17|0);
   HEAP8[$189>>0] = $188;
  }
  $190 = $38;
  $191 = $190 & 1;
  $192 = ($191|0)!=(0);
  if ($192) {
   $193 = ((($41)) + 4064|0);
   $194 = ((($41)) + 3980|0);
   $195 = HEAP32[$194>>2]|0;
   $196 = ((($41)) + 18|0);
   $197 = HEAP16[$196>>1]|0;
   $198 = $197&65535;
   $199 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($193,$195,$198,0)|0);
   $200 = $199&65535;
   $201 = ((($41)) + 18|0);
   HEAP16[$201>>1] = $200;
  }
 } else {
  $202 = ((($41)) + 14|0);
  $203 = HEAP8[$202>>0]|0;
  $204 = $203 & 7;
  $205 = $204&255;
  $31 = $205;
  $206 = ((($41)) + 14|0);
  $207 = HEAP8[$206>>0]|0;
  $208 = ($207&255) >>> 3;
  $209 = $208 & 7;
  $210 = $209&255;
  $32 = $210;
  $211 = $32;
  $212 = (64 + ($211<<3)|0);
  $213 = $31;
  $214 = (($212) + ($213)|0);
  $215 = HEAP8[$214>>0]|0;
  $216 = $215&255;
  $33 = $216;
  $217 = $32;
  $218 = (128 + ($217<<3)|0);
  $219 = $31;
  $220 = (($218) + ($219)|0);
  $221 = HEAP8[$220>>0]|0;
  $222 = $221&255;
  $34 = $222;
 }
 $223 = ((($41)) + 52|0);
 $224 = $33;
 $6 = $223;
 $7 = $224;
 $225 = $6;
 $226 = $7;
 $227 = (($225) + (($226*24)|0)|0);
 $228 = (__ZNK7lazperf5utils16streaming_medianIiE3getEv($227)|0);
 $36 = $228;
 $229 = ((($41)) + 4144|0);
 $230 = ((($41)) + 3980|0);
 $231 = HEAP32[$230>>2]|0;
 $232 = $36;
 $233 = $32;
 $234 = ($233|0)==(1);
 $235 = $234&1;
 $236 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($229,$231,$232,$235)|0);
 HEAP32[$37>>2] = $236;
 $237 = HEAP32[$37>>2]|0;
 $238 = HEAP32[$41>>2]|0;
 $239 = (($238) + ($237))|0;
 HEAP32[$41>>2] = $239;
 $240 = ((($41)) + 52|0);
 $241 = $33;
 $4 = $240;
 $5 = $241;
 $242 = $4;
 $243 = $5;
 $244 = (($242) + (($243*24)|0)|0);
 __ZN7lazperf5utils16streaming_medianIiE3addERKi($244,$37);
 $245 = ((($41)) + 436|0);
 $246 = $33;
 $2 = $245;
 $3 = $246;
 $247 = $2;
 $248 = $3;
 $249 = (($247) + (($248*24)|0)|0);
 $250 = (__ZNK7lazperf5utils16streaming_medianIiE3getEv($249)|0);
 $36 = $250;
 $251 = ((($41)) + 4144|0);
 $252 = (__ZNK7lazperf13decompressors7integer4getKEv($251)|0);
 $35 = $252;
 $253 = ((($41)) + 4224|0);
 $254 = ((($41)) + 3980|0);
 $255 = HEAP32[$254>>2]|0;
 $256 = $36;
 $257 = $32;
 $258 = ($257|0)==(1);
 $259 = $258&1;
 $260 = $35;
 $261 = ($260>>>0)<(20);
 if ($261) {
  $262 = $35;
  $263 = (__ZN7lazperf5utils8clearBitILi0EjEET0_S2_($262)|0);
  $265 = $263;
 } else {
  $265 = 20;
 }
 $264 = (($259) + ($265))|0;
 $266 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($253,$255,$256,$264)|0);
 HEAP32[$37>>2] = $266;
 $267 = HEAP32[$37>>2]|0;
 $268 = ((($41)) + 4|0);
 $269 = HEAP32[$268>>2]|0;
 $270 = (($269) + ($267))|0;
 HEAP32[$268>>2] = $270;
 $271 = ((($41)) + 436|0);
 $272 = $33;
 $8 = $271;
 $9 = $272;
 $273 = $8;
 $274 = $9;
 $275 = (($273) + (($274*24)|0)|0);
 __ZN7lazperf5utils16streaming_medianIiE3addERKi($275,$37);
 $276 = ((($41)) + 4144|0);
 $277 = (__ZNK7lazperf13decompressors7integer4getKEv($276)|0);
 $278 = ((($41)) + 4224|0);
 $279 = (__ZNK7lazperf13decompressors7integer4getKEv($278)|0);
 $280 = (($277) + ($279))|0;
 $281 = (($280>>>0) / 2)&-1;
 $35 = $281;
 $282 = ((($41)) + 4304|0);
 $283 = ((($41)) + 3980|0);
 $284 = HEAP32[$283>>2]|0;
 $285 = ((($41)) + 820|0);
 $286 = $34;
 $16 = $285;
 $17 = $286;
 $287 = $16;
 $288 = $17;
 $289 = (($287) + ($288<<2)|0);
 $290 = HEAP32[$289>>2]|0;
 $291 = $32;
 $292 = ($291|0)==(1);
 $293 = $292&1;
 $294 = $35;
 $295 = ($294>>>0)<(18);
 if ($295) {
  $296 = $35;
  $297 = (__ZN7lazperf5utils8clearBitILi0EjEET0_S2_($296)|0);
  $299 = $297;
 } else {
  $299 = 18;
 }
 $298 = (($293) + ($299))|0;
 $300 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_10InCbStreamEEEEEiRT_ij($282,$284,$290,$298)|0);
 $301 = ((($41)) + 8|0);
 HEAP32[$301>>2] = $300;
 $302 = ((($41)) + 8|0);
 $303 = HEAP32[$302>>2]|0;
 $304 = ((($41)) + 820|0);
 $305 = $34;
 $22 = $304;
 $23 = $305;
 $306 = $22;
 $307 = $23;
 $308 = (($306) + ($307<<2)|0);
 HEAP32[$308>>2] = $303;
 $309 = $30;
 __ZN7lazperf3las7point104packEPc($41,$309);
 $310 = $30;
 $311 = ((($310)) + 20|0);
 $28 = $311;
 $312 = $28;
 STACKTOP = sp;return ($312|0);
}
function __ZNK7lazperf13decompressors7integer4getKEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf3las7point104packEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = $3;
 __ZN7lazperf5utils4packEiPc($5,$6);
 $7 = $3;
 $8 = ((($7)) + 4|0);
 $3 = $8;
 $9 = ((($4)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $3;
 __ZN7lazperf5utils4packEiPc($10,$11);
 $12 = $3;
 $13 = ((($12)) + 4|0);
 $3 = $13;
 $14 = ((($4)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $3;
 __ZN7lazperf5utils4packEiPc($15,$16);
 $17 = $3;
 $18 = ((($17)) + 4|0);
 $3 = $18;
 $19 = ((($4)) + 12|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
 $21 = $3;
 __ZN7lazperf5utils4packEtPc($20,$21);
 $22 = $3;
 $23 = ((($22)) + 2|0);
 $3 = $23;
 $24 = (__ZNK7lazperf3las7point1014from_bitfieldsEv($4)|0);
 $25 = $3;
 $26 = ((($25)) + 1|0);
 $3 = $26;
 HEAP8[$25>>0] = $24;
 $27 = ((($4)) + 15|0);
 $28 = HEAP8[$27>>0]|0;
 $29 = $3;
 $30 = ((($29)) + 1|0);
 $3 = $30;
 HEAP8[$29>>0] = $28;
 $31 = ((($4)) + 16|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $3;
 $34 = ((($33)) + 1|0);
 $3 = $34;
 HEAP8[$33>>0] = $32;
 $35 = ((($4)) + 17|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = $3;
 $38 = ((($37)) + 1|0);
 $3 = $38;
 HEAP8[$37>>0] = $36;
 $39 = ((($4)) + 18|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
 $41 = $3;
 __ZN7lazperf5utils4packEtPc($40,$41);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils4packEiPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN7lazperf5utils4packEjPc($4,$5);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail11Point14BaseC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = $0;
 $10 = $9;
 __ZNSt3__25arrayIN7lazperf6detail11Point14Base10ChannelCtxELm4EEC2Ev($10);
 $11 = ((($10)) + 8320|0);
 HEAP32[$11>>2] = -1;
 $7 = $10;
 $8 = 0;
 $12 = $7;
 $13 = $8;
 $14 = (($12) + (($13*2080)|0)|0);
 HEAP32[$14>>2] = 0;
 $5 = $10;
 $6 = 1;
 $15 = $5;
 $16 = $6;
 $17 = (($15) + (($16*2080)|0)|0);
 HEAP32[$17>>2] = 1;
 $1 = $10;
 $2 = 2;
 $18 = $1;
 $19 = $2;
 $20 = (($18) + (($19*2080)|0)|0);
 HEAP32[$20>>2] = 2;
 $3 = $10;
 $4 = 3;
 $21 = $3;
 $22 = $4;
 $23 = (($21) + (($22*2080)|0)|0);
 HEAP32[$23>>2] = 3;
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf6detail11Point14Base10ChannelCtxELm4EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8320|0);
 $4 = $2;
 while(1) {
  __ZN7lazperf6detail11Point14Base10ChannelCtxC2Ev($4);
  $5 = ((($4)) + 2080|0);
  $6 = ($5|0)==($3|0);
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail11Point14Base10ChannelCtxC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $10 = sp + 252|0;
 $11 = sp + 208|0;
 $12 = sp + 164|0;
 $13 = sp + 120|0;
 $14 = sp + 76|0;
 $15 = sp + 32|0;
 $9 = $0;
 $24 = $9;
 $25 = ((($24)) + 4|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($10,128,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($25,8,$10);
 __ZN7lazperf6models10arithmeticD2Ev($10);
 $26 = ((($24)) + 16|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($26,3,0,0);
 $27 = ((($24)) + 60|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($27,13,0,0);
 $28 = ((($24)) + 104|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($11,16,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($28,16,$11);
 __ZN7lazperf6models10arithmeticD2Ev($11);
 $29 = ((($24)) + 116|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($12,16,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($29,16,$12);
 __ZN7lazperf6models10arithmeticD2Ev($12);
 $30 = ((($24)) + 128|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($13,256,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($30,64,$13);
 __ZN7lazperf6models10arithmeticD2Ev($13);
 $31 = ((($24)) + 140|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($14,64,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($31,64,$14);
 __ZN7lazperf6models10arithmeticD2Ev($14);
 $32 = ((($24)) + 152|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($15,256,0,0);
 __ZNSt3__26vectorIN7lazperf6models10arithmeticENS_9allocatorIS3_EEEC2EmRKS3_($32,64,$15);
 __ZN7lazperf6models10arithmeticD2Ev($15);
 $33 = ((($24)) + 164|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($33,515,0,0);
 $34 = ((($24)) + 208|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($34,5,0,0);
 $35 = ((($24)) + 252|0);
 __ZN7lazperf11compressors7integerC2Ejj($35,32,2);
 $36 = ((($24)) + 328|0);
 __ZN7lazperf11compressors7integerC2Ejj($36,32,22);
 $37 = ((($24)) + 404|0);
 __ZN7lazperf11compressors7integerC2Ejj($37,32,20);
 $38 = ((($24)) + 480|0);
 __ZN7lazperf11compressors7integerC2Ejj($38,16,4);
 $39 = ((($24)) + 556|0);
 __ZN7lazperf11compressors7integerC2Ejj($39,16,2);
 $40 = ((($24)) + 632|0);
 __ZN7lazperf11compressors7integerC2Ejj($40,16,1);
 $41 = ((($24)) + 708|0);
 __ZN7lazperf11compressors7integerC2Ejj($41,32,9);
 $42 = ((($24)) + 784|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($42,32,2,8,0);
 $43 = ((($24)) + 864|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($43,32,22,8,0);
 $44 = ((($24)) + 944|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($44,32,20,8,0);
 $45 = ((($24)) + 1024|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($45,16,4,8,0);
 $46 = ((($24)) + 1104|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($46,16,2,8,0);
 $47 = ((($24)) + 1184|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($47,16,1,8,0);
 $48 = ((($24)) + 1264|0);
 __ZN7lazperf13decompressors7integerC2Ejjjj($48,32,9,8,0);
 $49 = ((($24)) + 1344|0);
 HEAP8[$49>>0] = 0;
 $50 = ((($24)) + 1345|0);
 __ZN7lazperf3las7point14C2Ev($50);
 $51 = ((($24)) + 1424|0);
 __ZNSt3__25arrayIN7lazperf5utils16streaming_medianIiEELm12EEC2Ev($51);
 $52 = ((($24)) + 1712|0);
 __ZNSt3__25arrayIN7lazperf5utils16streaming_medianIiEELm12EEC2Ev($52);
 $53 = ((($24)) + 2000|0);
 HEAP32[$53>>2] = 0;
 $54 = ((($24)) + 2004|0);
 HEAP32[$54>>2] = 0;
 $55 = ((($24)) + 2008|0);
 ;HEAP32[$55>>2]=0|0;HEAP32[$55+4>>2]=0|0;HEAP32[$55+8>>2]=0|0;HEAP32[$55+12>>2]=0|0;HEAP32[$55+16>>2]=0|0;HEAP32[$55+20>>2]=0|0;HEAP32[$55+24>>2]=0|0;HEAP32[$55+28>>2]=0|0;
 $56 = ((($24)) + 2040|0);
 ;HEAP32[$56>>2]=0|0;HEAP32[$56+4>>2]=0|0;HEAP32[$56+8>>2]=0|0;HEAP32[$56+12>>2]=0|0;
 $57 = ((($24)) + 2056|0);
 ;HEAP32[$57>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;HEAP32[$57+12>>2]=0|0;
 $58 = ((($24)) + 2072|0);
 HEAP8[$58>>0] = 0;
 $59 = ((($24)) + 252|0);
 __ZN7lazperf11compressors7integer4initEv($59);
 $60 = ((($24)) + 328|0);
 __ZN7lazperf11compressors7integer4initEv($60);
 $61 = ((($24)) + 404|0);
 __ZN7lazperf11compressors7integer4initEv($61);
 $62 = ((($24)) + 480|0);
 __ZN7lazperf11compressors7integer4initEv($62);
 $63 = ((($24)) + 556|0);
 __ZN7lazperf11compressors7integer4initEv($63);
 $64 = ((($24)) + 632|0);
 __ZN7lazperf11compressors7integer4initEv($64);
 $65 = ((($24)) + 708|0);
 __ZN7lazperf11compressors7integer4initEv($65);
 $66 = ((($24)) + 784|0);
 __ZN7lazperf13decompressors7integer4initEv($66);
 $67 = ((($24)) + 864|0);
 __ZN7lazperf13decompressors7integer4initEv($67);
 $68 = ((($24)) + 944|0);
 __ZN7lazperf13decompressors7integer4initEv($68);
 $69 = ((($24)) + 1024|0);
 __ZN7lazperf13decompressors7integer4initEv($69);
 $70 = ((($24)) + 1104|0);
 __ZN7lazperf13decompressors7integer4initEv($70);
 $71 = ((($24)) + 1184|0);
 __ZN7lazperf13decompressors7integer4initEv($71);
 $72 = ((($24)) + 1264|0);
 __ZN7lazperf13decompressors7integer4initEv($72);
 $73 = ((($24)) + 1424|0);
 $16 = $73;
 $74 = $16;
 $8 = $74;
 $75 = $8;
 $7 = $75;
 $76 = $7;
 $17 = $76;
 $77 = $16;
 $6 = $77;
 $78 = $6;
 $5 = $78;
 $79 = $5;
 $80 = ((($79)) + 288|0);
 $18 = $80;
 while(1) {
  $81 = $17;
  $82 = $18;
  $83 = ($81|0)!=($82|0);
  if (!($83)) {
   break;
  }
  $84 = $17;
  $19 = $84;
  $85 = $19;
  __ZN7lazperf5utils16streaming_medianIiE4initEv($85);
  $86 = $17;
  $87 = ((($86)) + 24|0);
  $17 = $87;
 }
 $88 = ((($24)) + 1712|0);
 $20 = $88;
 $89 = $20;
 $4 = $89;
 $90 = $4;
 $3 = $90;
 $91 = $3;
 $21 = $91;
 $92 = $20;
 $2 = $92;
 $93 = $2;
 $1 = $93;
 $94 = $1;
 $95 = ((($94)) + 288|0);
 $22 = $95;
 while(1) {
  $96 = $21;
  $97 = $22;
  $98 = ($96|0)!=($97|0);
  if (!($98)) {
   break;
  }
  $99 = $21;
  $23 = $99;
  $100 = $23;
  __ZN7lazperf5utils16streaming_medianIiE4initEv($100);
  $101 = $21;
  $102 = ((($101)) + 24|0);
  $21 = $102;
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point14C2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNSt3__25arrayIN7lazperf5utils16streaming_medianIiEELm12EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 288|0);
 $4 = $2;
 while(1) {
  __ZN7lazperf5utils16streaming_medianIiEC2Ev($4);
  $5 = ((($4)) + 24|0);
  $6 = ($5|0)==($3|0);
  if ($6) {
   break;
  } else {
   $4 = $5;
  }
 }
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point14C2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN7lazperf3las7point146unpackEPKc($4,$5);
 STACKTOP = sp;return;
}
function __ZNK7lazperf3las7point1414scannerChannelEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 15|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 >> 4;
 $7 = $6 & 3;
 STACKTOP = sp;return ($7|0);
}
function __ZNK7lazperf3las7point147gpsTimeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 22|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$3>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$3+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$3+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$3+3>>0];HEAP8[tempDoublePtr+4>>0]=HEAP8[$3+4>>0];HEAP8[tempDoublePtr+5>>0]=HEAP8[$3+5>>0];HEAP8[tempDoublePtr+6>>0]=HEAP8[$3+6>>0];HEAP8[tempDoublePtr+7>>0]=HEAP8[$3+7>>0];$4 = +HEAPF64[tempDoublePtr>>3];
 STACKTOP = sp;return (+$4);
}
function __ZNK7lazperf3las7point141zEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 STACKTOP = sp;return ($4|0);
}
function __ZNK7lazperf3las7point149intensityEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8);
 STACKTOP = sp;return ($4|0);
}
function __ZNK7lazperf3las7point149returnNumEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 14|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 & 15;
 STACKTOP = sp;return ($6|0);
}
function __ZNK7lazperf3las7point1410numReturnsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 14|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 >> 4;
 $7 = $6&255;
 STACKTOP = sp;return ($7|0);
}
function __ZNK7lazperf3las7point1413pointSourceIDEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8);
 STACKTOP = sp;return ($4|0);
}
function __ZNK7lazperf3las7point149scanAngleEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 18|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8);
 STACKTOP = sp;return ($4|0);
}
function __ZNK7lazperf3las7point141xEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 STACKTOP = sp;return ($3|0);
}
function __ZNK7lazperf3las7point141yEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 STACKTOP = sp;return ($4|0);
}
function __ZNK7lazperf3las7point1414classificationEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK7lazperf3las7point1410classFlagsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 15|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 & 15;
 STACKTOP = sp;return ($6|0);
}
function __ZNK7lazperf3las7point1411scanDirFlagEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 15|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 >> 6;
 $7 = $6 & 1;
 STACKTOP = sp;return ($7|0);
}
function __ZNK7lazperf3las7point147eofFlagEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 15|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&255;
 $6 = $5 >> 7;
 $7 = $6 & 1;
 STACKTOP = sp;return ($7|0);
}
function __ZNK7lazperf3las7point148userDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 17|0);
 $4 = HEAP8[$3>>0]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN7lazperf5utils3d2uEd($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 HEAPF64[$1>>3] = $0;
 ;HEAP32[$2>>2]=HEAP32[$1>>2]|0;HEAP32[$2+4>>2]=HEAP32[$1+4>>2]|0;
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 setTempRet0(($8) | 0);
 STACKTOP = sp;return ($5|0);
}
function __ZN7lazperf5utils3d2iEd($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 HEAPF64[$1>>3] = $0;
 ;HEAP32[$2>>2]=HEAP32[$1>>2]|0;HEAP32[$2+4>>2]=HEAP32[$1+4>>2]|0;
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 setTempRet0(($8) | 0);
 STACKTOP = sp;return ($5|0);
}
function __ZN7lazperf3las7point146unpackEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN7lazperf5utils6unpackIiEET_PKc($5)|0);
 __ZN7lazperf3las7point144setXEi($4,$6);
 $7 = $3;
 $8 = ((($7)) + 4|0);
 $3 = $8;
 $9 = $3;
 $10 = (__ZN7lazperf5utils6unpackIiEET_PKc($9)|0);
 __ZN7lazperf3las7point144setYEi($4,$10);
 $11 = $3;
 $12 = ((($11)) + 4|0);
 $3 = $12;
 $13 = $3;
 $14 = (__ZN7lazperf5utils6unpackIiEET_PKc($13)|0);
 __ZN7lazperf3las7point144setZEi($4,$14);
 $15 = $3;
 $16 = ((($15)) + 4|0);
 $3 = $16;
 $17 = $3;
 $18 = (__ZN7lazperf5utils6unpackItEET_PKc($17)|0);
 __ZN7lazperf3las7point1412setIntensityEt($4,$18);
 $19 = $3;
 $20 = ((($19)) + 2|0);
 $3 = $20;
 $21 = $3;
 $22 = ((($21)) + 1|0);
 $3 = $22;
 $23 = HEAP8[$21>>0]|0;
 __ZN7lazperf3las7point1410setReturnsEh($4,$23);
 $24 = $3;
 $25 = ((($24)) + 1|0);
 $3 = $25;
 $26 = HEAP8[$24>>0]|0;
 __ZN7lazperf3las7point148setFlagsEh($4,$26);
 $27 = $3;
 $28 = ((($27)) + 1|0);
 $3 = $28;
 $29 = HEAP8[$27>>0]|0;
 __ZN7lazperf3las7point1417setClassificationEh($4,$29);
 $30 = $3;
 $31 = ((($30)) + 1|0);
 $3 = $31;
 $32 = HEAP8[$30>>0]|0;
 __ZN7lazperf3las7point1411setUserDataEh($4,$32);
 $33 = $3;
 $34 = (__ZN7lazperf5utils6unpackIsEET_PKc($33)|0);
 __ZN7lazperf3las7point1412setScanAngleEs($4,$34);
 $35 = $3;
 $36 = ((($35)) + 2|0);
 $3 = $36;
 $37 = $3;
 $38 = (__ZN7lazperf5utils6unpackItEET_PKc($37)|0);
 __ZN7lazperf3las7point1416setPointSourceIDEt($4,$38);
 $39 = $3;
 $40 = ((($39)) + 2|0);
 $3 = $40;
 $41 = $3;
 $42 = (+__ZN7lazperf5utils6unpackIdEET_PKc($41));
 __ZN7lazperf3las7point1410setGpsTimeEd($4,$42);
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point144setXEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 HEAP8[$4>>0]=$5&255;HEAP8[$4+1>>0]=($5>>8)&255;HEAP8[$4+2>>0]=($5>>16)&255;HEAP8[$4+3>>0]=$5>>24;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point144setYEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 4|0);
 HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=($5>>8)&255;HEAP8[$6+2>>0]=($5>>16)&255;HEAP8[$6+3>>0]=$5>>24;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point144setZEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 8|0);
 HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=($5>>8)&255;HEAP8[$6+2>>0]=($5>>16)&255;HEAP8[$6+3>>0]=$5>>24;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1412setIntensityEt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 12|0);
 HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=$5>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1410setReturnsEh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 14|0);
 HEAP8[$6>>0] = $5;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point148setFlagsEh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 15|0);
 HEAP8[$6>>0] = $5;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1417setClassificationEh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 16|0);
 HEAP8[$6>>0] = $5;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1411setUserDataEh($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 17|0);
 HEAP8[$6>>0] = $5;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6unpackIsEET_PKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN7lazperf5utils6unpackItEET_PKc($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN7lazperf3las7point1412setScanAngleEs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 18|0);
 HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=$5>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1416setPointSourceIDEt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 20|0);
 HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=$5>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6unpackIdEET_PKc($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 8|0;
 $3 = sp;
 $1 = $0;
 $4 = $1;
 $5 = (__ZN7lazperf5utils6unpackIjEET_PKc($4)|0);
 $6 = $2;
 $7 = $6;
 HEAP32[$7>>2] = $5;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = $1;
 $11 = ((($10)) + 4|0);
 $12 = (__ZN7lazperf5utils6unpackIjEET_PKc($11)|0);
 $13 = $3;
 $14 = $13;
 HEAP32[$14>>2] = $12;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = $3;
 $18 = $17;
 $19 = HEAP32[$18>>2]|0;
 $20 = (($17) + 4)|0;
 $21 = $20;
 $22 = HEAP32[$21>>2]|0;
 $23 = $2;
 $24 = $23;
 $25 = HEAP32[$24>>2]|0;
 $26 = (($23) + 4)|0;
 $27 = $26;
 $28 = HEAP32[$27>>2]|0;
 $29 = $19 | $28;
 $30 = (+__ZN7lazperf5utils3u2dEy($25,$29));
 STACKTOP = sp;return (+$30);
}
function __ZN7lazperf3las7point1410setGpsTimeEd($0,$1) {
 $0 = $0|0;
 $1 = +$1;
 var $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 22|0);
 HEAPF64[tempDoublePtr>>3]=$5;HEAP8[$6>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$6+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$6+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$6+3>>0]=HEAP8[tempDoublePtr+3>>0];HEAP8[$6+4>>0]=HEAP8[tempDoublePtr+4>>0];HEAP8[$6+5>>0]=HEAP8[tempDoublePtr+5>>0];HEAP8[$6+6>>0]=HEAP8[tempDoublePtr+6>>0];HEAP8[$6+7>>0]=HEAP8[tempDoublePtr+7>>0];
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils3u2dEy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp;
 $4 = $2;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 ;HEAP32[$3>>2]=HEAP32[$2>>2]|0;HEAP32[$3+4>>2]=HEAP32[$2+4>>2]|0;
 $8 = +HEAPF64[$3>>3];
 STACKTOP = sp;return (+$8);
}
function __ZN7lazperf6detail19Point14Decompressor8dumpSumsEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8532|0);
 $4 = (__ZN7lazperf5utils6Summer5countEv($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20859)|0);
 $7 = ((($2)) + 8532|0);
 $8 = (__ZN7lazperf5utils6Summer5valueEv($7)|0);
 $9 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($6,$8)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($9,21164)|0);
 $10 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20871)|0);
 $11 = ((($2)) + 8540|0);
 $12 = (__ZN7lazperf5utils6Summer5valueEv($11)|0);
 $13 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($10,$12)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($13,21164)|0);
 $14 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20883)|0);
 $15 = ((($2)) + 8548|0);
 $16 = (__ZN7lazperf5utils6Summer5valueEv($15)|0);
 $17 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($14,$16)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($17,21164)|0);
 $18 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20895)|0);
 $19 = ((($2)) + 8556|0);
 $20 = (__ZN7lazperf5utils6Summer5valueEv($19)|0);
 $21 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($18,$20)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($21,21164)|0);
 $22 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20907)|0);
 $23 = ((($2)) + 8564|0);
 $24 = (__ZN7lazperf5utils6Summer5valueEv($23)|0);
 $25 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($22,$24)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($25,21164)|0);
 $26 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20919)|0);
 $27 = ((($2)) + 8572|0);
 $28 = (__ZN7lazperf5utils6Summer5valueEv($27)|0);
 $29 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($26,$28)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($29,21164)|0);
 $30 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20931)|0);
 $31 = ((($2)) + 8580|0);
 $32 = (__ZN7lazperf5utils6Summer5valueEv($31)|0);
 $33 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($30,$32)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($33,21164)|0);
 $34 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20943)|0);
 $35 = ((($2)) + 8588|0);
 $36 = (__ZN7lazperf5utils6Summer5valueEv($35)|0);
 $37 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($34,$36)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($37,21164)|0);
 $38 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20955)|0);
 $39 = ((($2)) + 8596|0);
 $40 = (__ZN7lazperf5utils6Summer5valueEv($39)|0);
 $41 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($38,$40)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($41,21164)|0);
 $42 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20967)|0);
 $43 = ((($2)) + 8604|0);
 $44 = (__ZN7lazperf5utils6Summer5valueEv($43)|0);
 $45 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($42,$44)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($45,21164)|0);
 $46 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20979)|0);
 $47 = ((($2)) + 8612|0);
 $48 = (__ZN7lazperf5utils6Summer5valueEv($47)|0);
 $49 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($46,$48)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($49,21164)|0);
 $50 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,20991)|0);
 $51 = ((($2)) + 8620|0);
 $52 = (__ZN7lazperf5utils6Summer5valueEv($51)|0);
 $53 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($50,$52)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($53,21164)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6Summer5countEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $2 = $5;
 $6 = ((($3)) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = $2;
 STACKTOP = sp;return ($7|0);
}
function __ZN7lazperf6detail19Point14Decompressor9readSizesEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0;
 var $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0;
 var $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0;
 var $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0;
 var $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0;
 var $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0;
 var $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1040|0);
 $13 = sp + 64|0;
 $18 = sp + 1025|0;
 $28 = sp + 1024|0;
 $41 = sp + 56|0;
 $46 = sp + 1023|0;
 $56 = sp + 1022|0;
 $69 = sp + 48|0;
 $74 = sp + 1021|0;
 $84 = sp + 1020|0;
 $97 = sp + 40|0;
 $102 = sp + 1019|0;
 $112 = sp + 1018|0;
 $125 = sp + 32|0;
 $130 = sp + 1017|0;
 $140 = sp + 1016|0;
 $153 = sp + 24|0;
 $158 = sp + 1015|0;
 $168 = sp + 1014|0;
 $181 = sp + 16|0;
 $186 = sp + 1013|0;
 $196 = sp + 1012|0;
 $209 = sp + 8|0;
 $214 = sp + 1011|0;
 $224 = sp + 1010|0;
 $237 = sp;
 $242 = sp + 1009|0;
 $252 = sp + 1008|0;
 $254 = sp + 100|0;
 $255 = sp + 96|0;
 $256 = sp + 92|0;
 $257 = sp + 88|0;
 $258 = sp + 84|0;
 $259 = sp + 80|0;
 $260 = sp + 76|0;
 $261 = sp + 72|0;
 $262 = sp + 68|0;
 $253 = $0;
 $263 = $253;
 $264 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($264,$254)|0);
 $265 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($265,$255)|0);
 $266 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($266,$256)|0);
 $267 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($267,$257)|0);
 $268 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($268,$258)|0);
 $269 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($269,$259)|0);
 $270 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($270,$260)|0);
 $271 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($271,$261)|0);
 $272 = ((($263)) + 8324|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($272,$262)|0);
 $273 = ((($263)) + 8520|0);
 $250 = $273;
 $251 = $254;
 $274 = $250;
 $275 = ((($274)) + 4|0);
 $276 = HEAP32[$275>>2]|0;
 $249 = $274;
 $277 = $249;
 $278 = ((($277)) + 8|0);
 $248 = $278;
 $279 = $248;
 $247 = $279;
 $280 = $247;
 $281 = HEAP32[$280>>2]|0;
 $282 = ($276|0)!=($281|0);
 if ($282) {
  $244 = $252;
  $245 = $274;
  $246 = 1;
  $227 = $274;
  $283 = $227;
  $284 = ((($283)) + 8|0);
  $226 = $284;
  $285 = $226;
  $225 = $285;
  $286 = $225;
  $287 = ((($274)) + 4|0);
  $288 = HEAP32[$287>>2]|0;
  $228 = $288;
  $289 = $228;
  $290 = $251;
  $239 = $286;
  $240 = $289;
  $241 = $290;
  $291 = $239;
  $292 = $240;
  $293 = $241;
  $238 = $293;
  $294 = $238;
  ;HEAP8[$237>>0]=HEAP8[$242>>0]|0;
  $234 = $291;
  $235 = $292;
  $236 = $294;
  $295 = $234;
  $296 = $235;
  $297 = $236;
  $233 = $297;
  $298 = $233;
  $230 = $295;
  $231 = $296;
  $232 = $298;
  $299 = $231;
  $300 = $232;
  $229 = $300;
  $301 = $229;
  $302 = HEAP32[$301>>2]|0;
  HEAP32[$299>>2] = $302;
  $243 = $252;
  $303 = ((($274)) + 4|0);
  $304 = HEAP32[$303>>2]|0;
  $305 = ((($304)) + 4|0);
  HEAP32[$303>>2] = $305;
 } else {
  $306 = $251;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($274,$306);
 }
 $307 = ((($263)) + 8520|0);
 $222 = $307;
 $223 = $255;
 $308 = $222;
 $309 = ((($308)) + 4|0);
 $310 = HEAP32[$309>>2]|0;
 $221 = $308;
 $311 = $221;
 $312 = ((($311)) + 8|0);
 $220 = $312;
 $313 = $220;
 $219 = $313;
 $314 = $219;
 $315 = HEAP32[$314>>2]|0;
 $316 = ($310|0)!=($315|0);
 if ($316) {
  $216 = $224;
  $217 = $308;
  $218 = 1;
  $199 = $308;
  $317 = $199;
  $318 = ((($317)) + 8|0);
  $198 = $318;
  $319 = $198;
  $197 = $319;
  $320 = $197;
  $321 = ((($308)) + 4|0);
  $322 = HEAP32[$321>>2]|0;
  $200 = $322;
  $323 = $200;
  $324 = $223;
  $211 = $320;
  $212 = $323;
  $213 = $324;
  $325 = $211;
  $326 = $212;
  $327 = $213;
  $210 = $327;
  $328 = $210;
  ;HEAP8[$209>>0]=HEAP8[$214>>0]|0;
  $206 = $325;
  $207 = $326;
  $208 = $328;
  $329 = $206;
  $330 = $207;
  $331 = $208;
  $205 = $331;
  $332 = $205;
  $202 = $329;
  $203 = $330;
  $204 = $332;
  $333 = $203;
  $334 = $204;
  $201 = $334;
  $335 = $201;
  $336 = HEAP32[$335>>2]|0;
  HEAP32[$333>>2] = $336;
  $215 = $224;
  $337 = ((($308)) + 4|0);
  $338 = HEAP32[$337>>2]|0;
  $339 = ((($338)) + 4|0);
  HEAP32[$337>>2] = $339;
 } else {
  $340 = $223;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($308,$340);
 }
 $341 = ((($263)) + 8520|0);
 $194 = $341;
 $195 = $256;
 $342 = $194;
 $343 = ((($342)) + 4|0);
 $344 = HEAP32[$343>>2]|0;
 $193 = $342;
 $345 = $193;
 $346 = ((($345)) + 8|0);
 $192 = $346;
 $347 = $192;
 $191 = $347;
 $348 = $191;
 $349 = HEAP32[$348>>2]|0;
 $350 = ($344|0)!=($349|0);
 if ($350) {
  $188 = $196;
  $189 = $342;
  $190 = 1;
  $171 = $342;
  $351 = $171;
  $352 = ((($351)) + 8|0);
  $170 = $352;
  $353 = $170;
  $169 = $353;
  $354 = $169;
  $355 = ((($342)) + 4|0);
  $356 = HEAP32[$355>>2]|0;
  $172 = $356;
  $357 = $172;
  $358 = $195;
  $183 = $354;
  $184 = $357;
  $185 = $358;
  $359 = $183;
  $360 = $184;
  $361 = $185;
  $182 = $361;
  $362 = $182;
  ;HEAP8[$181>>0]=HEAP8[$186>>0]|0;
  $178 = $359;
  $179 = $360;
  $180 = $362;
  $363 = $178;
  $364 = $179;
  $365 = $180;
  $177 = $365;
  $366 = $177;
  $174 = $363;
  $175 = $364;
  $176 = $366;
  $367 = $175;
  $368 = $176;
  $173 = $368;
  $369 = $173;
  $370 = HEAP32[$369>>2]|0;
  HEAP32[$367>>2] = $370;
  $187 = $196;
  $371 = ((($342)) + 4|0);
  $372 = HEAP32[$371>>2]|0;
  $373 = ((($372)) + 4|0);
  HEAP32[$371>>2] = $373;
 } else {
  $374 = $195;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($342,$374);
 }
 $375 = ((($263)) + 8520|0);
 $166 = $375;
 $167 = $257;
 $376 = $166;
 $377 = ((($376)) + 4|0);
 $378 = HEAP32[$377>>2]|0;
 $165 = $376;
 $379 = $165;
 $380 = ((($379)) + 8|0);
 $164 = $380;
 $381 = $164;
 $163 = $381;
 $382 = $163;
 $383 = HEAP32[$382>>2]|0;
 $384 = ($378|0)!=($383|0);
 if ($384) {
  $160 = $168;
  $161 = $376;
  $162 = 1;
  $143 = $376;
  $385 = $143;
  $386 = ((($385)) + 8|0);
  $142 = $386;
  $387 = $142;
  $141 = $387;
  $388 = $141;
  $389 = ((($376)) + 4|0);
  $390 = HEAP32[$389>>2]|0;
  $144 = $390;
  $391 = $144;
  $392 = $167;
  $155 = $388;
  $156 = $391;
  $157 = $392;
  $393 = $155;
  $394 = $156;
  $395 = $157;
  $154 = $395;
  $396 = $154;
  ;HEAP8[$153>>0]=HEAP8[$158>>0]|0;
  $150 = $393;
  $151 = $394;
  $152 = $396;
  $397 = $150;
  $398 = $151;
  $399 = $152;
  $149 = $399;
  $400 = $149;
  $146 = $397;
  $147 = $398;
  $148 = $400;
  $401 = $147;
  $402 = $148;
  $145 = $402;
  $403 = $145;
  $404 = HEAP32[$403>>2]|0;
  HEAP32[$401>>2] = $404;
  $159 = $168;
  $405 = ((($376)) + 4|0);
  $406 = HEAP32[$405>>2]|0;
  $407 = ((($406)) + 4|0);
  HEAP32[$405>>2] = $407;
 } else {
  $408 = $167;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($376,$408);
 }
 $409 = ((($263)) + 8520|0);
 $138 = $409;
 $139 = $258;
 $410 = $138;
 $411 = ((($410)) + 4|0);
 $412 = HEAP32[$411>>2]|0;
 $137 = $410;
 $413 = $137;
 $414 = ((($413)) + 8|0);
 $136 = $414;
 $415 = $136;
 $135 = $415;
 $416 = $135;
 $417 = HEAP32[$416>>2]|0;
 $418 = ($412|0)!=($417|0);
 if ($418) {
  $132 = $140;
  $133 = $410;
  $134 = 1;
  $115 = $410;
  $419 = $115;
  $420 = ((($419)) + 8|0);
  $114 = $420;
  $421 = $114;
  $113 = $421;
  $422 = $113;
  $423 = ((($410)) + 4|0);
  $424 = HEAP32[$423>>2]|0;
  $116 = $424;
  $425 = $116;
  $426 = $139;
  $127 = $422;
  $128 = $425;
  $129 = $426;
  $427 = $127;
  $428 = $128;
  $429 = $129;
  $126 = $429;
  $430 = $126;
  ;HEAP8[$125>>0]=HEAP8[$130>>0]|0;
  $122 = $427;
  $123 = $428;
  $124 = $430;
  $431 = $122;
  $432 = $123;
  $433 = $124;
  $121 = $433;
  $434 = $121;
  $118 = $431;
  $119 = $432;
  $120 = $434;
  $435 = $119;
  $436 = $120;
  $117 = $436;
  $437 = $117;
  $438 = HEAP32[$437>>2]|0;
  HEAP32[$435>>2] = $438;
  $131 = $140;
  $439 = ((($410)) + 4|0);
  $440 = HEAP32[$439>>2]|0;
  $441 = ((($440)) + 4|0);
  HEAP32[$439>>2] = $441;
 } else {
  $442 = $139;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($410,$442);
 }
 $443 = ((($263)) + 8520|0);
 $110 = $443;
 $111 = $259;
 $444 = $110;
 $445 = ((($444)) + 4|0);
 $446 = HEAP32[$445>>2]|0;
 $109 = $444;
 $447 = $109;
 $448 = ((($447)) + 8|0);
 $108 = $448;
 $449 = $108;
 $107 = $449;
 $450 = $107;
 $451 = HEAP32[$450>>2]|0;
 $452 = ($446|0)!=($451|0);
 if ($452) {
  $104 = $112;
  $105 = $444;
  $106 = 1;
  $87 = $444;
  $453 = $87;
  $454 = ((($453)) + 8|0);
  $86 = $454;
  $455 = $86;
  $85 = $455;
  $456 = $85;
  $457 = ((($444)) + 4|0);
  $458 = HEAP32[$457>>2]|0;
  $88 = $458;
  $459 = $88;
  $460 = $111;
  $99 = $456;
  $100 = $459;
  $101 = $460;
  $461 = $99;
  $462 = $100;
  $463 = $101;
  $98 = $463;
  $464 = $98;
  ;HEAP8[$97>>0]=HEAP8[$102>>0]|0;
  $94 = $461;
  $95 = $462;
  $96 = $464;
  $465 = $94;
  $466 = $95;
  $467 = $96;
  $93 = $467;
  $468 = $93;
  $90 = $465;
  $91 = $466;
  $92 = $468;
  $469 = $91;
  $470 = $92;
  $89 = $470;
  $471 = $89;
  $472 = HEAP32[$471>>2]|0;
  HEAP32[$469>>2] = $472;
  $103 = $112;
  $473 = ((($444)) + 4|0);
  $474 = HEAP32[$473>>2]|0;
  $475 = ((($474)) + 4|0);
  HEAP32[$473>>2] = $475;
 } else {
  $476 = $111;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($444,$476);
 }
 $477 = ((($263)) + 8520|0);
 $82 = $477;
 $83 = $260;
 $478 = $82;
 $479 = ((($478)) + 4|0);
 $480 = HEAP32[$479>>2]|0;
 $81 = $478;
 $481 = $81;
 $482 = ((($481)) + 8|0);
 $80 = $482;
 $483 = $80;
 $79 = $483;
 $484 = $79;
 $485 = HEAP32[$484>>2]|0;
 $486 = ($480|0)!=($485|0);
 if ($486) {
  $76 = $84;
  $77 = $478;
  $78 = 1;
  $59 = $478;
  $487 = $59;
  $488 = ((($487)) + 8|0);
  $58 = $488;
  $489 = $58;
  $57 = $489;
  $490 = $57;
  $491 = ((($478)) + 4|0);
  $492 = HEAP32[$491>>2]|0;
  $60 = $492;
  $493 = $60;
  $494 = $83;
  $71 = $490;
  $72 = $493;
  $73 = $494;
  $495 = $71;
  $496 = $72;
  $497 = $73;
  $70 = $497;
  $498 = $70;
  ;HEAP8[$69>>0]=HEAP8[$74>>0]|0;
  $66 = $495;
  $67 = $496;
  $68 = $498;
  $499 = $66;
  $500 = $67;
  $501 = $68;
  $65 = $501;
  $502 = $65;
  $62 = $499;
  $63 = $500;
  $64 = $502;
  $503 = $63;
  $504 = $64;
  $61 = $504;
  $505 = $61;
  $506 = HEAP32[$505>>2]|0;
  HEAP32[$503>>2] = $506;
  $75 = $84;
  $507 = ((($478)) + 4|0);
  $508 = HEAP32[$507>>2]|0;
  $509 = ((($508)) + 4|0);
  HEAP32[$507>>2] = $509;
 } else {
  $510 = $83;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($478,$510);
 }
 $511 = ((($263)) + 8520|0);
 $54 = $511;
 $55 = $261;
 $512 = $54;
 $513 = ((($512)) + 4|0);
 $514 = HEAP32[$513>>2]|0;
 $53 = $512;
 $515 = $53;
 $516 = ((($515)) + 8|0);
 $52 = $516;
 $517 = $52;
 $51 = $517;
 $518 = $51;
 $519 = HEAP32[$518>>2]|0;
 $520 = ($514|0)!=($519|0);
 if ($520) {
  $48 = $56;
  $49 = $512;
  $50 = 1;
  $31 = $512;
  $521 = $31;
  $522 = ((($521)) + 8|0);
  $30 = $522;
  $523 = $30;
  $29 = $523;
  $524 = $29;
  $525 = ((($512)) + 4|0);
  $526 = HEAP32[$525>>2]|0;
  $32 = $526;
  $527 = $32;
  $528 = $55;
  $43 = $524;
  $44 = $527;
  $45 = $528;
  $529 = $43;
  $530 = $44;
  $531 = $45;
  $42 = $531;
  $532 = $42;
  ;HEAP8[$41>>0]=HEAP8[$46>>0]|0;
  $38 = $529;
  $39 = $530;
  $40 = $532;
  $533 = $38;
  $534 = $39;
  $535 = $40;
  $37 = $535;
  $536 = $37;
  $34 = $533;
  $35 = $534;
  $36 = $536;
  $537 = $35;
  $538 = $36;
  $33 = $538;
  $539 = $33;
  $540 = HEAP32[$539>>2]|0;
  HEAP32[$537>>2] = $540;
  $47 = $56;
  $541 = ((($512)) + 4|0);
  $542 = HEAP32[$541>>2]|0;
  $543 = ((($542)) + 4|0);
  HEAP32[$541>>2] = $543;
 } else {
  $544 = $55;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($512,$544);
 }
 $545 = ((($263)) + 8520|0);
 $26 = $545;
 $27 = $262;
 $546 = $26;
 $547 = ((($546)) + 4|0);
 $548 = HEAP32[$547>>2]|0;
 $25 = $546;
 $549 = $25;
 $550 = ((($549)) + 8|0);
 $24 = $550;
 $551 = $24;
 $23 = $551;
 $552 = $23;
 $553 = HEAP32[$552>>2]|0;
 $554 = ($548|0)!=($553|0);
 if ($554) {
  $20 = $28;
  $21 = $546;
  $22 = 1;
  $3 = $546;
  $555 = $3;
  $556 = ((($555)) + 8|0);
  $2 = $556;
  $557 = $2;
  $1 = $557;
  $558 = $1;
  $559 = ((($546)) + 4|0);
  $560 = HEAP32[$559>>2]|0;
  $4 = $560;
  $561 = $4;
  $562 = $27;
  $15 = $558;
  $16 = $561;
  $17 = $562;
  $563 = $15;
  $564 = $16;
  $565 = $17;
  $14 = $565;
  $566 = $14;
  ;HEAP8[$13>>0]=HEAP8[$18>>0]|0;
  $10 = $563;
  $11 = $564;
  $12 = $566;
  $567 = $10;
  $568 = $11;
  $569 = $12;
  $9 = $569;
  $570 = $9;
  $6 = $567;
  $7 = $568;
  $8 = $570;
  $571 = $7;
  $572 = $8;
  $5 = $572;
  $573 = $5;
  $574 = HEAP32[$573>>2]|0;
  HEAP32[$571>>2] = $574;
  $19 = $28;
  $575 = ((($546)) + 4|0);
  $576 = HEAP32[$575>>2]|0;
  $577 = ((($576)) + 4|0);
  HEAP32[$575>>2] = $577;
  STACKTOP = sp;return;
 } else {
  $578 = $27;
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($546,$578);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $10 = sp + 8|0;
 $15 = sp + 193|0;
 $24 = sp;
 $27 = sp + 192|0;
 $35 = sp + 72|0;
 $38 = sp + 60|0;
 $46 = sp + 12|0;
 $43 = $0;
 $44 = $1;
 $47 = $43;
 $42 = $47;
 $48 = $42;
 $49 = ((($48)) + 8|0);
 $41 = $49;
 $50 = $41;
 $40 = $50;
 $51 = $40;
 $45 = $51;
 $39 = $47;
 $52 = $39;
 $53 = ((($52)) + 4|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = HEAP32[$52>>2]|0;
 $56 = $54;
 $57 = $55;
 $58 = (($56) - ($57))|0;
 $59 = (($58|0) / 4)&-1;
 $60 = (($59) + 1)|0;
 $34 = $47;
 HEAP32[$35>>2] = $60;
 $61 = $34;
 $62 = (__ZNKSt3__26vectorIjNS_9allocatorIjEEE8max_sizeEv($61)|0);
 $36 = $62;
 $63 = HEAP32[$35>>2]|0;
 $64 = $36;
 $65 = ($63>>>0)>($64>>>0);
 if ($65) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($61);
  // unreachable;
 }
 $32 = $61;
 $66 = $32;
 $31 = $66;
 $67 = $31;
 $30 = $67;
 $68 = $30;
 $69 = ((($68)) + 8|0);
 $29 = $69;
 $70 = $29;
 $28 = $70;
 $71 = $28;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$67>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 4)&-1;
 $37 = $77;
 $78 = $37;
 $79 = $36;
 $80 = (($79>>>0) / 2)&-1;
 $81 = ($78>>>0)>=($80>>>0);
 if ($81) {
  $82 = $36;
  $33 = $82;
 } else {
  $83 = $37;
  $84 = $83<<1;
  HEAP32[$38>>2] = $84;
  $25 = $38;
  $26 = $35;
  $85 = $25;
  $86 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $85;
  $23 = $86;
  $87 = $22;
  $88 = $23;
  $19 = $24;
  $20 = $87;
  $21 = $88;
  $89 = $20;
  $90 = HEAP32[$89>>2]|0;
  $91 = $21;
  $92 = HEAP32[$91>>2]|0;
  $93 = ($90>>>0)<($92>>>0);
  $94 = $23;
  $95 = $22;
  $96 = $93 ? $94 : $95;
  $97 = HEAP32[$96>>2]|0;
  $33 = $97;
 }
 $98 = $33;
 $18 = $47;
 $99 = $18;
 $100 = ((($99)) + 4|0);
 $101 = HEAP32[$100>>2]|0;
 $102 = HEAP32[$99>>2]|0;
 $103 = $101;
 $104 = $102;
 $105 = (($103) - ($104))|0;
 $106 = (($105|0) / 4)&-1;
 $107 = $45;
 __ZNSt3__214__split_bufferIjRNS_9allocatorIjEEEC2EmmS3_($46,$98,$106,$107);
 $108 = $45;
 $109 = ((($46)) + 8|0);
 $110 = HEAP32[$109>>2]|0;
 $17 = $110;
 $111 = $17;
 $112 = $44;
 $16 = $112;
 $113 = $16;
 $12 = $108;
 $13 = $111;
 $14 = $113;
 $114 = $12;
 $115 = $13;
 $116 = $14;
 $11 = $116;
 $117 = $11;
 ;HEAP8[$10>>0]=HEAP8[$15>>0]|0;
 $7 = $114;
 $8 = $115;
 $9 = $117;
 $118 = $7;
 $119 = $8;
 $120 = $9;
 $6 = $120;
 $121 = $6;
 $3 = $118;
 $4 = $119;
 $5 = $121;
 $122 = $4;
 $123 = $5;
 $2 = $123;
 $124 = $2;
 $125 = HEAP32[$124>>2]|0;
 HEAP32[$122>>2] = $125;
 $126 = ((($46)) + 8|0);
 $127 = HEAP32[$126>>2]|0;
 $128 = ((($127)) + 4|0);
 HEAP32[$126>>2] = $128;
 __ZNSt3__26vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($47,$46);
 __ZNSt3__214__split_bufferIjRNS_9allocatorIjEEED2Ev($46);
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIjRNS_9allocatorIjEEEC2EmmS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $36 = sp;
 $32 = $0;
 $33 = $1;
 $34 = $2;
 $35 = $3;
 $37 = $32;
 $38 = ((($37)) + 12|0);
 HEAP32[$36>>2] = 0;
 $39 = $35;
 $29 = $38;
 $30 = $36;
 $31 = $39;
 $40 = $29;
 $41 = $30;
 $28 = $41;
 $42 = $28;
 $22 = $40;
 $23 = $42;
 $43 = $22;
 $44 = $23;
 $21 = $44;
 HEAP32[$43>>2] = 0;
 $45 = ((($40)) + 4|0);
 $46 = $31;
 $24 = $46;
 $47 = $24;
 $26 = $45;
 $27 = $47;
 $48 = $26;
 $49 = $27;
 $25 = $49;
 $50 = $25;
 HEAP32[$48>>2] = $50;
 $51 = $33;
 $52 = ($51|0)!=(0);
 do {
  if ($52) {
   $6 = $37;
   $53 = $6;
   $54 = ((($53)) + 12|0);
   $5 = $54;
   $55 = $5;
   $56 = ((($55)) + 4|0);
   $4 = $56;
   $57 = $4;
   $58 = HEAP32[$57>>2]|0;
   $59 = $33;
   $16 = $58;
   $17 = $59;
   $60 = $16;
   $61 = $17;
   $13 = $60;
   $14 = $61;
   $15 = 0;
   $62 = $13;
   $63 = $14;
   $12 = $62;
   $64 = ($63>>>0)>(1073741823);
   if ($64) {
    $9 = 21003;
    $65 = (___cxa_allocate_exception(8)|0);
    $66 = $9;
    $7 = $65;
    $8 = $66;
    $67 = $7;
    $68 = $8;
    __ZNSt11logic_errorC2EPKc($67,$68);
    HEAP32[$67>>2] = (17588);
    ___cxa_throw(($65|0),(9800|0),(617|0));
    // unreachable;
   } else {
    $69 = $14;
    $70 = $69<<2;
    $10 = $70;
    $11 = 4;
    $71 = $10;
    $72 = (__Znwm($71)|0);
    $73 = $72;
    break;
   }
  } else {
   $73 = 0;
  }
 } while(0);
 HEAP32[$37>>2] = $73;
 $74 = HEAP32[$37>>2]|0;
 $75 = $34;
 $76 = (($74) + ($75<<2)|0);
 $77 = ((($37)) + 8|0);
 HEAP32[$77>>2] = $76;
 $78 = ((($37)) + 4|0);
 HEAP32[$78>>2] = $76;
 $79 = HEAP32[$37>>2]|0;
 $80 = $33;
 $81 = (($79) + ($80<<2)|0);
 $20 = $37;
 $82 = $20;
 $83 = ((($82)) + 12|0);
 $19 = $83;
 $84 = $19;
 $18 = $84;
 $85 = $18;
 HEAP32[$85>>2] = $81;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIjNS_9allocatorIjEEE26__swap_out_circular_bufferERNS_14__split_bufferIjRS2_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($106|0) / 4)&-1;
 $108 = (($95) + ($107<<2)|0);
 $69 = $89;
 $109 = $69;
 $110 = HEAP32[$109>>2]|0;
 $68 = $110;
 $111 = $68;
 $70 = $89;
 $112 = $70;
 $113 = ((($112)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$112>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 4)&-1;
 $120 = (($111) + ($119<<2)|0);
 $72 = $89;
 $121 = $72;
 $122 = HEAP32[$121>>2]|0;
 $71 = $122;
 $123 = $71;
 $77 = $89;
 $124 = $77;
 $76 = $124;
 $125 = $76;
 $75 = $125;
 $126 = $75;
 $127 = ((($126)) + 8|0);
 $74 = $127;
 $128 = $74;
 $73 = $128;
 $129 = $73;
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$125>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 4)&-1;
 $136 = (($123) + ($135<<2)|0);
 $78 = $89;
 $79 = $92;
 $80 = $108;
 $81 = $120;
 $82 = $136;
 $4 = $88;
 $137 = $4;
 $138 = ((($137)) + 8|0);
 $3 = $138;
 $139 = $3;
 $2 = $139;
 $140 = $2;
 $141 = HEAP32[$88>>2]|0;
 $142 = ((($88)) + 4|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = $87;
 $145 = ((($144)) + 4|0);
 $5 = $140;
 $6 = $141;
 $7 = $143;
 $8 = $145;
 $146 = $7;
 $147 = $6;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($150|0) / 4)&-1;
 $9 = $151;
 $152 = $9;
 $153 = $8;
 $154 = HEAP32[$153>>2]|0;
 $155 = (0 - ($152))|0;
 $156 = (($154) + ($155<<2)|0);
 HEAP32[$153>>2] = $156;
 $157 = $9;
 $158 = ($157|0)>(0);
 if ($158) {
  $159 = $8;
  $160 = HEAP32[$159>>2]|0;
  $161 = $6;
  $162 = $9;
  $163 = $162<<2;
  _memcpy(($160|0),($161|0),($163|0))|0;
 }
 $164 = $87;
 $165 = ((($164)) + 4|0);
 $13 = $88;
 $14 = $165;
 $166 = $13;
 $12 = $166;
 $167 = $12;
 $168 = HEAP32[$167>>2]|0;
 HEAP32[$15>>2] = $168;
 $169 = $14;
 $10 = $169;
 $170 = $10;
 $171 = HEAP32[$170>>2]|0;
 $172 = $13;
 HEAP32[$172>>2] = $171;
 $11 = $15;
 $173 = $11;
 $174 = HEAP32[$173>>2]|0;
 $175 = $14;
 HEAP32[$175>>2] = $174;
 $176 = ((($88)) + 4|0);
 $177 = $87;
 $178 = ((($177)) + 8|0);
 $19 = $176;
 $20 = $178;
 $179 = $19;
 $18 = $179;
 $180 = $18;
 $181 = HEAP32[$180>>2]|0;
 HEAP32[$21>>2] = $181;
 $182 = $20;
 $16 = $182;
 $183 = $16;
 $184 = HEAP32[$183>>2]|0;
 $185 = $19;
 HEAP32[$185>>2] = $184;
 $17 = $21;
 $186 = $17;
 $187 = HEAP32[$186>>2]|0;
 $188 = $20;
 HEAP32[$188>>2] = $187;
 $24 = $88;
 $189 = $24;
 $190 = ((($189)) + 8|0);
 $23 = $190;
 $191 = $23;
 $22 = $191;
 $192 = $22;
 $193 = $87;
 $27 = $193;
 $194 = $27;
 $195 = ((($194)) + 12|0);
 $26 = $195;
 $196 = $26;
 $25 = $196;
 $197 = $25;
 $31 = $192;
 $32 = $197;
 $198 = $31;
 $30 = $198;
 $199 = $30;
 $200 = HEAP32[$199>>2]|0;
 HEAP32[$33>>2] = $200;
 $201 = $32;
 $28 = $201;
 $202 = $28;
 $203 = HEAP32[$202>>2]|0;
 $204 = $31;
 HEAP32[$204>>2] = $203;
 $29 = $33;
 $205 = $29;
 $206 = HEAP32[$205>>2]|0;
 $207 = $32;
 HEAP32[$207>>2] = $206;
 $208 = $87;
 $209 = ((($208)) + 4|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = $87;
 HEAP32[$211>>2] = $210;
 $34 = $88;
 $212 = $34;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = HEAP32[$212>>2]|0;
 $216 = $214;
 $217 = $215;
 $218 = (($216) - ($217))|0;
 $219 = (($218|0) / 4)&-1;
 $58 = $88;
 $59 = $219;
 $220 = $58;
 $57 = $220;
 $221 = $57;
 $222 = HEAP32[$221>>2]|0;
 $56 = $222;
 $223 = $56;
 $36 = $220;
 $224 = $36;
 $225 = HEAP32[$224>>2]|0;
 $35 = $225;
 $226 = $35;
 $41 = $220;
 $227 = $41;
 $40 = $227;
 $228 = $40;
 $39 = $228;
 $229 = $39;
 $230 = ((($229)) + 8|0);
 $38 = $230;
 $231 = $38;
 $37 = $231;
 $232 = $37;
 $233 = HEAP32[$232>>2]|0;
 $234 = HEAP32[$228>>2]|0;
 $235 = $233;
 $236 = $234;
 $237 = (($235) - ($236))|0;
 $238 = (($237|0) / 4)&-1;
 $239 = (($226) + ($238<<2)|0);
 $43 = $220;
 $240 = $43;
 $241 = HEAP32[$240>>2]|0;
 $42 = $241;
 $242 = $42;
 $48 = $220;
 $243 = $48;
 $47 = $243;
 $244 = $47;
 $46 = $244;
 $245 = $46;
 $246 = ((($245)) + 8|0);
 $45 = $246;
 $247 = $45;
 $44 = $247;
 $248 = $44;
 $249 = HEAP32[$248>>2]|0;
 $250 = HEAP32[$244>>2]|0;
 $251 = $249;
 $252 = $250;
 $253 = (($251) - ($252))|0;
 $254 = (($253|0) / 4)&-1;
 $255 = (($242) + ($254<<2)|0);
 $50 = $220;
 $256 = $50;
 $257 = HEAP32[$256>>2]|0;
 $49 = $257;
 $258 = $49;
 $259 = $59;
 $260 = (($258) + ($259<<2)|0);
 $51 = $220;
 $52 = $223;
 $53 = $239;
 $54 = $255;
 $55 = $260;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIjRNS_9allocatorIjEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $24 = sp + 8|0;
 $27 = sp + 153|0;
 $34 = sp;
 $37 = sp + 152|0;
 $39 = $0;
 $40 = $39;
 $38 = $40;
 $41 = $38;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $35 = $41;
 $36 = $43;
 $44 = $35;
 $45 = $36;
 ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
 $32 = $44;
 $33 = $45;
 $46 = $32;
 while(1) {
  $47 = $33;
  $48 = ((($46)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($47|0)!=($49|0);
  if (!($50)) {
   break;
  }
  $31 = $46;
  $51 = $31;
  $52 = ((($51)) + 12|0);
  $30 = $52;
  $53 = $30;
  $54 = ((($53)) + 4|0);
  $29 = $54;
  $55 = $29;
  $56 = HEAP32[$55>>2]|0;
  $57 = ((($46)) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($58)) + -4|0);
  HEAP32[$57>>2] = $59;
  $28 = $59;
  $60 = $28;
  $25 = $56;
  $26 = $60;
  $61 = $25;
  $62 = $26;
  ;HEAP8[$24>>0]=HEAP8[$27>>0]|0;
  $22 = $61;
  $23 = $62;
  $63 = $22;
  $64 = $23;
  $20 = $63;
  $21 = $64;
 }
 $65 = HEAP32[$40>>2]|0;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  STACKTOP = sp;return;
 }
 $19 = $40;
 $67 = $19;
 $68 = ((($67)) + 12|0);
 $18 = $68;
 $69 = $18;
 $70 = ((($69)) + 4|0);
 $17 = $70;
 $71 = $17;
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$40>>2]|0;
 $4 = $40;
 $74 = $4;
 $3 = $74;
 $75 = $3;
 $76 = ((($75)) + 12|0);
 $2 = $76;
 $77 = $2;
 $1 = $77;
 $78 = $1;
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$74>>2]|0;
 $81 = $79;
 $82 = $80;
 $83 = (($81) - ($82))|0;
 $84 = (($83|0) / 4)&-1;
 $14 = $72;
 $15 = $73;
 $16 = $84;
 $85 = $14;
 $86 = $15;
 $87 = $16;
 $11 = $85;
 $12 = $86;
 $13 = $87;
 $88 = $12;
 $89 = $13;
 $90 = $89<<2;
 $8 = $88;
 $9 = $90;
 $10 = 4;
 $91 = $8;
 $92 = $9;
 $93 = $10;
 $5 = $91;
 $6 = $92;
 $7 = $93;
 $94 = $5;
 $95 = $6;
 __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($94,$95);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point14Decompressor8readDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $2 = sp + 404|0;
 $8 = sp + 380|0;
 $13 = sp + 360|0;
 $17 = sp + 344|0;
 $23 = sp + 320|0;
 $28 = sp + 300|0;
 $32 = sp + 284|0;
 $38 = sp + 260|0;
 $43 = sp + 240|0;
 $72 = sp;
 $75 = sp + 412|0;
 $89 = sp + 64|0;
 $92 = sp + 52|0;
 $95 = sp + 40|0;
 $96 = sp + 36|0;
 $97 = sp + 32|0;
 $98 = sp + 28|0;
 $99 = sp + 24|0;
 $100 = sp + 20|0;
 $101 = sp + 16|0;
 $102 = sp + 12|0;
 $103 = sp + 8|0;
 $104 = sp + 4|0;
 $94 = $0;
 $105 = $94;
 $106 = ((($105)) + 8520|0);
 $93 = $106;
 $107 = $93;
 $108 = HEAP32[$107>>2]|0;
 $90 = $107;
 $91 = $108;
 $109 = $91;
 $87 = $89;
 $88 = $109;
 $110 = $87;
 $111 = $88;
 HEAP32[$110>>2] = $111;
 $112 = HEAP32[$89>>2]|0;
 HEAP32[$92>>2] = $112;
 $113 = HEAP32[$92>>2]|0;
 HEAP32[$95>>2] = $113;
 $114 = ((($105)) + 8340|0);
 $115 = ((($105)) + 8324|0);
 $44 = $95;
 $45 = 0;
 $116 = $44;
 ;HEAP32[$43>>2]=HEAP32[$116>>2]|0;
 $42 = $116;
 $117 = $42;
 $118 = HEAP32[$117>>2]|0;
 $119 = ((($118)) + 4|0);
 HEAP32[$117>>2] = $119;
 $120 = HEAP32[$43>>2]|0;
 HEAP32[$96>>2] = $120;
 $36 = $96;
 $121 = $36;
 $122 = HEAP32[$121>>2]|0;
 $123 = HEAP32[$122>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($114,$115,$123);
 $124 = ((($105)) + 8360|0);
 $125 = ((($105)) + 8324|0);
 $29 = $95;
 $30 = 0;
 $126 = $29;
 ;HEAP32[$28>>2]=HEAP32[$126>>2]|0;
 $27 = $126;
 $127 = $27;
 $128 = HEAP32[$127>>2]|0;
 $129 = ((($128)) + 4|0);
 HEAP32[$127>>2] = $129;
 $130 = HEAP32[$28>>2]|0;
 HEAP32[$97>>2] = $130;
 $21 = $97;
 $131 = $21;
 $132 = HEAP32[$131>>2]|0;
 $133 = HEAP32[$132>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($124,$125,$133);
 $134 = ((($105)) + 8380|0);
 $135 = ((($105)) + 8324|0);
 $14 = $95;
 $15 = 0;
 $136 = $14;
 ;HEAP32[$13>>2]=HEAP32[$136>>2]|0;
 $12 = $136;
 $137 = $12;
 $138 = HEAP32[$137>>2]|0;
 $139 = ((($138)) + 4|0);
 HEAP32[$137>>2] = $139;
 $140 = HEAP32[$13>>2]|0;
 HEAP32[$98>>2] = $140;
 $6 = $98;
 $141 = $6;
 $142 = HEAP32[$141>>2]|0;
 $143 = HEAP32[$142>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($134,$135,$143);
 $144 = ((($105)) + 8400|0);
 $145 = ((($105)) + 8324|0);
 $3 = $95;
 $4 = 0;
 $146 = $3;
 ;HEAP32[$2>>2]=HEAP32[$146>>2]|0;
 $1 = $146;
 $147 = $1;
 $148 = HEAP32[$147>>2]|0;
 $149 = ((($148)) + 4|0);
 HEAP32[$147>>2] = $149;
 $150 = HEAP32[$2>>2]|0;
 HEAP32[$99>>2] = $150;
 $5 = $99;
 $151 = $5;
 $152 = HEAP32[$151>>2]|0;
 $153 = HEAP32[$152>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($144,$145,$153);
 $154 = ((($105)) + 8420|0);
 $155 = ((($105)) + 8324|0);
 $9 = $95;
 $10 = 0;
 $156 = $9;
 ;HEAP32[$8>>2]=HEAP32[$156>>2]|0;
 $7 = $156;
 $157 = $7;
 $158 = HEAP32[$157>>2]|0;
 $159 = ((($158)) + 4|0);
 HEAP32[$157>>2] = $159;
 $160 = HEAP32[$8>>2]|0;
 HEAP32[$100>>2] = $160;
 $11 = $100;
 $161 = $11;
 $162 = HEAP32[$161>>2]|0;
 $163 = HEAP32[$162>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($154,$155,$163);
 $164 = ((($105)) + 8440|0);
 $165 = ((($105)) + 8324|0);
 $18 = $95;
 $19 = 0;
 $166 = $18;
 ;HEAP32[$17>>2]=HEAP32[$166>>2]|0;
 $16 = $166;
 $167 = $16;
 $168 = HEAP32[$167>>2]|0;
 $169 = ((($168)) + 4|0);
 HEAP32[$167>>2] = $169;
 $170 = HEAP32[$17>>2]|0;
 HEAP32[$101>>2] = $170;
 $20 = $101;
 $171 = $20;
 $172 = HEAP32[$171>>2]|0;
 $173 = HEAP32[$172>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($164,$165,$173);
 $174 = ((($105)) + 8460|0);
 $175 = ((($105)) + 8324|0);
 $24 = $95;
 $25 = 0;
 $176 = $24;
 ;HEAP32[$23>>2]=HEAP32[$176>>2]|0;
 $22 = $176;
 $177 = $22;
 $178 = HEAP32[$177>>2]|0;
 $179 = ((($178)) + 4|0);
 HEAP32[$177>>2] = $179;
 $180 = HEAP32[$23>>2]|0;
 HEAP32[$102>>2] = $180;
 $26 = $102;
 $181 = $26;
 $182 = HEAP32[$181>>2]|0;
 $183 = HEAP32[$182>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($174,$175,$183);
 $184 = ((($105)) + 8480|0);
 $185 = ((($105)) + 8324|0);
 $33 = $95;
 $34 = 0;
 $186 = $33;
 ;HEAP32[$32>>2]=HEAP32[$186>>2]|0;
 $31 = $186;
 $187 = $31;
 $188 = HEAP32[$187>>2]|0;
 $189 = ((($188)) + 4|0);
 HEAP32[$187>>2] = $189;
 $190 = HEAP32[$32>>2]|0;
 HEAP32[$103>>2] = $190;
 $35 = $103;
 $191 = $35;
 $192 = HEAP32[$191>>2]|0;
 $193 = HEAP32[$192>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($184,$185,$193);
 $194 = ((($105)) + 8500|0);
 $195 = ((($105)) + 8324|0);
 $39 = $95;
 $40 = 0;
 $196 = $39;
 ;HEAP32[$38>>2]=HEAP32[$196>>2]|0;
 $37 = $196;
 $197 = $37;
 $198 = HEAP32[$197>>2]|0;
 $199 = ((($198)) + 4|0);
 HEAP32[$197>>2] = $199;
 $200 = HEAP32[$38>>2]|0;
 HEAP32[$104>>2] = $200;
 $41 = $104;
 $201 = $41;
 $202 = HEAP32[$201>>2]|0;
 $203 = HEAP32[$202>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($194,$195,$203);
 $204 = ((($105)) + 8520|0);
 $85 = $204;
 $205 = $85;
 $84 = $205;
 $206 = $84;
 $207 = ((($206)) + 4|0);
 $208 = HEAP32[$207>>2]|0;
 $209 = HEAP32[$206>>2]|0;
 $210 = $208;
 $211 = $209;
 $212 = (($210) - ($211))|0;
 $213 = (($212|0) / 4)&-1;
 $86 = $213;
 $83 = $205;
 $214 = $83;
 $215 = HEAP32[$214>>2]|0;
 $80 = $214;
 $81 = $215;
 $216 = $80;
 $217 = ((($216)) + 4|0);
 $218 = HEAP32[$217>>2]|0;
 $82 = $218;
 while(1) {
  $219 = $81;
  $220 = $82;
  $221 = ($219|0)!=($220|0);
  if (!($221)) {
   break;
  }
  $79 = $216;
  $222 = $79;
  $223 = ((($222)) + 8|0);
  $78 = $223;
  $224 = $78;
  $77 = $224;
  $225 = $77;
  $226 = $82;
  $227 = ((($226)) + -4|0);
  $82 = $227;
  $76 = $227;
  $228 = $76;
  $73 = $225;
  $74 = $228;
  $229 = $73;
  $230 = $74;
  ;HEAP8[$72>>0]=HEAP8[$75>>0]|0;
  $70 = $229;
  $71 = $230;
  $231 = $70;
  $232 = $71;
  $68 = $231;
  $69 = $232;
 }
 $233 = $81;
 $234 = ((($216)) + 4|0);
 HEAP32[$234>>2] = $233;
 $235 = $86;
 $65 = $205;
 $66 = $235;
 $236 = $65;
 $64 = $236;
 $237 = $64;
 $238 = HEAP32[$237>>2]|0;
 $63 = $238;
 $239 = $63;
 $47 = $236;
 $240 = $47;
 $241 = HEAP32[$240>>2]|0;
 $46 = $241;
 $242 = $46;
 $52 = $236;
 $243 = $52;
 $51 = $243;
 $244 = $51;
 $50 = $244;
 $245 = $50;
 $246 = ((($245)) + 8|0);
 $49 = $246;
 $247 = $49;
 $48 = $247;
 $248 = $48;
 $249 = HEAP32[$248>>2]|0;
 $250 = HEAP32[$244>>2]|0;
 $251 = $249;
 $252 = $250;
 $253 = (($251) - ($252))|0;
 $254 = (($253|0) / 4)&-1;
 $255 = (($242) + ($254<<2)|0);
 $54 = $236;
 $256 = $54;
 $257 = HEAP32[$256>>2]|0;
 $53 = $257;
 $258 = $53;
 $259 = $66;
 $260 = (($258) + ($259<<2)|0);
 $56 = $236;
 $261 = $56;
 $262 = HEAP32[$261>>2]|0;
 $55 = $262;
 $263 = $55;
 $57 = $236;
 $264 = $57;
 $265 = ((($264)) + 4|0);
 $266 = HEAP32[$265>>2]|0;
 $267 = HEAP32[$264>>2]|0;
 $268 = $266;
 $269 = $267;
 $270 = (($268) - ($269))|0;
 $271 = (($270|0) / 4)&-1;
 $272 = (($263) + ($271<<2)|0);
 $58 = $236;
 $59 = $239;
 $60 = $255;
 $61 = $260;
 $62 = $272;
 $67 = $205;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point14Decompressor10decompressEPcRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0.0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0.0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;
 var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0;
 var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0;
 var $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0;
 var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0;
 var $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0;
 var $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0;
 var $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0;
 var $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0;
 var $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0;
 var $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0;
 var $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0;
 var $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0;
 var $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0;
 var $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0;
 var $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0;
 var $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0;
 var $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0;
 var $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0;
 var $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0;
 var $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0;
 var $768 = 0, $769 = 0, $77 = 0, $770 = 0.0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $20 = sp + 16|0;
 $23 = sp + 545|0;
 $33 = sp + 8|0;
 $36 = sp + 544|0;
 $79 = sp + 514|0;
 $91 = sp + 156|0;
 $113 = sp + 108|0;
 $114 = sp + 104|0;
 $117 = sp + 92|0;
 $118 = sp + 88|0;
 $120 = sp + 80|0;
 $121 = sp + 76|0;
 $123 = sp + 68|0;
 $124 = sp + 64|0;
 $125 = sp + 60|0;
 $126 = sp + 56|0;
 $129 = sp + 44|0;
 $131 = sp + 502|0;
 $132 = sp + 501|0;
 $133 = sp + 36|0;
 $134 = sp + 32|0;
 $137 = sp + 496|0;
 $138 = sp + 494|0;
 $140 = sp + 500|0;
 $141 = sp + 492|0;
 $142 = sp;
 $76 = $0;
 $77 = $1;
 $78 = $2;
 $144 = $76;
 $145 = ((($144)) + 8320|0);
 $146 = HEAP32[$145>>2]|0;
 $147 = ($146|0)==(-1);
 if ($147) {
  $148 = ((($144)) + 8324|0);
  $149 = $77;
  __ZN7lazperf10InCbStream8getBytesEPhm($148,$149,30);
  $150 = $77;
  __ZN7lazperf3las7point14C2EPKc($79,$150);
  $151 = (__ZNK7lazperf3las7point1414scannerChannelEv($79)|0);
  $152 = $78;
  HEAP32[$152>>2] = $151;
  $153 = $78;
  $154 = HEAP32[$153>>2]|0;
  $73 = $144;
  $74 = $154;
  $155 = $73;
  $156 = $74;
  $157 = (($155) + (($156*2080)|0)|0);
  $80 = $157;
  $158 = $80;
  $159 = ((($158)) + 1345|0);
  dest=$159; src=$79; stop=dest+30|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $160 = $80;
  $161 = ((($160)) + 1344|0);
  HEAP8[$161>>0] = 1;
  $162 = (+__ZNK7lazperf3las7point147gpsTimeEv($79));
  $163 = $80;
  $164 = ((($163)) + 2008|0);
  $71 = $164;
  $72 = 0;
  $165 = $71;
  $166 = $72;
  $167 = (($165) + ($166<<3)|0);
  HEAPF64[$167>>3] = $162;
  $168 = $78;
  $169 = HEAP32[$168>>2]|0;
  $170 = ((($144)) + 8320|0);
  HEAP32[$170>>2] = $169;
  $171 = $80;
  $172 = ((($171)) + 1392|0);
  $81 = $172;
  $173 = $81;
  $70 = $173;
  $174 = $70;
  $69 = $174;
  $175 = $69;
  $82 = $175;
  $176 = $81;
  $68 = $176;
  $177 = $68;
  $67 = $177;
  $178 = $67;
  $179 = ((($178)) + 32|0);
  $83 = $179;
  while(1) {
   $180 = $82;
   $181 = $83;
   $182 = ($180|0)!=($181|0);
   if (!($182)) {
    break;
   }
   $183 = $82;
   $84 = $183;
   $184 = (__ZNK7lazperf3las7point141zEv($79)|0);
   $185 = $84;
   HEAP32[$185>>2] = $184;
   $186 = $82;
   $187 = ((($186)) + 4|0);
   $82 = $187;
  }
  $188 = $80;
  $189 = ((($188)) + 1376|0);
  $85 = $189;
  $190 = $85;
  $66 = $190;
  $191 = $66;
  $65 = $191;
  $192 = $65;
  $86 = $192;
  $193 = $85;
  $64 = $193;
  $194 = $64;
  $63 = $194;
  $195 = $63;
  $196 = ((($195)) + 16|0);
  $87 = $196;
  while(1) {
   $197 = $86;
   $198 = $87;
   $199 = ($197|0)!=($198|0);
   if (!($199)) {
    break;
   }
   $200 = $86;
   $88 = $200;
   $201 = (__ZNK7lazperf3las7point149intensityEv($79)|0);
   $202 = $88;
   HEAP16[$202>>1] = $201;
   $203 = $86;
   $204 = ((($203)) + 2|0);
   $86 = $204;
  }
  $205 = $77;
  $206 = ((($205)) + 30|0);
  $75 = $206;
  $782 = $75;
  STACKTOP = sp;return ($782|0);
 }
 $207 = ((($144)) + 8320|0);
 $208 = HEAP32[$207>>2]|0;
 $61 = $144;
 $62 = $208;
 $209 = $61;
 $210 = $62;
 $211 = (($209) + (($210*2080)|0)|0);
 $89 = $211;
 $212 = $89;
 $213 = ((($212)) + 1345|0);
 $214 = (__ZNK7lazperf3las7point149returnNumEv($213)|0);
 $215 = ($214|0)==(1);
 $216 = $215&1;
 $217 = $89;
 $218 = ((($217)) + 1345|0);
 $219 = (__ZNK7lazperf3las7point149returnNumEv($218)|0);
 $220 = $89;
 $221 = ((($220)) + 1345|0);
 $222 = (__ZNK7lazperf3las7point1410numReturnsEv($221)|0);
 $223 = $222&255;
 $224 = ($219|0)>=($223|0);
 $225 = $224&1;
 $226 = $225 << 1;
 $227 = $216 | $226;
 $228 = $89;
 $229 = ((($228)) + 2072|0);
 $230 = HEAP8[$229>>0]|0;
 $231 = $230&1;
 $232 = $231&1;
 $233 = $232 << 2;
 $234 = $227 | $233;
 $90 = $234;
 $235 = ((($144)) + 8340|0);
 $236 = $89;
 $237 = ((($236)) + 4|0);
 $238 = $90;
 $59 = $237;
 $60 = $238;
 $239 = $59;
 $240 = HEAP32[$239>>2]|0;
 $241 = $60;
 $242 = (($240) + (($241*44)|0)|0);
 $243 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($235,$242)|0);
 HEAP32[$91>>2] = $243;
 $244 = ((($144)) + 8532|0);
 __ZN7lazperf5utils6Summer3addIiEEvRKT_($244,$91);
 $245 = HEAP32[$91>>2]|0;
 $246 = $245 >> 6;
 $247 = $246 & 1;
 $248 = ($247|0)!=(0);
 $249 = $248&1;
 $92 = $249;
 $250 = HEAP32[$91>>2]|0;
 $251 = $250 >> 5;
 $252 = $251 & 1;
 $253 = ($252|0)!=(0);
 $254 = $253&1;
 $93 = $254;
 $255 = HEAP32[$91>>2]|0;
 $256 = $255 >> 4;
 $257 = $256 & 1;
 $258 = ($257|0)!=(0);
 $259 = $258&1;
 $94 = $259;
 $260 = HEAP32[$91>>2]|0;
 $261 = $260 >> 3;
 $262 = $261 & 1;
 $263 = ($262|0)!=(0);
 $264 = $263&1;
 $95 = $264;
 $265 = HEAP32[$91>>2]|0;
 $266 = $265 >> 2;
 $267 = $266 & 1;
 $268 = ($267|0)!=(0);
 $269 = $268&1;
 $96 = $269;
 $270 = HEAP32[$91>>2]|0;
 $271 = $270 >> 1;
 $272 = $271 & 1;
 $273 = ($272|0)!=(0);
 $274 = $273&1;
 $97 = $274;
 $275 = HEAP32[$91>>2]|0;
 $276 = $275 >> 0;
 $277 = $276 & 1;
 $278 = ($277|0)!=(0);
 $279 = $278&1;
 $98 = $279;
 $280 = $98;
 $281 = $280&1;
 if ($281) {
  $282 = $97;
  $283 = $282&1;
  $284 = $283 ^ 1;
  $286 = $284;
 } else {
  $286 = 0;
 }
 $285 = $286&1;
 $99 = $285;
 $287 = $97;
 $288 = $287&1;
 if ($288) {
  $289 = $98;
  $290 = $289&1;
  $291 = $290 ^ 1;
  $293 = $291;
 } else {
  $293 = 0;
 }
 $292 = $293&1;
 $100 = $292;
 $294 = $98;
 $295 = $294&1;
 $296 = $97;
 $297 = $296&1;
 $298 = $295 ? $297 : 0;
 $299 = $298&1;
 $101 = $299;
 $300 = $89;
 $301 = ((($300)) + 1345|0);
 $302 = (__ZNK7lazperf3las7point1414scannerChannelEv($301)|0);
 $102 = $302;
 $303 = $92;
 $304 = $303&1;
 if ($304) {
  $305 = ((($144)) + 8340|0);
  $306 = $89;
  $307 = ((($306)) + 16|0);
  $308 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($305,$307)|0);
  $103 = $308;
  $309 = $102;
  $310 = $103;
  $311 = (($309) + ($310))|0;
  $312 = (($311) + 1)|0;
  $313 = (($312>>>0) % 4)&-1;
  $102 = $313;
  $314 = $102;
  $315 = ((($144)) + 8320|0);
  HEAP32[$315>>2] = $314;
  $316 = $102;
  $317 = $78;
  HEAP32[$317>>2] = $316;
 }
 $318 = $102;
 $57 = $144;
 $58 = $318;
 $319 = $57;
 $320 = $58;
 $321 = (($319) + (($320*2080)|0)|0);
 $104 = $321;
 $322 = $104;
 $323 = ((($322)) + 1344|0);
 $324 = HEAP8[$323>>0]|0;
 $325 = $324&1;
 if (!($325)) {
  $326 = $104;
  $327 = ((($326)) + 1344|0);
  HEAP8[$327>>0] = 1;
  $328 = $89;
  $329 = ((($328)) + 1345|0);
  $330 = $104;
  $331 = ((($330)) + 1345|0);
  dest=$331; src=$329; stop=dest+30|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $332 = $104;
  $333 = ((($332)) + 1392|0);
  $105 = $333;
  $334 = $105;
  $56 = $334;
  $335 = $56;
  $55 = $335;
  $336 = $55;
  $106 = $336;
  $337 = $105;
  $54 = $337;
  $338 = $54;
  $53 = $338;
  $339 = $53;
  $340 = ((($339)) + 32|0);
  $107 = $340;
  while(1) {
   $341 = $106;
   $342 = $107;
   $343 = ($341|0)!=($342|0);
   if (!($343)) {
    break;
   }
   $344 = $106;
   $108 = $344;
   $345 = $89;
   $346 = ((($345)) + 1345|0);
   $347 = (__ZNK7lazperf3las7point141zEv($346)|0);
   $348 = $108;
   HEAP32[$348>>2] = $347;
   $349 = $106;
   $350 = ((($349)) + 4|0);
   $106 = $350;
  }
  $351 = $104;
  $352 = ((($351)) + 1376|0);
  $109 = $352;
  $353 = $109;
  $52 = $353;
  $354 = $52;
  $51 = $354;
  $355 = $51;
  $110 = $355;
  $356 = $109;
  $50 = $356;
  $357 = $50;
  $49 = $357;
  $358 = $49;
  $359 = ((($358)) + 16|0);
  $111 = $359;
  while(1) {
   $360 = $110;
   $361 = $111;
   $362 = ($360|0)!=($361|0);
   if (!($362)) {
    break;
   }
   $363 = $110;
   $112 = $363;
   $364 = $89;
   $365 = ((($364)) + 1345|0);
   $366 = (__ZNK7lazperf3las7point149intensityEv($365)|0);
   $367 = $112;
   HEAP16[$367>>1] = $366;
   $368 = $110;
   $369 = ((($368)) + 2|0);
   $110 = $369;
  }
  $370 = $89;
  $371 = ((($370)) + 1345|0);
  $372 = (+__ZNK7lazperf3las7point147gpsTimeEv($371));
  $373 = $104;
  $374 = ((($373)) + 2008|0);
  $45 = $374;
  $46 = 0;
  $375 = $45;
  $376 = $46;
  $377 = (($375) + ($376<<3)|0);
  HEAPF64[$377>>3] = $372;
 }
 $378 = $104;
 $379 = ((($378)) + 1345|0);
 $380 = $102;
 __ZN7lazperf3las7point1417setScannerChannelEi($379,$380);
 $381 = $104;
 $382 = ((($381)) + 1345|0);
 $383 = (__ZNK7lazperf3las7point1410numReturnsEv($382)|0);
 $384 = $383&255;
 HEAP32[$113>>2] = $384;
 $385 = $104;
 $386 = ((($385)) + 1345|0);
 $387 = (__ZNK7lazperf3las7point149returnNumEv($386)|0);
 HEAP32[$114>>2] = $387;
 $388 = $96;
 $389 = $388&1;
 if ($389) {
  $390 = ((($144)) + 8340|0);
  $391 = $104;
  $392 = ((($391)) + 104|0);
  $393 = $104;
  $394 = ((($393)) + 1345|0);
  $395 = (__ZNK7lazperf3las7point1410numReturnsEv($394)|0);
  $396 = $395&255;
  $43 = $392;
  $44 = $396;
  $397 = $43;
  $398 = HEAP32[$397>>2]|0;
  $399 = $44;
  $400 = (($398) + (($399*44)|0)|0);
  $401 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($390,$400)|0);
  HEAP32[$113>>2] = $401;
 }
 $402 = $104;
 $403 = ((($402)) + 1345|0);
 $404 = HEAP32[$113>>2]|0;
 __ZN7lazperf3las7point1413setNumReturnsEi($403,$404);
 $405 = $99;
 $406 = $405&1;
 do {
  if ($406) {
   $407 = HEAP32[$114>>2]|0;
   $408 = (($407) + 1)|0;
   $409 = (($408>>>0) % 16)&-1;
   HEAP32[$114>>2] = $409;
  } else {
   $410 = $100;
   $411 = $410&1;
   if ($411) {
    $412 = HEAP32[$114>>2]|0;
    $413 = (($412) + 15)|0;
    $414 = (($413>>>0) % 16)&-1;
    HEAP32[$114>>2] = $414;
    break;
   }
   $415 = $101;
   $416 = $415&1;
   if ($416) {
    $417 = $94;
    $418 = $417&1;
    if ($418) {
     $419 = ((($144)) + 8340|0);
     $420 = $104;
     $421 = ((($420)) + 116|0);
     $422 = HEAP32[$114>>2]|0;
     $41 = $421;
     $42 = $422;
     $423 = $41;
     $424 = HEAP32[$423>>2]|0;
     $425 = $42;
     $426 = (($424) + (($425*44)|0)|0);
     $427 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($419,$426)|0);
     HEAP32[$114>>2] = $427;
     break;
    } else {
     $428 = HEAP32[$114>>2]|0;
     $429 = ((($144)) + 8340|0);
     $430 = $104;
     $431 = ((($430)) + 60|0);
     $432 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($429,$431)|0);
     $433 = (($428) + ($432))|0;
     $434 = (($433) + 2)|0;
     $435 = (($434>>>0) % 16)&-1;
     HEAP32[$114>>2] = $435;
     break;
    }
   }
  }
 } while(0);
 $436 = $104;
 $437 = ((($436)) + 1345|0);
 $438 = HEAP32[$114>>2]|0;
 __ZN7lazperf3las7point1412setReturnNumEi($437,$438);
 $439 = ((($144)) + 8540|0);
 __ZN7lazperf5utils6Summer3addIjEEvRKT_($439,$113);
 $440 = ((($144)) + 8540|0);
 __ZN7lazperf5utils6Summer3addIjEEvRKT_($440,$114);
 $441 = HEAP32[$113>>2]|0;
 $442 = (192 + ($441<<4)|0);
 $443 = HEAP32[$114>>2]|0;
 $444 = (($442) + ($443)|0);
 $445 = HEAP8[$444>>0]|0;
 $446 = $445&255;
 $447 = $446 << 1;
 $448 = $94;
 $449 = $448&1;
 $450 = $449&1;
 $451 = $447 | $450;
 $115 = $451;
 $452 = $104;
 $453 = ((($452)) + 1424|0);
 $454 = $115;
 $39 = $453;
 $40 = $454;
 $455 = $39;
 $456 = $40;
 $457 = (($455) + (($456*24)|0)|0);
 $458 = (__ZNK7lazperf5utils16streaming_medianIiE3getEv($457)|0);
 $116 = $458;
 $459 = $104;
 $460 = ((($459)) + 784|0);
 $461 = ((($144)) + 8340|0);
 $462 = $116;
 $463 = HEAP32[$113>>2]|0;
 $464 = ($463|0)==(1);
 $465 = $464&1;
 $466 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($460,$461,$462,$465)|0);
 HEAP32[$117>>2] = $466;
 $467 = $104;
 $468 = ((($467)) + 1345|0);
 $469 = $104;
 $470 = ((($469)) + 1345|0);
 $471 = (__ZNK7lazperf3las7point141xEv($470)|0);
 $472 = HEAP32[$117>>2]|0;
 $473 = (($471) + ($472))|0;
 __ZN7lazperf3las7point144setXEi($468,$473);
 $474 = $104;
 $475 = ((($474)) + 1424|0);
 $476 = $115;
 $37 = $475;
 $38 = $476;
 $477 = $37;
 $478 = $38;
 $479 = (($477) + (($478*24)|0)|0);
 __ZN7lazperf5utils16streaming_medianIiE3addERKi($479,$117);
 $480 = ((($144)) + 8548|0);
 $481 = $104;
 $482 = ((($481)) + 1345|0);
 $483 = (__ZNK7lazperf3las7point141xEv($482)|0);
 HEAP32[$118>>2] = $483;
 __ZN7lazperf5utils6Summer3addIiEEvRKT_($480,$118);
 $484 = $104;
 $485 = ((($484)) + 784|0);
 $486 = (__ZNK7lazperf13decompressors7integer4getKEv($485)|0);
 HEAP32[$120>>2] = $486;
 HEAP32[$121>>2] = 20;
 $34 = $120;
 $35 = $121;
 $487 = $34;
 $488 = $35;
 ;HEAP8[$33>>0]=HEAP8[$36>>0]|0;
 $31 = $487;
 $32 = $488;
 $489 = $32;
 $490 = $31;
 $28 = $33;
 $29 = $489;
 $30 = $490;
 $491 = $29;
 $492 = HEAP32[$491>>2]|0;
 $493 = $30;
 $494 = HEAP32[$493>>2]|0;
 $495 = ($492>>>0)<($494>>>0);
 $496 = $32;
 $497 = $31;
 $498 = $495 ? $496 : $497;
 $499 = HEAP32[$498>>2]|0;
 $500 = $499 & -2;
 $119 = $500;
 $501 = $104;
 $502 = ((($501)) + 1712|0);
 $503 = $115;
 $26 = $502;
 $27 = $503;
 $504 = $26;
 $505 = $27;
 $506 = (($504) + (($505*24)|0)|0);
 $507 = (__ZNK7lazperf5utils16streaming_medianIiE3getEv($506)|0);
 $122 = $507;
 $508 = $104;
 $509 = ((($508)) + 864|0);
 $510 = ((($144)) + 8340|0);
 $511 = $122;
 $512 = HEAP32[$113>>2]|0;
 $513 = ($512|0)==(1);
 $514 = $513&1;
 $515 = $119;
 $516 = $514 | $515;
 $517 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($509,$510,$511,$516)|0);
 HEAP32[$123>>2] = $517;
 $518 = $104;
 $519 = ((($518)) + 1345|0);
 $520 = $104;
 $521 = ((($520)) + 1345|0);
 $522 = (__ZNK7lazperf3las7point141yEv($521)|0);
 $523 = HEAP32[$123>>2]|0;
 $524 = (($522) + ($523))|0;
 __ZN7lazperf3las7point144setYEi($519,$524);
 $525 = $104;
 $526 = ((($525)) + 1712|0);
 $527 = $115;
 $24 = $526;
 $25 = $527;
 $528 = $24;
 $529 = $25;
 $530 = (($528) + (($529*24)|0)|0);
 __ZN7lazperf5utils16streaming_medianIiE3addERKi($530,$123);
 $531 = ((($144)) + 8556|0);
 $532 = $104;
 $533 = ((($532)) + 1345|0);
 $534 = (__ZNK7lazperf3las7point141yEv($533)|0);
 HEAP32[$124>>2] = $534;
 __ZN7lazperf5utils6Summer3addIiEEvRKT_($531,$124);
 $535 = ((($144)) + 8360|0);
 $536 = (__ZNK7lazperf8decoders10arithmeticINS_12MemoryStreamEE5validEv($535)|0);
 if ($536) {
  $537 = $104;
  $538 = ((($537)) + 784|0);
  $539 = (__ZNK7lazperf13decompressors7integer4getKEv($538)|0);
  $540 = $104;
  $541 = ((($540)) + 864|0);
  $542 = (__ZNK7lazperf13decompressors7integer4getKEv($541)|0);
  $543 = (($539) + ($542))|0;
  $544 = (($543>>>0) / 2)&-1;
  HEAP32[$125>>2] = $544;
  HEAP32[$126>>2] = 18;
  $21 = $125;
  $22 = $126;
  $545 = $21;
  $546 = $22;
  ;HEAP8[$20>>0]=HEAP8[$23>>0]|0;
  $18 = $545;
  $19 = $546;
  $547 = $19;
  $548 = $18;
  $15 = $20;
  $16 = $547;
  $17 = $548;
  $549 = $16;
  $550 = HEAP32[$549>>2]|0;
  $551 = $17;
  $552 = HEAP32[$551>>2]|0;
  $553 = ($550>>>0)<($552>>>0);
  $554 = $19;
  $555 = $18;
  $556 = $553 ? $554 : $555;
  $557 = HEAP32[$556>>2]|0;
  $558 = $557 & -2;
  HEAP32[$125>>2] = $558;
  $559 = HEAP32[$113>>2]|0;
  $560 = (448 + ($559<<4)|0);
  $561 = HEAP32[$114>>2]|0;
  $562 = (($560) + ($561)|0);
  $563 = HEAP8[$562>>0]|0;
  $564 = $563&255;
  $127 = $564;
  $565 = $104;
  $566 = ((($565)) + 944|0);
  $567 = ((($144)) + 8360|0);
  $568 = $104;
  $569 = ((($568)) + 1392|0);
  $570 = $127;
  $13 = $569;
  $14 = $570;
  $571 = $13;
  $572 = $14;
  $573 = (($571) + ($572<<2)|0);
  $574 = HEAP32[$573>>2]|0;
  $575 = HEAP32[$113>>2]|0;
  $576 = ($575|0)==(1);
  $577 = $576&1;
  $578 = HEAP32[$125>>2]|0;
  $579 = $577 | $578;
  $580 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($566,$567,$574,$579)|0);
  $128 = $580;
  $581 = $104;
  $582 = ((($581)) + 1345|0);
  $583 = $128;
  __ZN7lazperf3las7point144setZEi($582,$583);
  $584 = $128;
  $585 = $104;
  $586 = ((($585)) + 1392|0);
  $587 = $127;
  $9 = $586;
  $10 = $587;
  $588 = $9;
  $589 = $10;
  $590 = (($588) + ($589<<2)|0);
  HEAP32[$590>>2] = $584;
 }
 $591 = ((($144)) + 8564|0);
 $592 = $104;
 $593 = ((($592)) + 1345|0);
 $594 = (__ZNK7lazperf3las7point141zEv($593)|0);
 HEAP32[$129>>2] = $594;
 __ZN7lazperf5utils6Summer3addIiEEvRKT_($591,$129);
 $595 = ((($144)) + 8380|0);
 $596 = (__ZNK7lazperf8decoders10arithmeticINS_12MemoryStreamEE5validEv($595)|0);
 if ($596) {
  $597 = HEAP32[$114>>2]|0;
  $598 = ($597|0)==(1);
  if ($598) {
   $599 = HEAP32[$114>>2]|0;
   $600 = HEAP32[$113>>2]|0;
   $601 = ($599>>>0)>=($600>>>0);
   $603 = $601;
  } else {
   $603 = 0;
  }
  $602 = $603&1;
  $604 = $104;
  $605 = ((($604)) + 1345|0);
  $606 = (__ZNK7lazperf3las7point1414classificationEv($605)|0);
  $607 = $606&255;
  $608 = $607 & 31;
  $609 = $608 << 1;
  $610 = $602 | $609;
  $130 = $610;
  $611 = $104;
  $612 = ((($611)) + 1345|0);
  $613 = ((($144)) + 8380|0);
  $614 = $104;
  $615 = ((($614)) + 128|0);
  $616 = $130;
  $5 = $615;
  $6 = $616;
  $617 = $5;
  $618 = HEAP32[$617>>2]|0;
  $619 = $6;
  $620 = (($618) + (($619*44)|0)|0);
  $621 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($613,$620)|0);
  $622 = $621&255;
  __ZN7lazperf3las7point1417setClassificationEh($612,$622);
 }
 $623 = ((($144)) + 8572|0);
 $624 = $104;
 $625 = ((($624)) + 1345|0);
 $626 = (__ZNK7lazperf3las7point1414classificationEv($625)|0);
 HEAP8[$131>>0] = $626;
 __ZN7lazperf5utils6Summer3addIhEEvRKT_($623,$131);
 $627 = ((($144)) + 8400|0);
 $628 = (__ZNK7lazperf8decoders10arithmeticINS_12MemoryStreamEE5validEv($627)|0);
 if ($628) {
  $629 = ((($144)) + 8400|0);
  $630 = $104;
  $631 = ((($630)) + 140|0);
  $632 = $104;
  $633 = ((($632)) + 1345|0);
  $634 = (__ZZN7lazperf6detail19Point14Decompressor10decompressEPcRiENK3__1clERKNS_3las7point14E($132,$633)|0);
  $3 = $631;
  $4 = $634;
  $635 = $3;
  $636 = HEAP32[$635>>2]|0;
  $637 = $4;
  $638 = (($636) + (($637*44)|0)|0);
  $639 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($629,$638)|0);
  HEAP32[$133>>2] = $639;
  $640 = $104;
  $641 = ((($640)) + 1345|0);
  $642 = HEAP32[$133>>2]|0;
  $643 = $642 >>> 5;
  $644 = $643 & 1;
  __ZN7lazperf3las7point1410setEofFlagEi($641,$644);
  $645 = $104;
  $646 = ((($645)) + 1345|0);
  $647 = HEAP32[$133>>2]|0;
  $648 = $647 >>> 4;
  $649 = $648 & 1;
  __ZN7lazperf3las7point1414setScanDirFlagEi($646,$649);
  $650 = $104;
  $651 = ((($650)) + 1345|0);
  $652 = HEAP32[$133>>2]|0;
  $653 = $652 & 15;
  __ZN7lazperf3las7point1413setClassFlagsEi($651,$653);
  $654 = ((($144)) + 8580|0);
  __ZN7lazperf5utils6Summer3addIjEEvRKT_($654,$133);
 } else {
  $655 = ((($144)) + 8580|0);
  $656 = $104;
  $657 = ((($656)) + 1345|0);
  $658 = (__ZZN7lazperf6detail19Point14Decompressor10decompressEPcRiENK3__1clERKNS_3las7point14E($132,$657)|0);
  HEAP32[$134>>2] = $658;
  __ZN7lazperf5utils6Summer3addIjEEvRKT_($655,$134);
 }
 $659 = ((($144)) + 8420|0);
 $660 = (__ZNK7lazperf8decoders10arithmeticINS_12MemoryStreamEE5validEv($659)|0);
 if ($660) {
  $661 = $94;
  $662 = $661&1;
  $663 = $662&1;
  $664 = HEAP32[$114>>2]|0;
  $665 = HEAP32[$113>>2]|0;
  $666 = ($664>>>0)>=($665>>>0);
  $667 = $666&1;
  $668 = $667 << 1;
  $669 = $663 | $668;
  $670 = HEAP32[$114>>2]|0;
  $671 = ($670|0)==(1);
  $672 = $671&1;
  $673 = $672 << 2;
  $674 = $669 | $673;
  $135 = $674;
  $675 = $104;
  $676 = ((($675)) + 1024|0);
  $677 = ((($144)) + 8420|0);
  $678 = $104;
  $679 = ((($678)) + 1376|0);
  $680 = $135;
  $7 = $679;
  $8 = $680;
  $681 = $7;
  $682 = $8;
  $683 = (($681) + ($682<<1)|0);
  $684 = HEAP16[$683>>1]|0;
  $685 = $684&65535;
  $686 = $135;
  $687 = $686 >> 1;
  $688 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($676,$677,$685,$687)|0);
  $689 = $688&65535;
  $136 = $689;
  $690 = $136;
  $691 = $104;
  $692 = ((($691)) + 1376|0);
  $693 = $135;
  $11 = $692;
  $12 = $693;
  $694 = $11;
  $695 = $12;
  $696 = (($694) + ($695<<1)|0);
  HEAP16[$696>>1] = $690;
  $697 = $104;
  $698 = ((($697)) + 1345|0);
  $699 = $136;
  __ZN7lazperf3las7point1412setIntensityEt($698,$699);
 }
 $700 = ((($144)) + 8588|0);
 $701 = $104;
 $702 = ((($701)) + 1345|0);
 $703 = (__ZNK7lazperf3las7point149intensityEv($702)|0);
 HEAP16[$137>>1] = $703;
 __ZN7lazperf5utils6Summer3addItEEvRKT_($700,$137);
 $704 = $95;
 $705 = $704&1;
 if ($705) {
  $706 = $104;
  $707 = ((($706)) + 1345|0);
  $708 = $104;
  $709 = ((($708)) + 1104|0);
  $710 = ((($144)) + 8440|0);
  $711 = $104;
  $712 = ((($711)) + 1345|0);
  $713 = (__ZNK7lazperf3las7point149scanAngleEv($712)|0);
  $714 = $713 << 16 >> 16;
  $715 = $94;
  $716 = $715&1;
  $717 = $716&1;
  $718 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($709,$710,$714,$717)|0);
  $719 = $718&65535;
  __ZN7lazperf3las7point1412setScanAngleEs($707,$719);
 }
 $720 = ((($144)) + 8596|0);
 $721 = $104;
 $722 = ((($721)) + 1345|0);
 $723 = (__ZNK7lazperf3las7point149scanAngleEv($722)|0);
 HEAP16[$138>>1] = $723;
 __ZN7lazperf5utils6Summer3addIsEEvRKT_($720,$138);
 $724 = ((($144)) + 8460|0);
 $725 = (__ZNK7lazperf8decoders10arithmeticINS_12MemoryStreamEE5validEv($724)|0);
 if ($725) {
  $726 = $104;
  $727 = ((($726)) + 1345|0);
  $728 = (__ZNK7lazperf3las7point148userDataEv($727)|0);
  $729 = $728&255;
  $730 = (($729|0) / 4)&-1;
  $139 = $730;
  $731 = $104;
  $732 = ((($731)) + 1345|0);
  $733 = ((($144)) + 8460|0);
  $734 = $104;
  $735 = ((($734)) + 152|0);
  $736 = $139;
  $47 = $735;
  $48 = $736;
  $737 = $47;
  $738 = HEAP32[$737>>2]|0;
  $739 = $48;
  $740 = (($738) + (($739*44)|0)|0);
  $741 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($733,$740)|0);
  $742 = $741&255;
  __ZN7lazperf3las7point1411setUserDataEh($732,$742);
 }
 $743 = ((($144)) + 8604|0);
 $744 = $104;
 $745 = ((($744)) + 1345|0);
 $746 = (__ZNK7lazperf3las7point148userDataEv($745)|0);
 HEAP8[$140>>0] = $746;
 __ZN7lazperf5utils6Summer3addIhEEvRKT_($743,$140);
 $747 = $93;
 $748 = $747&1;
 if ($748) {
  $749 = $104;
  $750 = ((($749)) + 1345|0);
  $751 = $104;
  $752 = ((($751)) + 1184|0);
  $753 = ((($144)) + 8480|0);
  $754 = $104;
  $755 = ((($754)) + 1345|0);
  $756 = (__ZNK7lazperf3las7point1413pointSourceIDEv($755)|0);
  $757 = $756&65535;
  $758 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($752,$753,$757,0)|0);
  $759 = $758&65535;
  __ZN7lazperf3las7point1416setPointSourceIDEt($750,$759);
 }
 $760 = ((($144)) + 8612|0);
 $761 = $104;
 $762 = ((($761)) + 1345|0);
 $763 = (__ZNK7lazperf3las7point1413pointSourceIDEv($762)|0);
 HEAP16[$141>>1] = $763;
 __ZN7lazperf5utils6Summer3addItEEvRKT_($760,$141);
 $764 = $94;
 $765 = $764&1;
 if ($765) {
  $766 = $104;
  __ZN7lazperf6detail19Point14Decompressor13decodeGpsTimeERNS0_11Point14Base10ChannelCtxE($144,$766);
 }
 $767 = ((($144)) + 8620|0);
 $768 = $104;
 $769 = ((($768)) + 1345|0);
 $770 = (+__ZNK7lazperf3las7point147gpsTimeEv($769));
 HEAPF64[$142>>3] = $770;
 __ZN7lazperf5utils6Summer3addIdEEvRKT_($767,$142);
 $771 = $94;
 $772 = $771&1;
 $773 = $104;
 $774 = ((($773)) + 2072|0);
 $775 = $772&1;
 HEAP8[$774>>0] = $775;
 $776 = $77;
 $143 = $776;
 $777 = $104;
 $778 = ((($777)) + 1345|0);
 $779 = $143;
 dest=$779; src=$778; stop=dest+30|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $780 = $77;
 $781 = ((($780)) + 30|0);
 $75 = $781;
 $782 = $75;
 STACKTOP = sp;return ($782|0);
}
function __ZN7lazperf5utils6Summer3addIiEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,4)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1417setScannerChannelEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = $5 << 4;
 $7 = ((($4)) + 15|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 $10 = $9 & -49;
 $11 = $6 | $10;
 $12 = $11&255;
 $13 = ((($4)) + 15|0);
 HEAP8[$13>>0] = $12;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1413setNumReturnsEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = $5 << 4;
 $7 = ((($4)) + 14|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 $10 = $9 & 15;
 $11 = $6 | $10;
 $12 = $11&255;
 $13 = ((($4)) + 14|0);
 HEAP8[$13>>0] = $12;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1412setReturnNumEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 14|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = $8 & 240;
 $10 = $5 | $9;
 $11 = $10&255;
 $12 = ((($4)) + 14|0);
 HEAP8[$12>>0] = $11;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6Summer3addIjEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,4)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $11 = $6;
 $12 = $8;
 $13 = $7;
 $14 = ((($11)) + 36|0);
 $15 = $9;
 $4 = $14;
 $5 = $15;
 $16 = $4;
 $17 = HEAP32[$16>>2]|0;
 $18 = $5;
 $19 = (($17) + (($18*44)|0)|0);
 $20 = (__ZN7lazperf13decompressors7integer13readCorrectorINS_8decoders10arithmeticINS_12MemoryStreamEEENS_6models10arithmeticEEEiRT_RT0_($11,$13,$19)|0);
 $21 = (($12) + ($20))|0;
 $10 = $21;
 $22 = $10;
 $23 = ($22|0)<(0);
 if ($23) {
  $24 = ((($11)) + 24|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $10;
  $27 = (($26) + ($25))|0;
  $10 = $27;
  $36 = $10;
  STACKTOP = sp;return ($36|0);
 }
 $28 = $10;
 $29 = ((($11)) + 24|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($28>>>0)>=($30>>>0);
 if (!($31)) {
  $36 = $10;
  STACKTOP = sp;return ($36|0);
 }
 $32 = ((($11)) + 24|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = $10;
 $35 = (($34) - ($33))|0;
 $10 = $35;
 $36 = $10;
 STACKTOP = sp;return ($36|0);
}
function __ZNK7lazperf8decoders10arithmeticINS_12MemoryStreamEE5validEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&1;
 STACKTOP = sp;return ($5|0);
}
function __ZN7lazperf5utils6Summer3addIhEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,1)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZZN7lazperf6detail19Point14Decompressor10decompressEPcRiENK3__1clERKNS_3las7point14E($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3;
 $6 = (__ZNK7lazperf3las7point1410classFlagsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK7lazperf3las7point1411scanDirFlagEv($7)|0);
 $9 = $8 << 4;
 $10 = $6 | $9;
 $11 = $3;
 $12 = (__ZNK7lazperf3las7point147eofFlagEv($11)|0);
 $13 = $12 << 5;
 $14 = $10 | $13;
 $4 = $14;
 $15 = $4;
 STACKTOP = sp;return ($15|0);
}
function __ZN7lazperf3las7point1410setEofFlagEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = $5 << 7;
 $7 = ((($4)) + 15|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 $10 = $9 & 127;
 $11 = $6 | $10;
 $12 = $11&255;
 $13 = ((($4)) + 15|0);
 HEAP8[$13>>0] = $12;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1414setScanDirFlagEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = $5 << 6;
 $7 = ((($4)) + 15|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8&255;
 $10 = $9 & 191;
 $11 = $6 | $10;
 $12 = $11&255;
 $13 = ((($4)) + 15|0);
 HEAP8[$13>>0] = $12;
 STACKTOP = sp;return;
}
function __ZN7lazperf3las7point1413setClassFlagsEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($4)) + 15|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = $8 & 240;
 $10 = $5 | $9;
 $11 = $10&255;
 $12 = ((($4)) + 15|0);
 HEAP8[$12>>0] = $11;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6Summer3addItEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,2)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils6Summer3addIsEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,2)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail19Point14Decompressor13decodeGpsTimeERNS0_11Point14Base10ChannelCtxE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0.0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0.0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0.0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0;
 var $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0.0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0.0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0.0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0.0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(368|0);
 $78 = sp + 24|0;
 $85 = sp + 8|0;
 $86 = sp;
 $74 = $0;
 $75 = $1;
 $88 = $74;
 while(1) {
  $89 = $75;
  $90 = ((($89)) + 2040|0);
  $91 = $75;
  $92 = ((($91)) + 2000|0);
  $93 = HEAP32[$92>>2]|0;
  $72 = $90;
  $73 = $93;
  $94 = $72;
  $95 = $73;
  $96 = (($94) + ($95<<2)|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ($97|0)==(0);
  $99 = ((($88)) + 8500|0);
  $100 = $75;
  if ($98) {
   $101 = ((($100)) + 208|0);
   $102 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($99,$101)|0);
   $76 = $102;
   $103 = $76;
   $104 = ($103|0)==(0);
   if ($104) {
    label = 4;
    break;
   }
   $161 = $76;
   $162 = ($161|0)==(1);
   $163 = $75;
   if ($162) {
    label = 6;
    break;
   }
   $219 = ((($163)) + 2000|0);
   $220 = HEAP32[$219>>2]|0;
   $221 = $76;
   $222 = (($220) + ($221))|0;
   $223 = (($222) - 1)|0;
   $224 = $223 & 3;
   $225 = $75;
   $226 = ((($225)) + 2000|0);
   HEAP32[$226>>2] = $224;
   continue;
  }
  $227 = ((($100)) + 164|0);
  $228 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($99,$227)|0);
  $81 = $228;
  $229 = $81;
  $230 = ($229|0)==(1);
  if ($230) {
   label = 9;
   break;
  }
  $277 = $81;
  $278 = ($277|0)<(511);
  $279 = $81;
  if ($278) {
   label = 11;
   break;
  }
  $496 = ($279|0)==(511);
  if ($496) {
   label = 28;
   break;
  }
  $563 = $81;
  $564 = ($563|0)>=(511);
  if (!($564)) {
   label = 31;
   break;
  }
  $565 = $75;
  $566 = ((($565)) + 2000|0);
  $567 = HEAP32[$566>>2]|0;
  $568 = $81;
  $569 = (($567) + ($568))|0;
  $570 = (($569) - 511)|0;
  $571 = $570 & 3;
  $572 = $75;
  $573 = ((($572)) + 2000|0);
  HEAP32[$573>>2] = $571;
 }
 if ((label|0) == 4) {
  $105 = $75;
  $106 = ((($105)) + 1264|0);
  $107 = ((($88)) + 8500|0);
  $108 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($106,$107,0,0)|0);
  $77 = $108;
  $109 = $77;
  $110 = $75;
  $111 = ((($110)) + 2040|0);
  $112 = $75;
  $113 = ((($112)) + 2000|0);
  $114 = HEAP32[$113>>2]|0;
  $70 = $111;
  $71 = $114;
  $115 = $70;
  $116 = $71;
  $117 = (($115) + ($116<<2)|0);
  HEAP32[$117>>2] = $109;
  $118 = $75;
  $119 = ((($118)) + 2008|0);
  $120 = $75;
  $121 = ((($120)) + 2000|0);
  $122 = HEAP32[$121>>2]|0;
  $60 = $119;
  $61 = $122;
  $123 = $60;
  $124 = $61;
  $125 = (($123) + ($124<<3)|0);
  $126 = +HEAPF64[$125>>3];
  $127 = (__ZN7lazperf5utils3d2iEd($126)|0);
  $128 = (getTempRet0() | 0);
  $129 = $77;
  $130 = ($129|0)<(0);
  $131 = $130 << 31 >> 31;
  $132 = (_i64Add(($127|0),($128|0),($129|0),($131|0))|0);
  $133 = (getTempRet0() | 0);
  $134 = $78;
  $135 = $134;
  HEAP32[$135>>2] = $132;
  $136 = (($134) + 4)|0;
  $137 = $136;
  HEAP32[$137>>2] = $133;
  $138 = $78;
  $139 = $138;
  $140 = HEAP32[$139>>2]|0;
  $141 = (($138) + 4)|0;
  $142 = $141;
  $143 = HEAP32[$142>>2]|0;
  $144 = (+__ZN7lazperf5utils3i2dEx($140,$143));
  $145 = $75;
  $146 = ((($145)) + 2008|0);
  $147 = $75;
  $148 = ((($147)) + 2000|0);
  $149 = HEAP32[$148>>2]|0;
  $58 = $146;
  $59 = $149;
  $150 = $58;
  $151 = $59;
  $152 = (($150) + ($151<<3)|0);
  HEAPF64[$152>>3] = $144;
  $153 = $75;
  $154 = ((($153)) + 2056|0);
  $155 = $75;
  $156 = ((($155)) + 2000|0);
  $157 = HEAP32[$156>>2]|0;
  $56 = $154;
  $57 = $157;
  $158 = $56;
  $159 = $57;
  $160 = (($158) + ($159<<2)|0);
  HEAP32[$160>>2] = 0;
  $574 = $75;
  $575 = ((($574)) + 1345|0);
  $576 = $75;
  $577 = ((($576)) + 2008|0);
  $578 = $75;
  $579 = ((($578)) + 2000|0);
  $580 = HEAP32[$579>>2]|0;
  $68 = $577;
  $69 = $580;
  $581 = $68;
  $582 = $69;
  $583 = (($581) + ($582<<3)|0);
  $584 = +HEAPF64[$583>>3];
  __ZN7lazperf3las7point1410setGpsTimeEd($575,$584);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 6) {
  $164 = ((($163)) + 2004|0);
  $165 = HEAP32[$164>>2]|0;
  $166 = (($165) + 1)|0;
  $167 = $166 & 3;
  $168 = $75;
  $169 = ((($168)) + 2004|0);
  HEAP32[$169>>2] = $167;
  $170 = $75;
  $171 = ((($170)) + 2008|0);
  $172 = $75;
  $173 = ((($172)) + 2000|0);
  $174 = HEAP32[$173>>2]|0;
  $54 = $171;
  $55 = $174;
  $175 = $54;
  $176 = $55;
  $177 = (($175) + ($176<<3)|0);
  $178 = +HEAPF64[$177>>3];
  $79 = $178;
  $179 = $75;
  $180 = ((($179)) + 1264|0);
  $181 = ((($88)) + 8500|0);
  $182 = $79;
  (__ZN7lazperf5utils3d2uEd($182)|0);
  $183 = (getTempRet0() | 0);
  $184 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($180,$181,$183,8)|0);
  $80 = $184;
  $185 = $80;
  $186 = ($185|0)<(0);
  $186 << 31 >> 31;
  $187 = ((($88)) + 8500|0);
  $188 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE7readIntEv($187)|0);
  $189 = (+__ZN7lazperf5utils3u2dEy($188,$185));
  $190 = $75;
  $191 = ((($190)) + 2008|0);
  $192 = $75;
  $193 = ((($192)) + 2004|0);
  $194 = HEAP32[$193>>2]|0;
  $48 = $191;
  $49 = $194;
  $195 = $48;
  $196 = $49;
  $197 = (($195) + ($196<<3)|0);
  HEAPF64[$197>>3] = $189;
  $198 = $75;
  $199 = ((($198)) + 2004|0);
  $200 = HEAP32[$199>>2]|0;
  $201 = $75;
  $202 = ((($201)) + 2000|0);
  HEAP32[$202>>2] = $200;
  $203 = $75;
  $204 = ((($203)) + 2040|0);
  $205 = $75;
  $206 = ((($205)) + 2000|0);
  $207 = HEAP32[$206>>2]|0;
  $46 = $204;
  $47 = $207;
  $208 = $46;
  $209 = $47;
  $210 = (($208) + ($209<<2)|0);
  HEAP32[$210>>2] = 0;
  $211 = $75;
  $212 = ((($211)) + 2056|0);
  $213 = $75;
  $214 = ((($213)) + 2000|0);
  $215 = HEAP32[$214>>2]|0;
  $34 = $212;
  $35 = $215;
  $216 = $34;
  $217 = $35;
  $218 = (($216) + ($217<<2)|0);
  HEAP32[$218>>2] = 0;
  $574 = $75;
  $575 = ((($574)) + 1345|0);
  $576 = $75;
  $577 = ((($576)) + 2008|0);
  $578 = $75;
  $579 = ((($578)) + 2000|0);
  $580 = HEAP32[$579>>2]|0;
  $68 = $577;
  $69 = $580;
  $581 = $68;
  $582 = $69;
  $583 = (($581) + ($582<<3)|0);
  $584 = +HEAPF64[$583>>3];
  __ZN7lazperf3las7point1410setGpsTimeEd($575,$584);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 9) {
  $231 = $75;
  $232 = ((($231)) + 1264|0);
  $233 = ((($88)) + 8500|0);
  $234 = $75;
  $235 = ((($234)) + 2040|0);
  $236 = $75;
  $237 = ((($236)) + 2000|0);
  $238 = HEAP32[$237>>2]|0;
  $30 = $235;
  $31 = $238;
  $239 = $30;
  $240 = $31;
  $241 = (($239) + ($240<<2)|0);
  $242 = HEAP32[$241>>2]|0;
  $243 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($232,$233,$242,1)|0);
  $83 = $243;
  $244 = $83;
  $245 = ($244|0)<(0);
  $246 = $245 << 31 >> 31;
  $247 = $75;
  $248 = ((($247)) + 2008|0);
  $249 = $75;
  $250 = ((($249)) + 2000|0);
  $251 = HEAP32[$250>>2]|0;
  $18 = $248;
  $19 = $251;
  $252 = $18;
  $253 = $19;
  $254 = (($252) + ($253<<3)|0);
  $255 = +HEAPF64[$254>>3];
  $256 = (__ZN7lazperf5utils3d2uEd($255)|0);
  $257 = (getTempRet0() | 0);
  $258 = (_i64Add(($244|0),($246|0),($256|0),($257|0))|0);
  $259 = (getTempRet0() | 0);
  $260 = (+__ZN7lazperf5utils3i2dEx($258,$259));
  $261 = $75;
  $262 = ((($261)) + 2008|0);
  $263 = $75;
  $264 = ((($263)) + 2000|0);
  $265 = HEAP32[$264>>2]|0;
  $14 = $262;
  $15 = $265;
  $266 = $14;
  $267 = $15;
  $268 = (($266) + ($267<<3)|0);
  HEAPF64[$268>>3] = $260;
  $269 = $75;
  $270 = ((($269)) + 2056|0);
  $271 = $75;
  $272 = ((($271)) + 2000|0);
  $273 = HEAP32[$272>>2]|0;
  $2 = $270;
  $3 = $273;
  $274 = $2;
  $275 = $3;
  $276 = (($274) + ($275<<2)|0);
  HEAP32[$276>>2] = 0;
  $574 = $75;
  $575 = ((($574)) + 1345|0);
  $576 = $75;
  $577 = ((($576)) + 2008|0);
  $578 = $75;
  $579 = ((($578)) + 2000|0);
  $580 = HEAP32[$579>>2]|0;
  $68 = $577;
  $69 = $580;
  $581 = $68;
  $582 = $69;
  $583 = (($581) + ($582<<3)|0);
  $584 = +HEAPF64[$583>>3];
  __ZN7lazperf3las7point1410setGpsTimeEd($575,$584);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 11) {
  $280 = ($279|0)==(0);
  do {
   if ($280) {
    $281 = $75;
    $282 = ((($281)) + 1264|0);
    $283 = ((($88)) + 8500|0);
    $284 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($282,$283,0,7)|0);
    $82 = $284;
    $285 = $75;
    $286 = ((($285)) + 2056|0);
    $287 = $75;
    $288 = ((($287)) + 2000|0);
    $289 = HEAP32[$288>>2]|0;
    $4 = $286;
    $5 = $289;
    $290 = $4;
    $291 = $5;
    $292 = (($290) + ($291<<2)|0);
    $293 = HEAP32[$292>>2]|0;
    $294 = (($293) + 1)|0;
    HEAP32[$292>>2] = $294;
    $295 = $75;
    $296 = ((($295)) + 2056|0);
    $297 = $75;
    $298 = ((($297)) + 2000|0);
    $299 = HEAP32[$298>>2]|0;
    $6 = $296;
    $7 = $299;
    $300 = $6;
    $301 = $7;
    $302 = (($300) + ($301<<2)|0);
    $303 = HEAP32[$302>>2]|0;
    $304 = ($303|0)>(3);
    if ($304) {
     $305 = $75;
     $306 = ((($305)) + 2056|0);
     $307 = $75;
     $308 = ((($307)) + 2000|0);
     $309 = HEAP32[$308>>2]|0;
     $8 = $306;
     $9 = $309;
     $310 = $8;
     $311 = $9;
     $312 = (($310) + ($311<<2)|0);
     HEAP32[$312>>2] = 0;
     $313 = $82;
     $314 = $75;
     $315 = ((($314)) + 2040|0);
     $316 = $75;
     $317 = ((($316)) + 2000|0);
     $318 = HEAP32[$317>>2]|0;
     $10 = $315;
     $11 = $318;
     $319 = $10;
     $320 = $11;
     $321 = (($319) + ($320<<2)|0);
     HEAP32[$321>>2] = $313;
    }
   } else {
    $322 = $81;
    $323 = ($322|0)<(500);
    $324 = $81;
    if ($323) {
     $325 = ($324|0)<(10);
     if ($325) {
      $84 = 2;
     } else {
      $84 = 3;
     }
     $326 = $75;
     $327 = ((($326)) + 1264|0);
     $328 = ((($88)) + 8500|0);
     $329 = $81;
     $330 = $75;
     $331 = ((($330)) + 2040|0);
     $332 = $75;
     $333 = ((($332)) + 2000|0);
     $334 = HEAP32[$333>>2]|0;
     $12 = $331;
     $13 = $334;
     $335 = $12;
     $336 = $13;
     $337 = (($335) + ($336<<2)|0);
     $338 = HEAP32[$337>>2]|0;
     $339 = Math_imul($329, $338)|0;
     $340 = $84;
     $341 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($327,$328,$339,$340)|0);
     $82 = $341;
     break;
    }
    $342 = ($324|0)==(500);
    if ($342) {
     $343 = $75;
     $344 = ((($343)) + 1264|0);
     $345 = ((($88)) + 8500|0);
     $346 = $75;
     $347 = ((($346)) + 2040|0);
     $348 = $75;
     $349 = ((($348)) + 2000|0);
     $350 = HEAP32[$349>>2]|0;
     $16 = $347;
     $17 = $350;
     $351 = $16;
     $352 = $17;
     $353 = (($351) + ($352<<2)|0);
     $354 = HEAP32[$353>>2]|0;
     $355 = ($354*500)|0;
     $356 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($344,$345,$355,4)|0);
     $82 = $356;
     $357 = $75;
     $358 = ((($357)) + 2056|0);
     $359 = $75;
     $360 = ((($359)) + 2000|0);
     $361 = HEAP32[$360>>2]|0;
     $20 = $358;
     $21 = $361;
     $362 = $20;
     $363 = $21;
     $364 = (($362) + ($363<<2)|0);
     $365 = HEAP32[$364>>2]|0;
     $366 = (($365) + 1)|0;
     HEAP32[$364>>2] = $366;
     $367 = $75;
     $368 = ((($367)) + 2056|0);
     $369 = $75;
     $370 = ((($369)) + 2000|0);
     $371 = HEAP32[$370>>2]|0;
     $22 = $368;
     $23 = $371;
     $372 = $22;
     $373 = $23;
     $374 = (($372) + ($373<<2)|0);
     $375 = HEAP32[$374>>2]|0;
     $376 = ($375|0)>(3);
     if (!($376)) {
      break;
     }
     $377 = $75;
     $378 = ((($377)) + 2056|0);
     $379 = $75;
     $380 = ((($379)) + 2000|0);
     $381 = HEAP32[$380>>2]|0;
     $24 = $378;
     $25 = $381;
     $382 = $24;
     $383 = $25;
     $384 = (($382) + ($383<<2)|0);
     HEAP32[$384>>2] = 0;
     $385 = $82;
     $386 = $75;
     $387 = ((($386)) + 2040|0);
     $388 = $75;
     $389 = ((($388)) + 2000|0);
     $390 = HEAP32[$389>>2]|0;
     $26 = $387;
     $27 = $390;
     $391 = $26;
     $392 = $27;
     $393 = (($391) + ($392<<2)|0);
     HEAP32[$393>>2] = $385;
     break;
    }
    $394 = $81;
    $395 = (500 - ($394))|0;
    $81 = $395;
    $396 = $81;
    $397 = ($396|0)>(-10);
    $398 = $75;
    $399 = ((($398)) + 1264|0);
    $400 = ((($88)) + 8500|0);
    if ($397) {
     $401 = $81;
     $402 = $75;
     $403 = ((($402)) + 2040|0);
     $404 = $75;
     $405 = ((($404)) + 2000|0);
     $406 = HEAP32[$405>>2]|0;
     $28 = $403;
     $29 = $406;
     $407 = $28;
     $408 = $29;
     $409 = (($407) + ($408<<2)|0);
     $410 = HEAP32[$409>>2]|0;
     $411 = Math_imul($401, $410)|0;
     $412 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($399,$400,$411,5)|0);
     $82 = $412;
     break;
    }
    $413 = $75;
    $414 = ((($413)) + 2040|0);
    $415 = $75;
    $416 = ((($415)) + 2000|0);
    $417 = HEAP32[$416>>2]|0;
    $32 = $414;
    $33 = $417;
    $418 = $32;
    $419 = $33;
    $420 = (($418) + ($419<<2)|0);
    $421 = HEAP32[$420>>2]|0;
    $422 = Math_imul(-10, $421)|0;
    $423 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($399,$400,$422,6)|0);
    $82 = $423;
    $424 = $75;
    $425 = ((($424)) + 2056|0);
    $426 = $75;
    $427 = ((($426)) + 2000|0);
    $428 = HEAP32[$427>>2]|0;
    $36 = $425;
    $37 = $428;
    $429 = $36;
    $430 = $37;
    $431 = (($429) + ($430<<2)|0);
    $432 = HEAP32[$431>>2]|0;
    $433 = (($432) + 1)|0;
    HEAP32[$431>>2] = $433;
    $434 = $75;
    $435 = ((($434)) + 2056|0);
    $436 = $75;
    $437 = ((($436)) + 2000|0);
    $438 = HEAP32[$437>>2]|0;
    $38 = $435;
    $39 = $438;
    $439 = $38;
    $440 = $39;
    $441 = (($439) + ($440<<2)|0);
    $442 = HEAP32[$441>>2]|0;
    $443 = ($442|0)>(3);
    if ($443) {
     $444 = $75;
     $445 = ((($444)) + 2056|0);
     $446 = $75;
     $447 = ((($446)) + 2000|0);
     $448 = HEAP32[$447>>2]|0;
     $40 = $445;
     $41 = $448;
     $449 = $40;
     $450 = $41;
     $451 = (($449) + ($450<<2)|0);
     HEAP32[$451>>2] = 0;
     $452 = $82;
     $453 = $75;
     $454 = ((($453)) + 2040|0);
     $455 = $75;
     $456 = ((($455)) + 2000|0);
     $457 = HEAP32[$456>>2]|0;
     $42 = $454;
     $43 = $457;
     $458 = $42;
     $459 = $43;
     $460 = (($458) + ($459<<2)|0);
     HEAP32[$460>>2] = $452;
    }
   }
  } while(0);
  $461 = $75;
  $462 = ((($461)) + 2008|0);
  $463 = $75;
  $464 = ((($463)) + 2000|0);
  $465 = HEAP32[$464>>2]|0;
  $44 = $462;
  $45 = $465;
  $466 = $44;
  $467 = $45;
  $468 = (($466) + ($467<<3)|0);
  $469 = +HEAPF64[$468>>3];
  $470 = (__ZN7lazperf5utils3d2iEd($469)|0);
  $471 = (getTempRet0() | 0);
  $472 = $85;
  $473 = $472;
  HEAP32[$473>>2] = $470;
  $474 = (($472) + 4)|0;
  $475 = $474;
  HEAP32[$475>>2] = $471;
  $476 = $85;
  $477 = $476;
  $478 = HEAP32[$477>>2]|0;
  $479 = (($476) + 4)|0;
  $480 = $479;
  $481 = HEAP32[$480>>2]|0;
  $482 = $82;
  $483 = ($482|0)<(0);
  $484 = $483 << 31 >> 31;
  $485 = (_i64Add(($478|0),($481|0),($482|0),($484|0))|0);
  $486 = (getTempRet0() | 0);
  $487 = (+__ZN7lazperf5utils3i2dEx($485,$486));
  $488 = $75;
  $489 = ((($488)) + 2008|0);
  $490 = $75;
  $491 = ((($490)) + 2000|0);
  $492 = HEAP32[$491>>2]|0;
  $50 = $489;
  $51 = $492;
  $493 = $50;
  $494 = $51;
  $495 = (($493) + ($494<<3)|0);
  HEAPF64[$495>>3] = $487;
  $574 = $75;
  $575 = ((($574)) + 1345|0);
  $576 = $75;
  $577 = ((($576)) + 2008|0);
  $578 = $75;
  $579 = ((($578)) + 2000|0);
  $580 = HEAP32[$579>>2]|0;
  $68 = $577;
  $69 = $580;
  $581 = $68;
  $582 = $69;
  $583 = (($581) + ($582<<3)|0);
  $584 = +HEAPF64[$583>>3];
  __ZN7lazperf3las7point1410setGpsTimeEd($575,$584);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 28) {
  $497 = $75;
  $498 = ((($497)) + 2004|0);
  $499 = HEAP32[$498>>2]|0;
  $500 = (($499) + 1)|0;
  $501 = $500 & 3;
  $502 = $75;
  $503 = ((($502)) + 2004|0);
  HEAP32[$503>>2] = $501;
  $504 = $75;
  $505 = ((($504)) + 2008|0);
  $506 = $75;
  $507 = ((($506)) + 2000|0);
  $508 = HEAP32[$507>>2]|0;
  $52 = $505;
  $53 = $508;
  $509 = $52;
  $510 = $53;
  $511 = (($509) + ($510<<3)|0);
  $512 = +HEAPF64[$511>>3];
  $513 = (__ZN7lazperf5utils3d2uEd($512)|0);
  $514 = (getTempRet0() | 0);
  $515 = $86;
  $516 = $515;
  HEAP32[$516>>2] = $513;
  $517 = (($515) + 4)|0;
  $518 = $517;
  HEAP32[$518>>2] = $514;
  $519 = $75;
  $520 = ((($519)) + 1264|0);
  $521 = ((($88)) + 8500|0);
  $522 = $86;
  $523 = $522;
  $524 = HEAP32[$523>>2]|0;
  $525 = (($522) + 4)|0;
  $526 = $525;
  $527 = HEAP32[$526>>2]|0;
  $528 = (__ZN7lazperf13decompressors7integer10decompressINS_8decoders10arithmeticINS_12MemoryStreamEEEEEiRT_ij($520,$521,$527,8)|0);
  $87 = $528;
  $529 = $87;
  $530 = ($529|0)<(0);
  $530 << 31 >> 31;
  $531 = ((($88)) + 8500|0);
  $532 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE7readIntEv($531)|0);
  $533 = (+__ZN7lazperf5utils3u2dEy($532,$529));
  $534 = $75;
  $535 = ((($534)) + 2008|0);
  $536 = $75;
  $537 = ((($536)) + 2004|0);
  $538 = HEAP32[$537>>2]|0;
  $62 = $535;
  $63 = $538;
  $539 = $62;
  $540 = $63;
  $541 = (($539) + ($540<<3)|0);
  HEAPF64[$541>>3] = $533;
  $542 = $75;
  $543 = ((($542)) + 2004|0);
  $544 = HEAP32[$543>>2]|0;
  $545 = $75;
  $546 = ((($545)) + 2000|0);
  HEAP32[$546>>2] = $544;
  $547 = $75;
  $548 = ((($547)) + 2040|0);
  $549 = $75;
  $550 = ((($549)) + 2000|0);
  $551 = HEAP32[$550>>2]|0;
  $64 = $548;
  $65 = $551;
  $552 = $64;
  $553 = $65;
  $554 = (($552) + ($553<<2)|0);
  HEAP32[$554>>2] = 0;
  $555 = $75;
  $556 = ((($555)) + 2056|0);
  $557 = $75;
  $558 = ((($557)) + 2000|0);
  $559 = HEAP32[$558>>2]|0;
  $66 = $556;
  $67 = $559;
  $560 = $66;
  $561 = $67;
  $562 = (($560) + ($561<<2)|0);
  HEAP32[$562>>2] = 0;
  $574 = $75;
  $575 = ((($574)) + 1345|0);
  $576 = $75;
  $577 = ((($576)) + 2008|0);
  $578 = $75;
  $579 = ((($578)) + 2000|0);
  $580 = HEAP32[$579>>2]|0;
  $68 = $577;
  $69 = $580;
  $581 = $68;
  $582 = $69;
  $583 = (($581) + ($582<<3)|0);
  $584 = +HEAPF64[$583>>3];
  __ZN7lazperf3las7point1410setGpsTimeEd($575,$584);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 31) {
  $574 = $75;
  $575 = ((($574)) + 1345|0);
  $576 = $75;
  $577 = ((($576)) + 2008|0);
  $578 = $75;
  $579 = ((($578)) + 2000|0);
  $580 = HEAP32[$579>>2]|0;
  $68 = $577;
  $69 = $580;
  $581 = $68;
  $582 = $69;
  $583 = (($581) + ($582<<3)|0);
  $584 = +HEAPF64[$583>>3];
  __ZN7lazperf3las7point1410setGpsTimeEd($575,$584);
  STACKTOP = sp;return;
 }
}
function __ZN7lazperf5utils6Summer3addIdEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,8)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils3i2dEx($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp;
 $4 = $2;
 $5 = $4;
 HEAP32[$5>>2] = $0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $1;
 ;HEAP32[$3>>2]=HEAP32[$2>>2]|0;HEAP32[$3+4>>2]=HEAP32[$2+4>>2]|0;
 $8 = +HEAPF64[$3>>3];
 STACKTOP = sp;return (+$8);
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE7readIntEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE9readShortEv($4)|0);
 $6 = $5&65535;
 $2 = $6;
 $7 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE9readShortEv($4)|0);
 $8 = $7&65535;
 $3 = $8;
 $9 = $3;
 $10 = $9 << 16;
 $11 = $2;
 $12 = $10 | $11;
 STACKTOP = sp;return ($12|0);
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE9readShortEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($3)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 >>> 16;
 HEAP32[$5>>2] = $7;
 $8 = (($4>>>0) / ($7>>>0))&-1;
 $2 = $8;
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $2;
 $12 = Math_imul($10, $11)|0;
 $13 = HEAP32[$3>>2]|0;
 $14 = (($13) - ($12))|0;
 HEAP32[$3>>2] = $14;
 $15 = ((($3)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16>>>0)<(16777216);
 if ($17) {
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE19renorm_dec_intervalEv($3);
 }
 $18 = $2;
 $19 = ($18>>>0)<(65536);
 if ($19) {
  $20 = $2;
  $21 = $20&65535;
  STACKTOP = sp;return ($21|0);
 } else {
  ___assert_fail((21071|0),(21085|0),290,(21124|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN7lazperf13decompressors7integer13readCorrectorINS_8decoders10arithmeticINS_12MemoryStreamEEENS_6models10arithmeticEEEiRT_RT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($14,$15)|0);
 HEAP32[$13>>2] = $16;
 $17 = HEAP32[$13>>2]|0;
 $18 = ($17|0)!=(0);
 if (!($18)) {
  $69 = $8;
  $70 = ((($13)) + 48|0);
  $71 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE9decodeBitINS_6models14arithmetic_bitEEEjRT_($69,$70)|0);
  $10 = $71;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 }
 $19 = HEAP32[$13>>2]|0;
 $20 = ($19>>>0)<(32);
 if (!($20)) {
  $67 = ((($13)) + 28|0);
  $68 = HEAP32[$67>>2]|0;
  $10 = $68;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 }
 $21 = HEAP32[$13>>2]|0;
 $22 = ((($13)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($21>>>0)<=($23>>>0);
 if ($24) {
  $25 = $8;
  $26 = ((($13)) + 68|0);
  $27 = HEAP32[$13>>2]|0;
  $28 = (($27) - 1)|0;
  $5 = $26;
  $6 = $28;
  $29 = $5;
  $30 = HEAP32[$29>>2]|0;
  $31 = $6;
  $32 = (($30) + (($31*44)|0)|0);
  $33 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($25,$32)|0);
  $10 = $33;
 } else {
  $34 = HEAP32[$13>>2]|0;
  $35 = ((($13)) + 12|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = (($34) - ($36))|0;
  $11 = $37;
  $38 = $8;
  $39 = ((($13)) + 68|0);
  $40 = HEAP32[$13>>2]|0;
  $41 = (($40) - 1)|0;
  $3 = $39;
  $4 = $41;
  $42 = $3;
  $43 = HEAP32[$42>>2]|0;
  $44 = $4;
  $45 = (($43) + (($44*44)|0)|0);
  $46 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($38,$45)|0);
  $10 = $46;
  $47 = $8;
  $48 = $11;
  $49 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE8readBitsEj($47,$48)|0);
  $12 = $49;
  $50 = $10;
  $51 = $11;
  $52 = $50 << $51;
  $53 = $12;
  $54 = $52 | $53;
  $10 = $54;
 }
 $55 = $10;
 $56 = HEAP32[$13>>2]|0;
 $57 = (($56) - 1)|0;
 $58 = 1 << $57;
 $59 = ($55|0)>=($58|0);
 if ($59) {
  $60 = $10;
  $61 = (($60) + 1)|0;
  $10 = $61;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 } else {
  $62 = HEAP32[$13>>2]|0;
  $63 = 1 << $62;
  $64 = (($63) - 1)|0;
  $65 = $10;
  $66 = (($65) - ($64))|0;
  $10 = $66;
  $72 = $10;
  STACKTOP = sp;return ($72|0);
 }
 return (0)|0;
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE8readBitsEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $3;
 $9 = $4;
 $10 = ($9|0)!=(0);
 $11 = $4;
 $12 = ($11>>>0)<=(32);
 $or$cond = $10 & $12;
 if (!($or$cond)) {
  ___assert_fail((21134|0),(21085|0),252,(21155|0));
  // unreachable;
 }
 $13 = $4;
 $14 = ($13>>>0)>(19);
 if ($14) {
  $15 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE9readShortEv($8)|0);
  $16 = $15&65535;
  $5 = $16;
  $17 = $4;
  $18 = (($17) - 16)|0;
  $4 = $18;
  $19 = $4;
  $20 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE8readBitsEj($8,$19)|0);
  $21 = $20 << 16;
  $6 = $21;
  $22 = $6;
  $23 = $5;
  $24 = $22 | $23;
  $2 = $24;
  $41 = $2;
  STACKTOP = sp;return ($41|0);
 }
 $25 = HEAP32[$8>>2]|0;
 $26 = $4;
 $27 = ((($8)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = $28 >>> $26;
 HEAP32[$27>>2] = $29;
 $30 = (($25>>>0) / ($29>>>0))&-1;
 $7 = $30;
 $31 = ((($8)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $7;
 $34 = Math_imul($32, $33)|0;
 $35 = HEAP32[$8>>2]|0;
 $36 = (($35) - ($34))|0;
 HEAP32[$8>>2] = $36;
 $37 = ((($8)) + 4|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ($38>>>0)<(16777216);
 if ($39) {
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE19renorm_dec_intervalEv($8);
 }
 $40 = $7;
 $2 = $40;
 $41 = $2;
 STACKTOP = sp;return ($41|0);
}
function __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE9decodeBitINS_6models14arithmetic_bitEEEjRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($6)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 >>> 13;
 $13 = Math_imul($9, $12)|0;
 $4 = $13;
 $14 = HEAP32[$6>>2]|0;
 $15 = $4;
 $16 = ($14>>>0)>=($15>>>0);
 $17 = $16&1;
 $5 = $17;
 $18 = $5;
 $19 = ($18|0)==(0);
 $20 = $4;
 if ($19) {
  $21 = ((($6)) + 4|0);
  HEAP32[$21>>2] = $20;
  $22 = $3;
  $23 = ((($22)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($24) + 1)|0;
  HEAP32[$23>>2] = $25;
 } else {
  $26 = HEAP32[$6>>2]|0;
  $27 = (($26) - ($20))|0;
  HEAP32[$6>>2] = $27;
  $28 = $4;
  $29 = ((($6)) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = (($30) - ($28))|0;
  HEAP32[$29>>2] = $31;
 }
 $32 = ((($6)) + 4|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($33>>>0)<(16777216);
 if ($34) {
  __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE19renorm_dec_intervalEv($6);
 }
 $35 = $3;
 $36 = ((($35)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = (($37) + -1)|0;
 HEAP32[$36>>2] = $38;
 $39 = ($38|0)==(0);
 if (!($39)) {
  $41 = $5;
  STACKTOP = sp;return ($41|0);
 }
 $40 = $3;
 __ZN7lazperf6models14arithmetic_bit6updateEv($40);
 $41 = $5;
 STACKTOP = sp;return ($41|0);
}
function __ZN7lazperf6detail9Rgb10BaseC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 $3 = ((($2)) + 1|0);
 __ZN7lazperf3las3rgbC2Ev($3);
 $4 = ((($2)) + 8|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($4,128,0,0);
 $5 = ((($2)) + 52|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($5,256,0,0);
 $6 = ((($2)) + 96|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($6,256,0,0);
 $7 = ((($2)) + 140|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($7,256,0,0);
 $8 = ((($2)) + 184|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($8,256,0,0);
 $9 = ((($2)) + 228|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($9,256,0,0);
 $10 = ((($2)) + 272|0);
 __ZN7lazperf6models10arithmeticC2EjbPj($10,256,0,0);
 STACKTOP = sp;return;
}
function __ZN7lazperf5utils5clampIhiEET_T0_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = 0;
 $4 = -1;
 $5 = $2;
 $6 = ($5|0)<=(0);
 do {
  if ($6) {
   $1 = 0;
  } else {
   $7 = $2;
   $8 = ($7|0)>=(255);
   if ($8) {
    $1 = -1;
    break;
   } else {
    $9 = $2;
    $10 = $9&255;
    $1 = $10;
    break;
   }
  }
 } while(0);
 $11 = $1;
 STACKTOP = sp;return ($11|0);
}
function __ZN7lazperf3las3rgb6unpackEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN7lazperf5utils6unpackItEET_PKc($5)|0);
 HEAP8[$4>>0]=$6&255;HEAP8[$4+1>>0]=$6>>8;
 $7 = $3;
 $8 = ((($7)) + 2|0);
 $9 = (__ZN7lazperf5utils6unpackItEET_PKc($8)|0);
 $10 = ((($4)) + 2|0);
 HEAP8[$10>>0]=$9&255;HEAP8[$10+1>>0]=$9>>8;
 $11 = $3;
 $12 = ((($11)) + 4|0);
 $13 = (__ZN7lazperf5utils6unpackItEET_PKc($12)|0);
 $14 = ((($4)) + 4|0);
 HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=$13>>8;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb10DecompressorC2ERNS_8decoders10arithmeticINS_10InCbStreamEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN7lazperf6detail9Rgb10BaseC2Ev($4);
 $5 = ((($4)) + 316|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb10Decompressor10decompressEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 20|0;
 $3 = $0;
 $4 = $1;
 $9 = $3;
 $10 = HEAP8[$9>>0]|0;
 $11 = $10&1;
 if (!($11)) {
  HEAP8[$9>>0] = 1;
  $12 = ((($9)) + 316|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE11getInStreamEv($13)|0);
  $15 = $4;
  __ZN7lazperf10InCbStream8getBytesEPhm($14,$15,6);
  $16 = ((($9)) + 1|0);
  $17 = $4;
  __ZN7lazperf3las3rgb6unpackEPKc($16,$17);
  $18 = $4;
  $19 = ((($18)) + 6|0);
  $2 = $19;
  $268 = $2;
  STACKTOP = sp;return ($268|0);
 }
 $6 = 0;
 $20 = ((($9)) + 316|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($9)) + 8|0);
 $23 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($21,$22)|0);
 $7 = $23;
 __ZN7lazperf3las3rgbC2Ev($8);
 $24 = $7;
 $25 = $24 & 1;
 $26 = ($25|0)!=(0);
 if ($26) {
  $27 = ((($9)) + 316|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ((($9)) + 52|0);
  $30 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($28,$29)|0);
  $31 = $30&255;
  $5 = $31;
  $32 = $5;
  $33 = $32&255;
  $34 = ((($9)) + 1|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8);
  $36 = $35&65535;
  $37 = $36 & 255;
  $38 = (($33) + ($37))|0;
  $39 = $38&255;
  $40 = $39&255;
  HEAP8[$8>>0]=$40&255;HEAP8[$8+1>>0]=$40>>8;
 } else {
  $41 = ((($9)) + 1|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8);
  $43 = $42&65535;
  $44 = $43 & 255;
  $45 = $44&65535;
  HEAP8[$8>>0]=$45&255;HEAP8[$8+1>>0]=$45>>8;
 }
 $46 = $7;
 $47 = $46 & 2;
 $48 = ($47|0)!=(0);
 if ($48) {
  $49 = ((($9)) + 316|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ((($9)) + 96|0);
  $52 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($50,$51)|0);
  $53 = $52&255;
  $5 = $53;
  $54 = $5;
  $55 = $54&255;
  $56 = ((($9)) + 1|0);
  $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
  $58 = $57&65535;
  $59 = $58 >> 8;
  $60 = (($55) + ($59))|0;
  $61 = $60&255;
  $62 = $61&255;
  $63 = $62&65535;
  $64 = $63 << 8;
  $65 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
  $66 = $65&65535;
  $67 = $66 | $64;
  $68 = $67&65535;
  HEAP8[$8>>0]=$68&255;HEAP8[$8+1>>0]=$68>>8;
 } else {
  $69 = ((($9)) + 1|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
  $71 = $70&65535;
  $72 = $71 & 65280;
  $73 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
  $74 = $73&65535;
  $75 = $74 | $72;
  $76 = $75&65535;
  HEAP8[$8>>0]=$76&255;HEAP8[$8+1>>0]=$76>>8;
 }
 $77 = $7;
 $78 = $77 & 64;
 $79 = ($78|0)!=(0);
 $80 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
 do {
  if ($79) {
   $81 = $80&65535;
   $82 = $81 & 255;
   $83 = ((($9)) + 1|0);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8);
   $85 = $84&65535;
   $86 = $85 & 255;
   $87 = (($82) - ($86))|0;
   $6 = $87;
   $88 = $7;
   $89 = $88 & 4;
   $90 = ($89|0)!=(0);
   if ($90) {
    $91 = ((($9)) + 316|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ((($9)) + 140|0);
    $94 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($92,$93)|0);
    $95 = $94&255;
    $5 = $95;
    $96 = $5;
    $97 = $96&255;
    $98 = $6;
    $99 = ((($9)) + 1|0);
    $100 = ((($99)) + 2|0);
    $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8);
    $102 = $101&65535;
    $103 = $102 & 255;
    $104 = (($98) + ($103))|0;
    $105 = (__ZN7lazperf5utils5clampIhiEET_T0_($104)|0);
    $106 = $105&255;
    $107 = (($97) + ($106))|0;
    $108 = $107&255;
    $109 = $108&255;
    $110 = ((($8)) + 2|0);
    HEAP8[$110>>0]=$109&255;HEAP8[$110+1>>0]=$109>>8;
   } else {
    $111 = ((($9)) + 1|0);
    $112 = ((($111)) + 2|0);
    $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
    $114 = $113&65535;
    $115 = $114 & 255;
    $116 = $115&65535;
    $117 = ((($8)) + 2|0);
    HEAP8[$117>>0]=$116&255;HEAP8[$117+1>>0]=$116>>8;
   }
   $118 = $7;
   $119 = $118 & 16;
   $120 = ($119|0)!=(0);
   if ($120) {
    $121 = ((($9)) + 316|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = ((($9)) + 228|0);
    $124 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($122,$123)|0);
    $125 = $124&255;
    $5 = $125;
    $126 = $6;
    $127 = ((($8)) + 2|0);
    $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8);
    $129 = $128&65535;
    $130 = $129 & 255;
    $131 = (($126) + ($130))|0;
    $132 = ((($9)) + 1|0);
    $133 = ((($132)) + 2|0);
    $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8);
    $135 = $134&65535;
    $136 = $135 & 255;
    $137 = (($131) - ($136))|0;
    $138 = (($137|0) / 2)&-1;
    $6 = $138;
    $139 = $5;
    $140 = $139&255;
    $141 = $6;
    $142 = ((($9)) + 1|0);
    $143 = ((($142)) + 4|0);
    $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8);
    $145 = $144&65535;
    $146 = $145 & 255;
    $147 = (($141) + ($146))|0;
    $148 = (__ZN7lazperf5utils5clampIhiEET_T0_($147)|0);
    $149 = $148&255;
    $150 = (($140) + ($149))|0;
    $151 = $150&255;
    $152 = $151&255;
    $153 = ((($8)) + 4|0);
    HEAP8[$153>>0]=$152&255;HEAP8[$153+1>>0]=$152>>8;
   } else {
    $154 = ((($9)) + 1|0);
    $155 = ((($154)) + 4|0);
    $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8);
    $157 = $156&65535;
    $158 = $157 & 255;
    $159 = $158&65535;
    $160 = ((($8)) + 4|0);
    HEAP8[$160>>0]=$159&255;HEAP8[$160+1>>0]=$159>>8;
   }
   $161 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
   $162 = $161&65535;
   $163 = $162 >> 8;
   $164 = ((($9)) + 1|0);
   $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8);
   $166 = $165&65535;
   $167 = $166 >> 8;
   $168 = (($163) - ($167))|0;
   $6 = $168;
   $169 = $7;
   $170 = $169 & 8;
   $171 = ($170|0)!=(0);
   if ($171) {
    $172 = ((($9)) + 316|0);
    $173 = HEAP32[$172>>2]|0;
    $174 = ((($9)) + 184|0);
    $175 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($173,$174)|0);
    $176 = $175&255;
    $5 = $176;
    $177 = $5;
    $178 = $177&255;
    $179 = $6;
    $180 = ((($9)) + 1|0);
    $181 = ((($180)) + 2|0);
    $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8);
    $183 = $182&65535;
    $184 = $183 >> 8;
    $185 = (($179) + ($184))|0;
    $186 = (__ZN7lazperf5utils5clampIhiEET_T0_($185)|0);
    $187 = $186&255;
    $188 = (($178) + ($187))|0;
    $189 = $188&255;
    $190 = $189&255;
    $191 = $190&65535;
    $192 = $191 << 8;
    $193 = ((($8)) + 2|0);
    $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8);
    $195 = $194&65535;
    $196 = $195 | $192;
    $197 = $196&65535;
    HEAP8[$193>>0]=$197&255;HEAP8[$193+1>>0]=$197>>8;
   } else {
    $198 = ((($9)) + 1|0);
    $199 = ((($198)) + 2|0);
    $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8);
    $201 = $200&65535;
    $202 = $201 & 65280;
    $203 = ((($8)) + 2|0);
    $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8);
    $205 = $204&65535;
    $206 = $205 | $202;
    $207 = $206&65535;
    HEAP8[$203>>0]=$207&255;HEAP8[$203+1>>0]=$207>>8;
   }
   $208 = $7;
   $209 = $208 & 32;
   $210 = ($209|0)!=(0);
   if ($210) {
    $211 = ((($9)) + 316|0);
    $212 = HEAP32[$211>>2]|0;
    $213 = ((($9)) + 272|0);
    $214 = (__ZN7lazperf8decoders10arithmeticINS_10InCbStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($212,$213)|0);
    $215 = $214&255;
    $5 = $215;
    $216 = $6;
    $217 = ((($8)) + 2|0);
    $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8);
    $219 = $218&65535;
    $220 = $219 >> 8;
    $221 = (($216) + ($220))|0;
    $222 = ((($9)) + 1|0);
    $223 = ((($222)) + 2|0);
    $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8);
    $225 = $224&65535;
    $226 = $225 >> 8;
    $227 = (($221) - ($226))|0;
    $228 = (($227|0) / 2)&-1;
    $6 = $228;
    $229 = $5;
    $230 = $229&255;
    $231 = $6;
    $232 = ((($9)) + 1|0);
    $233 = ((($232)) + 4|0);
    $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8);
    $235 = $234&65535;
    $236 = $235 >> 8;
    $237 = (($231) + ($236))|0;
    $238 = (__ZN7lazperf5utils5clampIhiEET_T0_($237)|0);
    $239 = $238&255;
    $240 = (($230) + ($239))|0;
    $241 = $240&255;
    $242 = $241&255;
    $243 = $242&65535;
    $244 = $243 << 8;
    $245 = ((($8)) + 4|0);
    $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8);
    $247 = $246&65535;
    $248 = $247 | $244;
    $249 = $248&65535;
    HEAP8[$245>>0]=$249&255;HEAP8[$245+1>>0]=$249>>8;
    break;
   } else {
    $250 = ((($9)) + 1|0);
    $251 = ((($250)) + 4|0);
    $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8);
    $253 = $252&65535;
    $254 = $253 & 65280;
    $255 = ((($8)) + 4|0);
    $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8);
    $257 = $256&65535;
    $258 = $257 | $254;
    $259 = $258&65535;
    HEAP8[$255>>0]=$259&255;HEAP8[$255+1>>0]=$259>>8;
    break;
   }
  } else {
   $260 = ((($8)) + 2|0);
   HEAP8[$260>>0]=$80&255;HEAP8[$260+1>>0]=$80>>8;
   $261 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
   $262 = ((($8)) + 4|0);
   HEAP8[$262>>0]=$261&255;HEAP8[$262+1>>0]=$261>>8;
  }
 } while(0);
 $263 = ((($9)) + 1|0);
 ;HEAP8[$263>>0]=HEAP8[$8>>0]|0;HEAP8[$263+1>>0]=HEAP8[$8+1>>0]|0;HEAP8[$263+2>>0]=HEAP8[$8+2>>0]|0;HEAP8[$263+3>>0]=HEAP8[$8+3>>0]|0;HEAP8[$263+4>>0]=HEAP8[$8+4>>0]|0;HEAP8[$263+5>>0]=HEAP8[$8+5>>0]|0;
 $264 = ((($9)) + 1|0);
 $265 = $4;
 __ZN7lazperf3las3rgb4packEPc($264,$265);
 $266 = $4;
 $267 = ((($266)) + 6|0);
 $2 = $267;
 $268 = $2;
 STACKTOP = sp;return ($268|0);
}
function __ZN7lazperf3las3rgb4packEPc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8);
 $6 = $3;
 __ZN7lazperf5utils4packEtPc($5,$6);
 $7 = ((($4)) + 2|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8);
 $9 = $3;
 $10 = ((($9)) + 2|0);
 __ZN7lazperf5utils4packEtPc($8,$10);
 $11 = ((($4)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8);
 $13 = $3;
 $14 = ((($13)) + 4|0);
 __ZN7lazperf5utils4packEtPc($12,$14);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb14Decompressor8dumpSumsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(35852,21166)|0);
 $4 = ((($2)) + 1312|0);
 $5 = (__ZN7lazperf5utils6Summer5valueEv($4)|0);
 $6 = (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($3,$5)|0);
 (__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($6,21164)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb14Decompressor9readSizesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 1284|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 1288|0);
 (__ZN7lazperfrsINS_10InCbStreamEEERT_S3_Rj($4,$5)|0);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb14Decompressor8readDataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 1292|0);
 $4 = ((($2)) + 1284|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 1288|0);
 $7 = HEAP32[$6>>2]|0;
 __ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE10initStreamINS_10InCbStreamEEEvRT_j($3,$5,$7);
 STACKTOP = sp;return;
}
function __ZN7lazperf6detail17Rgb14Decompressor10decompressEPcRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $35 = sp + 138|0;
 $26 = $0;
 $27 = $1;
 $28 = $2;
 $43 = $26;
 $44 = ((($43)) + 1280|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(-1);
 if ($46) {
  $47 = $28;
  $48 = HEAP32[$47>>2]|0;
  $23 = $43;
  $24 = $48;
  $49 = $23;
  $50 = $24;
  $51 = (($49) + (($50*320)|0)|0);
  $29 = $51;
  $52 = ((($43)) + 1284|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = $27;
  __ZN7lazperf10InCbStream8getBytesEPhm($53,$54,6);
  $55 = $29;
  $56 = ((($55)) + 4|0);
  $57 = $27;
  __ZN7lazperf3las3rgb6unpackEPKc($56,$57);
  $58 = $29;
  HEAP32[$58>>2] = 1;
  $59 = $28;
  $60 = HEAP32[$59>>2]|0;
  $61 = ((($43)) + 1280|0);
  HEAP32[$61>>2] = $60;
  $62 = $27;
  $63 = ((($62)) + 6|0);
  $25 = $63;
  $376 = $25;
  STACKTOP = sp;return ($376|0);
 }
 $64 = ((($43)) + 1288|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = ($65|0)==(0);
 if ($66) {
  $67 = $27;
  $30 = $67;
  $68 = ((($43)) + 1280|0);
  $69 = HEAP32[$68>>2]|0;
  $21 = $43;
  $22 = $69;
  $70 = $21;
  $71 = $22;
  $72 = (($70) + (($71*320)|0)|0);
  $73 = ((($72)) + 4|0);
  $74 = $30;
  ;HEAP8[$74>>0]=HEAP8[$73>>0]|0;HEAP8[$74+1>>0]=HEAP8[$73+1>>0]|0;HEAP8[$74+2>>0]=HEAP8[$73+2>>0]|0;HEAP8[$74+3>>0]=HEAP8[$73+3>>0]|0;HEAP8[$74+4>>0]=HEAP8[$73+4>>0]|0;HEAP8[$74+5>>0]=HEAP8[$73+5>>0]|0;
  $75 = $27;
  $76 = ((($75)) + 6|0);
  $25 = $76;
  $376 = $25;
  STACKTOP = sp;return ($376|0);
 }
 $77 = $28;
 $78 = HEAP32[$77>>2]|0;
 $19 = $43;
 $20 = $78;
 $79 = $19;
 $80 = $20;
 $81 = (($79) + (($80*320)|0)|0);
 $31 = $81;
 $82 = ((($43)) + 1280|0);
 $83 = HEAP32[$82>>2]|0;
 $17 = $43;
 $18 = $83;
 $84 = $17;
 $85 = $18;
 $86 = (($84) + (($85*320)|0)|0);
 $87 = ((($86)) + 4|0);
 $32 = $87;
 $88 = $28;
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($43)) + 1280|0);
 $91 = HEAP32[$90>>2]|0;
 $92 = ($89|0)!=($91|0);
 if ($92) {
  $93 = $28;
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($43)) + 1280|0);
  HEAP32[$95>>2] = $94;
  $96 = $31;
  $97 = HEAP32[$96>>2]|0;
  $98 = ($97|0)!=(0);
  if (!($98)) {
   $99 = $31;
   HEAP32[$99>>2] = 1;
   $100 = $32;
   $101 = $31;
   $102 = ((($101)) + 4|0);
   ;HEAP8[$102>>0]=HEAP8[$100>>0]|0;HEAP8[$102+1>>0]=HEAP8[$100+1>>0]|0;HEAP8[$102+2>>0]=HEAP8[$100+2>>0]|0;HEAP8[$102+3>>0]=HEAP8[$100+3>>0]|0;HEAP8[$102+4>>0]=HEAP8[$100+4>>0]|0;HEAP8[$102+5>>0]=HEAP8[$100+5>>0]|0;
   $103 = ((($43)) + 1280|0);
   $104 = HEAP32[$103>>2]|0;
   $15 = $43;
   $16 = $104;
   $105 = $15;
   $106 = $16;
   $107 = (($105) + (($106*320)|0)|0);
   $108 = ((($107)) + 4|0);
   $32 = $108;
  }
 }
 $109 = $32;
 $33 = $109;
 $110 = ((($43)) + 1292|0);
 $111 = $31;
 $112 = ((($111)) + 12|0);
 $113 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($110,$112)|0);
 $34 = $113;
 __ZN7lazperf3las5rgb14C2Ev($35);
 $114 = $34;
 $115 = $114 & 1;
 $116 = ($115|0)!=(0);
 if ($116) {
  $117 = ((($43)) + 1292|0);
  $118 = $31;
  $119 = ((($118)) + 56|0);
  $11 = $119;
  $12 = 0;
  $120 = $11;
  $121 = $12;
  $122 = (($120) + (($121*44)|0)|0);
  $123 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($117,$122)|0);
  $124 = $123&255;
  $36 = $124;
  $125 = $36;
  $126 = $125&255;
  $127 = $33;
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8);
  $129 = $128&65535;
  $130 = $129 & 255;
  $131 = (($126) + ($130))|0;
  $132 = $131&255;
  $133 = $132&255;
  HEAP8[$35>>0]=$133&255;HEAP8[$35+1>>0]=$133>>8;
 } else {
  $134 = $33;
  $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8);
  $136 = $135&65535;
  $137 = $136 & 255;
  $138 = $137&65535;
  HEAP8[$35>>0]=$138&255;HEAP8[$35+1>>0]=$138>>8;
 }
 $139 = $34;
 $140 = $139 & 2;
 $141 = ($140|0)!=(0);
 if ($141) {
  $142 = ((($43)) + 1292|0);
  $143 = $31;
  $144 = ((($143)) + 56|0);
  $9 = $144;
  $10 = 1;
  $145 = $9;
  $146 = $10;
  $147 = (($145) + (($146*44)|0)|0);
  $148 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($142,$147)|0);
  $149 = $148&255;
  $37 = $149;
  $150 = $37;
  $151 = $150&255;
  $152 = $33;
  $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8);
  $154 = $153&65535;
  $155 = $154 >> 8;
  $156 = (($151) + ($155))|0;
  $157 = $156&255;
  $158 = $157&255;
  $159 = $158&65535;
  $160 = $159 << 8;
  $161 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
  $162 = $161&65535;
  $163 = $162 | $160;
  $164 = $163&65535;
  HEAP8[$35>>0]=$164&255;HEAP8[$35+1>>0]=$164>>8;
 } else {
  $165 = $33;
  $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8);
  $167 = $166&65535;
  $168 = $167 & 65280;
  $169 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
  $170 = $169&65535;
  $171 = $170 | $168;
  $172 = $171&65535;
  HEAP8[$35>>0]=$172&255;HEAP8[$35+1>>0]=$172>>8;
 }
 $173 = $34;
 $174 = $173 & 64;
 $175 = ($174|0)!=(0);
 $176 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
 do {
  if ($175) {
   $177 = $176&65535;
   $178 = $177 & 255;
   $179 = $33;
   $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8);
   $181 = $180&65535;
   $182 = $181 & 255;
   $183 = (($178) - ($182))|0;
   $38 = $183;
   $184 = $34;
   $185 = $184 & 4;
   $186 = ($185|0)!=(0);
   if ($186) {
    $187 = ((($43)) + 1292|0);
    $188 = $31;
    $189 = ((($188)) + 56|0);
    $5 = $189;
    $6 = 2;
    $190 = $5;
    $191 = $6;
    $192 = (($190) + (($191*44)|0)|0);
    $193 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($187,$192)|0);
    $194 = $193&255;
    $39 = $194;
    $195 = $39;
    $196 = $195&255;
    $197 = $38;
    $198 = $33;
    $199 = ((($198)) + 2|0);
    $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8);
    $201 = $200&65535;
    $202 = $201 & 255;
    $203 = (($197) + ($202))|0;
    $204 = (__ZN7lazperf5utils5clampIhiEET_T0_($203)|0);
    $205 = $204&255;
    $206 = (($196) + ($205))|0;
    $207 = $206&255;
    $208 = $207&255;
    $209 = ((($35)) + 2|0);
    HEAP8[$209>>0]=$208&255;HEAP8[$209+1>>0]=$208>>8;
   } else {
    $210 = $33;
    $211 = ((($210)) + 2|0);
    $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8);
    $213 = $212&65535;
    $214 = $213 & 255;
    $215 = $214&65535;
    $216 = ((($35)) + 2|0);
    HEAP8[$216>>0]=$215&255;HEAP8[$216+1>>0]=$215>>8;
   }
   $217 = $34;
   $218 = $217 & 16;
   $219 = ($218|0)!=(0);
   if ($219) {
    $220 = ((($43)) + 1292|0);
    $221 = $31;
    $222 = ((($221)) + 56|0);
    $3 = $222;
    $4 = 4;
    $223 = $3;
    $224 = $4;
    $225 = (($223) + (($224*44)|0)|0);
    $226 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($220,$225)|0);
    $227 = $226&255;
    $40 = $227;
    $228 = $38;
    $229 = ((($35)) + 2|0);
    $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8);
    $231 = $230&65535;
    $232 = $231 & 255;
    $233 = $33;
    $234 = ((($233)) + 2|0);
    $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8);
    $236 = $235&65535;
    $237 = $236 & 255;
    $238 = (($232) - ($237))|0;
    $239 = (($228) + ($238))|0;
    $240 = (($239|0) / 2)&-1;
    $38 = $240;
    $241 = $40;
    $242 = $241&255;
    $243 = $38;
    $244 = $33;
    $245 = ((($244)) + 4|0);
    $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8);
    $247 = $246&65535;
    $248 = $247 & 255;
    $249 = (($243) + ($248))|0;
    $250 = (__ZN7lazperf5utils5clampIhiEET_T0_($249)|0);
    $251 = $250&255;
    $252 = (($242) + ($251))|0;
    $253 = $252&255;
    $254 = $253&255;
    $255 = ((($35)) + 4|0);
    HEAP8[$255>>0]=$254&255;HEAP8[$255+1>>0]=$254>>8;
   } else {
    $256 = $33;
    $257 = ((($256)) + 4|0);
    $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8);
    $259 = $258&65535;
    $260 = $259 & 255;
    $261 = $260&65535;
    $262 = ((($35)) + 4|0);
    HEAP8[$262>>0]=$261&255;HEAP8[$262+1>>0]=$261>>8;
   }
   $263 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
   $264 = $263&65535;
   $265 = $264 >> 8;
   $266 = $33;
   $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8);
   $268 = $267&65535;
   $269 = $268 >> 8;
   $270 = (($265) - ($269))|0;
   $38 = $270;
   $271 = $34;
   $272 = $271 & 8;
   $273 = ($272|0)!=(0);
   if ($273) {
    $274 = ((($43)) + 1292|0);
    $275 = $31;
    $276 = ((($275)) + 56|0);
    $7 = $276;
    $8 = 3;
    $277 = $7;
    $278 = $8;
    $279 = (($277) + (($278*44)|0)|0);
    $280 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($274,$279)|0);
    $281 = $280&255;
    $41 = $281;
    $282 = $41;
    $283 = $282&255;
    $284 = $38;
    $285 = $33;
    $286 = ((($285)) + 2|0);
    $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8);
    $288 = $287&65535;
    $289 = $288 >> 8;
    $290 = (($284) + ($289))|0;
    $291 = (__ZN7lazperf5utils5clampIhiEET_T0_($290)|0);
    $292 = $291&255;
    $293 = (($283) + ($292))|0;
    $294 = $293&255;
    $295 = $294&255;
    $296 = $295&65535;
    $297 = $296 << 8;
    $298 = ((($35)) + 2|0);
    $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8);
    $300 = $299&65535;
    $301 = $300 | $297;
    $302 = $301&65535;
    HEAP8[$298>>0]=$302&255;HEAP8[$298+1>>0]=$302>>8;
   } else {
    $303 = $33;
    $304 = ((($303)) + 2|0);
    $305 = HEAPU8[$304>>0]|(HEAPU8[$304+1>>0]<<8);
    $306 = $305&65535;
    $307 = $306 & 65280;
    $308 = ((($35)) + 2|0);
    $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8);
    $310 = $309&65535;
    $311 = $310 | $307;
    $312 = $311&65535;
    HEAP8[$308>>0]=$312&255;HEAP8[$308+1>>0]=$312>>8;
   }
   $313 = $34;
   $314 = $313 & 32;
   $315 = ($314|0)!=(0);
   if ($315) {
    $316 = ((($43)) + 1292|0);
    $317 = $31;
    $318 = ((($317)) + 56|0);
    $13 = $318;
    $14 = 5;
    $319 = $13;
    $320 = $14;
    $321 = (($319) + (($320*44)|0)|0);
    $322 = (__ZN7lazperf8decoders10arithmeticINS_12MemoryStreamEE12decodeSymbolINS_6models10arithmeticEEEjRT_($316,$321)|0);
    $323 = $322&255;
    $42 = $323;
    $324 = $38;
    $325 = ((($35)) + 2|0);
    $326 = HEAPU8[$325>>0]|(HEAPU8[$325+1>>0]<<8);
    $327 = $326&65535;
    $328 = $327 >> 8;
    $329 = (($324) + ($328))|0;
    $330 = $33;
    $331 = ((($330)) + 2|0);
    $332 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8);
    $333 = $332&65535;
    $334 = $333 >> 8;
    $335 = (($329) - ($334))|0;
    $336 = (($335|0) / 2)&-1;
    $38 = $336;
    $337 = $42;
    $338 = $337&255;
    $339 = $38;
    $340 = $33;
    $341 = ((($340)) + 4|0);
    $342 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8);
    $343 = $342&65535;
    $344 = $343 >> 8;
    $345 = (($339) + ($344))|0;
    $346 = (__ZN7lazperf5utils5clampIhiEET_T0_($345)|0);
    $347 = $346&255;
    $348 = (($338) + ($347))|0;
    $349 = $348&255;
    $350 = $349&255;
    $351 = $350&65535;
    $352 = $351 << 8;
    $353 = ((($35)) + 4|0);
    $354 = HEAPU8[$353>>0]|(HEAPU8[$353+1>>0]<<8);
    $355 = $354&65535;
    $356 = $355 | $352;
    $357 = $356&65535;
    HEAP8[$353>>0]=$357&255;HEAP8[$353+1>>0]=$357>>8;
    break;
   } else {
    $358 = $33;
    $359 = ((($358)) + 4|0);
    $360 = HEAPU8[$359>>0]|(HEAPU8[$359+1>>0]<<8);
    $361 = $360&65535;
    $362 = $361 & 65280;
    $363 = ((($35)) + 4|0);
    $364 = HEAPU8[$363>>0]|(HEAPU8[$363+1>>0]<<8);
    $365 = $364&65535;
    $366 = $365 | $362;
    $367 = $366&65535;
    HEAP8[$363>>0]=$367&255;HEAP8[$363+1>>0]=$367>>8;
    break;
   }
  } else {
   $368 = ((($35)) + 2|0);
   HEAP8[$368>>0]=$176&255;HEAP8[$368+1>>0]=$176>>8;
   $369 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
   $370 = ((($35)) + 4|0);
   HEAP8[$370>>0]=$369&255;HEAP8[$370+1>>0]=$369>>8;
  }
 } while(0);
 $371 = ((($43)) + 1312|0);
 __ZN7lazperf5utils6Summer3addINS_3las5rgb14EEEvRKT_($371,$35);
 $372 = $33;
 ;HEAP8[$372>>0]=HEAP8[$35>>0]|0;HEAP8[$372+1>>0]=HEAP8[$35+1>>0]|0;HEAP8[$372+2>>0]=HEAP8[$35+2>>0]|0;HEAP8[$372+3>>0]=HEAP8[$35+3>>0]|0;HEAP8[$372+4>>0]=HEAP8[$35+4>>0]|0;HEAP8[$372+5>>0]=HEAP8[$35+5>>0]|0;
 $373 = $27;
 __ZN7lazperf3las3rgb4packEPc($35,$373);
 $374 = $27;
 $375 = ((($374)) + 6|0);
 $25 = $375;
 $376 = $25;
 STACKTOP = sp;return ($376|0);
}
function __ZN7lazperf5utils6Summer3addINS_3las5rgb14EEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $4 = $6;
 $7 = $4;
 $8 = (__ZN7lazperf5utils3sumEPKhj($7,6)|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($8))|0;
 HEAP32[$5>>2] = $10;
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 STACKTOP = sp;return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy_560($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$26 = $17;
   while(1) {
    $27 = ($26|0)<(0);
    if ($27) {
     break;
    }
    $35 = (($$04855) - ($26))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($26>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($26) - ($41))|0;
    $42 = HEAP32[$$150>>2]|0;
    $43 = (($42) + ($$0)|0);
    HEAP32[$$150>>2] = $43;
    $44 = ((($$150)) + 4|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) - ($$0))|0;
    HEAP32[$44>>2] = $46;
    $47 = HEAP32[$13>>2]|0;
    $48 = $$150;
    HEAP32[$vararg_buffer3>>2] = $47;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $48;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$26 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 | 32;
   HEAP32[$0>>2] = $30;
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$4>>2] = $25;
  HEAP32[$7>>2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function ___stdio_seek($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 60|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $4;
 HEAP32[$vararg_buffer>>2] = $6;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $2;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $7;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $3;
 $8 = (___syscall140(140,($vararg_buffer|0))|0);
 $9 = (___syscall_ret($8)|0);
 $10 = ($9|0)<(0);
 if ($10) {
  $17 = $4;
  $18 = $17;
  HEAP32[$18>>2] = -1;
  $19 = (($17) + 4)|0;
  $20 = $19;
  HEAP32[$20>>2] = -1;
  $21 = -1;$22 = -1;
 } else {
  $11 = $4;
  $12 = $11;
  $13 = HEAP32[$12>>2]|0;
  $14 = (($11) + 4)|0;
  $15 = $14;
  $16 = HEAP32[$15>>2]|0;
  $21 = $16;$22 = $13;
 }
 setTempRet0(($21) | 0);
 STACKTOP = sp;return ($22|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (35640|0);
}
function _dummy_560($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $1;
 $4 = ((($3)) + 4|0);
 $5 = ((($0)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)!=(0);
 $8 = $7&1;
 $9 = (($2) - ($8))|0;
 HEAP32[$4>>2] = $9;
 $10 = ((($3)) + 8|0);
 $11 = ((($0)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$10>>2] = $12;
 $13 = ((($3)) + 12|0);
 HEAP32[$13>>2] = $6;
 $14 = ((($0)) + 60|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $3;
 HEAP32[$vararg_buffer>>2] = $15;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $16;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $17 = (___syscall145(145,($vararg_buffer|0))|0);
 $18 = (___syscall_ret($17)|0);
 $19 = ($18|0)<(1);
 if ($19) {
  $20 = $18 & 48;
  $21 = $20 ^ 16;
  $22 = HEAP32[$0>>2]|0;
  $23 = $22 | $21;
  HEAP32[$0>>2] = $23;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4>>2]|0;
  $25 = ($18>>>0)>($24>>>0);
  if ($25) {
   $26 = (($18) - ($24))|0;
   $27 = HEAP32[$11>>2]|0;
   $28 = ((($0)) + 4|0);
   HEAP32[$28>>2] = $27;
   $$cast = $27;
   $29 = (($$cast) + ($26)|0);
   $30 = ((($0)) + 8|0);
   HEAP32[$30>>2] = $29;
   $31 = HEAP32[$5>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $$0 = $2;
   } else {
    $33 = ((($$cast)) + 1|0);
    HEAP32[$28>>2] = $33;
    $34 = HEAP8[$$cast>>0]|0;
    $35 = (($2) + -1)|0;
    $36 = (($1) + ($35)|0);
    HEAP8[$36>>0] = $34;
    $$0 = $2;
   }
  } else {
   $$0 = $18;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 112;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function _strtoull_l($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_strtoull($0,$1,$2)|0);
 $5 = (getTempRet0() | 0);
 setTempRet0(($5) | 0);
 return ($4|0);
}
function _strtoull($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strtox_735($0,$1,$2,-1,-1)|0);
 $4 = (getTempRet0() | 0);
 setTempRet0(($4) | 0);
 return ($3|0);
}
function _strtox_735($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $5 = sp;
 HEAP32[$5>>2] = 0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $0;
 $7 = ((($5)) + 44|0);
 HEAP32[$7>>2] = $0;
 $8 = ($0|0)<(0|0);
 $9 = ((($0)) + 2147483647|0);
 $$sink = $8 ? (-1) : $9;
 $10 = ((($5)) + 8|0);
 HEAP32[$10>>2] = $$sink;
 $11 = ((($5)) + 76|0);
 HEAP32[$11>>2] = -1;
 ___shlim($5,0,0);
 $12 = (___intscan($5,$2,1,$3,$4)|0);
 $13 = (getTempRet0() | 0);
 $14 = ($1|0)==(0|0);
 if (!($14)) {
  $15 = ((($5)) + 120|0);
  $16 = $15;
  $17 = $16;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + 4)|0;
  $20 = $19;
  $21 = HEAP32[$20>>2]|0;
  $22 = HEAP32[$6>>2]|0;
  $23 = HEAP32[$10>>2]|0;
  $24 = (($22) + ($18))|0;
  $25 = (($24) - ($23))|0;
  $26 = (($0) + ($25)|0);
  HEAP32[$1>>2] = $26;
 }
 setTempRet0(($13) | 0);
 STACKTOP = sp;return ($12|0);
}
function ___shlim($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 112|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = $1;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = $2;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) - ($11))|0;
 $13 = ($12|0)<(0);
 $14 = $13 << 31 >> 31;
 $15 = ((($0)) + 120|0);
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $14;
 $20 = ($1|0)!=(0);
 $21 = ($2|0)!=(0);
 $22 = $20 | $21;
 $23 = ($14|0)>($2|0);
 $24 = ($12>>>0)>($1>>>0);
 $25 = ($14|0)==($2|0);
 $26 = $25 & $24;
 $27 = $23 | $26;
 $or$cond = $22 & $27;
 if ($or$cond) {
  $28 = $11;
  $29 = (($28) + ($1)|0);
  $30 = ((($0)) + 104|0);
  HEAP32[$30>>2] = $29;
 } else {
  $31 = ((($0)) + 104|0);
  HEAP32[$31>>2] = $9;
 }
 return;
}
function ___intscan($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0154215 = 0, $$0157 = 0, $$0159 = 0, $$1155184 = 0, $$1158 = 0, $$1160 = 0, $$1160170 = 0, $$1165 = 0, $$1165168 = 0, $$1165169 = 0, $$2156202 = 0, $$3162208 = 0, $$4163$lcssa = 0, $$6$lcssa = 0, $$7190 = 0, $$8 = 0, $$pre$phi237Z2D = 0, $$pre$phi239Z2D = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond179 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select166 = 0, $spec$select167 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ($1>>>0)>(36);
 L1: do {
  if ($5) {
   $6 = (___errno_location()|0);
   HEAP32[$6>>2] = 22;
   $291 = 0;$292 = 0;
  } else {
   $7 = ((($0)) + 4|0);
   $8 = ((($0)) + 104|0);
   while(1) {
    $9 = HEAP32[$7>>2]|0;
    $10 = HEAP32[$8>>2]|0;
    $11 = ($9>>>0)<($10>>>0);
    if ($11) {
     $12 = ((($9)) + 1|0);
     HEAP32[$7>>2] = $12;
     $13 = HEAP8[$9>>0]|0;
     $14 = $13&255;
     $16 = $14;
    } else {
     $15 = (___shgetc($0)|0);
     $16 = $15;
    }
    $17 = (_isspace($16)|0);
    $18 = ($17|0)==(0);
    if ($18) {
     break;
    }
   }
   L11: do {
    switch ($16|0) {
    case 43: case 45:  {
     $19 = ($16|0)==(45);
     $20 = $19 << 31 >> 31;
     $21 = HEAP32[$7>>2]|0;
     $22 = HEAP32[$8>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$7>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $$0157 = $20;$$0159 = $26;
      break L11;
     } else {
      $27 = (___shgetc($0)|0);
      $$0157 = $20;$$0159 = $27;
      break L11;
     }
     break;
    }
    default: {
     $$0157 = 0;$$0159 = $16;
    }
    }
   } while(0);
   $28 = ($1|0)==(0);
   $29 = $1 | 16;
   $30 = ($29|0)==(16);
   $31 = ($$0159|0)==(48);
   $or$cond5 = $30 & $31;
   do {
    if ($or$cond5) {
     $32 = HEAP32[$7>>2]|0;
     $33 = HEAP32[$8>>2]|0;
     $34 = ($32>>>0)<($33>>>0);
     if ($34) {
      $35 = ((($32)) + 1|0);
      HEAP32[$7>>2] = $35;
      $36 = HEAP8[$32>>0]|0;
      $37 = $36&255;
      $40 = $37;
     } else {
      $38 = (___shgetc($0)|0);
      $40 = $38;
     }
     $39 = $40 | 32;
     $41 = ($39|0)==(120);
     if (!($41)) {
      if ($28) {
       $$1160170 = $40;$$1165168 = 8;
       label = 47;
       break;
      } else {
       $$1160 = $40;$$1165 = $1;
       label = 32;
       break;
      }
     }
     $42 = HEAP32[$7>>2]|0;
     $43 = HEAP32[$8>>2]|0;
     $44 = ($42>>>0)<($43>>>0);
     if ($44) {
      $45 = ((($42)) + 1|0);
      HEAP32[$7>>2] = $45;
      $46 = HEAP8[$42>>0]|0;
      $47 = $46&255;
      $50 = $47;
     } else {
      $48 = (___shgetc($0)|0);
      $50 = $48;
     }
     $49 = ((945) + ($50)|0);
     $51 = HEAP8[$49>>0]|0;
     $52 = ($51&255)>(15);
     if ($52) {
      $53 = HEAP32[$8>>2]|0;
      $54 = ($53|0)==(0|0);
      if (!($54)) {
       $55 = HEAP32[$7>>2]|0;
       $56 = ((($55)) + -1|0);
       HEAP32[$7>>2] = $56;
      }
      $57 = ($2|0)==(0);
      if ($57) {
       ___shlim($0,0,0);
       $291 = 0;$292 = 0;
       break L1;
      }
      if ($54) {
       $291 = 0;$292 = 0;
       break L1;
      }
      $58 = HEAP32[$7>>2]|0;
      $59 = ((($58)) + -1|0);
      HEAP32[$7>>2] = $59;
      $291 = 0;$292 = 0;
      break L1;
     } else {
      $$1160170 = $50;$$1165168 = 16;
      label = 47;
     }
    } else {
     $spec$select166 = $28 ? 10 : $1;
     $60 = ((945) + ($$0159)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = ($spec$select166>>>0)>($62>>>0);
     if ($63) {
      $$1160 = $$0159;$$1165 = $spec$select166;
      label = 32;
     } else {
      $64 = HEAP32[$8>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $66 = HEAP32[$7>>2]|0;
       $67 = ((($66)) + -1|0);
       HEAP32[$7>>2] = $67;
      }
      ___shlim($0,0,0);
      $68 = (___errno_location()|0);
      HEAP32[$68>>2] = 22;
      $291 = 0;$292 = 0;
      break L1;
     }
    }
   } while(0);
   L43: do {
    if ((label|0) == 32) {
     $69 = ($$1165|0)==(10);
     if ($69) {
      $70 = (($$1160) + -48)|0;
      $71 = ($70>>>0)<(10);
      if ($71) {
       $$0154215 = 0;$74 = $70;
       while(1) {
        $72 = ($$0154215*10)|0;
        $73 = (($72) + ($74))|0;
        $75 = HEAP32[$7>>2]|0;
        $76 = HEAP32[$8>>2]|0;
        $77 = ($75>>>0)<($76>>>0);
        if ($77) {
         $78 = ((($75)) + 1|0);
         HEAP32[$7>>2] = $78;
         $79 = HEAP8[$75>>0]|0;
         $80 = $79&255;
         $83 = $80;
        } else {
         $81 = (___shgetc($0)|0);
         $83 = $81;
        }
        $82 = (($83) + -48)|0;
        $84 = ($82>>>0)<(10);
        $85 = ($73>>>0)<(429496729);
        $86 = $84 & $85;
        if ($86) {
         $$0154215 = $73;$74 = $82;
        } else {
         break;
        }
       }
       $87 = ($82>>>0)<(10);
       if ($87) {
        $$3162208 = $83;$88 = $73;$89 = 0;$92 = $82;
        while(1) {
         $90 = (___muldi3(($88|0),($89|0),10,0)|0);
         $91 = (getTempRet0() | 0);
         $93 = ($92|0)<(0);
         $94 = $93 << 31 >> 31;
         $95 = $92 ^ -1;
         $96 = $94 ^ -1;
         $97 = ($91>>>0)>($96>>>0);
         $98 = ($90>>>0)>($95>>>0);
         $99 = ($91|0)==($96|0);
         $100 = $99 & $98;
         $101 = $97 | $100;
         if ($101) {
          $$1165169 = 10;$$8 = $$3162208;$293 = $88;$294 = $89;
          label = 76;
          break L43;
         }
         $102 = (_i64Add(($90|0),($91|0),($92|0),($94|0))|0);
         $103 = (getTempRet0() | 0);
         $104 = HEAP32[$7>>2]|0;
         $105 = HEAP32[$8>>2]|0;
         $106 = ($104>>>0)<($105>>>0);
         if ($106) {
          $107 = ((($104)) + 1|0);
          HEAP32[$7>>2] = $107;
          $108 = HEAP8[$104>>0]|0;
          $109 = $108&255;
          $112 = $109;
         } else {
          $110 = (___shgetc($0)|0);
          $112 = $110;
         }
         $111 = (($112) + -48)|0;
         $113 = ($111>>>0)<(10);
         $114 = ($103>>>0)<(429496729);
         $115 = ($102>>>0)<(2576980378);
         $116 = ($103|0)==(429496729);
         $117 = $116 & $115;
         $118 = $114 | $117;
         $or$cond7 = $113 & $118;
         if ($or$cond7) {
          $$3162208 = $112;$88 = $102;$89 = $103;$92 = $111;
         } else {
          break;
         }
        }
        $119 = ($111>>>0)>(9);
        if ($119) {
         $$1158 = $$0157;$264 = $103;$266 = $102;
        } else {
         $$1165169 = 10;$$8 = $112;$293 = $102;$294 = $103;
         label = 76;
        }
       } else {
        $$1158 = $$0157;$264 = 0;$266 = $73;
       }
      } else {
       $$1158 = $$0157;$264 = 0;$266 = 0;
      }
     } else {
      $$1160170 = $$1160;$$1165168 = $$1165;
      label = 47;
     }
    }
   } while(0);
   L63: do {
    if ((label|0) == 47) {
     $120 = (($$1165168) + -1)|0;
     $121 = $120 & $$1165168;
     $122 = ($121|0)==(0);
     if ($122) {
      $123 = ($$1165168*23)|0;
      $124 = $123 >>> 5;
      $125 = $124 & 7;
      $126 = (21178 + ($125)|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = ((945) + ($$1160170)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130&255;
      $132 = ($$1165168>>>0)>($131>>>0);
      if ($132) {
       $$1155184 = 0;$135 = $131;
       while(1) {
        $133 = $$1155184 << $128;
        $134 = $135 | $133;
        $136 = HEAP32[$7>>2]|0;
        $137 = HEAP32[$8>>2]|0;
        $138 = ($136>>>0)<($137>>>0);
        if ($138) {
         $139 = ((($136)) + 1|0);
         HEAP32[$7>>2] = $139;
         $140 = HEAP8[$136>>0]|0;
         $141 = $140&255;
         $144 = $141;
        } else {
         $142 = (___shgetc($0)|0);
         $144 = $142;
        }
        $143 = ((945) + ($144)|0);
        $145 = HEAP8[$143>>0]|0;
        $146 = $145&255;
        $147 = ($$1165168>>>0)>($146>>>0);
        $148 = ($134>>>0)<(134217728);
        $149 = $148 & $147;
        if ($149) {
         $$1155184 = $134;$135 = $146;
        } else {
         break;
        }
       }
       $$4163$lcssa = $144;$$pre$phi237Z2D = $146;$154 = 0;$156 = $134;$295 = $145;
      } else {
       $$4163$lcssa = $$1160170;$$pre$phi237Z2D = $131;$154 = 0;$156 = 0;$295 = $130;
      }
      $150 = (_bitshift64Lshr(-1,-1,($128|0))|0);
      $151 = (getTempRet0() | 0);
      $152 = ($$1165168>>>0)<=($$pre$phi237Z2D>>>0);
      $153 = ($151>>>0)<($154>>>0);
      $155 = ($150>>>0)<($156>>>0);
      $157 = ($151|0)==($154|0);
      $158 = $157 & $155;
      $159 = $153 | $158;
      $or$cond179 = $152 | $159;
      if ($or$cond179) {
       $$1165169 = $$1165168;$$8 = $$4163$lcssa;$293 = $156;$294 = $154;
       label = 76;
       break;
      }
      $160 = $156;$161 = $154;$165 = $295;
      while(1) {
       $162 = (_bitshift64Shl(($160|0),($161|0),($128|0))|0);
       $163 = (getTempRet0() | 0);
       $164 = $165&255;
       $166 = $162 | $164;
       $167 = HEAP32[$7>>2]|0;
       $168 = HEAP32[$8>>2]|0;
       $169 = ($167>>>0)<($168>>>0);
       if ($169) {
        $170 = ((($167)) + 1|0);
        HEAP32[$7>>2] = $170;
        $171 = HEAP8[$167>>0]|0;
        $172 = $171&255;
        $175 = $172;
       } else {
        $173 = (___shgetc($0)|0);
        $175 = $173;
       }
       $174 = ((945) + ($175)|0);
       $176 = HEAP8[$174>>0]|0;
       $177 = $176&255;
       $178 = ($$1165168>>>0)<=($177>>>0);
       $179 = ($163>>>0)>($151>>>0);
       $180 = ($166>>>0)>($150>>>0);
       $181 = ($163|0)==($151|0);
       $182 = $181 & $180;
       $183 = $179 | $182;
       $or$cond = $178 | $183;
       if ($or$cond) {
        $$1165169 = $$1165168;$$8 = $175;$293 = $166;$294 = $163;
        label = 76;
        break L63;
       } else {
        $160 = $166;$161 = $163;$165 = $176;
       }
      }
     }
     $184 = ((945) + ($$1160170)|0);
     $185 = HEAP8[$184>>0]|0;
     $186 = $185&255;
     $187 = ($$1165168>>>0)>($186>>>0);
     if ($187) {
      $$2156202 = 0;$190 = $186;
      while(1) {
       $188 = Math_imul($$2156202, $$1165168)|0;
       $189 = (($190) + ($188))|0;
       $191 = HEAP32[$7>>2]|0;
       $192 = HEAP32[$8>>2]|0;
       $193 = ($191>>>0)<($192>>>0);
       if ($193) {
        $194 = ((($191)) + 1|0);
        HEAP32[$7>>2] = $194;
        $195 = HEAP8[$191>>0]|0;
        $196 = $195&255;
        $199 = $196;
       } else {
        $197 = (___shgetc($0)|0);
        $199 = $197;
       }
       $198 = ((945) + ($199)|0);
       $200 = HEAP8[$198>>0]|0;
       $201 = $200&255;
       $202 = ($$1165168>>>0)>($201>>>0);
       $203 = ($189>>>0)<(119304647);
       $204 = $203 & $202;
       if ($204) {
        $$2156202 = $189;$190 = $201;
       } else {
        break;
       }
      }
      $$6$lcssa = $199;$$pre$phi239Z2D = $201;$296 = $200;$297 = $189;$298 = 0;
     } else {
      $$6$lcssa = $$1160170;$$pre$phi239Z2D = $186;$296 = $185;$297 = 0;$298 = 0;
     }
     $205 = ($$1165168>>>0)>($$pre$phi239Z2D>>>0);
     if ($205) {
      $206 = (___udivdi3(-1,-1,($$1165168|0),0)|0);
      $207 = (getTempRet0() | 0);
      $$7190 = $$6$lcssa;$208 = $298;$210 = $297;$218 = $296;
      while(1) {
       $209 = ($208>>>0)>($207>>>0);
       $211 = ($210>>>0)>($206>>>0);
       $212 = ($208|0)==($207|0);
       $213 = $212 & $211;
       $214 = $209 | $213;
       if ($214) {
        $$1165169 = $$1165168;$$8 = $$7190;$293 = $210;$294 = $208;
        label = 76;
        break L63;
       }
       $215 = (___muldi3(($210|0),($208|0),($$1165168|0),0)|0);
       $216 = (getTempRet0() | 0);
       $217 = $218&255;
       $219 = $217 ^ -1;
       $220 = ($216>>>0)>(4294967295);
       $221 = ($215>>>0)>($219>>>0);
       $222 = ($216|0)==(-1);
       $223 = $222 & $221;
       $224 = $220 | $223;
       if ($224) {
        $$1165169 = $$1165168;$$8 = $$7190;$293 = $210;$294 = $208;
        label = 76;
        break L63;
       }
       $225 = (_i64Add(($215|0),($216|0),($217|0),0)|0);
       $226 = (getTempRet0() | 0);
       $227 = HEAP32[$7>>2]|0;
       $228 = HEAP32[$8>>2]|0;
       $229 = ($227>>>0)<($228>>>0);
       if ($229) {
        $230 = ((($227)) + 1|0);
        HEAP32[$7>>2] = $230;
        $231 = HEAP8[$227>>0]|0;
        $232 = $231&255;
        $235 = $232;
       } else {
        $233 = (___shgetc($0)|0);
        $235 = $233;
       }
       $234 = ((945) + ($235)|0);
       $236 = HEAP8[$234>>0]|0;
       $237 = $236&255;
       $238 = ($$1165168>>>0)>($237>>>0);
       if ($238) {
        $$7190 = $235;$208 = $226;$210 = $225;$218 = $236;
       } else {
        $$1165169 = $$1165168;$$8 = $235;$293 = $225;$294 = $226;
        label = 76;
        break;
       }
      }
     } else {
      $$1165169 = $$1165168;$$8 = $$6$lcssa;$293 = $297;$294 = $298;
      label = 76;
     }
    }
   } while(0);
   if ((label|0) == 76) {
    $239 = ((945) + ($$8)|0);
    $240 = HEAP8[$239>>0]|0;
    $241 = $240&255;
    $242 = ($$1165169>>>0)>($241>>>0);
    if ($242) {
     while(1) {
      $243 = HEAP32[$7>>2]|0;
      $244 = HEAP32[$8>>2]|0;
      $245 = ($243>>>0)<($244>>>0);
      if ($245) {
       $246 = ((($243)) + 1|0);
       HEAP32[$7>>2] = $246;
       $247 = HEAP8[$243>>0]|0;
       $248 = $247&255;
       $251 = $248;
      } else {
       $249 = (___shgetc($0)|0);
       $251 = $249;
      }
      $250 = ((945) + ($251)|0);
      $252 = HEAP8[$250>>0]|0;
      $253 = $252&255;
      $254 = ($$1165169>>>0)>($253>>>0);
      if (!($254)) {
       break;
      }
     }
     $255 = (___errno_location()|0);
     HEAP32[$255>>2] = 34;
     $256 = $3 & 1;
     $257 = ($256|0)==(0);
     $258 = (0)==(0);
     $259 = $257 & $258;
     $spec$select167 = $259 ? $$0157 : 0;
     $$1158 = $spec$select167;$264 = $4;$266 = $3;
    } else {
     $$1158 = $$0157;$264 = $294;$266 = $293;
    }
   }
   $260 = HEAP32[$8>>2]|0;
   $261 = ($260|0)==(0|0);
   if (!($261)) {
    $262 = HEAP32[$7>>2]|0;
    $263 = ((($262)) + -1|0);
    HEAP32[$7>>2] = $263;
   }
   $265 = ($264>>>0)<($4>>>0);
   $267 = ($266>>>0)<($3>>>0);
   $268 = ($264|0)==($4|0);
   $269 = $268 & $267;
   $270 = $265 | $269;
   if (!($270)) {
    $271 = $3 & 1;
    $272 = ($271|0)!=(0);
    $273 = (0)!=(0);
    $274 = $272 | $273;
    $275 = ($$1158|0)!=(0);
    $or$cond12 = $274 | $275;
    if (!($or$cond12)) {
     $276 = (___errno_location()|0);
     HEAP32[$276>>2] = 34;
     $277 = (_i64Add(($3|0),($4|0),-1,-1)|0);
     $278 = (getTempRet0() | 0);
     $291 = $278;$292 = $277;
     break;
    }
    $279 = ($264>>>0)>($4>>>0);
    $280 = ($266>>>0)>($3>>>0);
    $281 = ($264|0)==($4|0);
    $282 = $281 & $280;
    $283 = $279 | $282;
    if ($283) {
     $284 = (___errno_location()|0);
     HEAP32[$284>>2] = 34;
     $291 = $4;$292 = $3;
     break;
    }
   }
   $285 = ($$1158|0)<(0);
   $286 = $285 << 31 >> 31;
   $287 = $266 ^ $$1158;
   $288 = $264 ^ $286;
   $289 = (_i64Subtract(($287|0),($288|0),($$1158|0),($286|0))|0);
   $290 = (getTempRet0() | 0);
   $291 = $290;$292 = $289;
  }
 } while(0);
 setTempRet0(($291) | 0);
 return ($292|0);
}
function ___shgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert28 = 0, $$pre = 0, $$pre29 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 112|0);
 $2 = $1;
 $3 = $2;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 4)|0;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($4|0)==(0);
 $9 = ($7|0)==(0);
 $10 = $8 & $9;
 if ($10) {
  label = 3;
 } else {
  $11 = ((($0)) + 120|0);
  $12 = $11;
  $13 = $12;
  $14 = HEAP32[$13>>2]|0;
  $15 = (($12) + 4)|0;
  $16 = $15;
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)<($7|0);
  $19 = ($14>>>0)<($4>>>0);
  $20 = ($17|0)==($7|0);
  $21 = $20 & $19;
  $22 = $18 | $21;
  if ($22) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $23 = (___uflow($0)|0);
  $24 = ($23|0)<(0);
  if ($24) {
   label = 4;
  } else {
   $26 = $1;
   $27 = $26;
   $28 = HEAP32[$27>>2]|0;
   $29 = (($26) + 4)|0;
   $30 = $29;
   $31 = HEAP32[$30>>2]|0;
   $32 = ($28|0)==(0);
   $33 = ($31|0)==(0);
   $34 = $32 & $33;
   $$phi$trans$insert = ((($0)) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($34) {
    $35 = $$pre;
    $89 = $35;
    label = 9;
   } else {
    $36 = ((($0)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = $37;
    $39 = (($$pre) - ($38))|0;
    $40 = ($39|0)<(0);
    $41 = $40 << 31 >> 31;
    $42 = ((($0)) + 120|0);
    $43 = $42;
    $44 = $43;
    $45 = HEAP32[$44>>2]|0;
    $46 = (($43) + 4)|0;
    $47 = $46;
    $48 = HEAP32[$47>>2]|0;
    $49 = (_i64Subtract(($28|0),($31|0),($45|0),($48|0))|0);
    $50 = (getTempRet0() | 0);
    $51 = ($50|0)>($41|0);
    $52 = ($49>>>0)>($39>>>0);
    $53 = ($50|0)==($41|0);
    $54 = $53 & $52;
    $55 = $51 | $54;
    $56 = $$pre;
    if ($55) {
     $89 = $56;
     label = 9;
    } else {
     $57 = (($49) + -1)|0;
     $58 = (($37) + ($57)|0);
     $59 = ((($0)) + 104|0);
     HEAP32[$59>>2] = $58;
     $61 = $56;
    }
   }
   if ((label|0) == 9) {
    $60 = ((($0)) + 104|0);
    HEAP32[$60>>2] = $$pre;
    $61 = $89;
   }
   $62 = ($61|0)==(0|0);
   $$phi$trans$insert28 = ((($0)) + 4|0);
   if ($62) {
    $$pre29 = HEAP32[$$phi$trans$insert28>>2]|0;
    $84 = $$pre29;
   } else {
    $63 = HEAP32[$$phi$trans$insert28>>2]|0;
    $64 = $61;
    $65 = (($64) + 1)|0;
    $66 = (($65) - ($63))|0;
    $67 = ($66|0)<(0);
    $68 = $67 << 31 >> 31;
    $69 = ((($0)) + 120|0);
    $70 = $69;
    $71 = $70;
    $72 = HEAP32[$71>>2]|0;
    $73 = (($70) + 4)|0;
    $74 = $73;
    $75 = HEAP32[$74>>2]|0;
    $76 = (_i64Add(($72|0),($75|0),($66|0),($68|0))|0);
    $77 = (getTempRet0() | 0);
    $78 = $69;
    $79 = $78;
    HEAP32[$79>>2] = $76;
    $80 = (($78) + 4)|0;
    $81 = $80;
    HEAP32[$81>>2] = $77;
    $82 = $63;
    $84 = $82;
   }
   $83 = ((($84)) + -1|0);
   $85 = HEAP8[$83>>0]|0;
   $86 = $85&255;
   $87 = ($23|0)==($86|0);
   if ($87) {
    $$0 = $23;
   } else {
    $88 = $23&255;
    HEAP8[$83>>0] = $88;
    $$0 = $23;
   }
  }
 }
 if ((label|0) == 4) {
  $25 = ((($0)) + 104|0);
  HEAP32[$25>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function _isspace($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(32);
 $2 = (($0) + -9)|0;
 $3 = ($2>>>0)<(5);
 $narrow = $1 | $3;
 $4 = $narrow&1;
 return ($4|0);
}
function ___uflow($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (___toread($0)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (FUNCTION_TABLE_iiii[$5 & 1023]($0,$1,1)|0);
  $7 = ($6|0)==(1);
  if ($7) {
   $8 = HEAP8[$1>>0]|0;
   $9 = $8&255;
   $$0 = $9;
  } else {
   $$0 = -1;
  }
 } else {
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8>>>0)>($10>>>0);
 if ($11) {
  $12 = ((($0)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  (FUNCTION_TABLE_iiii[$13 & 1023]($0,0,0)|0);
 }
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$9>>2] = 0;
 HEAP32[$7>>2] = 0;
 $15 = HEAP32[$0>>2]|0;
 $16 = $15 & 4;
 $17 = ($16|0)==(0);
 if ($17) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 8|0);
  HEAP32[$24>>2] = $23;
  $25 = ((($0)) + 4|0);
  HEAP32[$25>>2] = $23;
  $26 = $15 << 27;
  $sext = $26 >> 31;
  $$0 = $sext;
 } else {
  $18 = $15 | 32;
  HEAP32[$0>>2] = $18;
  $$0 = -1;
 }
 return ($$0|0);
}
function _strtoll_l($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_strtoll($0,$1,$2)|0);
 $5 = (getTempRet0() | 0);
 setTempRet0(($5) | 0);
 return ($4|0);
}
function _strtoll($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strtox_735($0,$1,$2,0,-2147483648)|0);
 $4 = (getTempRet0() | 0);
 setTempRet0(($4) | 0);
 return ($3|0);
}
function _islower($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -97)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function _copysign($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = $3 & 2147483647;
 $7 = $5 & -2147483648;
 $8 = $7 | $6;
 HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $8;$9 = +HEAPF64[tempDoublePtr>>3];
 return (+$9);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $4 = sp + 144|0;
 $5 = sp;
 _memcpy(($5|0),(6912|0),144)|0;
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $spec$select = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $spec$select;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($spec$select)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($spec$select|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___vfprintf_internal($0,$1,$2,656,657)|0);
 return ($3|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0512 = 0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0;
 var $$0527 = 0, $$0529 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1528 = 0, $$1530621 = 0;
 var $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0;
 var $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$560 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0;
 var $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$lobit = 0, $$neg = 0, $$neg571 = 0, $$not = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre720 = 0, $$sink757 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0;
 var $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0;
 var $410 = 0, $411 = 0, $412 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond543 = 0, $or$cond546 = 0, $or$cond556 = 0, $or$cond559 = 0, $or$cond6 = 0, $scevgep711 = 0, $scevgep711712 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540722 = 0, $spec$select540723 = 0;
 var $spec$select541 = 0, $spec$select544 = 0.0, $spec$select547 = 0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select561 = 0.0, $spec$select562 = 0, $spec$select563 = 0, $spec$select565 = 0, $spec$select566 = 0, $spec$select567 = 0.0, $spec$select568 = 0.0, $spec$select569 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $6 = sp + 32|0;
 $7 = sp + 536|0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 $12 = (___DOUBLE_BITS_670($1)|0);
 $13 = (getTempRet0() | 0);
 $14 = ($13|0)<(0);
 if ($14) {
  $15 = - $1;
  $16 = (___DOUBLE_BITS_670($15)|0);
  $17 = (getTempRet0() | 0);
  $$0471 = $15;$$0522 = 1;$$0523 = 21204;$25 = $17;$412 = $16;
 } else {
  $18 = $4 & 2048;
  $19 = ($18|0)==(0);
  $20 = $4 & 1;
  $21 = ($20|0)==(0);
  $$ = $21 ? (21205) : (21210);
  $spec$select565 = $19 ? $$ : (21207);
  $22 = $4 & 2049;
  $23 = ($22|0)!=(0);
  $spec$select566 = $23&1;
  $$0471 = $1;$$0522 = $spec$select566;$$0523 = $spec$select565;$25 = $13;$412 = $12;
 }
 $24 = $25 & 2146435072;
 $26 = (0)==(0);
 $27 = ($24|0)==(2146435072);
 $28 = $26 & $27;
 do {
  if ($28) {
   $29 = $5 & 32;
   $30 = ($29|0)!=(0);
   $31 = $30 ? 21223 : 21227;
   $32 = ($$0471 != $$0471) | (0.0 != 0.0);
   $33 = $30 ? 21244 : 21231;
   $$0512 = $32 ? $33 : $31;
   $34 = (($$0522) + 3)|0;
   $35 = $4 & -65537;
   _pad_667($0,32,$2,$34,$35);
   _out($0,$$0523,$$0522);
   _out($0,$$0512,3);
   $36 = $4 ^ 8192;
   _pad_667($0,32,$2,$34,$36);
   $$sink757 = $34;
  } else {
   $37 = (+_frexp($$0471,$7));
   $38 = $37 * 2.0;
   $39 = $38 != 0.0;
   if ($39) {
    $40 = HEAP32[$7>>2]|0;
    $41 = (($40) + -1)|0;
    HEAP32[$7>>2] = $41;
   }
   $42 = $5 | 32;
   $43 = ($42|0)==(97);
   if ($43) {
    $44 = $5 & 32;
    $45 = ($44|0)==(0);
    $46 = ((($$0523)) + 9|0);
    $spec$select = $45 ? $$0523 : $46;
    $47 = $$0522 | 2;
    $48 = ($3>>>0)>(11);
    $49 = (12 - ($3))|0;
    $50 = ($49|0)==(0);
    $51 = $48 | $50;
    do {
     if ($51) {
      $$1472 = $38;
     } else {
      $$0511586 = 8.0;$$1510587 = $49;
      while(1) {
       $52 = (($$1510587) + -1)|0;
       $53 = $$0511586 * 16.0;
       $54 = ($52|0)==(0);
       if ($54) {
        break;
       } else {
        $$0511586 = $53;$$1510587 = $52;
       }
      }
      $55 = HEAP8[$spec$select>>0]|0;
      $56 = ($55<<24>>24)==(45);
      if ($56) {
       $57 = - $38;
       $58 = $57 - $53;
       $59 = $53 + $58;
       $60 = - $59;
       $$1472 = $60;
       break;
      } else {
       $61 = $38 + $53;
       $62 = $61 - $53;
       $$1472 = $62;
       break;
      }
     }
    } while(0);
    $63 = HEAP32[$7>>2]|0;
    $64 = ($63|0)<(0);
    $65 = (0 - ($63))|0;
    $66 = $64 ? $65 : $63;
    $67 = ($66|0)<(0);
    $68 = $67 << 31 >> 31;
    $69 = (_fmt_u($66,$68,$11)|0);
    $70 = ($69|0)==($11|0);
    if ($70) {
     $71 = ((($10)) + 11|0);
     HEAP8[$71>>0] = 48;
     $$0513 = $71;
    } else {
     $$0513 = $69;
    }
    $72 = $63 >> 31;
    $73 = $72 & 2;
    $74 = (($73) + 43)|0;
    $75 = $74&255;
    $76 = ((($$0513)) + -1|0);
    HEAP8[$76>>0] = $75;
    $77 = (($5) + 15)|0;
    $78 = $77&255;
    $79 = ((($$0513)) + -2|0);
    HEAP8[$79>>0] = $78;
    $80 = ($3|0)<(1);
    $81 = $4 & 8;
    $82 = ($81|0)==(0);
    $$0525 = $8;$$2473 = $$1472;
    while(1) {
     $83 = (~~(($$2473)));
     $84 = (1680 + ($83)|0);
     $85 = HEAP8[$84>>0]|0;
     $86 = $85&255;
     $87 = $44 | $86;
     $88 = $87&255;
     $89 = ((($$0525)) + 1|0);
     HEAP8[$$0525>>0] = $88;
     $90 = (+($83|0));
     $91 = $$2473 - $90;
     $92 = $91 * 16.0;
     $93 = $89;
     $94 = (($93) - ($9))|0;
     $95 = ($94|0)==(1);
     if ($95) {
      $96 = $92 == 0.0;
      $or$cond3$not = $80 & $96;
      $or$cond = $82 & $or$cond3$not;
      if ($or$cond) {
       $$1526 = $89;
      } else {
       $97 = ((($$0525)) + 2|0);
       HEAP8[$89>>0] = 46;
       $$1526 = $97;
      }
     } else {
      $$1526 = $89;
     }
     $98 = $92 != 0.0;
     if ($98) {
      $$0525 = $$1526;$$2473 = $92;
     } else {
      break;
     }
    }
    $99 = ($3|0)==(0);
    $$pre720 = $$1526;
    if ($99) {
     label = 25;
    } else {
     $100 = (-2 - ($9))|0;
     $101 = (($100) + ($$pre720))|0;
     $102 = ($101|0)<($3|0);
     if ($102) {
      $103 = $11;
      $104 = $79;
      $105 = (($3) + 2)|0;
      $106 = (($105) + ($103))|0;
      $107 = (($106) - ($104))|0;
      $$0527 = $107;$$pre$phi717Z2D = $103;$$pre$phi718Z2D = $104;
     } else {
      label = 25;
     }
    }
    if ((label|0) == 25) {
     $108 = $11;
     $109 = $79;
     $110 = (($108) - ($9))|0;
     $111 = (($110) - ($109))|0;
     $112 = (($111) + ($$pre720))|0;
     $$0527 = $112;$$pre$phi717Z2D = $108;$$pre$phi718Z2D = $109;
    }
    $113 = (($$0527) + ($47))|0;
    _pad_667($0,32,$2,$113,$4);
    _out($0,$spec$select,$47);
    $114 = $4 ^ 65536;
    _pad_667($0,48,$2,$113,$114);
    $115 = (($$pre720) - ($9))|0;
    _out($0,$8,$115);
    $116 = (($$pre$phi717Z2D) - ($$pre$phi718Z2D))|0;
    $117 = (($115) + ($116))|0;
    $118 = (($$0527) - ($117))|0;
    _pad_667($0,48,$118,0,0);
    _out($0,$79,$116);
    $119 = $4 ^ 8192;
    _pad_667($0,32,$2,$113,$119);
    $$sink757 = $113;
    break;
   }
   $120 = ($3|0)<(0);
   $spec$select539 = $120 ? 6 : $3;
   if ($39) {
    $121 = $38 * 268435456.0;
    $122 = HEAP32[$7>>2]|0;
    $123 = (($122) + -28)|0;
    HEAP32[$7>>2] = $123;
    $$3 = $121;$$pr = $123;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $38;$$pr = $$pre;
   }
   $124 = ($$pr|0)<(0);
   $125 = ((($6)) + 288|0);
   $$0498 = $124 ? $6 : $125;
   $$1499 = $$0498;$$4 = $$3;
   while(1) {
    $126 = (~~(($$4))>>>0);
    HEAP32[$$1499>>2] = $126;
    $127 = ((($$1499)) + 4|0);
    $128 = (+($126>>>0));
    $129 = $$4 - $128;
    $130 = $129 * 1.0E+9;
    $131 = $130 != 0.0;
    if ($131) {
     $$1499 = $127;$$4 = $130;
    } else {
     break;
    }
   }
   $132 = $$0498;
   $133 = ($$pr|0)>(0);
   if ($133) {
    $$1482683 = $$0498;$$2500682 = $127;$134 = $$pr;
    while(1) {
     $135 = ($134|0)<(29);
     $136 = $135 ? $134 : 29;
     $$0488669 = ((($$2500682)) + -4|0);
     $137 = ($$0488669>>>0)<($$1482683>>>0);
     if ($137) {
      $$2483 = $$1482683;
     } else {
      $$0488671 = $$0488669;$$0497670 = 0;
      while(1) {
       $138 = HEAP32[$$0488671>>2]|0;
       $139 = (_bitshift64Shl(($138|0),0,($136|0))|0);
       $140 = (getTempRet0() | 0);
       $141 = (_i64Add(($139|0),($140|0),($$0497670|0),0)|0);
       $142 = (getTempRet0() | 0);
       $143 = (___udivdi3(($141|0),($142|0),1000000000,0)|0);
       $144 = (getTempRet0() | 0);
       $145 = (___muldi3(($143|0),($144|0),1000000000,0)|0);
       $146 = (getTempRet0() | 0);
       $147 = (_i64Subtract(($141|0),($142|0),($145|0),($146|0))|0);
       $148 = (getTempRet0() | 0);
       HEAP32[$$0488671>>2] = $147;
       $$0488 = ((($$0488671)) + -4|0);
       $149 = ($$0488>>>0)<($$1482683>>>0);
       if ($149) {
        break;
       } else {
        $$0488671 = $$0488;$$0497670 = $143;
       }
      }
      $150 = ($143|0)==(0);
      if ($150) {
       $$2483 = $$1482683;
      } else {
       $151 = ((($$1482683)) + -4|0);
       HEAP32[$151>>2] = $143;
       $$2483 = $151;
      }
     }
     $152 = ($$2500682>>>0)>($$2483>>>0);
     L57: do {
      if ($152) {
       $$3501676 = $$2500682;
       while(1) {
        $153 = ((($$3501676)) + -4|0);
        $155 = HEAP32[$153>>2]|0;
        $156 = ($155|0)==(0);
        if (!($156)) {
         $$3501$lcssa = $$3501676;
         break L57;
        }
        $154 = ($153>>>0)>($$2483>>>0);
        if ($154) {
         $$3501676 = $153;
        } else {
         $$3501$lcssa = $153;
         break;
        }
       }
      } else {
       $$3501$lcssa = $$2500682;
      }
     } while(0);
     $157 = HEAP32[$7>>2]|0;
     $158 = (($157) - ($136))|0;
     HEAP32[$7>>2] = $158;
     $159 = ($158|0)>(0);
     if ($159) {
      $$1482683 = $$2483;$$2500682 = $$3501$lcssa;$134 = $158;
     } else {
      $$1482$lcssa = $$2483;$$2500$lcssa = $$3501$lcssa;$$pr564 = $158;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$0498;$$2500$lcssa = $127;$$pr564 = $$pr;
   }
   $160 = ($$pr564|0)<(0);
   if ($160) {
    $161 = (($spec$select539) + 25)|0;
    $162 = (($161|0) / 9)&-1;
    $163 = (($162) + 1)|0;
    $164 = ($42|0)==(102);
    $$3484663 = $$1482$lcssa;$$4502662 = $$2500$lcssa;$166 = $$pr564;
    while(1) {
     $165 = (0 - ($166))|0;
     $167 = ($165|0)<(9);
     $168 = $167 ? $165 : 9;
     $169 = ($$3484663>>>0)<($$4502662>>>0);
     if ($169) {
      $173 = 1 << $168;
      $174 = (($173) + -1)|0;
      $175 = 1000000000 >>> $168;
      $$0487657 = 0;$$1489656 = $$3484663;
      while(1) {
       $176 = HEAP32[$$1489656>>2]|0;
       $177 = $176 & $174;
       $178 = $176 >>> $168;
       $179 = (($178) + ($$0487657))|0;
       HEAP32[$$1489656>>2] = $179;
       $180 = Math_imul($177, $175)|0;
       $181 = ((($$1489656)) + 4|0);
       $182 = ($181>>>0)<($$4502662>>>0);
       if ($182) {
        $$0487657 = $180;$$1489656 = $181;
       } else {
        break;
       }
      }
      $183 = HEAP32[$$3484663>>2]|0;
      $184 = ($183|0)==(0);
      $185 = ((($$3484663)) + 4|0);
      $spec$select540 = $184 ? $185 : $$3484663;
      $186 = ($180|0)==(0);
      if ($186) {
       $$5503 = $$4502662;$spec$select540723 = $spec$select540;
      } else {
       $187 = ((($$4502662)) + 4|0);
       HEAP32[$$4502662>>2] = $180;
       $$5503 = $187;$spec$select540723 = $spec$select540;
      }
     } else {
      $170 = HEAP32[$$3484663>>2]|0;
      $171 = ($170|0)==(0);
      $172 = ((($$3484663)) + 4|0);
      $spec$select540722 = $171 ? $172 : $$3484663;
      $$5503 = $$4502662;$spec$select540723 = $spec$select540722;
     }
     $188 = $164 ? $$0498 : $spec$select540723;
     $189 = $$5503;
     $190 = $188;
     $191 = (($189) - ($190))|0;
     $192 = $191 >> 2;
     $193 = ($192|0)>($163|0);
     $194 = (($188) + ($163<<2)|0);
     $spec$select541 = $193 ? $194 : $$5503;
     $195 = HEAP32[$7>>2]|0;
     $196 = (($195) + ($168))|0;
     HEAP32[$7>>2] = $196;
     $197 = ($196|0)<(0);
     if ($197) {
      $$3484663 = $spec$select540723;$$4502662 = $spec$select541;$166 = $196;
     } else {
      $$3484$lcssa = $spec$select540723;$$4502$lcssa = $spec$select541;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$4502$lcssa = $$2500$lcssa;
   }
   $198 = ($$3484$lcssa>>>0)<($$4502$lcssa>>>0);
   if ($198) {
    $199 = $$3484$lcssa;
    $200 = (($132) - ($199))|0;
    $201 = $200 >> 2;
    $202 = ($201*9)|0;
    $203 = HEAP32[$$3484$lcssa>>2]|0;
    $204 = ($203>>>0)<(10);
    if ($204) {
     $$1517 = $202;
    } else {
     $$0516652 = $202;$$0532651 = 10;
     while(1) {
      $205 = ($$0532651*10)|0;
      $206 = (($$0516652) + 1)|0;
      $207 = ($203>>>0)<($205>>>0);
      if ($207) {
       $$1517 = $206;
       break;
      } else {
       $$0516652 = $206;$$0532651 = $205;
      }
     }
    }
   } else {
    $$1517 = 0;
   }
   $208 = ($42|0)==(102);
   $209 = $208 ? 0 : $$1517;
   $210 = (($spec$select539) - ($209))|0;
   $211 = ($42|0)==(103);
   $212 = ($spec$select539|0)!=(0);
   $213 = $212 & $211;
   $$neg = $213 << 31 >> 31;
   $214 = (($210) + ($$neg))|0;
   $215 = $$4502$lcssa;
   $216 = (($215) - ($132))|0;
   $217 = $216 >> 2;
   $218 = ($217*9)|0;
   $219 = (($218) + -9)|0;
   $220 = ($214|0)<($219|0);
   if ($220) {
    $221 = ((($$0498)) + 4|0);
    $222 = (($214) + 9216)|0;
    $223 = (($222|0) / 9)&-1;
    $224 = (($223) + -1024)|0;
    $225 = (($221) + ($224<<2)|0);
    $226 = ($223*9)|0;
    $227 = (($222) - ($226))|0;
    $228 = ($227|0)<(8);
    if ($228) {
     $$0529$in646 = $227;$$1533645 = 10;
     while(1) {
      $$0529 = (($$0529$in646) + 1)|0;
      $229 = ($$1533645*10)|0;
      $230 = ($$0529$in646|0)<(7);
      if ($230) {
       $$0529$in646 = $$0529;$$1533645 = $229;
      } else {
       $$1533$lcssa = $229;
       break;
      }
     }
    } else {
     $$1533$lcssa = 10;
    }
    $231 = HEAP32[$225>>2]|0;
    $232 = (($231>>>0) / ($$1533$lcssa>>>0))&-1;
    $233 = Math_imul($232, $$1533$lcssa)|0;
    $234 = (($231) - ($233))|0;
    $235 = ($234|0)==(0);
    $236 = ((($225)) + 4|0);
    $237 = ($236|0)==($$4502$lcssa|0);
    $or$cond543 = $237 & $235;
    if ($or$cond543) {
     $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
    } else {
     $238 = $232 & 1;
     $239 = ($238|0)==(0);
     $spec$select544 = $239 ? 9007199254740992.0 : 9007199254740994.0;
     $240 = $$1533$lcssa >>> 1;
     $241 = ($234>>>0)<($240>>>0);
     $242 = ($234|0)==($240|0);
     $or$cond546 = $237 & $242;
     $spec$select561 = $or$cond546 ? 1.0 : 1.5;
     $spec$select567 = $241 ? 0.5 : $spec$select561;
     $243 = ($$0522|0)==(0);
     if ($243) {
      $$1467 = $spec$select567;$$1469 = $spec$select544;
     } else {
      $244 = HEAP8[$$0523>>0]|0;
      $245 = ($244<<24>>24)==(45);
      $246 = - $spec$select544;
      $247 = - $spec$select567;
      $spec$select568 = $245 ? $246 : $spec$select544;
      $spec$select569 = $245 ? $247 : $spec$select567;
      $$1467 = $spec$select569;$$1469 = $spec$select568;
     }
     $248 = (($231) - ($234))|0;
     HEAP32[$225>>2] = $248;
     $249 = $$1469 + $$1467;
     $250 = $249 != $$1469;
     if ($250) {
      $251 = (($248) + ($$1533$lcssa))|0;
      HEAP32[$225>>2] = $251;
      $252 = ($251>>>0)>(999999999);
      if ($252) {
       $$2490638 = $225;$$5486639 = $$3484$lcssa;
       while(1) {
        $253 = ((($$2490638)) + -4|0);
        HEAP32[$$2490638>>2] = 0;
        $254 = ($253>>>0)<($$5486639>>>0);
        if ($254) {
         $255 = ((($$5486639)) + -4|0);
         HEAP32[$255>>2] = 0;
         $$6 = $255;
        } else {
         $$6 = $$5486639;
        }
        $256 = HEAP32[$253>>2]|0;
        $257 = (($256) + 1)|0;
        HEAP32[$253>>2] = $257;
        $258 = ($257>>>0)>(999999999);
        if ($258) {
         $$2490638 = $253;$$5486639 = $$6;
        } else {
         $$2490$lcssa = $253;$$5486$lcssa = $$6;
         break;
        }
       }
      } else {
       $$2490$lcssa = $225;$$5486$lcssa = $$3484$lcssa;
      }
      $259 = $$5486$lcssa;
      $260 = (($132) - ($259))|0;
      $261 = $260 >> 2;
      $262 = ($261*9)|0;
      $263 = HEAP32[$$5486$lcssa>>2]|0;
      $264 = ($263>>>0)<(10);
      if ($264) {
       $$4492 = $$2490$lcssa;$$4520 = $262;$$8 = $$5486$lcssa;
      } else {
       $$2518634 = $262;$$2534633 = 10;
       while(1) {
        $265 = ($$2534633*10)|0;
        $266 = (($$2518634) + 1)|0;
        $267 = ($263>>>0)<($265>>>0);
        if ($267) {
         $$4492 = $$2490$lcssa;$$4520 = $266;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2518634 = $266;$$2534633 = $265;
        }
       }
      }
     } else {
      $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
     }
    }
    $268 = ((($$4492)) + 4|0);
    $269 = ($$4502$lcssa>>>0)>($268>>>0);
    $spec$select547 = $269 ? $268 : $$4502$lcssa;
    $$5521 = $$4520;$$8506 = $spec$select547;$$9 = $$8;
   } else {
    $$5521 = $$1517;$$8506 = $$4502$lcssa;$$9 = $$3484$lcssa;
   }
   $270 = (0 - ($$5521))|0;
   $271 = ($$8506>>>0)>($$9>>>0);
   L109: do {
    if ($271) {
     $$9507625 = $$8506;
     while(1) {
      $272 = ((($$9507625)) + -4|0);
      $274 = HEAP32[$272>>2]|0;
      $275 = ($274|0)==(0);
      if (!($275)) {
       $$9507$lcssa = $$9507625;$$lcssa583 = 1;
       break L109;
      }
      $273 = ($272>>>0)>($$9>>>0);
      if ($273) {
       $$9507625 = $272;
      } else {
       $$9507$lcssa = $272;$$lcssa583 = 0;
       break;
      }
     }
    } else {
     $$9507$lcssa = $$8506;$$lcssa583 = 0;
    }
   } while(0);
   do {
    if ($211) {
     $not$ = $212 ^ 1;
     $276 = $not$&1;
     $spec$select548 = (($spec$select539) + ($276))|0;
     $277 = ($spec$select548|0)>($$5521|0);
     $278 = ($$5521|0)>(-5);
     $or$cond6 = $277 & $278;
     if ($or$cond6) {
      $279 = (($5) + -1)|0;
      $$neg571 = (($spec$select548) + -1)|0;
      $280 = (($$neg571) - ($$5521))|0;
      $$0479 = $279;$$2476 = $280;
     } else {
      $281 = (($5) + -2)|0;
      $282 = (($spec$select548) + -1)|0;
      $$0479 = $281;$$2476 = $282;
     }
     $283 = $4 & 8;
     $284 = ($283|0)==(0);
     if ($284) {
      if ($$lcssa583) {
       $285 = ((($$9507$lcssa)) + -4|0);
       $286 = HEAP32[$285>>2]|0;
       $287 = ($286|0)==(0);
       if ($287) {
        $$2531 = 9;
       } else {
        $288 = (($286>>>0) % 10)&-1;
        $289 = ($288|0)==(0);
        if ($289) {
         $$1530621 = 0;$$3535620 = 10;
         while(1) {
          $290 = ($$3535620*10)|0;
          $291 = (($$1530621) + 1)|0;
          $292 = (($286>>>0) % ($290>>>0))&-1;
          $293 = ($292|0)==(0);
          if ($293) {
           $$1530621 = $291;$$3535620 = $290;
          } else {
           $$2531 = $291;
           break;
          }
         }
        } else {
         $$2531 = 0;
        }
       }
      } else {
       $$2531 = 9;
      }
      $294 = $$0479 | 32;
      $295 = ($294|0)==(102);
      $296 = $$9507$lcssa;
      $297 = (($296) - ($132))|0;
      $298 = $297 >> 2;
      $299 = ($298*9)|0;
      $300 = (($299) + -9)|0;
      if ($295) {
       $301 = (($300) - ($$2531))|0;
       $302 = ($301|0)>(0);
       $spec$select549 = $302 ? $301 : 0;
       $303 = ($$2476|0)<($spec$select549|0);
       $spec$select562 = $303 ? $$2476 : $spec$select549;
       $$1480 = $$0479;$$3477 = $spec$select562;
       break;
      } else {
       $304 = (($300) + ($$5521))|0;
       $305 = (($304) - ($$2531))|0;
       $306 = ($305|0)>(0);
       $spec$select551 = $306 ? $305 : 0;
       $307 = ($$2476|0)<($spec$select551|0);
       $spec$select563 = $307 ? $$2476 : $spec$select551;
       $$1480 = $$0479;$$3477 = $spec$select563;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;
     }
    } else {
     $$1480 = $5;$$3477 = $spec$select539;
    }
   } while(0);
   $308 = ($$3477|0)!=(0);
   $309 = $4 >>> 3;
   $$lobit = $309 & 1;
   $310 = $308 ? 1 : $$lobit;
   $311 = $$1480 | 32;
   $312 = ($311|0)==(102);
   if ($312) {
    $313 = ($$5521|0)>(0);
    $314 = $313 ? $$5521 : 0;
    $$2515 = 0;$$pn = $314;
   } else {
    $315 = ($$5521|0)<(0);
    $316 = $315 ? $270 : $$5521;
    $317 = ($316|0)<(0);
    $318 = $317 << 31 >> 31;
    $319 = (_fmt_u($316,$318,$11)|0);
    $320 = $11;
    $321 = $319;
    $322 = (($320) - ($321))|0;
    $323 = ($322|0)<(2);
    if ($323) {
     $$1514614 = $319;
     while(1) {
      $324 = ((($$1514614)) + -1|0);
      HEAP8[$324>>0] = 48;
      $325 = $324;
      $326 = (($320) - ($325))|0;
      $327 = ($326|0)<(2);
      if ($327) {
       $$1514614 = $324;
      } else {
       $$1514$lcssa = $324;
       break;
      }
     }
    } else {
     $$1514$lcssa = $319;
    }
    $328 = $$5521 >> 31;
    $329 = $328 & 2;
    $330 = (($329) + 43)|0;
    $331 = $330&255;
    $332 = ((($$1514$lcssa)) + -1|0);
    HEAP8[$332>>0] = $331;
    $333 = $$1480&255;
    $334 = ((($$1514$lcssa)) + -2|0);
    HEAP8[$334>>0] = $333;
    $335 = $334;
    $336 = (($320) - ($335))|0;
    $$2515 = $334;$$pn = $336;
   }
   $337 = (($$0522) + 1)|0;
   $338 = (($337) + ($$3477))|0;
   $$1528 = (($338) + ($310))|0;
   $339 = (($$1528) + ($$pn))|0;
   _pad_667($0,32,$2,$339,$4);
   _out($0,$$0523,$$0522);
   $340 = $4 ^ 65536;
   _pad_667($0,48,$2,$339,$340);
   if ($312) {
    $341 = ($$9>>>0)>($$0498>>>0);
    $spec$select554 = $341 ? $$0498 : $$9;
    $342 = ((($8)) + 9|0);
    $343 = $342;
    $344 = ((($8)) + 8|0);
    $$5493603 = $spec$select554;
    while(1) {
     $345 = HEAP32[$$5493603>>2]|0;
     $346 = (_fmt_u($345,0,$342)|0);
     $347 = ($$5493603|0)==($spec$select554|0);
     if ($347) {
      $353 = ($346|0)==($342|0);
      if ($353) {
       HEAP8[$344>>0] = 48;
       $$1465 = $344;
      } else {
       $$1465 = $346;
      }
     } else {
      $348 = ($346>>>0)>($8>>>0);
      if ($348) {
       $349 = $346;
       $350 = (($349) - ($9))|0;
       _memset(($8|0),48,($350|0))|0;
       $$0464599 = $346;
       while(1) {
        $351 = ((($$0464599)) + -1|0);
        $352 = ($351>>>0)>($8>>>0);
        if ($352) {
         $$0464599 = $351;
        } else {
         $$1465 = $351;
         break;
        }
       }
      } else {
       $$1465 = $346;
      }
     }
     $354 = $$1465;
     $355 = (($343) - ($354))|0;
     _out($0,$$1465,$355);
     $356 = ((($$5493603)) + 4|0);
     $357 = ($356>>>0)>($$0498>>>0);
     if ($357) {
      break;
     } else {
      $$5493603 = $356;
     }
    }
    $$not = $308 ^ 1;
    $358 = $4 & 8;
    $359 = ($358|0)==(0);
    $or$cond556 = $359 & $$not;
    if (!($or$cond556)) {
     _out($0,28064,1);
    }
    $360 = ($356>>>0)<($$9507$lcssa>>>0);
    $361 = ($$3477|0)>(0);
    $362 = $360 & $361;
    if ($362) {
     $$4478594 = $$3477;$$6494593 = $356;
     while(1) {
      $363 = HEAP32[$$6494593>>2]|0;
      $364 = (_fmt_u($363,0,$342)|0);
      $365 = ($364>>>0)>($8>>>0);
      if ($365) {
       $366 = $364;
       $367 = (($366) - ($9))|0;
       _memset(($8|0),48,($367|0))|0;
       $$0463588 = $364;
       while(1) {
        $368 = ((($$0463588)) + -1|0);
        $369 = ($368>>>0)>($8>>>0);
        if ($369) {
         $$0463588 = $368;
        } else {
         $$0463$lcssa = $368;
         break;
        }
       }
      } else {
       $$0463$lcssa = $364;
      }
      $370 = ($$4478594|0)<(9);
      $371 = $370 ? $$4478594 : 9;
      _out($0,$$0463$lcssa,$371);
      $372 = ((($$6494593)) + 4|0);
      $373 = (($$4478594) + -9)|0;
      $374 = ($372>>>0)<($$9507$lcssa>>>0);
      $375 = ($$4478594|0)>(9);
      $376 = $374 & $375;
      if ($376) {
       $$4478594 = $373;$$6494593 = $372;
      } else {
       $$4478$lcssa = $373;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $377 = (($$4478$lcssa) + 9)|0;
    _pad_667($0,48,$377,9,0);
   } else {
    $378 = ((($$9)) + 4|0);
    $spec$select557 = $$lcssa583 ? $$9507$lcssa : $378;
    $379 = ($$9>>>0)<($spec$select557>>>0);
    $380 = ($$3477|0)>(-1);
    $381 = $379 & $380;
    if ($381) {
     $382 = ((($8)) + 9|0);
     $383 = $4 & 8;
     $384 = ($383|0)==(0);
     $385 = $382;
     $386 = (0 - ($9))|0;
     $387 = ((($8)) + 8|0);
     $$5609 = $$3477;$$7495608 = $$9;
     while(1) {
      $388 = HEAP32[$$7495608>>2]|0;
      $389 = (_fmt_u($388,0,$382)|0);
      $390 = ($389|0)==($382|0);
      if ($390) {
       HEAP8[$387>>0] = 48;
       $$0 = $387;
      } else {
       $$0 = $389;
      }
      $391 = ($$7495608|0)==($$9|0);
      do {
       if ($391) {
        $395 = ((($$0)) + 1|0);
        _out($0,$$0,1);
        $396 = ($$5609|0)<(1);
        $or$cond559 = $384 & $396;
        if ($or$cond559) {
         $$2 = $395;
         break;
        }
        _out($0,28064,1);
        $$2 = $395;
       } else {
        $392 = ($$0>>>0)>($8>>>0);
        if (!($392)) {
         $$2 = $$0;
         break;
        }
        $scevgep711 = (($$0) + ($386)|0);
        $scevgep711712 = $scevgep711;
        _memset(($8|0),48,($scevgep711712|0))|0;
        $$1604 = $$0;
        while(1) {
         $393 = ((($$1604)) + -1|0);
         $394 = ($393>>>0)>($8>>>0);
         if ($394) {
          $$1604 = $393;
         } else {
          $$2 = $393;
          break;
         }
        }
       }
      } while(0);
      $397 = $$2;
      $398 = (($385) - ($397))|0;
      $399 = ($$5609|0)>($398|0);
      $400 = $399 ? $398 : $$5609;
      _out($0,$$2,$400);
      $401 = (($$5609) - ($398))|0;
      $402 = ((($$7495608)) + 4|0);
      $403 = ($402>>>0)<($spec$select557>>>0);
      $404 = ($401|0)>(-1);
      $405 = $403 & $404;
      if ($405) {
       $$5609 = $401;$$7495608 = $402;
      } else {
       $$5$lcssa = $401;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $406 = (($$5$lcssa) + 18)|0;
    _pad_667($0,48,$406,18,0);
    $407 = $11;
    $408 = $$2515;
    $409 = (($407) - ($408))|0;
    _out($0,$$2515,$409);
   }
   $410 = $4 ^ 8192;
   _pad_667($0,32,$2,$339,$410);
   $$sink757 = $339;
  }
 } while(0);
 $411 = ($$sink757|0)<($2|0);
 $$560 = $411 ? $2 : $$sink757;
 STACKTOP = sp;return ($$560|0);
}
function _pop_arg_long_double($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $arglist_current = 0, $arglist_next = 0, $expanded = 0, $expanded1 = 0, $expanded3 = 0, $expanded4 = 0, $expanded5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $arglist_current = HEAP32[$1>>2]|0;
 $2 = $arglist_current;
 $3 = ((0) + 8|0);
 $expanded1 = $3;
 $expanded = (($expanded1) - 1)|0;
 $4 = (($2) + ($expanded))|0;
 $5 = ((0) + 8|0);
 $expanded5 = $5;
 $expanded4 = (($expanded5) - 1)|0;
 $expanded3 = $expanded4 ^ -1;
 $6 = $4 & $expanded3;
 $7 = $6;
 $8 = +HEAPF64[$7>>3];
 $arglist_next = ((($7)) + 8|0);
 HEAP32[$1>>2] = $arglist_next;
 HEAPF64[$0>>3] = $8;
 return;
}
function ___vfprintf_internal($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select45 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $5 = sp + 208|0;
 $6 = sp + 160|0;
 $7 = sp + 80|0;
 $8 = sp;
 dest=$6; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$5>>2] = $vacopy_currentptr;
 $9 = (_printf_core(0,$1,$5,$7,$6,$3,$4)|0);
 $10 = ($9|0)<(0);
 if ($10) {
  $$0 = -1;
 } else {
  $11 = ((($0)) + 76|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($12|0)>(-1);
  if ($13) {
   $14 = (___lockfile($0)|0);
   $41 = $14;
  } else {
   $41 = 0;
  }
  $15 = HEAP32[$0>>2]|0;
  $16 = $15 & 32;
  $17 = ((($0)) + 74|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = ($18<<24>>24)<(1);
  if ($19) {
   $20 = $15 & -33;
   HEAP32[$0>>2] = $20;
  }
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($22|0)==(0);
  if ($23) {
   $25 = ((($0)) + 44|0);
   $26 = HEAP32[$25>>2]|0;
   HEAP32[$25>>2] = $8;
   $27 = ((($0)) + 28|0);
   HEAP32[$27>>2] = $8;
   $28 = ((($0)) + 20|0);
   HEAP32[$28>>2] = $8;
   HEAP32[$21>>2] = 80;
   $29 = ((($8)) + 80|0);
   $30 = ((($0)) + 16|0);
   HEAP32[$30>>2] = $29;
   $31 = (_printf_core($0,$1,$5,$7,$6,$3,$4)|0);
   $32 = ($26|0)==(0|0);
   if ($32) {
    $$1 = $31;
   } else {
    $33 = ((($0)) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    (FUNCTION_TABLE_iiii[$34 & 1023]($0,0,0)|0);
    $35 = HEAP32[$28>>2]|0;
    $36 = ($35|0)==(0|0);
    $spec$select = $36 ? -1 : $31;
    HEAP32[$25>>2] = $26;
    HEAP32[$21>>2] = 0;
    HEAP32[$30>>2] = 0;
    HEAP32[$27>>2] = 0;
    HEAP32[$28>>2] = 0;
    $$1 = $spec$select;
   }
  } else {
   $24 = (_printf_core($0,$1,$5,$7,$6,$3,$4)|0);
   $$1 = $24;
  }
  $37 = HEAP32[$0>>2]|0;
  $38 = $37 & 32;
  $39 = ($38|0)==(0);
  $spec$select45 = $39 ? $$1 : -1;
  $40 = $37 | $16;
  HEAP32[$0>>2] = $40;
  $42 = ($41|0)==(0);
  if (!($42)) {
   ___unlockfile($0);
  }
  $$0 = $spec$select45;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$ = 0, $$0 = 0, $$0231 = 0, $$0232336 = 0, $$0234 = 0, $$0237 = 0, $$0239 = 0, $$0242315 = 0, $$0242315373 = 0, $$0242335 = 0, $$0245 = 0, $$0245$ph = 0, $$0245$ph$be = 0, $$0249 = 0, $$0249$ph = 0, $$0251$lcssa = 0, $$0251323 = 0, $$0254 = 0, $$0255 = 0, $$0256 = 0;
 var $$0261 = 0, $$0264$lcssa = 0, $$0264330 = 0, $$0271$ph = 0, $$1 = 0, $$1233342 = 0, $$1235 = 0, $$1238 = 0, $$1240 = 0, $$1243341 = 0, $$1250 = 0, $$1252 = 0, $$1257 = 0, $$1262 = 0, $$1265 = 0, $$1272 = 0, $$2236 = 0, $$2241 = 0, $$2244322 = 0, $$2258 = 0;
 var $$2258$ = 0, $$2263 = 0, $$2273 = 0, $$3259 = 0, $$3267 = 0, $$3274 = 0, $$3319 = 0, $$4260372 = 0, $$4268 = 0, $$5 = 0, $$6270 = 0, $$lcssa310 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre362 = 0, $$pre364 = 0, $$pre365 = 0, $$pre365$pre = 0, $$pre366 = 0, $$pre370 = 0;
 var $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0.0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $brmerge = 0, $brmerge328 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $or$cond = 0;
 var $or$cond278 = 0, $or$cond280 = 0, $or$cond285 = 0, $spec$select = 0, $spec$select283 = 0, $spec$select286 = 0, $spec$select293 = 0, $spec$select294 = 0, $spec$select295 = 0, $spec$select296 = 0, $spec$select297 = 0, $spec$select298 = 0, $spec$select299 = 0, $spec$select300 = 0, $spec$select301 = 0, $storemerge275$lcssa = 0, $storemerge275329 = 0, $storemerge276 = 0, $trunc = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp + 56|0;
 $8 = sp + 40|0;
 $9 = sp;
 $10 = sp + 48|0;
 $11 = sp + 60|0;
 HEAP32[$7>>2] = $1;
 $12 = ($0|0)!=(0|0);
 $13 = ((($9)) + 40|0);
 $14 = $13;
 $15 = ((($9)) + 39|0);
 $16 = ((($10)) + 4|0);
 $$0245$ph = 0;$$0249$ph = 0;$$0271$ph = 0;
 L1: while(1) {
  $$0245 = $$0245$ph;$$0249 = $$0249$ph;
  while(1) {
   $17 = ($$0249|0)>(-1);
   do {
    if ($17) {
     $18 = (2147483647 - ($$0249))|0;
     $19 = ($$0245|0)>($18|0);
     if ($19) {
      $20 = (___errno_location()|0);
      HEAP32[$20>>2] = 75;
      $$1250 = -1;
      break;
     } else {
      $21 = (($$0245) + ($$0249))|0;
      $$1250 = $21;
      break;
     }
    } else {
     $$1250 = $$0249;
    }
   } while(0);
   $22 = HEAP32[$7>>2]|0;
   $23 = HEAP8[$22>>0]|0;
   $24 = ($23<<24>>24)==(0);
   if ($24) {
    label = 92;
    break L1;
   }
   $25 = $23;$27 = $22;
   L12: while(1) {
    switch ($25<<24>>24) {
    case 37:  {
     label = 10;
     break L12;
     break;
    }
    case 0:  {
     $$0251$lcssa = $27;
     break L12;
     break;
    }
    default: {
    }
    }
    $26 = ((($27)) + 1|0);
    HEAP32[$7>>2] = $26;
    $$pre = HEAP8[$26>>0]|0;
    $25 = $$pre;$27 = $26;
   }
   L15: do {
    if ((label|0) == 10) {
     label = 0;
     $$0251323 = $27;$29 = $27;
     while(1) {
      $28 = ((($29)) + 1|0);
      $30 = HEAP8[$28>>0]|0;
      $31 = ($30<<24>>24)==(37);
      if (!($31)) {
       $$0251$lcssa = $$0251323;
       break L15;
      }
      $32 = ((($$0251323)) + 1|0);
      $33 = ((($29)) + 2|0);
      HEAP32[$7>>2] = $33;
      $34 = HEAP8[$33>>0]|0;
      $35 = ($34<<24>>24)==(37);
      if ($35) {
       $$0251323 = $32;$29 = $33;
      } else {
       $$0251$lcssa = $32;
       break;
      }
     }
    }
   } while(0);
   $36 = $$0251$lcssa;
   $37 = $22;
   $38 = (($36) - ($37))|0;
   if ($12) {
    _out($0,$22,$38);
   }
   $39 = ($38|0)==(0);
   if ($39) {
    break;
   } else {
    $$0245 = $38;$$0249 = $$1250;
   }
  }
  $40 = HEAP32[$7>>2]|0;
  $41 = ((($40)) + 1|0);
  $42 = HEAP8[$41>>0]|0;
  $43 = $42 << 24 >> 24;
  $44 = (_isdigit($43)|0);
  $45 = ($44|0)==(0);
  $$pre362 = HEAP32[$7>>2]|0;
  if ($45) {
   $$0255 = -1;$$1272 = $$0271$ph;$$sink = 1;
  } else {
   $46 = ((($$pre362)) + 2|0);
   $47 = HEAP8[$46>>0]|0;
   $48 = ($47<<24>>24)==(36);
   if ($48) {
    $49 = ((($$pre362)) + 1|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = $50 << 24 >> 24;
    $52 = (($51) + -48)|0;
    $$0255 = $52;$$1272 = 1;$$sink = 3;
   } else {
    $$0255 = -1;$$1272 = $$0271$ph;$$sink = 1;
   }
  }
  $53 = (($$pre362) + ($$sink)|0);
  HEAP32[$7>>2] = $53;
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  $56 = (($55) + -32)|0;
  $57 = ($56>>>0)>(31);
  $58 = 1 << $56;
  $59 = $58 & 75913;
  $60 = ($59|0)==(0);
  $brmerge328 = $57 | $60;
  if ($brmerge328) {
   $$0264$lcssa = 0;$$lcssa310 = $54;$storemerge275$lcssa = $53;
  } else {
   $$0264330 = 0;$62 = $56;$storemerge275329 = $53;
   while(1) {
    $61 = 1 << $62;
    $63 = $61 | $$0264330;
    $64 = ((($storemerge275329)) + 1|0);
    HEAP32[$7>>2] = $64;
    $65 = HEAP8[$64>>0]|0;
    $66 = $65 << 24 >> 24;
    $67 = (($66) + -32)|0;
    $68 = ($67>>>0)>(31);
    $69 = 1 << $67;
    $70 = $69 & 75913;
    $71 = ($70|0)==(0);
    $brmerge = $68 | $71;
    if ($brmerge) {
     $$0264$lcssa = $63;$$lcssa310 = $65;$storemerge275$lcssa = $64;
     break;
    } else {
     $$0264330 = $63;$62 = $67;$storemerge275329 = $64;
    }
   }
  }
  $72 = ($$lcssa310<<24>>24)==(42);
  if ($72) {
   $73 = ((($storemerge275$lcssa)) + 1|0);
   $74 = HEAP8[$73>>0]|0;
   $75 = $74 << 24 >> 24;
   $76 = (_isdigit($75)|0);
   $77 = ($76|0)==(0);
   if ($77) {
    label = 27;
   } else {
    $78 = HEAP32[$7>>2]|0;
    $79 = ((($78)) + 2|0);
    $80 = HEAP8[$79>>0]|0;
    $81 = ($80<<24>>24)==(36);
    if ($81) {
     $82 = ((($78)) + 1|0);
     $83 = HEAP8[$82>>0]|0;
     $84 = $83 << 24 >> 24;
     $85 = (($84) + -48)|0;
     $86 = (($4) + ($85<<2)|0);
     HEAP32[$86>>2] = 10;
     $87 = HEAP8[$82>>0]|0;
     $88 = $87 << 24 >> 24;
     $89 = (($88) + -48)|0;
     $90 = (($3) + ($89<<3)|0);
     $91 = $90;
     $92 = $91;
     $93 = HEAP32[$92>>2]|0;
     $94 = (($91) + 4)|0;
     $95 = $94;
     $96 = HEAP32[$95>>2]|0;
     $97 = ((($78)) + 3|0);
     $$0261 = $93;$$2273 = 1;$storemerge276 = $97;
    } else {
     label = 27;
    }
   }
   if ((label|0) == 27) {
    label = 0;
    $98 = ($$1272|0)==(0);
    if (!($98)) {
     $$0 = -1;
     break;
    }
    if ($12) {
     $arglist_current = HEAP32[$2>>2]|0;
     $99 = $arglist_current;
     $100 = ((0) + 4|0);
     $expanded4 = $100;
     $expanded = (($expanded4) - 1)|0;
     $101 = (($99) + ($expanded))|0;
     $102 = ((0) + 4|0);
     $expanded8 = $102;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $103 = $101 & $expanded6;
     $104 = $103;
     $105 = HEAP32[$104>>2]|0;
     $arglist_next = ((($104)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $367 = $105;
    } else {
     $367 = 0;
    }
    $106 = HEAP32[$7>>2]|0;
    $107 = ((($106)) + 1|0);
    $$0261 = $367;$$2273 = 0;$storemerge276 = $107;
   }
   HEAP32[$7>>2] = $storemerge276;
   $108 = ($$0261|0)<(0);
   $109 = $$0264$lcssa | 8192;
   $110 = (0 - ($$0261))|0;
   $spec$select293 = $108 ? $109 : $$0264$lcssa;
   $spec$select294 = $108 ? $110 : $$0261;
   $$1262 = $spec$select294;$$1265 = $spec$select293;$$3274 = $$2273;$114 = $storemerge276;
  } else {
   $111 = (_getint($7)|0);
   $112 = ($111|0)<(0);
   if ($112) {
    $$0 = -1;
    break;
   }
   $$pre364 = HEAP32[$7>>2]|0;
   $$1262 = $111;$$1265 = $$0264$lcssa;$$3274 = $$1272;$114 = $$pre364;
  }
  $113 = HEAP8[$114>>0]|0;
  $115 = ($113<<24>>24)==(46);
  do {
   if ($115) {
    $116 = ((($114)) + 1|0);
    $117 = HEAP8[$116>>0]|0;
    $118 = ($117<<24>>24)==(42);
    if (!($118)) {
     HEAP32[$7>>2] = $116;
     $154 = (_getint($7)|0);
     $$pre365$pre = HEAP32[$7>>2]|0;
     $$0256 = $154;$$pre365 = $$pre365$pre;
     break;
    }
    $119 = ((($114)) + 2|0);
    $120 = HEAP8[$119>>0]|0;
    $121 = $120 << 24 >> 24;
    $122 = (_isdigit($121)|0);
    $123 = ($122|0)==(0);
    if (!($123)) {
     $124 = HEAP32[$7>>2]|0;
     $125 = ((($124)) + 3|0);
     $126 = HEAP8[$125>>0]|0;
     $127 = ($126<<24>>24)==(36);
     if ($127) {
      $128 = ((($124)) + 2|0);
      $129 = HEAP8[$128>>0]|0;
      $130 = $129 << 24 >> 24;
      $131 = (($130) + -48)|0;
      $132 = (($4) + ($131<<2)|0);
      HEAP32[$132>>2] = 10;
      $133 = HEAP8[$128>>0]|0;
      $134 = $133 << 24 >> 24;
      $135 = (($134) + -48)|0;
      $136 = (($3) + ($135<<3)|0);
      $137 = $136;
      $138 = $137;
      $139 = HEAP32[$138>>2]|0;
      $140 = (($137) + 4)|0;
      $141 = $140;
      $142 = HEAP32[$141>>2]|0;
      $143 = ((($124)) + 4|0);
      HEAP32[$7>>2] = $143;
      $$0256 = $139;$$pre365 = $143;
      break;
     }
    }
    $144 = ($$3274|0)==(0);
    if (!($144)) {
     $$0 = -1;
     break L1;
    }
    if ($12) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $145 = $arglist_current2;
     $146 = ((0) + 4|0);
     $expanded11 = $146;
     $expanded10 = (($expanded11) - 1)|0;
     $147 = (($145) + ($expanded10))|0;
     $148 = ((0) + 4|0);
     $expanded15 = $148;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $149 = $147 & $expanded13;
     $150 = $149;
     $151 = HEAP32[$150>>2]|0;
     $arglist_next3 = ((($150)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $368 = $151;
    } else {
     $368 = 0;
    }
    $152 = HEAP32[$7>>2]|0;
    $153 = ((($152)) + 2|0);
    HEAP32[$7>>2] = $153;
    $$0256 = $368;$$pre365 = $153;
   } else {
    $$0256 = -1;$$pre365 = $114;
   }
  } while(0);
  $$0254 = 0;$156 = $$pre365;
  while(1) {
   $155 = HEAP8[$156>>0]|0;
   $157 = $155 << 24 >> 24;
   $158 = (($157) + -65)|0;
   $159 = ($158>>>0)>(57);
   if ($159) {
    $$0 = -1;
    break L1;
   }
   $160 = ((($156)) + 1|0);
   HEAP32[$7>>2] = $160;
   $161 = HEAP8[$156>>0]|0;
   $162 = $161 << 24 >> 24;
   $163 = (($162) + -65)|0;
   $164 = ((1216 + (($$0254*58)|0)|0) + ($163)|0);
   $165 = HEAP8[$164>>0]|0;
   $166 = $165&255;
   $167 = (($166) + -1)|0;
   $168 = ($167>>>0)<(8);
   if ($168) {
    $$0254 = $166;$156 = $160;
   } else {
    break;
   }
  }
  $169 = ($165<<24>>24)==(0);
  if ($169) {
   $$0 = -1;
   break;
  }
  $170 = ($165<<24>>24)==(19);
  $171 = ($$0255|0)>(-1);
  do {
   if ($170) {
    if ($171) {
     $$0 = -1;
     break L1;
    } else {
     label = 54;
    }
   } else {
    if ($171) {
     $172 = (($4) + ($$0255<<2)|0);
     HEAP32[$172>>2] = $166;
     $173 = (($3) + ($$0255<<3)|0);
     $174 = $173;
     $175 = $174;
     $176 = HEAP32[$175>>2]|0;
     $177 = (($174) + 4)|0;
     $178 = $177;
     $179 = HEAP32[$178>>2]|0;
     $180 = $8;
     $181 = $180;
     HEAP32[$181>>2] = $176;
     $182 = (($180) + 4)|0;
     $183 = $182;
     HEAP32[$183>>2] = $179;
     label = 54;
     break;
    }
    if (!($12)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($8,$166,$2,$6);
    $$pre366 = HEAP32[$7>>2]|0;
    $185 = $$pre366;
    label = 55;
   }
  } while(0);
  if ((label|0) == 54) {
   label = 0;
   if ($12) {
    $185 = $160;
    label = 55;
   } else {
    $$0245$ph$be = 0;
   }
  }
  L77: do {
   if ((label|0) == 55) {
    label = 0;
    $184 = ((($185)) + -1|0);
    $186 = HEAP8[$184>>0]|0;
    $187 = $186 << 24 >> 24;
    $188 = ($$0254|0)!=(0);
    $189 = $187 & 15;
    $190 = ($189|0)==(3);
    $or$cond278 = $188 & $190;
    $191 = $187 & -33;
    $$0237 = $or$cond278 ? $191 : $187;
    $192 = $$1265 & 8192;
    $193 = ($192|0)==(0);
    $194 = $$1265 & -65537;
    $spec$select = $193 ? $$1265 : $194;
    L79: do {
     switch ($$0237|0) {
     case 110:  {
      $trunc = $$0254&255;
      switch ($trunc<<24>>24) {
      case 0:  {
       $201 = HEAP32[$8>>2]|0;
       HEAP32[$201>>2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 1:  {
       $202 = HEAP32[$8>>2]|0;
       HEAP32[$202>>2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 2:  {
       $203 = ($$1250|0)<(0);
       $204 = $203 << 31 >> 31;
       $205 = HEAP32[$8>>2]|0;
       $206 = $205;
       $207 = $206;
       HEAP32[$207>>2] = $$1250;
       $208 = (($206) + 4)|0;
       $209 = $208;
       HEAP32[$209>>2] = $204;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 3:  {
       $210 = $$1250&65535;
       $211 = HEAP32[$8>>2]|0;
       HEAP16[$211>>1] = $210;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 4:  {
       $212 = $$1250&255;
       $213 = HEAP32[$8>>2]|0;
       HEAP8[$213>>0] = $212;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 6:  {
       $214 = HEAP32[$8>>2]|0;
       HEAP32[$214>>2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      case 7:  {
       $215 = ($$1250|0)<(0);
       $216 = $215 << 31 >> 31;
       $217 = HEAP32[$8>>2]|0;
       $218 = $217;
       $219 = $218;
       HEAP32[$219>>2] = $$1250;
       $220 = (($218) + 4)|0;
       $221 = $220;
       HEAP32[$221>>2] = $216;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
      default: {
       $$0245$ph$be = 0;
       break L77;
      }
      }
      break;
     }
     case 112:  {
      $222 = ($$0256>>>0)>(8);
      $223 = $222 ? $$0256 : 8;
      $224 = $spec$select | 8;
      $$1238 = 120;$$1257 = $223;$$3267 = $224;
      label = 67;
      break;
     }
     case 88: case 120:  {
      $$1238 = $$0237;$$1257 = $$0256;$$3267 = $spec$select;
      label = 67;
      break;
     }
     case 111:  {
      $246 = $8;
      $247 = $246;
      $248 = HEAP32[$247>>2]|0;
      $249 = (($246) + 4)|0;
      $250 = $249;
      $251 = HEAP32[$250>>2]|0;
      $252 = (_fmt_o($248,$251,$13)|0);
      $253 = $spec$select & 8;
      $254 = ($253|0)==(0);
      $255 = $252;
      $256 = (($14) - ($255))|0;
      $257 = ($$0256|0)>($256|0);
      $258 = (($256) + 1)|0;
      $259 = $254 | $257;
      $spec$select297 = $259 ? $$0256 : $258;
      $$0231 = $252;$$1235 = 0;$$1240 = 21187;$$2258 = $spec$select297;$$4268 = $spec$select;
      label = 73;
      break;
     }
     case 105: case 100:  {
      $260 = $8;
      $261 = $260;
      $262 = HEAP32[$261>>2]|0;
      $263 = (($260) + 4)|0;
      $264 = $263;
      $265 = HEAP32[$264>>2]|0;
      $266 = ($265|0)<(0);
      if ($266) {
       $267 = (_i64Subtract(0,0,($262|0),($265|0))|0);
       $268 = (getTempRet0() | 0);
       $269 = $8;
       $270 = $269;
       HEAP32[$270>>2] = $267;
       $271 = (($269) + 4)|0;
       $272 = $271;
       HEAP32[$272>>2] = $268;
       $$0234 = 1;$$0239 = 21187;$279 = $267;$280 = $268;
       label = 72;
       break L79;
      } else {
       $273 = $spec$select & 2048;
       $274 = ($273|0)==(0);
       $275 = $spec$select & 1;
       $276 = ($275|0)==(0);
       $$ = $276 ? 21187 : (21189);
       $spec$select298 = $274 ? $$ : (21188);
       $277 = $spec$select & 2049;
       $278 = ($277|0)!=(0);
       $spec$select299 = $278&1;
       $$0234 = $spec$select299;$$0239 = $spec$select298;$279 = $262;$280 = $265;
       label = 72;
       break L79;
      }
      break;
     }
     case 117:  {
      $195 = $8;
      $196 = $195;
      $197 = HEAP32[$196>>2]|0;
      $198 = (($195) + 4)|0;
      $199 = $198;
      $200 = HEAP32[$199>>2]|0;
      $$0234 = 0;$$0239 = 21187;$279 = $197;$280 = $200;
      label = 72;
      break;
     }
     case 99:  {
      $300 = $8;
      $301 = $300;
      $302 = HEAP32[$301>>2]|0;
      $303 = (($300) + 4)|0;
      $304 = $303;
      $305 = HEAP32[$304>>2]|0;
      $306 = $302&255;
      HEAP8[$15>>0] = $306;
      $$1 = $15;$$2236 = 0;$$2241 = 21187;$$5 = 1;$$6270 = $194;$$pre$phiZ2D = $14;
      break;
     }
     case 115:  {
      $307 = HEAP32[$8>>2]|0;
      $308 = ($307|0)==(0|0);
      $309 = $308 ? 21197 : $307;
      $310 = (_memchr($309,0,$$0256)|0);
      $311 = ($310|0)==(0|0);
      $312 = $310;
      $313 = $309;
      $314 = (($312) - ($313))|0;
      $315 = (($309) + ($$0256)|0);
      $$3259 = $311 ? $$0256 : $314;
      $$1252 = $311 ? $315 : $310;
      $$pre370 = $$1252;
      $$1 = $309;$$2236 = 0;$$2241 = 21187;$$5 = $$3259;$$6270 = $194;$$pre$phiZ2D = $$pre370;
      break;
     }
     case 67:  {
      $316 = $8;
      $317 = $316;
      $318 = HEAP32[$317>>2]|0;
      $319 = (($316) + 4)|0;
      $320 = $319;
      $321 = HEAP32[$320>>2]|0;
      HEAP32[$10>>2] = $318;
      HEAP32[$16>>2] = 0;
      HEAP32[$8>>2] = $10;
      $$4260372 = -1;
      label = 79;
      break;
     }
     case 83:  {
      $322 = ($$0256|0)==(0);
      if ($322) {
       _pad_667($0,32,$$1262,0,$spec$select);
       $$0242315373 = 0;
       label = 89;
      } else {
       $$4260372 = $$0256;
       label = 79;
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      $345 = +HEAPF64[$8>>3];
      $346 = (FUNCTION_TABLE_iidiiii[$5 & 1023]($0,$345,$$1262,$$0256,$spec$select,$$0237)|0);
      $$0245$ph$be = $346;
      break L77;
      break;
     }
     default: {
      $$1 = $22;$$2236 = 0;$$2241 = 21187;$$5 = $$0256;$$6270 = $spec$select;$$pre$phiZ2D = $14;
     }
     }
    } while(0);
    L102: do {
     if ((label|0) == 67) {
      label = 0;
      $225 = $8;
      $226 = $225;
      $227 = HEAP32[$226>>2]|0;
      $228 = (($225) + 4)|0;
      $229 = $228;
      $230 = HEAP32[$229>>2]|0;
      $231 = $$1238 & 32;
      $232 = (_fmt_x($227,$230,$13,$231)|0);
      $233 = $8;
      $234 = $233;
      $235 = HEAP32[$234>>2]|0;
      $236 = (($233) + 4)|0;
      $237 = $236;
      $238 = HEAP32[$237>>2]|0;
      $239 = ($235|0)==(0);
      $240 = ($238|0)==(0);
      $241 = $239 & $240;
      $242 = $$3267 & 8;
      $243 = ($242|0)==(0);
      $or$cond280 = $243 | $241;
      $244 = $$1238 >>> 4;
      $245 = (21187 + ($244)|0);
      $spec$select295 = $or$cond280 ? 21187 : $245;
      $spec$select296 = $or$cond280 ? 0 : 2;
      $$0231 = $232;$$1235 = $spec$select296;$$1240 = $spec$select295;$$2258 = $$1257;$$4268 = $$3267;
      label = 73;
     }
     else if ((label|0) == 72) {
      label = 0;
      $281 = (_fmt_u($279,$280,$13)|0);
      $$0231 = $281;$$1235 = $$0234;$$1240 = $$0239;$$2258 = $$0256;$$4268 = $spec$select;
      label = 73;
     }
     else if ((label|0) == 79) {
      label = 0;
      $323 = HEAP32[$8>>2]|0;
      $$0232336 = $323;$$0242335 = 0;
      while(1) {
       $324 = HEAP32[$$0232336>>2]|0;
       $325 = ($324|0)==(0);
       if ($325) {
        $$0242315 = $$0242335;
        break;
       }
       $326 = (_wctomb($11,$324)|0);
       $327 = ($326|0)<(0);
       $328 = (($$4260372) - ($$0242335))|0;
       $329 = ($326>>>0)>($328>>>0);
       $or$cond285 = $327 | $329;
       if ($or$cond285) {
        label = 83;
        break;
       }
       $330 = ((($$0232336)) + 4|0);
       $331 = (($326) + ($$0242335))|0;
       $332 = ($$4260372>>>0)>($331>>>0);
       if ($332) {
        $$0232336 = $330;$$0242335 = $331;
       } else {
        $$0242315 = $331;
        break;
       }
      }
      if ((label|0) == 83) {
       label = 0;
       if ($327) {
        $$0 = -1;
        break L1;
       } else {
        $$0242315 = $$0242335;
       }
      }
      _pad_667($0,32,$$1262,$$0242315,$spec$select);
      $333 = ($$0242315|0)==(0);
      if ($333) {
       $$0242315373 = 0;
       label = 89;
      } else {
       $334 = HEAP32[$8>>2]|0;
       $$1233342 = $334;$$1243341 = 0;
       while(1) {
        $335 = HEAP32[$$1233342>>2]|0;
        $336 = ($335|0)==(0);
        if ($336) {
         $$0242315373 = $$0242315;
         label = 89;
         break L102;
        }
        $337 = (_wctomb($11,$335)|0);
        $338 = (($337) + ($$1243341))|0;
        $339 = ($338|0)>($$0242315|0);
        if ($339) {
         $$0242315373 = $$0242315;
         label = 89;
         break L102;
        }
        $340 = ((($$1233342)) + 4|0);
        _out($0,$11,$337);
        $341 = ($338>>>0)<($$0242315>>>0);
        if ($341) {
         $$1233342 = $340;$$1243341 = $338;
        } else {
         $$0242315373 = $$0242315;
         label = 89;
         break;
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 73) {
     label = 0;
     $282 = ($$2258|0)>(-1);
     $283 = $$4268 & -65537;
     $spec$select283 = $282 ? $283 : $$4268;
     $284 = $8;
     $285 = $284;
     $286 = HEAP32[$285>>2]|0;
     $287 = (($284) + 4)|0;
     $288 = $287;
     $289 = HEAP32[$288>>2]|0;
     $290 = ($286|0)!=(0);
     $291 = ($289|0)!=(0);
     $292 = $290 | $291;
     $293 = ($$2258|0)!=(0);
     $or$cond = $293 | $292;
     $294 = $$0231;
     $295 = (($14) - ($294))|0;
     $296 = $292 ^ 1;
     $297 = $296&1;
     $298 = (($295) + ($297))|0;
     $299 = ($$2258|0)>($298|0);
     $$2258$ = $299 ? $$2258 : $298;
     $spec$select300 = $or$cond ? $$2258$ : 0;
     $spec$select301 = $or$cond ? $$0231 : $13;
     $$1 = $spec$select301;$$2236 = $$1235;$$2241 = $$1240;$$5 = $spec$select300;$$6270 = $spec$select283;$$pre$phiZ2D = $14;
    }
    else if ((label|0) == 89) {
     label = 0;
     $342 = $spec$select ^ 8192;
     _pad_667($0,32,$$1262,$$0242315373,$342);
     $343 = ($$1262|0)>($$0242315373|0);
     $344 = $343 ? $$1262 : $$0242315373;
     $$0245$ph$be = $344;
     break;
    }
    $347 = $$1;
    $348 = (($$pre$phiZ2D) - ($347))|0;
    $349 = ($$5|0)<($348|0);
    $spec$select286 = $349 ? $348 : $$5;
    $350 = (($spec$select286) + ($$2236))|0;
    $351 = ($$1262|0)<($350|0);
    $$2263 = $351 ? $350 : $$1262;
    _pad_667($0,32,$$2263,$350,$$6270);
    _out($0,$$2241,$$2236);
    $352 = $$6270 ^ 65536;
    _pad_667($0,48,$$2263,$350,$352);
    _pad_667($0,48,$spec$select286,$348,0);
    _out($0,$$1,$348);
    $353 = $$6270 ^ 8192;
    _pad_667($0,32,$$2263,$350,$353);
    $$0245$ph$be = $$2263;
   }
  } while(0);
  $$0245$ph = $$0245$ph$be;$$0249$ph = $$1250;$$0271$ph = $$3274;
 }
 L123: do {
  if ((label|0) == 92) {
   $354 = ($0|0)==(0|0);
   if ($354) {
    $355 = ($$0271$ph|0)==(0);
    if ($355) {
     $$0 = 0;
    } else {
     $$2244322 = 1;
     while(1) {
      $356 = (($4) + ($$2244322<<2)|0);
      $357 = HEAP32[$356>>2]|0;
      $358 = ($357|0)==(0);
      if ($358) {
       break;
      }
      $359 = (($3) + ($$2244322<<3)|0);
      _pop_arg($359,$357,$2,$6);
      $360 = (($$2244322) + 1)|0;
      $361 = ($360>>>0)<(10);
      if ($361) {
       $$2244322 = $360;
      } else {
       $$0 = 1;
       break L123;
      }
     }
     $$3319 = $$2244322;
     while(1) {
      $364 = (($4) + ($$3319<<2)|0);
      $365 = HEAP32[$364>>2]|0;
      $366 = ($365|0)==(0);
      $362 = (($$3319) + 1)|0;
      if (!($366)) {
       $$0 = -1;
       break L123;
      }
      $363 = ($362>>>0)<(10);
      if ($363) {
       $$3319 = $362;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1250;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = HEAP32[$0>>2]|0;
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0;
 var $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded25 = 0, $expanded27 = 0, $expanded28 = 0, $expanded29 = 0, $expanded31 = 0, $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded36 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0;
 var $expanded42 = 0, $expanded43 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded50 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded57 = 0, $expanded59 = 0, $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded64 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0;
 var $expanded70 = 0, $expanded71 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded78 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded85 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($1>>>0)>(20);
 L1: do {
  if (!($4)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $5 = $arglist_current;
     $6 = ((0) + 4|0);
     $expanded25 = $6;
     $expanded = (($expanded25) - 1)|0;
     $7 = (($5) + ($expanded))|0;
     $8 = ((0) + 4|0);
     $expanded29 = $8;
     $expanded28 = (($expanded29) - 1)|0;
     $expanded27 = $expanded28 ^ -1;
     $9 = $7 & $expanded27;
     $10 = $9;
     $11 = HEAP32[$10>>2]|0;
     $arglist_next = ((($10)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $11;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $12 = $arglist_current2;
     $13 = ((0) + 4|0);
     $expanded32 = $13;
     $expanded31 = (($expanded32) - 1)|0;
     $14 = (($12) + ($expanded31))|0;
     $15 = ((0) + 4|0);
     $expanded36 = $15;
     $expanded35 = (($expanded36) - 1)|0;
     $expanded34 = $expanded35 ^ -1;
     $16 = $14 & $expanded34;
     $17 = $16;
     $18 = HEAP32[$17>>2]|0;
     $arglist_next3 = ((($17)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $19 = ($18|0)<(0);
     $20 = $19 << 31 >> 31;
     $21 = $0;
     $22 = $21;
     HEAP32[$22>>2] = $18;
     $23 = (($21) + 4)|0;
     $24 = $23;
     HEAP32[$24>>2] = $20;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $25 = $arglist_current5;
     $26 = ((0) + 4|0);
     $expanded39 = $26;
     $expanded38 = (($expanded39) - 1)|0;
     $27 = (($25) + ($expanded38))|0;
     $28 = ((0) + 4|0);
     $expanded43 = $28;
     $expanded42 = (($expanded43) - 1)|0;
     $expanded41 = $expanded42 ^ -1;
     $29 = $27 & $expanded41;
     $30 = $29;
     $31 = HEAP32[$30>>2]|0;
     $arglist_next6 = ((($30)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $32 = $0;
     $33 = $32;
     HEAP32[$33>>2] = $31;
     $34 = (($32) + 4)|0;
     $35 = $34;
     HEAP32[$35>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $36 = $arglist_current8;
     $37 = ((0) + 8|0);
     $expanded46 = $37;
     $expanded45 = (($expanded46) - 1)|0;
     $38 = (($36) + ($expanded45))|0;
     $39 = ((0) + 8|0);
     $expanded50 = $39;
     $expanded49 = (($expanded50) - 1)|0;
     $expanded48 = $expanded49 ^ -1;
     $40 = $38 & $expanded48;
     $41 = $40;
     $42 = $41;
     $43 = $42;
     $44 = HEAP32[$43>>2]|0;
     $45 = (($42) + 4)|0;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $arglist_next9 = ((($41)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $48 = $0;
     $49 = $48;
     HEAP32[$49>>2] = $44;
     $50 = (($48) + 4)|0;
     $51 = $50;
     HEAP32[$51>>2] = $47;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $52 = $arglist_current11;
     $53 = ((0) + 4|0);
     $expanded53 = $53;
     $expanded52 = (($expanded53) - 1)|0;
     $54 = (($52) + ($expanded52))|0;
     $55 = ((0) + 4|0);
     $expanded57 = $55;
     $expanded56 = (($expanded57) - 1)|0;
     $expanded55 = $expanded56 ^ -1;
     $56 = $54 & $expanded55;
     $57 = $56;
     $58 = HEAP32[$57>>2]|0;
     $arglist_next12 = ((($57)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $59 = $58&65535;
     $60 = $59 << 16 >> 16;
     $61 = ($60|0)<(0);
     $62 = $61 << 31 >> 31;
     $63 = $0;
     $64 = $63;
     HEAP32[$64>>2] = $60;
     $65 = (($63) + 4)|0;
     $66 = $65;
     HEAP32[$66>>2] = $62;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $67 = $arglist_current14;
     $68 = ((0) + 4|0);
     $expanded60 = $68;
     $expanded59 = (($expanded60) - 1)|0;
     $69 = (($67) + ($expanded59))|0;
     $70 = ((0) + 4|0);
     $expanded64 = $70;
     $expanded63 = (($expanded64) - 1)|0;
     $expanded62 = $expanded63 ^ -1;
     $71 = $69 & $expanded62;
     $72 = $71;
     $73 = HEAP32[$72>>2]|0;
     $arglist_next15 = ((($72)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $73 & 65535;
     $74 = $0;
     $75 = $74;
     HEAP32[$75>>2] = $$mask31;
     $76 = (($74) + 4)|0;
     $77 = $76;
     HEAP32[$77>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $78 = $arglist_current17;
     $79 = ((0) + 4|0);
     $expanded67 = $79;
     $expanded66 = (($expanded67) - 1)|0;
     $80 = (($78) + ($expanded66))|0;
     $81 = ((0) + 4|0);
     $expanded71 = $81;
     $expanded70 = (($expanded71) - 1)|0;
     $expanded69 = $expanded70 ^ -1;
     $82 = $80 & $expanded69;
     $83 = $82;
     $84 = HEAP32[$83>>2]|0;
     $arglist_next18 = ((($83)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $85 = $84&255;
     $86 = $85 << 24 >> 24;
     $87 = ($86|0)<(0);
     $88 = $87 << 31 >> 31;
     $89 = $0;
     $90 = $89;
     HEAP32[$90>>2] = $86;
     $91 = (($89) + 4)|0;
     $92 = $91;
     HEAP32[$92>>2] = $88;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $93 = $arglist_current20;
     $94 = ((0) + 4|0);
     $expanded74 = $94;
     $expanded73 = (($expanded74) - 1)|0;
     $95 = (($93) + ($expanded73))|0;
     $96 = ((0) + 4|0);
     $expanded78 = $96;
     $expanded77 = (($expanded78) - 1)|0;
     $expanded76 = $expanded77 ^ -1;
     $97 = $95 & $expanded76;
     $98 = $97;
     $99 = HEAP32[$98>>2]|0;
     $arglist_next21 = ((($98)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $99 & 255;
     $100 = $0;
     $101 = $100;
     HEAP32[$101>>2] = $$mask;
     $102 = (($100) + 4)|0;
     $103 = $102;
     HEAP32[$103>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $104 = $arglist_current23;
     $105 = ((0) + 8|0);
     $expanded81 = $105;
     $expanded80 = (($expanded81) - 1)|0;
     $106 = (($104) + ($expanded80))|0;
     $107 = ((0) + 8|0);
     $expanded85 = $107;
     $expanded84 = (($expanded85) - 1)|0;
     $expanded83 = $expanded84 ^ -1;
     $108 = $106 & $expanded83;
     $109 = $108;
     $110 = +HEAPF64[$109>>3];
     $arglist_next24 = ((($109)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $110;
     break L1;
     break;
    }
    case 18:  {
     FUNCTION_TABLE_vii[$3 & 1023]($0,$2);
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (1680 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = (getTempRet0() | 0);
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = (getTempRet0() | 0);
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $11 = (getTempRet0() | 0);
   $12 = (___muldi3(($10|0),($11|0),10,0)|0);
   $13 = (getTempRet0() | 0);
   $14 = (_i64Subtract(($8|0),($9|0),($12|0),($13|0))|0);
   $15 = (getTempRet0() | 0);
   $16 = $14&255;
   $17 = $16 | 48;
   $18 = ((($$0914)) + -1|0);
   HEAP8[$18>>0] = $17;
   $19 = ($9>>>0)>(9);
   $20 = ($8>>>0)>(4294967295);
   $21 = ($9|0)==(9);
   $22 = $21 & $20;
   $23 = $19 | $22;
   if ($23) {
    $$0914 = $18;$8 = $10;$9 = $11;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $10;$$09$lcssa = $18;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $24 = ($$010$lcssa$off0|0)==(0);
 if ($24) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $25 = (($$012>>>0) / 10)&-1;
   $26 = ($25*10)|0;
   $27 = (($$012) - ($26))|0;
   $28 = $27 | 48;
   $29 = $28&255;
   $30 = ((($$111)) + -1|0);
   HEAP8[$30>>0] = $29;
   $31 = ($$012>>>0)<(10);
   if ($31) {
    $$1$lcssa = $30;
    break;
   } else {
    $$012 = $25;$$111 = $30;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   label = 16;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $38 = ($$036$lcssa64|0)==(0);
    if ($38) {
     label = 16;
     break;
    } else {
     $39 = $$035$lcssa65;
     break;
    }
   }
   $20 = Math_imul($3, 16843009)|0;
   $21 = ($$036$lcssa64>>>0)>(3);
   L13: do {
    if ($21) {
     $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
     while(1) {
      $22 = HEAP32[$$046>>2]|0;
      $23 = $22 ^ $20;
      $24 = (($23) + -16843009)|0;
      $25 = $23 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$137$lcssa66 = $$13745;$$in = $$046;
       break L13;
      }
      $29 = ((($$046)) + 4|0);
      $30 = (($$13745) + -4)|0;
      $31 = ($30>>>0)>(3);
      if ($31) {
       $$046 = $29;$$13745 = $30;
      } else {
       $$0$lcssa = $29;$$137$lcssa = $30;
       label = 11;
       break;
      }
     }
    } else {
     $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
     label = 11;
    }
   } while(0);
   if ((label|0) == 11) {
    $32 = ($$137$lcssa|0)==(0);
    if ($32) {
     label = 16;
     break;
    } else {
     $$137$lcssa66 = $$137$lcssa;$$in = $$0$lcssa;
    }
   }
   $$140 = $$in;$$23839 = $$137$lcssa66;
   while(1) {
    $33 = HEAP8[$$140>>0]|0;
    $34 = ($33<<24>>24)==($18<<24>>24);
    if ($34) {
     $39 = $$140;
     break L8;
    }
    $35 = ((($$140)) + 1|0);
    $36 = (($$23839) + -1)|0;
    $37 = ($36|0)==(0);
    if ($37) {
     label = 16;
     break;
    } else {
     $$140 = $35;$$23839 = $36;
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $39 = 0;
 }
 return ($39|0);
}
function _pad_667($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_423()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     HEAP8[$0>>0] = $14;
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     HEAP32[$13>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $18;
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    HEAP8[$19>>0] = $22;
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $28;
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    HEAP8[$29>>0] = $33;
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    HEAP8[$34>>0] = $37;
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $42;
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    HEAP8[$43>>0] = $47;
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    HEAP8[$48>>0] = $52;
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    HEAP8[$53>>0] = $56;
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    HEAP32[$57>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_423() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10864|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03846 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)<(0);
   $21 = ($1|0)==(0);
   $or$cond = $20 | $21;
   L10: do {
    if ($or$cond) {
     $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
    } else {
     $$03846 = $1;
     while(1) {
      $22 = (($$03846) + -1)|0;
      $24 = (($0) + ($22)|0);
      $25 = HEAP8[$24>>0]|0;
      $26 = ($25<<24>>24)==(10);
      if ($26) {
       break;
      }
      $23 = ($22|0)==(0);
      if ($23) {
       $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
       break L10;
      } else {
       $$03846 = $22;
      }
     }
     $27 = ((($2)) + 36|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = (FUNCTION_TABLE_iiii[$28 & 1023]($2,$0,$$03846)|0);
     $30 = ($29>>>0)<($$03846>>>0);
     if ($30) {
      $$1 = $29;
      break L5;
     }
     $31 = (($0) + ($$03846)|0);
     $$042 = (($1) - ($$03846))|0;
     $$pre48 = HEAP32[$9>>2]|0;
     $$139 = $$03846;$$141 = $31;$$143 = $$042;$32 = $$pre48;
    }
   } while(0);
   (_memcpy(($32|0),($$141|0),($$143|0))|0);
   $33 = HEAP32[$9>>2]|0;
   $34 = (($33) + ($$143)|0);
   HEAP32[$9>>2] = $34;
   $35 = (($$139) + ($$143))|0;
   $$1 = $35;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___DOUBLE_BITS_670($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 setTempRet0(($2) | 0);
 return ($1|0);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = (getTempRet0() | 0);
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $spec$select = $8 ? $2 : $7;
 $$cast = $6;
 (_memcpy(($$cast|0),($1|0),($spec$select|0))|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($spec$select)|0);
 HEAP32[$5>>2] = $10;
 return ($2|0);
}
function ___ctype_b_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (11108|0);
}
function ___ctype_get_mb_cur_max() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___pthread_self()|0);
 $1 = ((($0)) + 188|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 $5 = $4 ? 1 : 4;
 return ($5|0);
}
function ___pthread_self() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___ctype_tolower_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (11112|0);
}
function ___ctype_toupper_loc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (11116|0);
}
function _wcslen($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $0;
 while(1) {
  $1 = HEAP32[$$0>>2]|0;
  $2 = ($1|0)==(0);
  $3 = ((($$0)) + 4|0);
  if ($2) {
   break;
  } else {
   $$0 = $3;
  }
 }
 $4 = $$0;
 $5 = $0;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 return ($7|0);
}
function _isxdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $narrow = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isdigit($0)|0);
 $2 = ($1|0)!=(0);
 $3 = $0 | 32;
 $4 = (($3) + -97)|0;
 $5 = ($4>>>0)<(6);
 $narrow = $5 | $2;
 $spec$select = $narrow&1;
 return ($spec$select|0);
}
function ___floatscan($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0102 = 0, $$0103 = 0, $$0104122 = 0, $$0110 = 0, $$0111 = 0.0, $$1$lcssa = 0, $$1105118 = 0, $$1123 = 0, $$2 = 0, $$2106120 = 0, $$3107 = 0, $$3121 = 0, $$4 = 0, $$4108 = 0, $$5 = 0, $$6 = 0, $$in = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond124 = 0, $or$cond5 = 0, $or$cond7 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 0:  {
  $$0102 = -149;$$0103 = 24;
  label = 4;
  break;
 }
 case 1:  {
  $$0102 = -1074;$$0103 = 53;
  label = 4;
  break;
 }
 case 2:  {
  $$0102 = -1074;$$0103 = 53;
  label = 4;
  break;
 }
 default: {
  $$0111 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $3 = ((($0)) + 4|0);
   $4 = ((($0)) + 104|0);
   while(1) {
    $5 = HEAP32[$3>>2]|0;
    $6 = HEAP32[$4>>2]|0;
    $7 = ($5>>>0)<($6>>>0);
    if ($7) {
     $8 = ((($5)) + 1|0);
     HEAP32[$3>>2] = $8;
     $9 = HEAP8[$5>>0]|0;
     $10 = $9&255;
     $12 = $10;
    } else {
     $11 = (___shgetc($0)|0);
     $12 = $11;
    }
    $13 = (_isspace($12)|0);
    $14 = ($13|0)==(0);
    if ($14) {
     break;
    }
   }
   L13: do {
    switch ($12|0) {
    case 43: case 45:  {
     $15 = ($12|0)==(45);
     $16 = $15&1;
     $17 = $16 << 1;
     $18 = (1 - ($17))|0;
     $19 = HEAP32[$3>>2]|0;
     $20 = HEAP32[$4>>2]|0;
     $21 = ($19>>>0)<($20>>>0);
     if ($21) {
      $22 = ((($19)) + 1|0);
      HEAP32[$3>>2] = $22;
      $23 = HEAP8[$19>>0]|0;
      $24 = $23&255;
      $$0 = $24;$$0110 = $18;
      break L13;
     } else {
      $25 = (___shgetc($0)|0);
      $$0 = $25;$$0110 = $18;
      break L13;
     }
     break;
    }
    default: {
     $$0 = $12;$$0110 = 1;
    }
    }
   } while(0);
   $$0104122 = 0;$$1123 = $$0;
   while(1) {
    $26 = $$1123 | 32;
    $27 = (21235 + ($$0104122)|0);
    $28 = HEAP8[$27>>0]|0;
    $29 = $28 << 24 >> 24;
    $30 = ($26|0)==($29|0);
    if (!($30)) {
     $$1$lcssa = $$1123;$trunc = $$0104122;
     break;
    }
    $31 = ($$0104122>>>0)<(7);
    do {
     if ($31) {
      $32 = HEAP32[$3>>2]|0;
      $33 = HEAP32[$4>>2]|0;
      $34 = ($32>>>0)<($33>>>0);
      if ($34) {
       $35 = ((($32)) + 1|0);
       HEAP32[$3>>2] = $35;
       $36 = HEAP8[$32>>0]|0;
       $37 = $36&255;
       $$2 = $37;
       break;
      } else {
       $38 = (___shgetc($0)|0);
       $$2 = $38;
       break;
      }
     } else {
      $$2 = $$1123;
     }
    } while(0);
    $39 = (($$0104122) + 1)|0;
    $40 = ($39>>>0)<(8);
    if ($40) {
     $$0104122 = $39;$$1123 = $$2;
    } else {
     $$1$lcssa = $$2;$trunc = 8;
     break;
    }
   }
   $trunc$clear = $trunc & 2147483647;
   L29: do {
    switch ($trunc$clear|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $41 = ($trunc>>>0)>(3);
     $42 = ($2|0)!=(0);
     $or$cond5 = $42 & $41;
     if ($or$cond5) {
      $43 = ($trunc|0)==(8);
      if ($43) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $57 = ($trunc|0)==(0);
     L34: do {
      if ($57) {
       $$2106120 = 0;$$3121 = $$1$lcssa;
       while(1) {
        $58 = $$3121 | 32;
        $59 = (21244 + ($$2106120)|0);
        $60 = HEAP8[$59>>0]|0;
        $61 = $60 << 24 >> 24;
        $62 = ($58|0)==($61|0);
        if (!($62)) {
         $$3107 = $$2106120;$$5 = $$3121;
         break L34;
        }
        $63 = ($$2106120>>>0)<(2);
        do {
         if ($63) {
          $64 = HEAP32[$3>>2]|0;
          $65 = HEAP32[$4>>2]|0;
          $66 = ($64>>>0)<($65>>>0);
          if ($66) {
           $67 = ((($64)) + 1|0);
           HEAP32[$3>>2] = $67;
           $68 = HEAP8[$64>>0]|0;
           $69 = $68&255;
           $$4 = $69;
           break;
          } else {
           $70 = (___shgetc($0)|0);
           $$4 = $70;
           break;
          }
         } else {
          $$4 = $$3121;
         }
        } while(0);
        $71 = (($$2106120) + 1)|0;
        $72 = ($71>>>0)<(3);
        if ($72) {
         $$2106120 = $71;$$3121 = $$4;
        } else {
         $$3107 = 3;$$5 = $$4;
         break;
        }
       }
      } else {
       $$3107 = $trunc;$$5 = $$1$lcssa;
      }
     } while(0);
     switch ($$3107|0) {
     case 3:  {
      $73 = HEAP32[$3>>2]|0;
      $74 = HEAP32[$4>>2]|0;
      $75 = ($73>>>0)<($74>>>0);
      if ($75) {
       $76 = ((($73)) + 1|0);
       HEAP32[$3>>2] = $76;
       $77 = HEAP8[$73>>0]|0;
       $78 = $77&255;
       $80 = $78;
      } else {
       $79 = (___shgetc($0)|0);
       $80 = $79;
      }
      $81 = ($80|0)==(40);
      if (!($81)) {
       $82 = HEAP32[$4>>2]|0;
       $83 = ($82|0)==(0|0);
       if ($83) {
        $$0111 = nan;
        break L4;
       }
       $84 = HEAP32[$3>>2]|0;
       $85 = ((($84)) + -1|0);
       HEAP32[$3>>2] = $85;
       $$0111 = nan;
       break L4;
      }
      $$4108 = 1;
      while(1) {
       $86 = HEAP32[$3>>2]|0;
       $87 = HEAP32[$4>>2]|0;
       $88 = ($86>>>0)<($87>>>0);
       if ($88) {
        $89 = ((($86)) + 1|0);
        HEAP32[$3>>2] = $89;
        $90 = HEAP8[$86>>0]|0;
        $91 = $90&255;
        $94 = $91;
       } else {
        $92 = (___shgetc($0)|0);
        $94 = $92;
       }
       $93 = (($94) + -48)|0;
       $95 = ($93>>>0)<(10);
       $96 = (($94) + -65)|0;
       $97 = ($96>>>0)<(26);
       $or$cond = $95 | $97;
       if (!($or$cond)) {
        $98 = (($94) + -97)|0;
        $99 = ($98>>>0)<(26);
        $100 = ($94|0)==(95);
        $or$cond7 = $100 | $99;
        if (!($or$cond7)) {
         break;
        }
       }
       $112 = (($$4108) + 1)|0;
       $$4108 = $112;
      }
      $101 = ($94|0)==(41);
      if ($101) {
       $$0111 = nan;
       break L4;
      }
      $102 = HEAP32[$4>>2]|0;
      $103 = ($102|0)==(0|0);
      if (!($103)) {
       $104 = HEAP32[$3>>2]|0;
       $105 = ((($104)) + -1|0);
       HEAP32[$3>>2] = $105;
      }
      if (!($42)) {
       $106 = (___errno_location()|0);
       HEAP32[$106>>2] = 22;
       ___shlim($0,0,0);
       $$0111 = 0.0;
       break L4;
      }
      $107 = ($$4108|0)==(0);
      if ($107) {
       $$0111 = nan;
       break L4;
      }
      $$in = $$4108;
      while(1) {
       $108 = (($$in) + -1)|0;
       if (!($103)) {
        $109 = HEAP32[$3>>2]|0;
        $110 = ((($109)) + -1|0);
        HEAP32[$3>>2] = $110;
       }
       $111 = ($108|0)==(0);
       if ($111) {
        $$0111 = nan;
        break L4;
       } else {
        $$in = $108;
       }
      }
      break;
     }
     case 0:  {
      $118 = ($$5|0)==(48);
      if ($118) {
       $119 = HEAP32[$3>>2]|0;
       $120 = HEAP32[$4>>2]|0;
       $121 = ($119>>>0)<($120>>>0);
       if ($121) {
        $122 = ((($119)) + 1|0);
        HEAP32[$3>>2] = $122;
        $123 = HEAP8[$119>>0]|0;
        $124 = $123&255;
        $127 = $124;
       } else {
        $125 = (___shgetc($0)|0);
        $127 = $125;
       }
       $126 = $127 | 32;
       $128 = ($126|0)==(120);
       if ($128) {
        $129 = (+_hexfloat($0,$$0103,$$0102,$$0110,$2));
        $$0111 = $129;
        break L4;
       }
       $130 = HEAP32[$4>>2]|0;
       $131 = ($130|0)==(0|0);
       if ($131) {
        $$6 = 48;
       } else {
        $132 = HEAP32[$3>>2]|0;
        $133 = ((($132)) + -1|0);
        HEAP32[$3>>2] = $133;
        $$6 = 48;
       }
      } else {
       $$6 = $$5;
      }
      $134 = (+_decfloat($0,$$6,$$0103,$$0102,$$0110,$2));
      $$0111 = $134;
      break L4;
      break;
     }
     default: {
      $113 = HEAP32[$4>>2]|0;
      $114 = ($113|0)==(0|0);
      if (!($114)) {
       $115 = HEAP32[$3>>2]|0;
       $116 = ((($115)) + -1|0);
       HEAP32[$3>>2] = $116;
      }
      $117 = (___errno_location()|0);
      HEAP32[$117>>2] = 22;
      ___shlim($0,0,0);
      $$0111 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $44 = HEAP32[$4>>2]|0;
    $45 = ($44|0)==(0|0);
    if (!($45)) {
     $46 = HEAP32[$3>>2]|0;
     $47 = ((($46)) + -1|0);
     HEAP32[$3>>2] = $47;
    }
    $48 = ($2|0)!=(0);
    $49 = ($trunc>>>0)>(3);
    $or$cond124 = $48 & $49;
    if ($or$cond124) {
     $$1105118 = $trunc;
     while(1) {
      if (!($45)) {
       $50 = HEAP32[$3>>2]|0;
       $51 = ((($50)) + -1|0);
       HEAP32[$3>>2] = $51;
      }
      $52 = (($$1105118) + -1)|0;
      $53 = ($52>>>0)>(3);
      if ($53) {
       $$1105118 = $52;
      } else {
       break;
      }
     }
    }
   }
   $54 = (+($$0110|0));
   $55 = $54 * inf;
   $56 = $55;
   $$0111 = $56;
  }
 } while(0);
 return (+$$0111);
}
function _hexfloat($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$be = 0, $$0$ph = 0, $$0133 = 0, $$0143 = 0, $$0151 = 0, $$0154 = 0.0, $$0155 = 0.0, $$0158 = 0.0, $$0163 = 0, $$0169 = 0.0, $$0170 = 0, $$0170173 = 0, $$0170174 = 0, $$1149 = 0, $$1149$ph = 0, $$1152 = 0, $$1156 = 0.0, $$1159 = 0.0, $$1164 = 0;
 var $$2150 = 0, $$2153 = 0, $$2157 = 0.0, $$2160 = 0.0, $$2165 = 0, $$3 = 0, $$3$be = 0, $$3$lcssa = 0, $$3$ph = 0, $$3146 = 0, $$3146$ph = 0, $$3161$lcssa = 0.0, $$3161181 = 0.0, $$3166$lcssa = 0, $$3166185 = 0, $$4147 = 0, $$4162 = 0.0, $$4167$lcssa = 0, $$4167180 = 0, $$5 = 0.0;
 var $$5168 = 0, $$6 = 0, $$pn = 0.0, $$pre = 0, $$pre$phi204Z2D = 0.0, $$pre203 = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0.0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0, $196 = 0.0, $197 = 0.0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0.0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0;
 var $not$ = 0, $or$cond = 0, $or$cond172 = 0, $or$cond4 = 0, $or$cond6 = 0, $spec$select175 = 0.0, $spec$select176 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 104|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)<($8>>>0);
 if ($9) {
  $10 = ((($6)) + 1|0);
  HEAP32[$5>>2] = $10;
  $11 = HEAP8[$6>>0]|0;
  $12 = $11&255;
  $$0$ph = $12;
 } else {
  $13 = (___shgetc($0)|0);
  $$0$ph = $13;
 }
 $$0 = $$0$ph;$$0143 = 0;
 L5: while(1) {
  switch ($$0|0) {
  case 46:  {
   label = 10;
   break L5;
   break;
  }
  case 48:  {
   break;
  }
  default: {
   $$1149$ph = 0;$$3$ph = $$0;$$3146$ph = $$0143;$212 = 0;$213 = 0;
   break L5;
  }
  }
  $14 = HEAP32[$5>>2]|0;
  $15 = HEAP32[$7>>2]|0;
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   HEAP32[$5>>2] = $17;
   $18 = HEAP8[$14>>0]|0;
   $19 = $18&255;
   $$0$be = $19;
  } else {
   $20 = (___shgetc($0)|0);
   $$0$be = $20;
  }
  $$0 = $$0$be;$$0143 = 1;
 }
 if ((label|0) == 10) {
  $21 = HEAP32[$5>>2]|0;
  $22 = HEAP32[$7>>2]|0;
  $23 = ($21>>>0)<($22>>>0);
  if ($23) {
   $24 = ((($21)) + 1|0);
   HEAP32[$5>>2] = $24;
   $25 = HEAP8[$21>>0]|0;
   $26 = $25&255;
   $28 = $26;
  } else {
   $27 = (___shgetc($0)|0);
   $28 = $27;
  }
  $29 = ($28|0)==(48);
  if ($29) {
   $37 = 0;$38 = 0;
   while(1) {
    $30 = HEAP32[$5>>2]|0;
    $31 = HEAP32[$7>>2]|0;
    $32 = ($30>>>0)<($31>>>0);
    if ($32) {
     $33 = ((($30)) + 1|0);
     HEAP32[$5>>2] = $33;
     $34 = HEAP8[$30>>0]|0;
     $35 = $34&255;
     $41 = $35;
    } else {
     $36 = (___shgetc($0)|0);
     $41 = $36;
    }
    $39 = (_i64Add(($37|0),($38|0),-1,-1)|0);
    $40 = (getTempRet0() | 0);
    $42 = ($41|0)==(48);
    if ($42) {
     $37 = $39;$38 = $40;
    } else {
     $$1149$ph = 1;$$3$ph = $41;$$3146$ph = 1;$212 = $39;$213 = $40;
     break;
    }
   }
  } else {
   $$1149$ph = 1;$$3$ph = $28;$$3146$ph = $$0143;$212 = 0;$213 = 0;
  }
 }
 $$0151 = 0;$$0155 = 1.0;$$0158 = 0.0;$$0163 = 0;$$1149 = $$1149$ph;$$3 = $$3$ph;$$3146 = $$3146$ph;$51 = 0;$53 = 0;$96 = $212;$98 = $213;
 while(1) {
  $43 = (($$3) + -48)|0;
  $44 = ($43>>>0)<(10);
  $$pre = $$3 | 32;
  if ($44) {
   label = 24;
  } else {
   $45 = (($$pre) + -97)|0;
   $46 = ($45>>>0)<(6);
   $47 = ($$3|0)==(46);
   $or$cond6 = $47 | $46;
   if (!($or$cond6)) {
    $$3$lcssa = $$3;
    break;
   }
   if ($47) {
    $48 = ($$1149|0)==(0);
    if ($48) {
     $$2150 = 1;$$2153 = $$0151;$$2157 = $$0155;$$2160 = $$0158;$$2165 = $$0163;$$4147 = $$3146;$214 = $53;$215 = $51;$216 = $53;$217 = $51;
    } else {
     $$3$lcssa = 46;
     break;
    }
   } else {
    label = 24;
   }
  }
  if ((label|0) == 24) {
   label = 0;
   $49 = ($$3|0)>(57);
   $50 = (($$pre) + -87)|0;
   $$0133 = $49 ? $50 : $43;
   $52 = ($51|0)<(0);
   $54 = ($53>>>0)<(8);
   $55 = ($51|0)==(0);
   $56 = $55 & $54;
   $57 = $52 | $56;
   do {
    if ($57) {
     $58 = $$0163 << 4;
     $59 = (($$0133) + ($58))|0;
     $$1152 = $$0151;$$1156 = $$0155;$$1159 = $$0158;$$1164 = $59;
    } else {
     $60 = ($51|0)<(0);
     $61 = ($53>>>0)<(14);
     $62 = ($51|0)==(0);
     $63 = $62 & $61;
     $64 = $60 | $63;
     if ($64) {
      $65 = (+($$0133|0));
      $66 = $$0155 * 0.0625;
      $67 = $66 * $65;
      $68 = $$0158 + $67;
      $$1152 = $$0151;$$1156 = $66;$$1159 = $68;$$1164 = $$0163;
      break;
     } else {
      $69 = ($$0133|0)==(0);
      $70 = ($$0151|0)!=(0);
      $or$cond = $70 | $69;
      $71 = $$0155 * 0.5;
      $72 = $$0158 + $71;
      $spec$select175 = $or$cond ? $$0158 : $72;
      $spec$select176 = $or$cond ? $$0151 : 1;
      $$1152 = $spec$select176;$$1156 = $$0155;$$1159 = $spec$select175;$$1164 = $$0163;
      break;
     }
    }
   } while(0);
   $73 = (_i64Add(($53|0),($51|0),1,0)|0);
   $74 = (getTempRet0() | 0);
   $$2150 = $$1149;$$2153 = $$1152;$$2157 = $$1156;$$2160 = $$1159;$$2165 = $$1164;$$4147 = 1;$214 = $96;$215 = $98;$216 = $73;$217 = $74;
  }
  $75 = HEAP32[$5>>2]|0;
  $76 = HEAP32[$7>>2]|0;
  $77 = ($75>>>0)<($76>>>0);
  if ($77) {
   $78 = ((($75)) + 1|0);
   HEAP32[$5>>2] = $78;
   $79 = HEAP8[$75>>0]|0;
   $80 = $79&255;
   $$3$be = $80;
  } else {
   $81 = (___shgetc($0)|0);
   $$3$be = $81;
  }
  $$0151 = $$2153;$$0155 = $$2157;$$0158 = $$2160;$$0163 = $$2165;$$1149 = $$2150;$$3 = $$3$be;$$3146 = $$4147;$51 = $217;$53 = $216;$96 = $214;$98 = $215;
 }
 $82 = ($$3146|0)==(0);
 do {
  if ($82) {
   $83 = HEAP32[$7>>2]|0;
   $84 = ($83|0)==(0|0);
   if (!($84)) {
    $85 = HEAP32[$5>>2]|0;
    $86 = ((($85)) + -1|0);
    HEAP32[$5>>2] = $86;
   }
   $87 = ($4|0)==(0);
   if ($87) {
    ___shlim($0,0,0);
   } else {
    if (!($84)) {
     $88 = HEAP32[$5>>2]|0;
     $89 = ((($88)) + -1|0);
     HEAP32[$5>>2] = $89;
     $90 = ($$1149|0)==(0);
     $brmerge = $90 | $84;
     if (!($brmerge)) {
      $91 = HEAP32[$5>>2]|0;
      $92 = ((($91)) + -1|0);
      HEAP32[$5>>2] = $92;
     }
    }
   }
   $93 = (+($3|0));
   $94 = $93 * 0.0;
   $$0169 = $94;
  } else {
   $95 = ($$1149|0)==(0);
   $97 = $95 ? $53 : $96;
   $99 = $95 ? $51 : $98;
   $100 = ($51|0)<(0);
   $101 = ($53>>>0)<(8);
   $102 = ($51|0)==(0);
   $103 = $102 & $101;
   $104 = $100 | $103;
   if ($104) {
    $$3166185 = $$0163;$106 = $53;$107 = $51;
    while(1) {
     $105 = $$3166185 << 4;
     $108 = (_i64Add(($106|0),($107|0),1,0)|0);
     $109 = (getTempRet0() | 0);
     $110 = ($107|0)<(0);
     $111 = ($106>>>0)<(7);
     $112 = ($107|0)==(0);
     $113 = $112 & $111;
     $114 = $110 | $113;
     if ($114) {
      $$3166185 = $105;$106 = $108;$107 = $109;
     } else {
      $$3166$lcssa = $105;
      break;
     }
    }
   } else {
    $$3166$lcssa = $$0163;
   }
   $115 = $$3$lcssa | 32;
   $116 = ($115|0)==(112);
   if ($116) {
    $117 = (_scanexp($0,$4)|0);
    $118 = (getTempRet0() | 0);
    $119 = ($117|0)==(0);
    $120 = ($118|0)==(-2147483648);
    $121 = $119 & $120;
    if ($121) {
     $122 = ($4|0)==(0);
     if ($122) {
      ___shlim($0,0,0);
      $$0169 = 0.0;
      break;
     }
     $123 = HEAP32[$7>>2]|0;
     $124 = ($123|0)==(0|0);
     if ($124) {
      $135 = 0;$136 = 0;
     } else {
      $125 = HEAP32[$5>>2]|0;
      $126 = ((($125)) + -1|0);
      HEAP32[$5>>2] = $126;
      $135 = 0;$136 = 0;
     }
    } else {
     $135 = $117;$136 = $118;
    }
   } else {
    $127 = HEAP32[$7>>2]|0;
    $128 = ($127|0)==(0|0);
    if ($128) {
     $135 = 0;$136 = 0;
    } else {
     $129 = HEAP32[$5>>2]|0;
     $130 = ((($129)) + -1|0);
     HEAP32[$5>>2] = $130;
     $135 = 0;$136 = 0;
    }
   }
   $131 = (_bitshift64Shl(($97|0),($99|0),2)|0);
   $132 = (getTempRet0() | 0);
   $133 = (_i64Add(($131|0),($132|0),-32,-1)|0);
   $134 = (getTempRet0() | 0);
   $137 = (_i64Add(($133|0),($134|0),($135|0),($136|0))|0);
   $138 = (getTempRet0() | 0);
   $139 = ($$3166$lcssa|0)==(0);
   if ($139) {
    $140 = (+($3|0));
    $141 = $140 * 0.0;
    $$0169 = $141;
    break;
   }
   $142 = (0 - ($2))|0;
   $143 = ($142|0)<(0);
   $144 = $143 << 31 >> 31;
   $145 = ($138|0)>($144|0);
   $146 = ($137>>>0)>($142>>>0);
   $147 = ($138|0)==($144|0);
   $148 = $147 & $146;
   $149 = $145 | $148;
   if ($149) {
    $150 = (___errno_location()|0);
    HEAP32[$150>>2] = 34;
    $151 = (+($3|0));
    $152 = $151 * 1.7976931348623157E+308;
    $153 = $152 * 1.7976931348623157E+308;
    $$0169 = $153;
    break;
   }
   $154 = (($2) + -106)|0;
   $155 = ($154|0)<(0);
   $156 = $155 << 31 >> 31;
   $157 = ($138|0)<($156|0);
   $158 = ($137>>>0)<($154>>>0);
   $159 = ($138|0)==($156|0);
   $160 = $159 & $158;
   $161 = $157 | $160;
   if ($161) {
    $162 = (___errno_location()|0);
    HEAP32[$162>>2] = 34;
    $163 = (+($3|0));
    $164 = $163 * 2.2250738585072014E-308;
    $165 = $164 * 2.2250738585072014E-308;
    $$0169 = $165;
    break;
   }
   $166 = ($$3166$lcssa|0)>(-1);
   if ($166) {
    $$3161181 = $$0158;$$4167180 = $$3166$lcssa;$171 = $137;$172 = $138;
    while(1) {
     $167 = !($$3161181 >= 0.5);
     $168 = $$4167180 << 1;
     $169 = $$3161181 + -1.0;
     $not$ = $167 ^ 1;
     $170 = $not$&1;
     $$5168 = $168 | $170;
     $$pn = $167 ? $$3161181 : $169;
     $$4162 = $$3161181 + $$pn;
     $173 = (_i64Add(($171|0),($172|0),-1,-1)|0);
     $174 = (getTempRet0() | 0);
     $175 = ($$5168|0)>(-1);
     if ($175) {
      $$3161181 = $$4162;$$4167180 = $$5168;$171 = $173;$172 = $174;
     } else {
      $$3161$lcssa = $$4162;$$4167$lcssa = $$5168;$182 = $173;$183 = $174;
      break;
     }
    }
   } else {
    $$3161$lcssa = $$0158;$$4167$lcssa = $$3166$lcssa;$182 = $137;$183 = $138;
   }
   $176 = ($1|0)<(0);
   $177 = $176 << 31 >> 31;
   $178 = ($2|0)<(0);
   $179 = $178 << 31 >> 31;
   $180 = (_i64Subtract(32,0,($2|0),($179|0))|0);
   $181 = (getTempRet0() | 0);
   $184 = (_i64Add(($180|0),($181|0),($182|0),($183|0))|0);
   $185 = (getTempRet0() | 0);
   $186 = ($185|0)<($177|0);
   $187 = ($184>>>0)<($1>>>0);
   $188 = ($185|0)==($177|0);
   $189 = $188 & $187;
   $190 = $186 | $189;
   if ($190) {
    $191 = ($184|0)>(0);
    if ($191) {
     $$0170 = $184;
     label = 65;
    } else {
     $$0170174 = 0;$195 = 84;
     label = 67;
    }
   } else {
    $$0170 = $1;
    label = 65;
   }
   if ((label|0) == 65) {
    $192 = ($$0170|0)<(53);
    $193 = (84 - ($$0170))|0;
    if ($192) {
     $$0170174 = $$0170;$195 = $193;
     label = 67;
    } else {
     $$pre203 = (+($3|0));
     $$0154 = 0.0;$$0170173 = $$0170;$$pre$phi204Z2D = $$pre203;
    }
   }
   if ((label|0) == 67) {
    $194 = (+($3|0));
    $196 = (+_scalbn(1.0,$195));
    $197 = (+_copysignl($196,$194));
    $$0154 = $197;$$0170173 = $$0170174;$$pre$phi204Z2D = $194;
   }
   $198 = ($$0170173|0)<(32);
   $199 = $$3161$lcssa != 0.0;
   $or$cond4 = $199 & $198;
   $200 = $$4167$lcssa & 1;
   $201 = ($200|0)==(0);
   $or$cond172 = $201 & $or$cond4;
   $202 = $or$cond172&1;
   $$6 = (($$4167$lcssa) + ($202))|0;
   $$5 = $or$cond172 ? 0.0 : $$3161$lcssa;
   $203 = (+($$6>>>0));
   $204 = $$pre$phi204Z2D * $203;
   $205 = $$0154 + $204;
   $206 = $$5 * $$pre$phi204Z2D;
   $207 = $206 + $205;
   $208 = $207 - $$0154;
   $209 = $208 != 0.0;
   if (!($209)) {
    $210 = (___errno_location()|0);
    HEAP32[$210>>2] = 34;
   }
   $211 = (+_scalbnl($208,$182));
   $$0169 = $211;
  }
 } while(0);
 return (+$$0169);
}
function _decfloat($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0324 = 0, $$0324$be = 0, $$0327480 = 0, $$0328 = 0, $$0329 = 0, $$0331476 = 0, $$0335486 = 0, $$0336$lcssa = 0, $$0336453 = 0, $$0336454 = 0, $$0336455 = 0, $$0336503 = 0, $$0340$lcssa = 0, $$0340457 = 0, $$0340458 = 0, $$0340459 = 0, $$0340502 = 0, $$0345$lcssa540 = 0, $$0345484 = 0, $$0355 = 0.0;
 var $$0356 = 0.0, $$0360474 = 0.0, $$0367 = 0, $$0376 = 0, $$0376$ph = 0, $$0381$lcssa539 = 0, $$0381483 = 0, $$0390 = 0, $$0393 = 0, $$0398$lcssa = 0, $$0398463 = 0, $$0398464 = 0, $$0398465 = 0, $$0398499 = 0, $$1 = 0.0, $$10473 = 0, $$11 = 0, $$1330 = 0, $$1357 = 0.0, $$1361 = 0.0;
 var $$1377 = 0, $$1377$ph = 0, $$1377$ph$ph = 0, $$1391$lcssa = 0, $$1391501 = 0, $$2 = 0, $$2338 = 0, $$2342 = 0, $$2362 = 0.0, $$2366$v = 0, $$2369 = 0, $$2369$ph = 0, $$2369$ph579 = 0, $$2392 = 0, $$2395 = 0, $$2400 = 0, $$3$lcssa = 0, $$3339493 = 0, $$3343 = 0, $$3348$ph = 0;
 var $$3348$ph580 = 0, $$3359 = 0.0, $$3363 = 0.0, $$3370 = 0, $$3379 = 0, $$3384$ph = 0, $$3384$ph578 = 0, $$3396$lcssa = 0, $$3396500 = 0, $$3504 = 0, $$4344485 = 0, $$4380 = 0, $$4397 = 0, $$4475 = 0, $$5 = 0, $$5$in = 0, $$5350 = 0, $$5350$ph = 0, $$5350$ph$ph = 0, $$5372 = 0;
 var $$5386$ph = 0, $$5386$ph576 = 0, $$5386$ph576$ph = 0, $$6351478 = 0, $$6387477 = 0, $$6479 = 0, $$7374$ph$ph = 0, $$neg447 = 0, $$neg448 = 0, $$pre = 0, $$promoted = 0, $$sink$off0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0;
 var $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0.0, $164 = 0, $165 = 0.0, $166 = 0.0, $167 = 0, $168 = 0.0, $169 = 0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0.0, $313 = 0, $314 = 0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0.0, $327 = 0.0, $328 = 0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0.0, $344 = 0.0, $345 = 0, $346 = 0.0, $347 = 0.0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0.0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0, $356 = 0, $357 = 0.0, $358 = 0, $359 = 0.0, $36 = 0, $360 = 0.0;
 var $361 = 0.0, $362 = 0, $363 = 0, $364 = 0, $365 = 0.0, $366 = 0, $367 = 0.0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0.0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $cond = 0, $exitcond = 0, $narrow = 0, $not$ = 0, $or$cond = 0, $or$cond3 = 0, $or$cond414 = 0, $or$cond416 = 0, $or$cond417 = 0, $or$cond418 = 0, $or$cond421 = 0, $or$cond559 = 0, $or$cond9 = 0, $spec$select = 0, $spec$select410 = 0, $spec$select411 = 0, $spec$select419 = 0, $spec$select420 = 0, $spec$select439 = 0;
 var $spec$select440 = 0, $spec$select441 = 0, $spec$select442 = 0, $spec$select443 = 0, $spec$store$select = 0, $storemerge446 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $6 = sp;
 $7 = (($3) + ($2))|0;
 $8 = (0 - ($7))|0;
 $9 = ((($0)) + 4|0);
 $10 = ((($0)) + 104|0);
 $$0324 = $1;$$0393 = 0;
 L1: while(1) {
  switch ($$0324|0) {
  case 46:  {
   label = 7;
   break L1;
   break;
  }
  case 48:  {
   break;
  }
  default: {
   $$0390 = 0;$$2 = $$0324;$$2395 = $$0393;$375 = 0;$376 = 0;
   break L1;
  }
  }
  $11 = HEAP32[$9>>2]|0;
  $12 = HEAP32[$10>>2]|0;
  $13 = ($11>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($11)) + 1|0);
   HEAP32[$9>>2] = $14;
   $15 = HEAP8[$11>>0]|0;
   $16 = $15&255;
   $$0324$be = $16;
  } else {
   $17 = (___shgetc($0)|0);
   $$0324$be = $17;
  }
  $$0324 = $$0324$be;$$0393 = 1;
 }
 if ((label|0) == 7) {
  $18 = HEAP32[$9>>2]|0;
  $19 = HEAP32[$10>>2]|0;
  $20 = ($18>>>0)<($19>>>0);
  if ($20) {
   $21 = ((($18)) + 1|0);
   HEAP32[$9>>2] = $21;
   $22 = HEAP8[$18>>0]|0;
   $23 = $22&255;
   $25 = $23;
  } else {
   $24 = (___shgetc($0)|0);
   $25 = $24;
  }
  $26 = ($25|0)==(48);
  if ($26) {
   $27 = 0;$28 = 0;
   while(1) {
    $29 = (_i64Add(($27|0),($28|0),-1,-1)|0);
    $30 = (getTempRet0() | 0);
    $31 = HEAP32[$9>>2]|0;
    $32 = HEAP32[$10>>2]|0;
    $33 = ($31>>>0)<($32>>>0);
    if ($33) {
     $34 = ((($31)) + 1|0);
     HEAP32[$9>>2] = $34;
     $35 = HEAP8[$31>>0]|0;
     $36 = $35&255;
     $38 = $36;
    } else {
     $37 = (___shgetc($0)|0);
     $38 = $37;
    }
    $39 = ($38|0)==(48);
    if ($39) {
     $27 = $29;$28 = $30;
    } else {
     $$0390 = 1;$$2 = $38;$$2395 = 1;$375 = $29;$376 = $30;
     break;
    }
   }
  } else {
   $$0390 = 1;$$2 = $25;$$2395 = $$0393;$375 = 0;$376 = 0;
  }
 }
 HEAP32[$6>>2] = 0;
 $40 = (($$2) + -48)|0;
 $41 = ($40>>>0)<(10);
 $42 = ($$2|0)==(46);
 $43 = $42 | $41;
 L22: do {
  if ($43) {
   $44 = ((($6)) + 496|0);
   $$0336503 = 0;$$0340502 = 0;$$0398499 = 0;$$1391501 = $$0390;$$3396500 = $$2395;$$3504 = $$2;$377 = $42;$378 = $40;$379 = $375;$380 = $376;$47 = 0;$48 = 0;
   L24: while(1) {
    do {
     if ($377) {
      $cond = ($$1391501|0)==(0);
      if ($cond) {
       $$2338 = $$0336503;$$2342 = $$0340502;$$2392 = 1;$$2400 = $$0398499;$$4397 = $$3396500;$381 = $47;$382 = $48;$383 = $47;$384 = $48;
      } else {
       break L24;
      }
     } else {
      $46 = ($$0340502|0)<(125);
      $49 = (_i64Add(($47|0),($48|0),1,0)|0);
      $50 = (getTempRet0() | 0);
      $51 = ($$3504|0)!=(48);
      if (!($46)) {
       if (!($51)) {
        $$2338 = $$0336503;$$2342 = $$0340502;$$2392 = $$1391501;$$2400 = $$0398499;$$4397 = $$3396500;$381 = $379;$382 = $380;$383 = $49;$384 = $50;
        break;
       }
       $61 = HEAP32[$44>>2]|0;
       $62 = $61 | 1;
       HEAP32[$44>>2] = $62;
       $$2338 = $$0336503;$$2342 = $$0340502;$$2392 = $$1391501;$$2400 = $$0398499;$$4397 = $$3396500;$381 = $379;$382 = $380;$383 = $49;$384 = $50;
       break;
      }
      $spec$select = $51 ? $49 : $$0398499;
      $52 = ($$0336503|0)==(0);
      $53 = (($6) + ($$0340502<<2)|0);
      if ($52) {
       $storemerge446 = $378;
      } else {
       $54 = HEAP32[$53>>2]|0;
       $55 = ($54*10)|0;
       $56 = (($$3504) + -48)|0;
       $57 = (($56) + ($55))|0;
       $storemerge446 = $57;
      }
      HEAP32[$53>>2] = $storemerge446;
      $58 = (($$0336503) + 1)|0;
      $59 = ($58|0)==(9);
      $60 = $59&1;
      $spec$select410 = (($$0340502) + ($60))|0;
      $spec$select411 = $59 ? 0 : $58;
      $$2338 = $spec$select411;$$2342 = $spec$select410;$$2392 = $$1391501;$$2400 = $spec$select;$$4397 = 1;$381 = $379;$382 = $380;$383 = $49;$384 = $50;
     }
    } while(0);
    $63 = HEAP32[$9>>2]|0;
    $64 = HEAP32[$10>>2]|0;
    $65 = ($63>>>0)<($64>>>0);
    if ($65) {
     $66 = ((($63)) + 1|0);
     HEAP32[$9>>2] = $66;
     $67 = HEAP8[$63>>0]|0;
     $68 = $67&255;
     $71 = $68;
    } else {
     $69 = (___shgetc($0)|0);
     $71 = $69;
    }
    $70 = (($71) + -48)|0;
    $72 = ($70>>>0)<(10);
    $73 = ($71|0)==(46);
    $74 = $73 | $72;
    if ($74) {
     $$0336503 = $$2338;$$0340502 = $$2342;$$0398499 = $$2400;$$1391501 = $$2392;$$3396500 = $$4397;$$3504 = $71;$377 = $73;$378 = $70;$379 = $381;$380 = $382;$47 = $383;$48 = $384;
    } else {
     $$0336$lcssa = $$2338;$$0340$lcssa = $$2342;$$0398$lcssa = $$2400;$$1391$lcssa = $$2392;$$3$lcssa = $71;$$3396$lcssa = $$4397;$76 = $381;$77 = $383;$79 = $382;$80 = $384;
     label = 31;
     break L22;
    }
   }
   $45 = ($$3396500|0)!=(0);
   $$0336455 = $$0336503;$$0340459 = $$0340502;$$0398465 = $$0398499;$385 = $47;$386 = $48;$387 = $379;$388 = $380;$389 = $45;
   label = 39;
  } else {
   $$0336$lcssa = 0;$$0340$lcssa = 0;$$0398$lcssa = 0;$$1391$lcssa = $$0390;$$3$lcssa = $$2;$$3396$lcssa = $$2395;$76 = $375;$77 = 0;$79 = $376;$80 = 0;
   label = 31;
  }
 } while(0);
 do {
  if ((label|0) == 31) {
   $75 = ($$1391$lcssa|0)==(0);
   $78 = $75 ? $77 : $76;
   $81 = $75 ? $80 : $79;
   $82 = ($$3396$lcssa|0)!=(0);
   $83 = $$3$lcssa | 32;
   $84 = ($83|0)==(101);
   $or$cond414 = $82 & $84;
   if (!($or$cond414)) {
    $99 = ($$3$lcssa|0)>(-1);
    if ($99) {
     $$0336455 = $$0336$lcssa;$$0340459 = $$0340$lcssa;$$0398465 = $$0398$lcssa;$385 = $77;$386 = $80;$387 = $78;$388 = $81;$389 = $82;
     label = 39;
     break;
    } else {
     $$0336454 = $$0336$lcssa;$$0340458 = $$0340$lcssa;$$0398464 = $$0398$lcssa;$390 = $77;$391 = $80;$392 = $82;$393 = $78;$394 = $81;
     label = 41;
     break;
    }
   }
   $85 = (_scanexp($0,$5)|0);
   $86 = (getTempRet0() | 0);
   $87 = ($85|0)==(0);
   $88 = ($86|0)==(-2147483648);
   $89 = $87 & $88;
   if ($89) {
    $90 = ($5|0)==(0);
    if ($90) {
     ___shlim($0,0,0);
     $$1 = 0.0;
     break;
    }
    $91 = HEAP32[$10>>2]|0;
    $92 = ($91|0)==(0|0);
    if ($92) {
     $95 = 0;$96 = 0;
    } else {
     $93 = HEAP32[$9>>2]|0;
     $94 = ((($93)) + -1|0);
     HEAP32[$9>>2] = $94;
     $95 = 0;$96 = 0;
    }
   } else {
    $95 = $85;$96 = $86;
   }
   $97 = (_i64Add(($95|0),($96|0),($78|0),($81|0))|0);
   $98 = (getTempRet0() | 0);
   $$0336453 = $$0336$lcssa;$$0340457 = $$0340$lcssa;$$0398463 = $$0398$lcssa;$109 = $97;$111 = $77;$112 = $98;$114 = $80;
   label = 43;
  }
 } while(0);
 if ((label|0) == 39) {
  $100 = HEAP32[$10>>2]|0;
  $101 = ($100|0)==(0|0);
  if ($101) {
   $$0336454 = $$0336455;$$0340458 = $$0340459;$$0398464 = $$0398465;$390 = $385;$391 = $386;$392 = $389;$393 = $387;$394 = $388;
   label = 41;
  } else {
   $102 = HEAP32[$9>>2]|0;
   $103 = ((($102)) + -1|0);
   HEAP32[$9>>2] = $103;
   if ($389) {
    $$0336453 = $$0336455;$$0340457 = $$0340459;$$0398463 = $$0398465;$109 = $387;$111 = $385;$112 = $388;$114 = $386;
    label = 43;
   } else {
    label = 42;
   }
  }
 }
 if ((label|0) == 41) {
  if ($392) {
   $$0336453 = $$0336454;$$0340457 = $$0340458;$$0398463 = $$0398464;$109 = $393;$111 = $390;$112 = $394;$114 = $391;
   label = 43;
  } else {
   label = 42;
  }
 }
 do {
  if ((label|0) == 42) {
   $104 = (___errno_location()|0);
   HEAP32[$104>>2] = 22;
   ___shlim($0,0,0);
   $$1 = 0.0;
  }
  else if ((label|0) == 43) {
   $105 = HEAP32[$6>>2]|0;
   $106 = ($105|0)==(0);
   if ($106) {
    $107 = (+($4|0));
    $108 = $107 * 0.0;
    $$1 = $108;
    break;
   }
   $110 = ($109|0)==($111|0);
   $113 = ($112|0)==($114|0);
   $115 = $110 & $113;
   $116 = ($114|0)<(0);
   $117 = ($111>>>0)<(10);
   $118 = ($114|0)==(0);
   $119 = $118 & $117;
   $120 = $116 | $119;
   $or$cond = $120 & $115;
   if ($or$cond) {
    $121 = ($2|0)>(30);
    $122 = $105 >>> $2;
    $123 = ($122|0)==(0);
    $or$cond416 = $121 | $123;
    if ($or$cond416) {
     $124 = (+($4|0));
     $125 = (+($105>>>0));
     $126 = $124 * $125;
     $$1 = $126;
     break;
    }
   }
   $127 = (($3|0) / -2)&-1;
   $128 = ($127|0)<(0);
   $129 = $128 << 31 >> 31;
   $130 = ($112|0)>($129|0);
   $131 = ($109>>>0)>($127>>>0);
   $132 = ($112|0)==($129|0);
   $133 = $132 & $131;
   $134 = $130 | $133;
   if ($134) {
    $135 = (___errno_location()|0);
    HEAP32[$135>>2] = 34;
    $136 = (+($4|0));
    $137 = $136 * 1.7976931348623157E+308;
    $138 = $137 * 1.7976931348623157E+308;
    $$1 = $138;
    break;
   }
   $139 = (($3) + -106)|0;
   $140 = ($139|0)<(0);
   $141 = $140 << 31 >> 31;
   $142 = ($112|0)<($141|0);
   $143 = ($109>>>0)<($139>>>0);
   $144 = ($112|0)==($141|0);
   $145 = $144 & $143;
   $146 = $142 | $145;
   if ($146) {
    $147 = (___errno_location()|0);
    HEAP32[$147>>2] = 34;
    $148 = (+($4|0));
    $149 = $148 * 2.2250738585072014E-308;
    $150 = $149 * 2.2250738585072014E-308;
    $$1 = $150;
    break;
   }
   $151 = ($$0336453|0)==(0);
   if ($151) {
    $$3343 = $$0340457;
   } else {
    $152 = ($$0336453|0)<(9);
    if ($152) {
     $153 = (($6) + ($$0340457<<2)|0);
     $$promoted = HEAP32[$153>>2]|0;
     $$3339493 = $$0336453;$155 = $$promoted;
     while(1) {
      $154 = ($155*10)|0;
      $156 = (($$3339493) + 1)|0;
      $157 = ($$3339493|0)<(8);
      if ($157) {
       $$3339493 = $156;$155 = $154;
      } else {
       break;
      }
     }
     HEAP32[$153>>2] = $154;
    }
    $158 = (($$0340457) + 1)|0;
    $$3343 = $158;
   }
   $159 = ($$0398463|0)<(9);
   if ($159) {
    $160 = ($$0398463|0)<=($109|0);
    $161 = ($109|0)<(18);
    $or$cond3 = $160 & $161;
    if ($or$cond3) {
     $162 = ($109|0)==(9);
     if ($162) {
      $163 = (+($4|0));
      $164 = HEAP32[$6>>2]|0;
      $165 = (+($164>>>0));
      $166 = $163 * $165;
      $$1 = $166;
      break;
     }
     $167 = ($109|0)<(9);
     if ($167) {
      $168 = (+($4|0));
      $169 = HEAP32[$6>>2]|0;
      $170 = (+($169>>>0));
      $171 = $168 * $170;
      $172 = (8 - ($109))|0;
      $173 = (5536 + ($172<<2)|0);
      $174 = HEAP32[$173>>2]|0;
      $175 = (+($174|0));
      $176 = $171 / $175;
      $$1 = $176;
      break;
     }
     $$neg447 = Math_imul($109, -3)|0;
     $$neg448 = (($2) + 27)|0;
     $177 = (($$neg448) + ($$neg447))|0;
     $178 = ($177|0)>(30);
     $$pre = HEAP32[$6>>2]|0;
     $179 = $$pre >>> $177;
     $180 = ($179|0)==(0);
     $or$cond559 = $178 | $180;
     if ($or$cond559) {
      $181 = (+($4|0));
      $182 = (+($$pre>>>0));
      $183 = $181 * $182;
      $184 = (($109) + -10)|0;
      $185 = (5536 + ($184<<2)|0);
      $186 = HEAP32[$185>>2]|0;
      $187 = (+($186|0));
      $188 = $183 * $187;
      $$1 = $188;
      break;
     }
    }
   }
   $189 = (($109|0) % 9)&-1;
   $190 = ($189|0)==(0);
   if ($190) {
    $$2369$ph = $$3343;$$3348$ph = 0;$$3384$ph = $109;
   } else {
    $191 = ($109|0)>(-1);
    $192 = (($189) + 9)|0;
    $193 = $191 ? $189 : $192;
    $194 = (8 - ($193))|0;
    $195 = (5536 + ($194<<2)|0);
    $196 = HEAP32[$195>>2]|0;
    $197 = ($$3343|0)==(0);
    if ($197) {
     $$0345$lcssa540 = 0;$$0367 = 0;$$0381$lcssa539 = $109;
    } else {
     $198 = (1000000000 / ($196|0))&-1;
     $$0335486 = 0;$$0345484 = 0;$$0381483 = $109;$$4344485 = 0;
     while(1) {
      $199 = (($6) + ($$4344485<<2)|0);
      $200 = HEAP32[$199>>2]|0;
      $201 = (($200>>>0) / ($196>>>0))&-1;
      $202 = Math_imul($201, $196)|0;
      $203 = (($200) - ($202))|0;
      $204 = (($201) + ($$0335486))|0;
      HEAP32[$199>>2] = $204;
      $205 = Math_imul($198, $203)|0;
      $206 = ($$4344485|0)==($$0345484|0);
      $207 = ($204|0)==(0);
      $or$cond417 = $206 & $207;
      $208 = (($$0345484) + 1)|0;
      $209 = $208 & 127;
      $210 = (($$0381483) + -9)|0;
      $spec$select439 = $or$cond417 ? $210 : $$0381483;
      $spec$select440 = $or$cond417 ? $209 : $$0345484;
      $211 = (($$4344485) + 1)|0;
      $212 = ($211|0)==($$3343|0);
      if ($212) {
       break;
      } else {
       $$0335486 = $205;$$0345484 = $spec$select440;$$0381483 = $spec$select439;$$4344485 = $211;
      }
     }
     $213 = ($205|0)==(0);
     if ($213) {
      $$0345$lcssa540 = $spec$select440;$$0367 = $$3343;$$0381$lcssa539 = $spec$select439;
     } else {
      $214 = (($6) + ($$3343<<2)|0);
      $215 = (($$3343) + 1)|0;
      HEAP32[$214>>2] = $205;
      $$0345$lcssa540 = $spec$select440;$$0367 = $215;$$0381$lcssa539 = $spec$select439;
     }
    }
    $216 = (9 - ($193))|0;
    $217 = (($216) + ($$0381$lcssa539))|0;
    $$2369$ph = $$0367;$$3348$ph = $$0345$lcssa540;$$3384$ph = $217;
   }
   $$0376$ph = 0;$$2369$ph579 = $$2369$ph;$$3348$ph580 = $$3348$ph;$$3384$ph578 = $$3384$ph;
   L104: while(1) {
    $218 = ($$3384$ph578|0)<(18);
    $219 = ($$3384$ph578|0)==(18);
    $220 = (($6) + ($$3348$ph580<<2)|0);
    $$0376 = $$0376$ph;$$2369 = $$2369$ph579;
    while(1) {
     if (!($218)) {
      if (!($219)) {
       $$5386$ph = $$3384$ph578;
       break L104;
      }
      $221 = HEAP32[$220>>2]|0;
      $222 = ($221>>>0)<(9007199);
      if (!($222)) {
       $$5386$ph = 18;
       break L104;
      }
     }
     $223 = (($$2369) + 127)|0;
     $$0329 = 0;$$3370 = $$2369;$$5$in = $223;
     while(1) {
      $$5 = $$5$in & 127;
      $224 = (($6) + ($$5<<2)|0);
      $225 = HEAP32[$224>>2]|0;
      $226 = (_bitshift64Shl(($225|0),0,29)|0);
      $227 = (getTempRet0() | 0);
      $228 = (_i64Add(($226|0),($227|0),($$0329|0),0)|0);
      $229 = (getTempRet0() | 0);
      $230 = ($229>>>0)>(0);
      $231 = ($228>>>0)>(1000000000);
      $232 = ($229|0)==(0);
      $233 = $232 & $231;
      $234 = $230 | $233;
      if ($234) {
       $235 = (___udivdi3(($228|0),($229|0),1000000000,0)|0);
       $236 = (getTempRet0() | 0);
       $237 = (___muldi3(($235|0),($236|0),1000000000,0)|0);
       $238 = (getTempRet0() | 0);
       $239 = (_i64Subtract(($228|0),($229|0),($237|0),($238|0))|0);
       $240 = (getTempRet0() | 0);
       $$1330 = $235;$$sink$off0 = $239;
      } else {
       $$1330 = 0;$$sink$off0 = $228;
      }
      HEAP32[$224>>2] = $$sink$off0;
      $241 = (($$3370) + 127)|0;
      $242 = $241 & 127;
      $243 = ($$5|0)!=($242|0);
      $244 = ($$5|0)==($$3348$ph580|0);
      $or$cond418 = $243 | $244;
      $245 = ($$sink$off0|0)==(0);
      $spec$select419 = $245 ? $$5 : $$3370;
      $spec$select441 = $or$cond418 ? $$3370 : $spec$select419;
      $246 = (($$5) + -1)|0;
      if ($244) {
       break;
      } else {
       $$0329 = $$1330;$$3370 = $spec$select441;$$5$in = $246;
      }
     }
     $247 = (($$0376) + -29)|0;
     $248 = ($$1330|0)==(0);
     if ($248) {
      $$0376 = $247;$$2369 = $$3370;
     } else {
      break;
     }
    }
    $249 = (($$3384$ph578) + 9)|0;
    $250 = (($$3348$ph580) + 127)|0;
    $251 = $250 & 127;
    $252 = ($251|0)==($spec$select441|0);
    $253 = (($spec$select441) + 127)|0;
    $254 = $253 & 127;
    $255 = (($spec$select441) + 126)|0;
    $256 = $255 & 127;
    $257 = (($6) + ($256<<2)|0);
    if ($252) {
     $258 = (($6) + ($254<<2)|0);
     $259 = HEAP32[$258>>2]|0;
     $260 = HEAP32[$257>>2]|0;
     $261 = $260 | $259;
     HEAP32[$257>>2] = $261;
     $$5372 = $254;
    } else {
     $$5372 = $$3370;
    }
    $262 = (($6) + ($251<<2)|0);
    HEAP32[$262>>2] = $$1330;
    $$0376$ph = $247;$$2369$ph579 = $$5372;$$3348$ph580 = $251;$$3384$ph578 = $249;
   }
   $$1377$ph$ph = $$0376;$$5350$ph$ph = $$3348$ph580;$$5386$ph576$ph = $$5386$ph;$$7374$ph$ph = $$2369;
   L123: while(1) {
    $299 = (($$7374$ph$ph) + 1)|0;
    $296 = $299 & 127;
    $300 = (($$7374$ph$ph) + 127)|0;
    $301 = $300 & 127;
    $302 = (($6) + ($301<<2)|0);
    $$1377$ph = $$1377$ph$ph;$$5350$ph = $$5350$ph$ph;$$5386$ph576 = $$5386$ph576$ph;
    while(1) {
     $294 = ($$5386$ph576|0)==(18);
     $295 = ($$5386$ph576|0)>(27);
     $spec$select420 = $295 ? 9 : 1;
     $$1377 = $$1377$ph;$$5350 = $$5350$ph;
     while(1) {
      $$0331476 = 0;
      while(1) {
       $263 = (($$0331476) + ($$5350))|0;
       $264 = $263 & 127;
       $265 = ($264|0)==($$7374$ph$ph|0);
       if ($265) {
        label = 92;
        break;
       }
       $266 = (($6) + ($264<<2)|0);
       $267 = HEAP32[$266>>2]|0;
       $268 = (11120 + ($$0331476<<2)|0);
       $269 = HEAP32[$268>>2]|0;
       $270 = ($267>>>0)<($269>>>0);
       if ($270) {
        label = 92;
        break;
       }
       $271 = ($267>>>0)>($269>>>0);
       if ($271) {
        break;
       }
       $272 = (($$0331476) + 1)|0;
       $273 = ($272>>>0)<(2);
       if ($273) {
        $$0331476 = 1;
       } else {
        label = 92;
        break;
       }
      }
      if ((label|0) == 92) {
       label = 0;
       if ($294) {
        break L123;
       }
      }
      $274 = (($spec$select420) + ($$1377))|0;
      $275 = ($$5350|0)==($$7374$ph$ph|0);
      if ($275) {
       $$1377 = $274;$$5350 = $$7374$ph$ph;
      } else {
       break;
      }
     }
     $276 = 1 << $spec$select420;
     $277 = (($276) + -1)|0;
     $278 = 1000000000 >>> $spec$select420;
     $$0327480 = 0;$$6351478 = $$5350;$$6387477 = $$5386$ph576;$$6479 = $$5350;
     while(1) {
      $279 = (($6) + ($$6479<<2)|0);
      $280 = HEAP32[$279>>2]|0;
      $281 = $280 & $277;
      $282 = $280 >>> $spec$select420;
      $283 = (($282) + ($$0327480))|0;
      HEAP32[$279>>2] = $283;
      $284 = Math_imul($281, $278)|0;
      $285 = ($$6479|0)==($$6351478|0);
      $286 = ($283|0)==(0);
      $or$cond421 = $285 & $286;
      $287 = (($$6351478) + 1)|0;
      $288 = $287 & 127;
      $289 = (($$6387477) + -9)|0;
      $spec$select442 = $or$cond421 ? $289 : $$6387477;
      $spec$select443 = $or$cond421 ? $288 : $$6351478;
      $290 = (($$6479) + 1)|0;
      $291 = $290 & 127;
      $292 = ($291|0)==($$7374$ph$ph|0);
      if ($292) {
       break;
      } else {
       $$0327480 = $284;$$6351478 = $spec$select443;$$6387477 = $spec$select442;$$6479 = $291;
      }
     }
     $293 = ($284|0)==(0);
     if (!($293)) {
      $297 = ($296|0)==($spec$select443|0);
      if (!($297)) {
       break;
      }
      $303 = HEAP32[$302>>2]|0;
      $304 = $303 | 1;
      HEAP32[$302>>2] = $304;
     }
     $$1377$ph = $274;$$5350$ph = $spec$select443;$$5386$ph576 = $spec$select442;
    }
    $298 = (($6) + ($$7374$ph$ph<<2)|0);
    HEAP32[$298>>2] = $284;
    $$1377$ph$ph = $274;$$5350$ph$ph = $spec$select443;$$5386$ph576$ph = $spec$select442;$$7374$ph$ph = $296;
   }
   $$0360474 = 0.0;$$10473 = $$7374$ph$ph;$$4475 = 0;
   while(1) {
    $305 = (($$4475) + ($$5350))|0;
    $306 = $305 & 127;
    $307 = ($306|0)==($$10473|0);
    $308 = (($$10473) + 1)|0;
    $309 = $308 & 127;
    if ($307) {
     $310 = (($309) + -1)|0;
     $311 = (($6) + ($310<<2)|0);
     HEAP32[$311>>2] = 0;
     $$11 = $309;
    } else {
     $$11 = $$10473;
    }
    $312 = $$0360474 * 1.0E+9;
    $313 = (($6) + ($306<<2)|0);
    $314 = HEAP32[$313>>2]|0;
    $315 = (+($314>>>0));
    $316 = $312 + $315;
    $317 = (($$4475) + 1)|0;
    $exitcond = ($317|0)==(2);
    if ($exitcond) {
     break;
    } else {
     $$0360474 = $316;$$10473 = $$11;$$4475 = $317;
    }
   }
   $318 = (+($4|0));
   $319 = $316 * $318;
   $320 = (($$1377) + 53)|0;
   $321 = (($320) - ($3))|0;
   $322 = ($321|0)<($2|0);
   $323 = ($321|0)>(0);
   $spec$store$select = $323 ? $321 : 0;
   $$0328 = $322 ? $spec$store$select : $2;
   $324 = ($$0328|0)<(53);
   if ($324) {
    $325 = (105 - ($$0328))|0;
    $326 = (+_scalbn(1.0,$325));
    $327 = (+_copysignl($326,$319));
    $328 = (53 - ($$0328))|0;
    $329 = (+_scalbn(1.0,$328));
    $330 = (+_fmodl($319,$329));
    $331 = $319 - $330;
    $332 = $327 + $331;
    $$0355 = $327;$$0356 = $330;$$1361 = $332;
   } else {
    $$0355 = 0.0;$$0356 = 0.0;$$1361 = $319;
   }
   $333 = (($$5350) + 2)|0;
   $334 = $333 & 127;
   $335 = ($334|0)==($$11|0);
   if ($335) {
    $$3359 = $$0356;
   } else {
    $336 = (($6) + ($334<<2)|0);
    $337 = HEAP32[$336>>2]|0;
    $338 = ($337>>>0)<(500000000);
    do {
     if ($338) {
      $339 = ($337|0)==(0);
      if ($339) {
       $340 = (($$5350) + 3)|0;
       $341 = $340 & 127;
       $342 = ($341|0)==($$11|0);
       if ($342) {
        $$1357 = $$0356;
        break;
       }
      }
      $343 = $318 * 0.25;
      $344 = $343 + $$0356;
      $$1357 = $344;
     } else {
      $345 = ($337|0)==(500000000);
      if (!($345)) {
       $346 = $318 * 0.75;
       $347 = $346 + $$0356;
       $$1357 = $347;
       break;
      }
      $348 = (($$5350) + 3)|0;
      $349 = $348 & 127;
      $350 = ($349|0)==($$11|0);
      if ($350) {
       $351 = $318 * 0.5;
       $352 = $351 + $$0356;
       $$1357 = $352;
       break;
      } else {
       $353 = $318 * 0.75;
       $354 = $353 + $$0356;
       $$1357 = $354;
       break;
      }
     }
    } while(0);
    $355 = (53 - ($$0328))|0;
    $356 = ($355|0)>(1);
    if ($356) {
     $357 = (+_fmodl($$1357,1.0));
     $358 = $357 != 0.0;
     if ($358) {
      $$3359 = $$1357;
     } else {
      $359 = $$1357 + 1.0;
      $$3359 = $359;
     }
    } else {
     $$3359 = $$1357;
    }
   }
   $360 = $$1361 + $$3359;
   $361 = $360 - $$0355;
   $362 = $320 & 2147483647;
   $363 = (-2 - ($7))|0;
   $364 = ($362|0)>($363|0);
   do {
    if ($364) {
     $365 = (+Math_abs((+$361)));
     $366 = !($365 >= 9007199254740992.0);
     $367 = $361 * 0.5;
     $not$ = $366 ^ 1;
     $368 = $not$&1;
     $$3379 = (($$1377) + ($368))|0;
     $$2362 = $366 ? $361 : $367;
     $369 = (($$3379) + 50)|0;
     $370 = ($369|0)>($8|0);
     if (!($370)) {
      $371 = ($$0328|0)!=($321|0);
      $narrow = $371 | $366;
      $$2366$v = $322 & $narrow;
      $372 = $$3359 != 0.0;
      $or$cond9 = $372 & $$2366$v;
      if (!($or$cond9)) {
       $$3363 = $$2362;$$4380 = $$3379;
       break;
      }
     }
     $373 = (___errno_location()|0);
     HEAP32[$373>>2] = 34;
     $$3363 = $$2362;$$4380 = $$3379;
    } else {
     $$3363 = $361;$$4380 = $$1377;
    }
   } while(0);
   $374 = (+_scalbnl($$3363,$$4380));
   $$1 = $374;
  }
 } while(0);
 STACKTOP = sp;return (+$$1);
}
function _scanexp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04858 = 0, $$049 = 0, $$157 = 0, $$251 = 0, $$pr = 0, $$pre = 0, $$pre$phi69Z2D = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 104|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = ((($3)) + 1|0);
  HEAP32[$2>>2] = $7;
  $8 = HEAP8[$3>>0]|0;
  $9 = $8&255;
  $11 = $9;
 } else {
  $10 = (___shgetc($0)|0);
  $11 = $10;
 }
 switch ($11|0) {
 case 43: case 45:  {
  $12 = ($11|0)==(45);
  $13 = $12&1;
  $14 = HEAP32[$2>>2]|0;
  $15 = HEAP32[$4>>2]|0;
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   HEAP32[$2>>2] = $17;
   $18 = HEAP8[$14>>0]|0;
   $19 = $18&255;
   $22 = $19;
  } else {
   $20 = (___shgetc($0)|0);
   $22 = $20;
  }
  $21 = (($22) + -48)|0;
  $23 = ($21>>>0)>(9);
  $24 = ($1|0)!=(0);
  $or$cond3 = $24 & $23;
  if ($or$cond3) {
   $25 = HEAP32[$4>>2]|0;
   $26 = ($25|0)==(0|0);
   if ($26) {
    $100 = 0;$99 = -2147483648;
   } else {
    $27 = HEAP32[$2>>2]|0;
    $28 = ((($27)) + -1|0);
    HEAP32[$2>>2] = $28;
    label = 14;
   }
  } else {
   $$0 = $13;$$049 = $22;$$pre$phi69Z2D = $21;
   label = 12;
  }
  break;
 }
 default: {
  $$pre = (($11) + -48)|0;
  $$0 = 0;$$049 = $11;$$pre$phi69Z2D = $$pre;
  label = 12;
 }
 }
 if ((label|0) == 12) {
  $29 = ($$pre$phi69Z2D>>>0)>(9);
  if ($29) {
   label = 14;
  } else {
   $$04858 = 0;$$157 = $$049;
   while(1) {
    $33 = ($$04858*10)|0;
    $34 = (($$157) + -48)|0;
    $35 = (($34) + ($33))|0;
    $36 = HEAP32[$2>>2]|0;
    $37 = HEAP32[$4>>2]|0;
    $38 = ($36>>>0)<($37>>>0);
    if ($38) {
     $39 = ((($36)) + 1|0);
     HEAP32[$2>>2] = $39;
     $40 = HEAP8[$36>>0]|0;
     $41 = $40&255;
     $44 = $41;
    } else {
     $42 = (___shgetc($0)|0);
     $44 = $42;
    }
    $43 = (($44) + -48)|0;
    $45 = ($43>>>0)<(10);
    $46 = ($35|0)<(214748364);
    $47 = $45 & $46;
    if ($47) {
     $$04858 = $35;$$157 = $44;
    } else {
     break;
    }
   }
   $48 = ($35|0)<(0);
   $49 = $48 << 31 >> 31;
   $50 = ($43>>>0)<(10);
   if ($50) {
    $$251 = $44;$51 = $35;$52 = $49;
    while(1) {
     $53 = (___muldi3(($51|0),($52|0),10,0)|0);
     $54 = (getTempRet0() | 0);
     $55 = ($$251|0)<(0);
     $56 = $55 << 31 >> 31;
     $57 = (_i64Add(($$251|0),($56|0),-48,-1)|0);
     $58 = (getTempRet0() | 0);
     $59 = (_i64Add(($57|0),($58|0),($53|0),($54|0))|0);
     $60 = (getTempRet0() | 0);
     $61 = HEAP32[$2>>2]|0;
     $62 = HEAP32[$4>>2]|0;
     $63 = ($61>>>0)<($62>>>0);
     if ($63) {
      $64 = ((($61)) + 1|0);
      HEAP32[$2>>2] = $64;
      $65 = HEAP8[$61>>0]|0;
      $66 = $65&255;
      $69 = $66;
     } else {
      $67 = (___shgetc($0)|0);
      $69 = $67;
     }
     $68 = (($69) + -48)|0;
     $70 = ($68>>>0)<(10);
     $71 = ($60|0)<(21474836);
     $72 = ($59>>>0)<(2061584302);
     $73 = ($60|0)==(21474836);
     $74 = $73 & $72;
     $75 = $71 | $74;
     $76 = $70 & $75;
     if ($76) {
      $$251 = $69;$51 = $59;$52 = $60;
     } else {
      break;
     }
    }
    $77 = ($68>>>0)<(10);
    if ($77) {
     while(1) {
      $78 = HEAP32[$2>>2]|0;
      $79 = HEAP32[$4>>2]|0;
      $80 = ($78>>>0)<($79>>>0);
      if ($80) {
       $81 = ((($78)) + 1|0);
       HEAP32[$2>>2] = $81;
       $82 = HEAP8[$78>>0]|0;
       $83 = $82&255;
       $86 = $83;
      } else {
       $84 = (___shgetc($0)|0);
       $86 = $84;
      }
      $85 = (($86) + -48)|0;
      $87 = ($85>>>0)<(10);
      if (!($87)) {
       $93 = $59;$94 = $60;
       break;
      }
     }
    } else {
     $93 = $59;$94 = $60;
    }
   } else {
    $93 = $35;$94 = $49;
   }
   $88 = HEAP32[$4>>2]|0;
   $89 = ($88|0)==(0|0);
   if (!($89)) {
    $90 = HEAP32[$2>>2]|0;
    $91 = ((($90)) + -1|0);
    HEAP32[$2>>2] = $91;
   }
   $92 = ($$0|0)==(0);
   $95 = (_i64Subtract(0,0,($93|0),($94|0))|0);
   $96 = (getTempRet0() | 0);
   $97 = $92 ? $93 : $95;
   $98 = $92 ? $94 : $96;
   $100 = $97;$99 = $98;
  }
 }
 if ((label|0) == 14) {
  $$pr = HEAP32[$4>>2]|0;
  $30 = ($$pr|0)==(0|0);
  if ($30) {
   $100 = 0;$99 = -2147483648;
  } else {
   $31 = HEAP32[$2>>2]|0;
   $32 = ((($31)) + -1|0);
   HEAP32[$2>>2] = $32;
   $100 = 0;$99 = -2147483648;
  }
 }
 setTempRet0(($99) | 0);
 return ($100|0);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $spec$select21 = 0.0, $spec$select22 = 0, $spec$select23 = 0.0, $spec$store$select = 0, $spec$store$select1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($1|0)>(2046);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $spec$store$select = $8 ? $7 : 1023;
  $spec$select = $5 ? $spec$store$select : $4;
  $spec$select21 = $5 ? $6 : $3;
  $$0 = $spec$select21;$$020 = $spec$select;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($1|0)<(-2044);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $spec$store$select1 = $15 ? $14 : -1022;
   $spec$select22 = $12 ? $spec$store$select1 : $11;
   $spec$select23 = $12 ? $13 : $10;
   $$0 = $spec$select23;$$020 = $spec$select22;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = (getTempRet0() | 0);
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _copysignl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_copysign($0,$1));
 return (+$2);
}
function _fmodl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_fmod($0,$1));
 return (+$2);
}
function _scalbnl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function _fmod($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$070 = 0.0, $$071$lcssa = 0, $$07194 = 0, $$073$lcssa = 0, $$073100 = 0, $$172 = 0, $$174 = 0, $$275$lcssa = 0, $$27585 = 0, $$376$lcssa = 0, $$37682 = 0, $$lcssa = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $7 = (getTempRet0() | 0);
 $8 = $6 & 2047;
 $9 = (_bitshift64Lshr(($4|0),($5|0),52)|0);
 $10 = (getTempRet0() | 0);
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = (_bitshift64Shl(($4|0),($5|0),1)|0);
 $14 = (getTempRet0() | 0);
 $15 = ($13|0)==(0);
 $16 = ($14|0)==(0);
 $17 = $15 & $16;
 L1: do {
  if ($17) {
   label = 3;
  } else {
   $18 = (___DOUBLE_BITS_273($1)|0);
   $19 = (getTempRet0() | 0);
   $20 = $19 & 2147483647;
   $21 = ($20>>>0)>(2146435072);
   $22 = ($18>>>0)>(0);
   $23 = ($20|0)==(2146435072);
   $24 = $23 & $22;
   $25 = $21 | $24;
   $26 = ($8|0)==(2047);
   $or$cond = $26 | $25;
   if ($or$cond) {
    label = 3;
   } else {
    $29 = (_bitshift64Shl(($2|0),($3|0),1)|0);
    $30 = (getTempRet0() | 0);
    $31 = ($30>>>0)>($14>>>0);
    $32 = ($29>>>0)>($13>>>0);
    $33 = ($30|0)==($14|0);
    $34 = $33 & $32;
    $35 = $31 | $34;
    if (!($35)) {
     $36 = ($29|0)==($13|0);
     $37 = ($30|0)==($14|0);
     $38 = $36 & $37;
     $39 = $0 * 0.0;
     $spec$select = $38 ? $39 : $0;
     return (+$spec$select);
    }
    $40 = ($8|0)==(0);
    if ($40) {
     $41 = (_bitshift64Shl(($2|0),($3|0),12)|0);
     $42 = (getTempRet0() | 0);
     $43 = ($42|0)>(-1);
     $44 = ($41>>>0)>(4294967295);
     $45 = ($42|0)==(-1);
     $46 = $45 & $44;
     $47 = $43 | $46;
     if ($47) {
      $$073100 = 0;$49 = $41;$50 = $42;
      while(1) {
       $48 = (($$073100) + -1)|0;
       $51 = (_bitshift64Shl(($49|0),($50|0),1)|0);
       $52 = (getTempRet0() | 0);
       $53 = ($52|0)>(-1);
       $54 = ($51>>>0)>(4294967295);
       $55 = ($52|0)==(-1);
       $56 = $55 & $54;
       $57 = $53 | $56;
       if ($57) {
        $$073100 = $48;$49 = $51;$50 = $52;
       } else {
        $$073$lcssa = $48;
        break;
       }
      }
     } else {
      $$073$lcssa = 0;
     }
     $58 = (1 - ($$073$lcssa))|0;
     $59 = (_bitshift64Shl(($2|0),($3|0),($58|0))|0);
     $60 = (getTempRet0() | 0);
     $$174 = $$073$lcssa;$87 = $59;$88 = $60;
    } else {
     $61 = $3 & 1048575;
     $62 = $61 | 1048576;
     $$174 = $8;$87 = $2;$88 = $62;
    }
    $63 = ($11|0)==(0);
    if ($63) {
     $64 = (_bitshift64Shl(($4|0),($5|0),12)|0);
     $65 = (getTempRet0() | 0);
     $66 = ($65|0)>(-1);
     $67 = ($64>>>0)>(4294967295);
     $68 = ($65|0)==(-1);
     $69 = $68 & $67;
     $70 = $66 | $69;
     if ($70) {
      $$07194 = 0;$72 = $64;$73 = $65;
      while(1) {
       $71 = (($$07194) + -1)|0;
       $74 = (_bitshift64Shl(($72|0),($73|0),1)|0);
       $75 = (getTempRet0() | 0);
       $76 = ($75|0)>(-1);
       $77 = ($74>>>0)>(4294967295);
       $78 = ($75|0)==(-1);
       $79 = $78 & $77;
       $80 = $76 | $79;
       if ($80) {
        $$07194 = $71;$72 = $74;$73 = $75;
       } else {
        $$071$lcssa = $71;
        break;
       }
      }
     } else {
      $$071$lcssa = 0;
     }
     $81 = (1 - ($$071$lcssa))|0;
     $82 = (_bitshift64Shl(($4|0),($5|0),($81|0))|0);
     $83 = (getTempRet0() | 0);
     $$172 = $$071$lcssa;$89 = $82;$90 = $83;
    } else {
     $84 = $5 & 1048575;
     $85 = $84 | 1048576;
     $$172 = $11;$89 = $4;$90 = $85;
    }
    $86 = ($$174|0)>($$172|0);
    $91 = (_i64Subtract(($87|0),($88|0),($89|0),($90|0))|0);
    $92 = (getTempRet0() | 0);
    $93 = ($92|0)>(-1);
    $94 = ($91>>>0)>(4294967295);
    $95 = ($92|0)==(-1);
    $96 = $95 & $94;
    $97 = $93 | $96;
    L25: do {
     if ($86) {
      $$27585 = $$174;$100 = $92;$158 = $97;$159 = $87;$160 = $88;$98 = $91;
      while(1) {
       if ($158) {
        $99 = ($98|0)==(0);
        $101 = ($100|0)==(0);
        $102 = $99 & $101;
        if ($102) {
         break;
        } else {
         $104 = $98;$105 = $100;
        }
       } else {
        $104 = $159;$105 = $160;
       }
       $106 = (_bitshift64Shl(($104|0),($105|0),1)|0);
       $107 = (getTempRet0() | 0);
       $108 = (($$27585) + -1)|0;
       $109 = ($108|0)>($$172|0);
       $110 = (_i64Subtract(($106|0),($107|0),($89|0),($90|0))|0);
       $111 = (getTempRet0() | 0);
       $112 = ($111|0)>(-1);
       $113 = ($110>>>0)>(4294967295);
       $114 = ($111|0)==(-1);
       $115 = $114 & $113;
       $116 = $112 | $115;
       if ($109) {
        $$27585 = $108;$100 = $111;$158 = $116;$159 = $106;$160 = $107;$98 = $110;
       } else {
        $$275$lcssa = $108;$$lcssa = $116;$117 = $110;$119 = $111;$156 = $106;$157 = $107;
        break L25;
       }
      }
      $103 = $0 * 0.0;
      $$070 = $103;
      break L1;
     } else {
      $$275$lcssa = $$174;$$lcssa = $97;$117 = $91;$119 = $92;$156 = $87;$157 = $88;
     }
    } while(0);
    if ($$lcssa) {
     $118 = ($117|0)==(0);
     $120 = ($119|0)==(0);
     $121 = $118 & $120;
     if ($121) {
      $122 = $0 * 0.0;
      $$070 = $122;
      break;
     } else {
      $123 = $119;$125 = $117;
     }
    } else {
     $123 = $157;$125 = $156;
    }
    $124 = ($123>>>0)<(1048576);
    $126 = ($125>>>0)<(0);
    $127 = ($123|0)==(1048576);
    $128 = $127 & $126;
    $129 = $124 | $128;
    if ($129) {
     $$37682 = $$275$lcssa;$130 = $125;$131 = $123;
     while(1) {
      $132 = (_bitshift64Shl(($130|0),($131|0),1)|0);
      $133 = (getTempRet0() | 0);
      $134 = (($$37682) + -1)|0;
      $135 = ($133>>>0)<(1048576);
      $136 = ($132>>>0)<(0);
      $137 = ($133|0)==(1048576);
      $138 = $137 & $136;
      $139 = $135 | $138;
      if ($139) {
       $$37682 = $134;$130 = $132;$131 = $133;
      } else {
       $$376$lcssa = $134;$141 = $132;$142 = $133;
       break;
      }
     }
    } else {
     $$376$lcssa = $$275$lcssa;$141 = $125;$142 = $123;
    }
    $140 = ($$376$lcssa|0)>(0);
    if ($140) {
     $143 = (_i64Add(($141|0),($142|0),0,-1048576)|0);
     $144 = (getTempRet0() | 0);
     $145 = (_bitshift64Shl(($$376$lcssa|0),0,52)|0);
     $146 = (getTempRet0() | 0);
     $147 = $143 | $145;
     $148 = $144 | $146;
     $153 = $148;$155 = $147;
    } else {
     $149 = (1 - ($$376$lcssa))|0;
     $150 = (_bitshift64Lshr(($141|0),($142|0),($149|0))|0);
     $151 = (getTempRet0() | 0);
     $153 = $151;$155 = $150;
    }
    $152 = $153 | $12;
    HEAP32[tempDoublePtr>>2] = $155;HEAP32[tempDoublePtr+4>>2] = $152;$154 = +HEAPF64[tempDoublePtr>>3];
    $$070 = $154;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $27 = $0 * $1;
  $28 = $27 / $27;
  $$070 = $28;
 }
 return (+$$070);
}
function ___DOUBLE_BITS_273($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 setTempRet0(($2) | 0);
 return ($1|0);
}
function _catclose($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _catgets($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($3|0);
}
function _catopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ((-1)|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 5;
  } else {
   $$01518 = $0;$22 = $1;
   while(1) {
    $4 = HEAP8[$$01518>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$pn = $22;
     break L1;
    }
    $6 = ((($$01518)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 5;
     break;
    } else {
     $$01518 = $6;$22 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn29 = $$0;
   while(1) {
    $19 = ((($$pn29)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn29 = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$pn = $21;
 }
 $$014 = (($$pn) - ($1))|0;
 return ($$014|0);
}
function ___munmap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = $0;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $3 = (___syscall91(91,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $4 = (_strlen($0)|0);
   $5 = (($0) + ($4)|0);
   $$0 = $5;
  } else {
   $6 = $0;
   $7 = $6 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$030$lcssa = $0;
   } else {
    $9 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = HEAP8[$$03039>>0]|0;
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($9<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = HEAP32[$$030$lcssa>>2]|0;
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = HEAP8[$$1>>0]|0;
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _dummy_405() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _freelocale($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___loc_is_allocated($0)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  _free($0);
 }
 return;
}
function ___loc_is_allocated($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $narrow = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)!=(0|0);
 $2 = ($0|0)!=(35616|0);
 $or$cond = $1 & $2;
 $3 = ($0|0)!=(10824|0);
 $narrow = $3 & $or$cond;
 $4 = $narrow&1;
 return ($4|0);
}
function _mbrtowc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$03952 = 0, $$03952$pn = 0, $$04051 = 0, $$04350 = 0, $$2 = 0, $$lcssa = 0, $$lcssa56 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($3|0)==(0|0);
 $spec$select = $5 ? 35644 : $3;
 $6 = HEAP32[$spec$select>>2]|0;
 $7 = ($1|0)==(0|0);
 L1: do {
  if ($7) {
   $8 = ($6|0)==(0);
   if ($8) {
    $$0 = 0;
   } else {
    label = 19;
   }
  } else {
   $9 = ($0|0)==(0|0);
   $spec$select47 = $9 ? $4 : $0;
   $10 = ($2|0)==(0);
   if ($10) {
    $$0 = -2;
   } else {
    $11 = ($6|0)==(0);
    if ($11) {
     $12 = HEAP8[$1>>0]|0;
     $13 = ($12<<24>>24)>(-1);
     if ($13) {
      $14 = $12&255;
      HEAP32[$spec$select47>>2] = $14;
      $15 = ($12<<24>>24)!=(0);
      $16 = $15&1;
      $$0 = $16;
      break;
     }
     $17 = (___pthread_self_414()|0);
     $18 = ((($17)) + 188|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(0|0);
     $22 = HEAP8[$1>>0]|0;
     if ($21) {
      $23 = $22 << 24 >> 24;
      $24 = $23 & 57343;
      HEAP32[$spec$select47>>2] = $24;
      $$0 = 1;
      break;
     }
     $25 = $22&255;
     $26 = (($25) + -194)|0;
     $27 = ($26>>>0)>(50);
     if ($27) {
      label = 19;
      break;
     }
     $28 = ((($1)) + 1|0);
     $29 = (736 + ($26<<2)|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = (($2) + -1)|0;
     $32 = ($31|0)==(0);
     if ($32) {
      $$2 = $30;
     } else {
      $$03952 = $28;$$04051 = $30;$$04350 = $31;
      label = 11;
     }
    } else {
     $$03952 = $1;$$04051 = $6;$$04350 = $2;
     label = 11;
    }
    L14: do {
     if ((label|0) == 11) {
      $33 = HEAP8[$$03952>>0]|0;
      $34 = $33&255;
      $35 = $34 >>> 3;
      $36 = (($35) + -16)|0;
      $37 = $$04051 >> 26;
      $38 = (($35) + ($37))|0;
      $39 = $36 | $38;
      $40 = ($39>>>0)>(7);
      if ($40) {
       label = 19;
       break L1;
      }
      $41 = $$04051 << 6;
      $42 = (($34) + -128)|0;
      $43 = $42 | $41;
      $44 = (($$04350) + -1)|0;
      $45 = ($43|0)<(0);
      if ($45) {
       $$03952$pn = $$03952;$47 = $43;$53 = $44;
       while(1) {
        $56 = ((($$03952$pn)) + 1|0);
        $57 = ($53|0)==(0);
        if ($57) {
         $$2 = $47;
         break L14;
        }
        $49 = HEAP8[$56>>0]|0;
        $58 = $49 & -64;
        $59 = ($58<<24>>24)==(-128);
        if (!($59)) {
         label = 19;
         break L1;
        }
        $46 = $47 << 6;
        $48 = $49&255;
        $50 = (($48) + -128)|0;
        $51 = $50 | $46;
        $52 = (($53) + -1)|0;
        $54 = ($51|0)<(0);
        if ($54) {
         $$03952$pn = $56;$47 = $51;$53 = $52;
        } else {
         $$lcssa = $52;$$lcssa56 = $51;
         break;
        }
       }
      } else {
       $$lcssa = $44;$$lcssa56 = $43;
      }
      HEAP32[$spec$select>>2] = 0;
      HEAP32[$spec$select47>>2] = $$lcssa56;
      $55 = (($2) - ($$lcssa))|0;
      $$0 = $55;
      break L1;
     }
    } while(0);
    HEAP32[$spec$select>>2] = $$2;
    $$0 = -2;
   }
  }
 } while(0);
 if ((label|0) == 19) {
  HEAP32[$spec$select>>2] = 0;
  $60 = (___errno_location()|0);
  HEAP32[$60>>2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___pthread_self_414() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _isdigit_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_isdigit($0)|0);
 return ($2|0);
}
function _isxdigit_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_isxdigit($0)|0);
 return ($2|0);
}
function ___get_locale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $$neg = 0, $$pre121 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $2 = sp;
 $3 = sp + 256|0;
 $4 = HEAP8[$1>>0]|0;
 $5 = ($4<<24>>24)==(0);
 do {
  if ($5) {
   $6 = (_getenv((21248|0))|0);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    $8 = HEAP8[$6>>0]|0;
    $9 = ($8<<24>>24)==(0);
    if (!($9)) {
     $$1 = $6;
     break;
    }
   }
   $10 = (5568 + (($0*12)|0)|0);
   $11 = (_getenv(($10|0))|0);
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    $13 = HEAP8[$11>>0]|0;
    $14 = ($13<<24>>24)==(0);
    if (!($14)) {
     $$1 = $11;
     break;
    }
   }
   $15 = (_getenv((21255|0))|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP8[$15>>0]|0;
    $18 = ($17<<24>>24)==(0);
    if (!($18)) {
     $$1 = $15;
     break;
    }
   }
   $$1 = 21260;
  } else {
   $$1 = $1;
  }
 } while(0);
 $$093118 = 0;
 L13: while(1) {
  $19 = (($$1) + ($$093118)|0);
  $20 = HEAP8[$19>>0]|0;
  switch ($20<<24>>24) {
  case 47: case 0:  {
   $$093$lcssa = $$093118;
   break L13;
   break;
  }
  default: {
  }
  }
  $21 = (($$093118) + 1)|0;
  $22 = ($21>>>0)<(15);
  if ($22) {
   $$093118 = $21;
  } else {
   $$093$lcssa = 15;
   break;
  }
 }
 $23 = HEAP8[$$1>>0]|0;
 $24 = ($23<<24>>24)==(46);
 if ($24) {
  $$2122 = 21260;
  label = 15;
 } else {
  $25 = (($$1) + ($$093$lcssa)|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)==(0);
  if ($27) {
   $28 = ($23<<24>>24)==(67);
   if ($28) {
    $$2122 = $$1;
    label = 15;
   } else {
    $$2123 = $$1;
    label = 16;
   }
  } else {
   $$2122 = 21260;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $29 = ((($$2122)) + 1|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $$2124 = $$2122;
   label = 18;
  } else {
   $$2123 = $$2122;
   label = 16;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $32 = (_strcmp($$2123,21260)|0);
   $33 = ($32|0)==(0);
   if ($33) {
    $$2124 = $$2123;
    label = 18;
   } else {
    $34 = (_strcmp($$2123,21268)|0);
    $35 = ($34|0)==(0);
    if ($35) {
     $$2124 = $$2123;
     label = 18;
    } else {
     $40 = HEAP32[8912]|0;
     $41 = ($40|0)==(0|0);
     if (!($41)) {
      $$094114 = $40;
      while(1) {
       $42 = ((($$094114)) + 8|0);
       $43 = (_strcmp($$2123,$42)|0);
       $44 = ($43|0)==(0);
       if ($44) {
        $$0 = $$094114;
        break L22;
       }
       $45 = ((($$094114)) + 24|0);
       $46 = HEAP32[$45>>2]|0;
       $47 = ($46|0)==(0|0);
       if ($47) {
        break;
       } else {
        $$094114 = $46;
       }
      }
     }
     ___lock((35652|0));
     $48 = HEAP32[8912]|0;
     $49 = ($48|0)==(0|0);
     L32: do {
      if (!($49)) {
       $$195112 = $48;
       while(1) {
        $50 = ((($$195112)) + 8|0);
        $51 = (_strcmp($$2123,$50)|0);
        $52 = ($51|0)==(0);
        if ($52) {
         break;
        }
        $53 = ((($$195112)) + 24|0);
        $54 = HEAP32[$53>>2]|0;
        $55 = ($54|0)==(0|0);
        if ($55) {
         break L32;
        } else {
         $$195112 = $54;
        }
       }
       ___unlock((35652|0));
       $$0 = $$195112;
       break L22;
      }
     } while(0);
     $56 = HEAP32[(35560)>>2]|0;
     $57 = ($56|0)==(0);
     L39: do {
      if ($57) {
       $58 = (_getenv((21274|0))|0);
       $59 = ($58|0)==(0|0);
       if ($59) {
        label = 41;
       } else {
        $60 = HEAP8[$58>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         label = 41;
        } else {
         $62 = (254 - ($$093$lcssa))|0;
         $63 = (($$093$lcssa) + 1)|0;
         $$1100111 = $58;
         while(1) {
          $64 = (___strchrnul($$1100111,58)|0);
          $65 = $64;
          $66 = $$1100111;
          $67 = (($65) - ($66))|0;
          $68 = HEAP8[$64>>0]|0;
          $69 = ($68<<24>>24)!=(0);
          $$neg = $69 << 31 >> 31;
          $70 = (($67) + ($$neg))|0;
          $71 = ($70>>>0)<($62>>>0);
          if ($71) {
           (_memcpy(($2|0),($$1100111|0),($70|0))|0);
           $72 = (($2) + ($70)|0);
           HEAP8[$72>>0] = 47;
           $73 = ((($72)) + 1|0);
           (_memcpy(($73|0),($$2123|0),($$093$lcssa|0))|0);
           $74 = (($63) + ($70))|0;
           $75 = (($2) + ($74)|0);
           HEAP8[$75>>0] = 0;
           $76 = (___map_file(($2|0),($3|0))|0);
           $77 = ($76|0)==(0|0);
           if (!($77)) {
            break;
           }
           $$pre121 = HEAP8[$64>>0]|0;
           $86 = $$pre121;
          } else {
           $86 = $68;
          }
          $87 = ($86<<24>>24)!=(0);
          $88 = $87&1;
          $89 = (($64) + ($88)|0);
          $90 = HEAP8[$89>>0]|0;
          $91 = ($90<<24>>24)==(0);
          if ($91) {
           label = 41;
           break L39;
          } else {
           $$1100111 = $89;
          }
         }
         $78 = (_malloc(28)|0);
         $79 = ($78|0)==(0|0);
         if ($79) {
          $92 = HEAP32[$3>>2]|0;
          (___munmap($76,$92)|0);
          label = 41;
          break;
         } else {
          HEAP32[$78>>2] = $76;
          $80 = HEAP32[$3>>2]|0;
          $81 = ((($78)) + 4|0);
          HEAP32[$81>>2] = $80;
          $82 = ((($78)) + 8|0);
          (_memcpy(($82|0),($$2123|0),($$093$lcssa|0))|0);
          $83 = (($82) + ($$093$lcssa)|0);
          HEAP8[$83>>0] = 0;
          $84 = HEAP32[8912]|0;
          $85 = ((($78)) + 24|0);
          HEAP32[$85>>2] = $84;
          HEAP32[8912] = $78;
          $$4 = $78;
          break;
         }
        }
       }
      } else {
       label = 41;
      }
     } while(0);
     if ((label|0) == 41) {
      $93 = (_malloc(28)|0);
      $94 = ($93|0)==(0|0);
      if ($94) {
       $$4 = $93;
      } else {
       $95 = HEAP32[2699]|0;
       HEAP32[$93>>2] = $95;
       $96 = HEAP32[(10800)>>2]|0;
       $97 = ((($93)) + 4|0);
       HEAP32[$97>>2] = $96;
       $98 = ((($93)) + 8|0);
       (_memcpy(($98|0),($$2123|0),($$093$lcssa|0))|0);
       $99 = (($98) + ($$093$lcssa)|0);
       HEAP8[$99>>0] = 0;
       $100 = HEAP32[8912]|0;
       $101 = ((($93)) + 24|0);
       HEAP32[$101>>2] = $100;
       HEAP32[8912] = $93;
       $$4 = $93;
      }
     }
     $102 = ($$4|0)==(0|0);
     $103 = ($0|0)==(0);
     $or$cond = $103 & $102;
     $spec$select = $or$cond ? 10796 : $$4;
     ___unlock((35652|0));
     $$0 = $spec$select;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   $36 = ($0|0)==(0);
   if ($36) {
    $37 = ((($$2124)) + 1|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = ($38<<24>>24)==(46);
    if ($39) {
     $$0 = 10796;
     break;
    }
   }
   $$0 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___newlocale($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$03338 = 0, $$03439 = 0, $$036 = 0, $$13537 = 0, $$pre = 0, $$pre41 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond40 = 0, $or$cond = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $4 = (___loc_is_allocated($2)|0);
 $5 = ($4|0)==(0);
 L1: do {
  if ($5) {
   $12 = ($2|0)!=(0|0);
   $$03338 = 0;$$13537 = 0;
   while(1) {
    $$pre = 1 << $$13537;
    $$pre41 = $$pre & $0;
    $13 = ($$pre41|0)==(0);
    $or$cond = $12 & $13;
    if ($or$cond) {
     $14 = (($2) + ($$13537<<2)|0);
     $15 = HEAP32[$14>>2]|0;
     $$0 = $15;
    } else {
     $16 = ($$pre41|0)==(0);
     $17 = $16 ? 37670 : $1;
     $18 = (___get_locale($$13537,$17)|0);
     $$0 = $18;
    }
    $19 = ($$0|0)!=(0|0);
    $20 = $19&1;
    $trunc = (($$03338) + ($20))|0;
    $21 = (($3) + ($$13537<<2)|0);
    HEAP32[$21>>2] = $$0;
    $22 = (($$13537) + 1)|0;
    $exitcond = ($22|0)==(6);
    if ($exitcond) {
     break;
    } else {
     $$03338 = $trunc;$$13537 = $22;
    }
   }
   $trunc$clear = $trunc & 2147483647;
   switch ($trunc$clear|0) {
   case 0:  {
    $$036 = 35616;
    break L1;
    break;
   }
   case 1:  {
    $23 = HEAP32[$3>>2]|0;
    $24 = ($23|0)==(10796|0);
    if ($24) {
     $$036 = 10824;
     break L1;
    }
    break;
   }
   default: {
   }
   }
   $$036 = $2;
  } else {
   $$03439 = 0;
   while(1) {
    $6 = 1 << $$03439;
    $7 = $6 & $0;
    $8 = ($7|0)==(0);
    if (!($8)) {
     $9 = (($2) + ($$03439<<2)|0);
     $10 = (___get_locale($$03439,$1)|0);
     HEAP32[$9>>2] = $10;
    }
    $11 = (($$03439) + 1)|0;
    $exitcond40 = ($11|0)==(6);
    if ($exitcond40) {
     $$036 = $2;
     break;
    } else {
     $$03439 = $11;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$036|0);
}
function _snprintf($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_vsnprintf($0,$1,$2,$3)|0);
 STACKTOP = sp;return ($4|0);
}
function ___uselocale($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_234()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($0|0)==(0|0);
 if (!($4)) {
  $5 = ($0|0)==((-1)|0);
  $6 = $5 ? (35592) : $0;
  HEAP32[$2>>2] = $6;
 }
 $7 = ($3|0)==((35592)|0);
 $8 = $7 ? (-1) : $3;
 return ($8|0);
}
function ___pthread_self_234() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _wmemcpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$058 = 0, $$067 = 0, $$09 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $$058 = $2;$$067 = $1;$$09 = $0;
  while(1) {
   $4 = (($$058) + -1)|0;
   $5 = ((($$067)) + 4|0);
   $6 = HEAP32[$$067>>2]|0;
   $7 = ((($$09)) + 4|0);
   HEAP32[$$09>>2] = $6;
   $8 = ($4|0)==(0);
   if ($8) {
    break;
   } else {
    $$058 = $4;$$067 = $5;$$09 = $7;
   }
  }
 }
 return ($0|0);
}
function ___strdup($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strlen($0)|0);
 $2 = (($1) + 1)|0;
 $3 = (_malloc($2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
 } else {
  $5 = (_memcpy(($3|0),($0|0),($2|0))|0);
  $$0 = $5;
 }
 return ($$0|0);
}
function _fwrite($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $10 = (___lockfile($3)|0);
  $phitmp = ($10|0)==(0);
  $11 = (___fwritex($0,$4,$3)|0);
  if ($phitmp) {
   $12 = $11;
  } else {
   ___unlockfile($3);
   $12 = $11;
  }
 } else {
  $9 = (___fwritex($0,$4,$3)|0);
  $12 = $9;
 }
 $13 = ($12|0)==($4|0);
 if ($13) {
  $15 = $spec$select;
 } else {
  $14 = (($12>>>0) / ($1>>>0))&-1;
  $15 = $14;
 }
 return ($15|0);
}
function ___overflow($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = $1&255;
 HEAP8[$2>>0] = $3;
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___towrite($0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$4>>2]|0;
   $12 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $12 = $5;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $9 = ((($0)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10>>>0)<($12>>>0);
   if ($11) {
    $13 = $1 & 255;
    $14 = ((($0)) + 75|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15 << 24 >> 24;
    $17 = ($13|0)==($16|0);
    if (!($17)) {
     $18 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $18;
     HEAP8[$10>>0] = $3;
     $$0 = $13;
     break;
    }
   }
   $19 = ((($0)) + 36|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (FUNCTION_TABLE_iiii[$20 & 1023]($0,$2,1)|0);
   $22 = ($21|0)==(1);
   if ($22) {
    $23 = HEAP8[$2>>0]|0;
    $24 = $23&255;
    $$0 = $24;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _mbtowc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($1|0)==(0|0);
 L1: do {
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ($2|0)==(0);
   do {
    if (!($5)) {
     $6 = ($0|0)==(0|0);
     $spec$select = $6 ? $3 : $0;
     $7 = HEAP8[$1>>0]|0;
     $8 = ($7<<24>>24)>(-1);
     if ($8) {
      $9 = $7&255;
      HEAP32[$spec$select>>2] = $9;
      $10 = ($7<<24>>24)!=(0);
      $11 = $10&1;
      $$0 = $11;
      break L1;
     }
     $12 = (___pthread_self_420()|0);
     $13 = ((($12)) + 188|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==(0|0);
     $17 = HEAP8[$1>>0]|0;
     if ($16) {
      $18 = $17 << 24 >> 24;
      $19 = $18 & 57343;
      HEAP32[$spec$select>>2] = $19;
      $$0 = 1;
      break L1;
     }
     $20 = $17&255;
     $21 = (($20) + -194)|0;
     $22 = ($21>>>0)>(50);
     if (!($22)) {
      $23 = ((($1)) + 1|0);
      $24 = (736 + ($21<<2)|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = ($2>>>0)<(4);
      if ($26) {
       $27 = ($2*6)|0;
       $28 = (($27) + -6)|0;
       $29 = -2147483648 >>> $28;
       $30 = $25 & $29;
       $31 = ($30|0)==(0);
       if (!($31)) {
        break;
       }
      }
      $32 = HEAP8[$23>>0]|0;
      $33 = $32&255;
      $34 = $33 >>> 3;
      $35 = (($34) + -16)|0;
      $36 = $25 >> 26;
      $37 = (($34) + ($36))|0;
      $38 = $35 | $37;
      $39 = ($38>>>0)>(7);
      if (!($39)) {
       $40 = $25 << 6;
       $41 = (($33) + -128)|0;
       $42 = $41 | $40;
       $43 = ($42|0)<(0);
       if (!($43)) {
        HEAP32[$spec$select>>2] = $42;
        $$0 = 2;
        break L1;
       }
       $44 = ((($1)) + 2|0);
       $45 = HEAP8[$44>>0]|0;
       $46 = $45&255;
       $47 = (($46) + -128)|0;
       $48 = ($47>>>0)>(63);
       if (!($48)) {
        $49 = $42 << 6;
        $50 = $47 | $49;
        $51 = ($50|0)<(0);
        if (!($51)) {
         HEAP32[$spec$select>>2] = $50;
         $$0 = 3;
         break L1;
        }
        $52 = ((($1)) + 3|0);
        $53 = HEAP8[$52>>0]|0;
        $54 = $53&255;
        $55 = (($54) + -128)|0;
        $56 = ($55>>>0)>(63);
        if (!($56)) {
         $57 = $50 << 6;
         $58 = $55 | $57;
         HEAP32[$spec$select>>2] = $58;
         $$0 = 4;
         break L1;
        }
       }
      }
     }
    }
   } while(0);
   $59 = (___errno_location()|0);
   HEAP32[$59>>2] = 84;
   $$0 = -1;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___pthread_self_420() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((35660|0));
 return (35668|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((35660|0));
 return;
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[2715]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[2715]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $25 = $17;
     } else {
      $25 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $26 = ($25|0)==(0);
     if (!($26)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (FUNCTION_TABLE_iiii[$7 & 1023]($0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ($17|0)<(0);
   $19 = $18 << 31 >> 31;
   $20 = ((($0)) + 40|0);
   $21 = HEAP32[$20>>2]|0;
   (FUNCTION_TABLE_iiiii[$21 & 511]($0,$17,$19,1)|0);
   $22 = (getTempRet0() | 0);
  }
  $23 = ((($0)) + 16|0);
  HEAP32[$23>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _sscanf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vsscanf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function _vsscanf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $3 = sp;
 _memset(($3|0),0,144)|0;
 $4 = ((($3)) + 32|0);
 HEAP32[$4>>2] = 658;
 $5 = ((($3)) + 44|0);
 HEAP32[$5>>2] = $0;
 $6 = ((($3)) + 76|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($3)) + 84|0);
 HEAP32[$7>>2] = $0;
 $8 = (_vfscanf($3,$1,$2)|0);
 STACKTOP = sp;return ($8|0);
}
function _do_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___string_read($0,$1,$2)|0);
 return ($3|0);
}
function _vfscanf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0266$lcssa = 0, $$0266407 = 0, $$0268 = 0, $$0270 = 0, $$0272 = 0, $$0273418 = 0, $$0276$ph$ph = 0, $$0280$ph = 0, $$0280$ph$ph = 0, $$0288409 = 0, $$0290414 = 0, $$0294 = 0, $$0295 = 0, $$0308412 = 0, $$10 = 0, $$10318 = 0, $$11 = 0, $$12 = 0, $$1267 = 0, $$1271 = 0;
 var $$1274 = 0, $$1281 = 0, $$1291 = 0, $$1309 = 0, $$2 = 0, $$2275 = 0, $$2278$ph = 0, $$2282 = 0, $$2282$ph = 0, $$2292 = 0, $$2310$ph = 0, $$3$lcssa = 0, $$3283 = 0, $$3293 = 0, $$3406 = 0, $$4 = 0, $$4284 = 0, $$5 = 0, $$5313 = 0, $$6 = 0;
 var $$6302 = 0, $$6314 = 0, $$7 = 0, $$7315 = 0, $$8 = 0, $$8316 = 0, $$9 = 0, $$9317 = 0, $$not = 0, $$old4 = 0, $$ph$ph = 0, $$pr = 0, $$pr332 = 0, $$pre = 0, $$pre$phi491Z2D = 0, $$pre$phiZ2D = 0, $$pre483 = 0, $$pre485 = 0, $$pre486 = 0, $$pre488 = 0;
 var $$pre490 = 0, $$sroa$2$0$$sroa_idx13 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0.0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0.0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_next = 0, $expanded = 0, $expanded1 = 0;
 var $expanded3 = 0, $expanded4 = 0, $expanded5 = 0, $factor = 0, $factor334 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond321 = 0, $or$cond5 = 0, $spec$select = 0, $spec$select319 = 0, $spec$select320 = 0, $spec$select322 = 0, $spec$select323 = 0, $spec$select324 = 0, $spec$select325 = 0, $spec$select326 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(288|0);
 $3 = sp + 264|0;
 $4 = sp;
 $5 = sp + 260|0;
 $6 = sp + 272|0;
 $7 = ((($0)) + 76|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)>(-1);
 if ($9) {
  $10 = (___lockfile($0)|0);
  $385 = $10;
 } else {
  $385 = 0;
 }
 $11 = HEAP8[$1>>0]|0;
 $12 = ($11<<24>>24)==(0);
 L4: do {
  if ($12) {
   $$3293 = 0;
  } else {
   $13 = ((($0)) + 4|0);
   $14 = ((($0)) + 104|0);
   $15 = ((($0)) + 120|0);
   $16 = ((($0)) + 8|0);
   $17 = ((($4)) + 10|0);
   $18 = ((($4)) + 33|0);
   $19 = ((($4)) + 46|0);
   $20 = ((($4)) + 94|0);
   $$sroa$2$0$$sroa_idx13 = ((($3)) + 4|0);
   $$0273418 = $1;$$0290414 = 0;$$0308412 = 0;$22 = $11;$387 = 0;$56 = 0;$57 = 0;
   L6: while(1) {
    $21 = $22&255;
    $23 = (_isspace($21)|0);
    $24 = ($23|0)==(0);
    L8: do {
     if ($24) {
      $62 = HEAP8[$$0273418>>0]|0;
      $63 = ($62<<24>>24)==(37);
      L10: do {
       if ($63) {
        $64 = ((($$0273418)) + 1|0);
        $65 = HEAP8[$64>>0]|0;
        L12: do {
         switch ($65<<24>>24) {
         case 37:  {
          break L10;
          break;
         }
         case 42:  {
          $87 = ((($$0273418)) + 2|0);
          $$0295 = 0;$$2275 = $87;
          break;
         }
         default: {
          $88 = $65&255;
          $89 = (_isdigit($88)|0);
          $90 = ($89|0)==(0);
          if (!($90)) {
           $91 = ((($$0273418)) + 2|0);
           $92 = HEAP8[$91>>0]|0;
           $93 = ($92<<24>>24)==(36);
           if ($93) {
            $94 = HEAP8[$64>>0]|0;
            $95 = $94&255;
            $96 = (($95) + -48)|0;
            $97 = (_arg_n($2,$96)|0);
            $98 = ((($$0273418)) + 3|0);
            $$0295 = $97;$$2275 = $98;
            break L12;
           }
          }
          $arglist_current = HEAP32[$2>>2]|0;
          $99 = $arglist_current;
          $100 = ((0) + 4|0);
          $expanded1 = $100;
          $expanded = (($expanded1) - 1)|0;
          $101 = (($99) + ($expanded))|0;
          $102 = ((0) + 4|0);
          $expanded5 = $102;
          $expanded4 = (($expanded5) - 1)|0;
          $expanded3 = $expanded4 ^ -1;
          $103 = $101 & $expanded3;
          $104 = $103;
          $105 = HEAP32[$104>>2]|0;
          $arglist_next = ((($104)) + 4|0);
          HEAP32[$2>>2] = $arglist_next;
          $$0295 = $105;$$2275 = $64;
         }
         }
        } while(0);
        $106 = HEAP8[$$2275>>0]|0;
        $107 = $106&255;
        $108 = (_isdigit($107)|0);
        $109 = ($108|0)==(0);
        if ($109) {
         $$0266$lcssa = 0;$$3$lcssa = $$2275;
        } else {
         $$0266407 = 0;$$3406 = $$2275;
         while(1) {
          $110 = ($$0266407*10)|0;
          $111 = HEAP8[$$3406>>0]|0;
          $112 = $111&255;
          $113 = (($110) + -48)|0;
          $114 = (($113) + ($112))|0;
          $115 = ((($$3406)) + 1|0);
          $116 = HEAP8[$115>>0]|0;
          $117 = $116&255;
          $118 = (_isdigit($117)|0);
          $119 = ($118|0)==(0);
          if ($119) {
           $$0266$lcssa = $114;$$3$lcssa = $115;
           break;
          } else {
           $$0266407 = $114;$$3406 = $115;
          }
         }
        }
        $120 = HEAP8[$$3$lcssa>>0]|0;
        $121 = ($120<<24>>24)==(109);
        $122 = ((($$3$lcssa)) + 1|0);
        if ($121) {
         $123 = ($$0295|0)!=(0|0);
         $124 = $123&1;
         $$pr = HEAP8[$122>>0]|0;
         $$pre486 = ((($$3$lcssa)) + 2|0);
         $$0270 = $124;$$1309 = 0;$$4 = $122;$$pre$phiZ2D = $$pre486;$125 = $$pr;$392 = 0;
        } else {
         $$0270 = 0;$$1309 = $$0308412;$$4 = $$3$lcssa;$$pre$phiZ2D = $122;$125 = $120;$392 = $387;
        }
        switch ($125<<24>>24) {
        case 104:  {
         $126 = HEAP8[$$pre$phiZ2D>>0]|0;
         $127 = ($126<<24>>24)==(104);
         $128 = ((($$4)) + 2|0);
         $spec$select323 = $127 ? $128 : $$pre$phiZ2D;
         $spec$select324 = $127 ? -2 : -1;
         $$0268 = $spec$select324;$$5 = $spec$select323;
         break;
        }
        case 108:  {
         $129 = HEAP8[$$pre$phiZ2D>>0]|0;
         $130 = ($129<<24>>24)==(108);
         $131 = ((($$4)) + 2|0);
         $spec$select325 = $130 ? $131 : $$pre$phiZ2D;
         $spec$select326 = $130 ? 3 : 1;
         $$0268 = $spec$select326;$$5 = $spec$select325;
         break;
        }
        case 106:  {
         $$0268 = 3;$$5 = $$pre$phiZ2D;
         break;
        }
        case 116: case 122:  {
         $$0268 = 1;$$5 = $$pre$phiZ2D;
         break;
        }
        case 76:  {
         $$0268 = 2;$$5 = $$pre$phiZ2D;
         break;
        }
        case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
         $$0268 = 0;$$5 = $$4;
         break;
        }
        default: {
         $$8316 = $$1309;$393 = $392;
         label = 143;
         break L6;
        }
        }
        $132 = HEAP8[$$5>>0]|0;
        $133 = $132&255;
        $134 = $133 & 47;
        $135 = ($134|0)==(3);
        $136 = $133 | 32;
        $spec$select = $135 ? $136 : $133;
        $spec$select319 = $135 ? 1 : $$0268;
        $trunc = $spec$select&255;
        switch ($trunc<<24>>24) {
        case 99:  {
         $137 = ($$0266$lcssa|0)>(1);
         $spec$select320 = $137 ? $$0266$lcssa : 1;
         $$1267 = $spec$select320;$372 = $56;$373 = $57;
         break;
        }
        case 91:  {
         $$1267 = $$0266$lcssa;$372 = $56;$373 = $57;
         break;
        }
        case 110:  {
         _store_int($$0295,$spec$select319,$56,$57);
         $$12 = $$5;$$1291 = $$0290414;$$7315 = $$1309;$388 = $392;$389 = $56;$390 = $57;
         break L8;
         break;
        }
        default: {
         ___shlim($0,0,0);
         while(1) {
          $138 = HEAP32[$13>>2]|0;
          $139 = HEAP32[$14>>2]|0;
          $140 = ($138>>>0)<($139>>>0);
          if ($140) {
           $141 = ((($138)) + 1|0);
           HEAP32[$13>>2] = $141;
           $142 = HEAP8[$138>>0]|0;
           $143 = $142&255;
           $145 = $143;
          } else {
           $144 = (___shgetc($0)|0);
           $145 = $144;
          }
          $146 = (_isspace($145)|0);
          $147 = ($146|0)==(0);
          if ($147) {
           break;
          }
         }
         $148 = HEAP32[$14>>2]|0;
         $149 = ($148|0)==(0|0);
         if ($149) {
          $$pre483 = HEAP32[$13>>2]|0;
          $161 = $$pre483;
         } else {
          $150 = HEAP32[$13>>2]|0;
          $151 = ((($150)) + -1|0);
          HEAP32[$13>>2] = $151;
          $152 = $151;
          $161 = $152;
         }
         $153 = $15;
         $154 = $153;
         $155 = HEAP32[$154>>2]|0;
         $156 = (($153) + 4)|0;
         $157 = $156;
         $158 = HEAP32[$157>>2]|0;
         $159 = HEAP32[$16>>2]|0;
         $160 = (($161) - ($159))|0;
         $162 = ($160|0)<(0);
         $163 = $162 << 31 >> 31;
         $164 = (_i64Add(($155|0),($158|0),($56|0),($57|0))|0);
         $165 = (getTempRet0() | 0);
         $166 = (_i64Add(($164|0),($165|0),($160|0),($163|0))|0);
         $167 = (getTempRet0() | 0);
         $$1267 = $$0266$lcssa;$372 = $166;$373 = $167;
        }
        }
        $168 = ($$1267|0)<(0);
        $169 = $168 << 31 >> 31;
        ___shlim($0,$$1267,$169);
        $170 = HEAP32[$13>>2]|0;
        $171 = HEAP32[$14>>2]|0;
        $172 = ($170>>>0)<($171>>>0);
        if ($172) {
         $173 = ((($170)) + 1|0);
         HEAP32[$13>>2] = $173;
         $176 = $171;
        } else {
         $174 = (___shgetc($0)|0);
         $175 = ($174|0)<(0);
         if ($175) {
          $$8316 = $$1309;$393 = $392;
          label = 143;
          break L6;
         }
         $$pr332 = HEAP32[$14>>2]|0;
         $176 = $$pr332;
        }
        $177 = ($176|0)==(0|0);
        if (!($177)) {
         $178 = HEAP32[$13>>2]|0;
         $179 = ((($178)) + -1|0);
         HEAP32[$13>>2] = $179;
        }
        L59: do {
         switch ($trunc<<24>>24) {
         case 91: case 99: case 115:  {
          $180 = ($spec$select|0)==(99);
          $181 = $spec$select | 16;
          $182 = ($181|0)==(115);
          L61: do {
           if ($182) {
            $183 = ($spec$select|0)==(115);
            (_memset(($4|0),-1,257)|0);
            HEAP8[$4>>0] = 0;
            if ($183) {
             HEAP8[$18>>0] = 0;
             ;HEAP16[$17>>1]=0|0;HEAP16[$17+2>>1]=0|0;HEAP8[$17+4>>0]=0|0;
             $$10 = $$5;
            } else {
             $$10 = $$5;
            }
           } else {
            $184 = ((($$5)) + 1|0);
            $185 = HEAP8[$184>>0]|0;
            $186 = ($185<<24>>24)==(94);
            $187 = ((($$5)) + 2|0);
            $$0294 = $186&1;
            $$6 = $186 ? $187 : $184;
            (_memset(($4|0),($$0294|0),257)|0);
            HEAP8[$4>>0] = 0;
            $188 = HEAP8[$$6>>0]|0;
            switch ($188<<24>>24) {
            case 45:  {
             $189 = ((($$6)) + 1|0);
             $190 = $$0294 ^ 1;
             $191 = $190&255;
             HEAP8[$19>>0] = $191;
             $$7 = $189;$$pre$phi491Z2D = $191;
             break;
            }
            case 93:  {
             $192 = ((($$6)) + 1|0);
             $193 = $$0294 ^ 1;
             $194 = $193&255;
             HEAP8[$20>>0] = $194;
             $$7 = $192;$$pre$phi491Z2D = $194;
             break;
            }
            default: {
             $$pre488 = $$0294 ^ 1;
             $$pre490 = $$pre488&255;
             $$7 = $$6;$$pre$phi491Z2D = $$pre490;
            }
            }
            $$8 = $$7;
            while(1) {
             $195 = HEAP8[$$8>>0]|0;
             L72: do {
              switch ($195<<24>>24) {
              case 0:  {
               $$8316 = $$1309;$393 = $392;
               label = 143;
               break L6;
               break;
              }
              case 93:  {
               $$10 = $$8;
               break L61;
               break;
              }
              case 45:  {
               $196 = ((($$8)) + 1|0);
               $197 = HEAP8[$196>>0]|0;
               switch ($197<<24>>24) {
               case 93: case 0:  {
                $$9 = $$8;$208 = 45;
                break L72;
                break;
               }
               default: {
               }
               }
               $198 = ((($$8)) + -1|0);
               $199 = HEAP8[$198>>0]|0;
               $200 = ($199&255)<($197&255);
               if ($200) {
                $201 = $199&255;
                $$0288409 = $201;
                while(1) {
                 $202 = (($$0288409) + 1)|0;
                 $203 = (($4) + ($202)|0);
                 HEAP8[$203>>0] = $$pre$phi491Z2D;
                 $204 = HEAP8[$196>>0]|0;
                 $205 = $204&255;
                 $206 = ($202>>>0)<($205>>>0);
                 if ($206) {
                  $$0288409 = $202;
                 } else {
                  $$9 = $196;$208 = $204;
                  break;
                 }
                }
               } else {
                $$9 = $196;$208 = $197;
               }
               break;
              }
              default: {
               $$9 = $$8;$208 = $195;
              }
              }
             } while(0);
             $207 = $208&255;
             $209 = (($207) + 1)|0;
             $210 = (($4) + ($209)|0);
             HEAP8[$210>>0] = $$pre$phi491Z2D;
             $211 = ((($$9)) + 1|0);
             $$8 = $211;
            }
           }
          } while(0);
          $212 = (($$1267) + 1)|0;
          $213 = $180 ? $212 : 31;
          $214 = ($spec$select319|0)==(1);
          $215 = ($$0270|0)!=(0);
          L80: do {
           if ($214) {
            if ($215) {
             $216 = $213 << 2;
             $217 = (_malloc($216)|0);
             $218 = ($217|0)==(0|0);
             if ($218) {
              $$8316 = 0;$393 = 0;
              label = 143;
              break L6;
             } else {
              $395 = $217;
             }
            } else {
             $395 = $$0295;
            }
            HEAP32[$3>>2] = 0;
            HEAP32[$$sroa$2$0$$sroa_idx13>>2] = 0;
            $$0276$ph$ph = $213;$$0280$ph$ph = 0;$$ph$ph = $395;
            L85: while(1) {
             $219 = ($$ph$ph|0)==(0|0);
             $$0280$ph = $$0280$ph$ph;
             while(1) {
              L89: while(1) {
               $220 = HEAP32[$13>>2]|0;
               $221 = HEAP32[$14>>2]|0;
               $222 = ($220>>>0)<($221>>>0);
               if ($222) {
                $223 = ((($220)) + 1|0);
                HEAP32[$13>>2] = $223;
                $224 = HEAP8[$220>>0]|0;
                $225 = $224&255;
                $228 = $225;
               } else {
                $226 = (___shgetc($0)|0);
                $228 = $226;
               }
               $227 = (($228) + 1)|0;
               $229 = (($4) + ($227)|0);
               $230 = HEAP8[$229>>0]|0;
               $231 = ($230<<24>>24)==(0);
               if ($231) {
                break L85;
               }
               $232 = $228&255;
               HEAP8[$6>>0] = $232;
               $233 = (_mbrtowc($5,$6,1,$3)|0);
               switch ($233|0) {
               case -1:  {
                $$8316 = 0;$393 = $$ph$ph;
                label = 143;
                break L6;
                break;
               }
               case -2:  {
                break;
               }
               default: {
                break L89;
               }
               }
              }
              if ($219) {
               $$1281 = $$0280$ph;
              } else {
               $234 = (($$ph$ph) + ($$0280$ph<<2)|0);
               $235 = (($$0280$ph) + 1)|0;
               $236 = HEAP32[$5>>2]|0;
               HEAP32[$234>>2] = $236;
               $$1281 = $235;
              }
              $237 = ($$1281|0)==($$0276$ph$ph|0);
              $or$cond = $215 & $237;
              if ($or$cond) {
               break;
              } else {
               $$0280$ph = $$1281;
              }
             }
             $factor334 = $$0276$ph$ph << 1;
             $238 = $factor334 | 1;
             $239 = $238 << 2;
             $240 = (_realloc($$ph$ph,$239)|0);
             $241 = ($240|0)==(0|0);
             if ($241) {
              $$8316 = 0;$393 = $$ph$ph;
              label = 143;
              break L6;
             } else {
              $$0276$ph$ph = $238;$$0280$ph$ph = $$1281;$$ph$ph = $240;
             }
            }
            $242 = (_mbsinit($3)|0);
            $243 = ($242|0)==(0);
            if ($243) {
             $$8316 = 0;$393 = $$ph$ph;
             label = 143;
             break L6;
            } else {
             $$4284 = $$0280$ph;$$5313 = 0;$$6302 = $$ph$ph;$396 = $$ph$ph;
            }
           } else {
            if ($215) {
             $244 = (_malloc($213)|0);
             $245 = ($244|0)==(0|0);
             if ($245) {
              $$8316 = 0;$393 = 0;
              label = 143;
              break L6;
             }
             $$2278$ph = $213;$$2282$ph = 0;$$2310$ph = $244;
             while(1) {
              $$2282 = $$2282$ph;
              while(1) {
               $246 = HEAP32[$13>>2]|0;
               $247 = HEAP32[$14>>2]|0;
               $248 = ($246>>>0)<($247>>>0);
               if ($248) {
                $249 = ((($246)) + 1|0);
                HEAP32[$13>>2] = $249;
                $250 = HEAP8[$246>>0]|0;
                $251 = $250&255;
                $254 = $251;
               } else {
                $252 = (___shgetc($0)|0);
                $254 = $252;
               }
               $253 = (($254) + 1)|0;
               $255 = (($4) + ($253)|0);
               $256 = HEAP8[$255>>0]|0;
               $257 = ($256<<24>>24)==(0);
               if ($257) {
                $$4284 = $$2282;$$5313 = $$2310$ph;$$6302 = 0;$396 = 0;
                break L80;
               }
               $258 = $254&255;
               $259 = (($$2282) + 1)|0;
               $260 = (($$2310$ph) + ($$2282)|0);
               HEAP8[$260>>0] = $258;
               $261 = ($259|0)==($$2278$ph|0);
               if ($261) {
                break;
               } else {
                $$2282 = $259;
               }
              }
              $factor = $$2278$ph << 1;
              $262 = $factor | 1;
              $263 = (_realloc($$2310$ph,$262)|0);
              $264 = ($263|0)==(0|0);
              if ($264) {
               $$8316 = $$2310$ph;$393 = 0;
               label = 143;
               break L6;
              } else {
               $$2278$ph = $262;$$2282$ph = $259;$$2310$ph = $263;
              }
             }
            }
            $265 = ($$0295|0)==(0|0);
            if ($265) {
             while(1) {
              $281 = HEAP32[$13>>2]|0;
              $282 = HEAP32[$14>>2]|0;
              $283 = ($281>>>0)<($282>>>0);
              if ($283) {
               $284 = ((($281)) + 1|0);
               HEAP32[$13>>2] = $284;
               $285 = HEAP8[$281>>0]|0;
               $286 = $285&255;
               $289 = $286;
              } else {
               $287 = (___shgetc($0)|0);
               $289 = $287;
              }
              $288 = (($289) + 1)|0;
              $290 = (($4) + ($288)|0);
              $291 = HEAP8[$290>>0]|0;
              $292 = ($291<<24>>24)==(0);
              if ($292) {
               $$4284 = 0;$$5313 = 0;$$6302 = 0;$396 = 0;
               break L80;
              }
             }
            }
            $$3283 = 0;
            while(1) {
             $266 = HEAP32[$13>>2]|0;
             $267 = HEAP32[$14>>2]|0;
             $268 = ($266>>>0)<($267>>>0);
             if ($268) {
              $269 = ((($266)) + 1|0);
              HEAP32[$13>>2] = $269;
              $270 = HEAP8[$266>>0]|0;
              $271 = $270&255;
              $274 = $271;
             } else {
              $272 = (___shgetc($0)|0);
              $274 = $272;
             }
             $273 = (($274) + 1)|0;
             $275 = (($4) + ($273)|0);
             $276 = HEAP8[$275>>0]|0;
             $277 = ($276<<24>>24)==(0);
             if ($277) {
              $$4284 = $$3283;$$5313 = $$0295;$$6302 = 0;$396 = 0;
              break L80;
             }
             $278 = $274&255;
             $279 = (($$3283) + 1)|0;
             $280 = (($$0295) + ($$3283)|0);
             HEAP8[$280>>0] = $278;
             $$3283 = $279;
            }
           }
          } while(0);
          $293 = HEAP32[$14>>2]|0;
          $294 = ($293|0)==(0|0);
          if ($294) {
           $$pre485 = HEAP32[$13>>2]|0;
           $306 = $$pre485;
          } else {
           $295 = HEAP32[$13>>2]|0;
           $296 = ((($295)) + -1|0);
           HEAP32[$13>>2] = $296;
           $297 = $296;
           $306 = $297;
          }
          $298 = $15;
          $299 = $298;
          $300 = HEAP32[$299>>2]|0;
          $301 = (($298) + 4)|0;
          $302 = $301;
          $303 = HEAP32[$302>>2]|0;
          $304 = HEAP32[$16>>2]|0;
          $305 = (($306) - ($304))|0;
          $307 = ($305|0)<(0);
          $308 = $307 << 31 >> 31;
          $309 = (_i64Add(($300|0),($303|0),($305|0),($308|0))|0);
          $310 = (getTempRet0() | 0);
          $311 = ($309|0)==(0);
          $312 = ($310|0)==(0);
          $313 = $311 & $312;
          if ($313) {
           $$10318 = $$5313;$$2 = $$0270;$$2292 = $$0290414;$384 = $396;
           break L6;
          }
          $$not = $180 ^ 1;
          $314 = ($309|0)==($$1267|0);
          $315 = ($310|0)==($169|0);
          $316 = $314 & $315;
          $or$cond321 = $316 | $$not;
          if (!($or$cond321)) {
           $$10318 = $$5313;$$2 = $$0270;$$2292 = $$0290414;$384 = $396;
           break L6;
          }
          do {
           if ($215) {
            if ($214) {
             HEAP32[$$0295>>2] = $$6302;
             break;
            } else {
             HEAP32[$$0295>>2] = $$5313;
             break;
            }
           }
          } while(0);
          if ($180) {
           $$11 = $$10;$$6314 = $$5313;$394 = $396;
          } else {
           $317 = ($$6302|0)==(0|0);
           if (!($317)) {
            $318 = (($$6302) + ($$4284<<2)|0);
            HEAP32[$318>>2] = 0;
           }
           $319 = ($$5313|0)==(0|0);
           if ($319) {
            $$11 = $$10;$$6314 = 0;$394 = $396;
            break L59;
           }
           $320 = (($$5313) + ($$4284)|0);
           HEAP8[$320>>0] = 0;
           $$11 = $$10;$$6314 = $$5313;$394 = $396;
          }
          break;
         }
         case 120: case 88: case 112:  {
          $$0272 = 16;
          label = 131;
          break;
         }
         case 111:  {
          $$0272 = 8;
          label = 131;
          break;
         }
         case 117: case 100:  {
          $$0272 = 10;
          label = 131;
          break;
         }
         case 105:  {
          $$0272 = 0;
          label = 131;
          break;
         }
         case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
          $342 = (+___floatscan($0,$spec$select319,0));
          $343 = $15;
          $344 = $343;
          $345 = HEAP32[$344>>2]|0;
          $346 = (($343) + 4)|0;
          $347 = $346;
          $348 = HEAP32[$347>>2]|0;
          $349 = HEAP32[$13>>2]|0;
          $350 = HEAP32[$16>>2]|0;
          $351 = (($349) - ($350))|0;
          $352 = ($351|0)<(0);
          $353 = $352 << 31 >> 31;
          $354 = (_i64Subtract(0,0,($351|0),($353|0))|0);
          $355 = (getTempRet0() | 0);
          $356 = ($345|0)==($354|0);
          $357 = ($348|0)==($355|0);
          $358 = $356 & $357;
          if ($358) {
           $$10318 = $$1309;$$2 = $$0270;$$2292 = $$0290414;$384 = $392;
           break L6;
          }
          $359 = ($$0295|0)==(0|0);
          if ($359) {
           $$11 = $$5;$$6314 = $$1309;$394 = $392;
          } else {
           switch ($spec$select319|0) {
           case 0:  {
            $360 = $342;
            HEAPF32[$$0295>>2] = $360;
            $$11 = $$5;$$6314 = $$1309;$394 = $392;
            break L59;
            break;
           }
           case 1:  {
            HEAPF64[$$0295>>3] = $342;
            $$11 = $$5;$$6314 = $$1309;$394 = $392;
            break L59;
            break;
           }
           case 2:  {
            HEAPF64[$$0295>>3] = $342;
            $$11 = $$5;$$6314 = $$1309;$394 = $392;
            break L59;
            break;
           }
           default: {
            $$11 = $$5;$$6314 = $$1309;$394 = $392;
            break L59;
           }
           }
          }
          break;
         }
         default: {
          $$11 = $$5;$$6314 = $$1309;$394 = $392;
         }
         }
        } while(0);
        do {
         if ((label|0) == 131) {
          label = 0;
          $321 = (___intscan($0,$$0272,0,-1,-1)|0);
          $322 = (getTempRet0() | 0);
          $323 = $15;
          $324 = $323;
          $325 = HEAP32[$324>>2]|0;
          $326 = (($323) + 4)|0;
          $327 = $326;
          $328 = HEAP32[$327>>2]|0;
          $329 = HEAP32[$13>>2]|0;
          $330 = HEAP32[$16>>2]|0;
          $331 = (($329) - ($330))|0;
          $332 = ($331|0)<(0);
          $333 = $332 << 31 >> 31;
          $334 = (_i64Subtract(0,0,($331|0),($333|0))|0);
          $335 = (getTempRet0() | 0);
          $336 = ($325|0)==($334|0);
          $337 = ($328|0)==($335|0);
          $338 = $336 & $337;
          if ($338) {
           $$10318 = $$1309;$$2 = $$0270;$$2292 = $$0290414;$384 = $392;
           break L6;
          }
          $339 = ($spec$select|0)==(112);
          $340 = ($$0295|0)!=(0|0);
          $or$cond3 = $340 & $339;
          if ($or$cond3) {
           $341 = $321;
           HEAP32[$$0295>>2] = $341;
           $$11 = $$5;$$6314 = $$1309;$394 = $392;
           break;
          } else {
           _store_int($$0295,$spec$select319,$321,$322);
           $$11 = $$5;$$6314 = $$1309;$394 = $392;
           break;
          }
         }
        } while(0);
        $361 = $15;
        $362 = $361;
        $363 = HEAP32[$362>>2]|0;
        $364 = (($361) + 4)|0;
        $365 = $364;
        $366 = HEAP32[$365>>2]|0;
        $367 = HEAP32[$13>>2]|0;
        $368 = HEAP32[$16>>2]|0;
        $369 = (($367) - ($368))|0;
        $370 = ($369|0)<(0);
        $371 = $370 << 31 >> 31;
        $374 = (_i64Add(($363|0),($366|0),($372|0),($373|0))|0);
        $375 = (getTempRet0() | 0);
        $376 = (_i64Add(($374|0),($375|0),($369|0),($371|0))|0);
        $377 = (getTempRet0() | 0);
        $378 = ($$0295|0)!=(0|0);
        $379 = $378&1;
        $spec$select322 = (($$0290414) + ($379))|0;
        $$12 = $$11;$$1291 = $spec$select322;$$7315 = $$6314;$388 = $394;$389 = $376;$390 = $377;
        break L8;
       }
      } while(0);
      $66 = $63&1;
      $67 = (($$0273418) + ($66)|0);
      ___shlim($0,0,0);
      $68 = HEAP32[$13>>2]|0;
      $69 = HEAP32[$14>>2]|0;
      $70 = ($68>>>0)<($69>>>0);
      if ($70) {
       $71 = ((($68)) + 1|0);
       HEAP32[$13>>2] = $71;
       $72 = HEAP8[$68>>0]|0;
       $73 = $72&255;
       $77 = $73;
      } else {
       $74 = (___shgetc($0)|0);
       $77 = $74;
      }
      $75 = HEAP8[$67>>0]|0;
      $76 = $75&255;
      $78 = ($77|0)==($76|0);
      if (!($78)) {
       label = 23;
       break L6;
      }
      $85 = (_i64Add(($56|0),($57|0),1,0)|0);
      $86 = (getTempRet0() | 0);
      $$12 = $67;$$1291 = $$0290414;$$7315 = $$0308412;$388 = $387;$389 = $85;$390 = $86;
     } else {
      $$1274 = $$0273418;
      while(1) {
       $25 = ((($$1274)) + 1|0);
       $26 = HEAP8[$25>>0]|0;
       $27 = $26&255;
       $28 = (_isspace($27)|0);
       $29 = ($28|0)==(0);
       if ($29) {
        break;
       } else {
        $$1274 = $25;
       }
      }
      ___shlim($0,0,0);
      while(1) {
       $30 = HEAP32[$13>>2]|0;
       $31 = HEAP32[$14>>2]|0;
       $32 = ($30>>>0)<($31>>>0);
       if ($32) {
        $33 = ((($30)) + 1|0);
        HEAP32[$13>>2] = $33;
        $34 = HEAP8[$30>>0]|0;
        $35 = $34&255;
        $37 = $35;
       } else {
        $36 = (___shgetc($0)|0);
        $37 = $36;
       }
       $38 = (_isspace($37)|0);
       $39 = ($38|0)==(0);
       if ($39) {
        break;
       }
      }
      $40 = HEAP32[$14>>2]|0;
      $41 = ($40|0)==(0|0);
      if ($41) {
       $$pre = HEAP32[$13>>2]|0;
       $53 = $$pre;
      } else {
       $42 = HEAP32[$13>>2]|0;
       $43 = ((($42)) + -1|0);
       HEAP32[$13>>2] = $43;
       $44 = $43;
       $53 = $44;
      }
      $45 = $15;
      $46 = $45;
      $47 = HEAP32[$46>>2]|0;
      $48 = (($45) + 4)|0;
      $49 = $48;
      $50 = HEAP32[$49>>2]|0;
      $51 = HEAP32[$16>>2]|0;
      $52 = (($53) - ($51))|0;
      $54 = ($52|0)<(0);
      $55 = $54 << 31 >> 31;
      $58 = (_i64Add(($47|0),($50|0),($56|0),($57|0))|0);
      $59 = (getTempRet0() | 0);
      $60 = (_i64Add(($58|0),($59|0),($52|0),($55|0))|0);
      $61 = (getTempRet0() | 0);
      $$12 = $$1274;$$1291 = $$0290414;$$7315 = $$0308412;$388 = $387;$389 = $60;$390 = $61;
     }
    } while(0);
    $380 = ((($$12)) + 1|0);
    $381 = HEAP8[$380>>0]|0;
    $382 = ($381<<24>>24)==(0);
    if ($382) {
     $$3293 = $$1291;
     break L4;
    } else {
     $$0273418 = $380;$$0290414 = $$1291;$$0308412 = $$7315;$22 = $381;$387 = $388;$56 = $389;$57 = $390;
    }
   }
   if ((label|0) == 23) {
    $79 = HEAP32[$14>>2]|0;
    $80 = ($79|0)==(0|0);
    if (!($80)) {
     $81 = HEAP32[$13>>2]|0;
     $82 = ((($81)) + -1|0);
     HEAP32[$13>>2] = $82;
    }
    $83 = ($77|0)>(-1);
    $84 = ($$0290414|0)!=(0);
    $or$cond5 = $84 | $83;
    if ($or$cond5) {
     $$3293 = $$0290414;
     break;
    } else {
     $$1271 = 0;$$9317 = $$0308412;$391 = $387;
     label = 144;
    }
   }
   else if ((label|0) == 143) {
    $$old4 = ($$0290414|0)==(0);
    if ($$old4) {
     $$1271 = $$0270;$$9317 = $$8316;$391 = $393;
     label = 144;
    } else {
     $$10318 = $$8316;$$2 = $$0270;$$2292 = $$0290414;$384 = $393;
    }
   }
   if ((label|0) == 144) {
    $$10318 = $$9317;$$2 = $$1271;$$2292 = -1;$384 = $391;
   }
   $383 = ($$2|0)==(0);
   if ($383) {
    $$3293 = $$2292;
   } else {
    _free($$10318);
    _free($384);
    $$3293 = $$2292;
   }
  }
 } while(0);
 $386 = ($385|0)==(0);
 if (!($386)) {
  ___unlockfile($0);
 }
 STACKTOP = sp;return ($$3293|0);
}
function _arg_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arglist_current = 0, $arglist_next = 0, $expanded = 0, $expanded1 = 0, $expanded3 = 0, $expanded4 = 0, $expanded5 = 0, $vacopy_currentptr = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $vacopy_currentptr = HEAP32[$0>>2]|0;
 HEAP32[$2>>2] = $vacopy_currentptr;
 $$0 = $1;
 while(1) {
  $3 = ($$0>>>0)>(1);
  $arglist_current = HEAP32[$2>>2]|0;
  $4 = $arglist_current;
  $5 = ((0) + 4|0);
  $expanded1 = $5;
  $expanded = (($expanded1) - 1)|0;
  $6 = (($4) + ($expanded))|0;
  $7 = ((0) + 4|0);
  $expanded5 = $7;
  $expanded4 = (($expanded5) - 1)|0;
  $expanded3 = $expanded4 ^ -1;
  $8 = $6 & $expanded3;
  $9 = $8;
  $10 = HEAP32[$9>>2]|0;
  $arglist_next = ((($9)) + 4|0);
  HEAP32[$2>>2] = $arglist_next;
  $11 = (($$0) + -1)|0;
  if ($3) {
   $$0 = $11;
  } else {
   break;
  }
 }
 STACKTOP = sp;return ($10|0);
}
function _store_int($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0|0);
 L1: do {
  if (!($4)) {
   switch ($1|0) {
   case -2:  {
    $5 = $2&255;
    HEAP8[$0>>0] = $5;
    break L1;
    break;
   }
   case -1:  {
    $6 = $2&65535;
    HEAP16[$0>>1] = $6;
    break L1;
    break;
   }
   case 0:  {
    HEAP32[$0>>2] = $2;
    break L1;
    break;
   }
   case 1:  {
    HEAP32[$0>>2] = $2;
    break L1;
    break;
   }
   case 3:  {
    $7 = $0;
    $8 = $7;
    HEAP32[$8>>2] = $2;
    $9 = (($7) + 4)|0;
    $10 = $9;
    HEAP32[$10>>2] = $3;
    break L1;
    break;
   }
   default: {
    break L1;
   }
   }
  }
 } while(0);
 return;
}
function _mbsinit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $4 = 1;
 } else {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0);
  $phitmp = $3&1;
  $4 = $phitmp;
 }
 return ($4|0);
}
function ___string_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$027 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 256)|0;
 $6 = (_memchr($4,0,$5)|0);
 $7 = ($6|0)==(0|0);
 $8 = $6;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $$027 = $7 ? $5 : $10;
 $11 = ($$027>>>0)<($2>>>0);
 $spec$select = $11 ? $$027 : $2;
 (_memcpy(($1|0),($4|0),($spec$select|0))|0);
 $12 = (($4) + ($spec$select)|0);
 $13 = ((($0)) + 4|0);
 HEAP32[$13>>2] = $12;
 $14 = (($4) + ($$027)|0);
 $15 = ((($0)) + 8|0);
 HEAP32[$15>>2] = $14;
 HEAP32[$3>>2] = $14;
 return ($spec$select|0);
}
function _mbrlen($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0|0);
 $4 = $3 ? 35672 : $2;
 $5 = (_mbrtowc(0,$0,$1,$4)|0);
 return ($5|0);
}
function _mbsnrtowcs($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$04975 = 0, $$05374 = 0, $$056 = 0, $$150 = 0, $$154 = 0, $$15773 = 0, $$164 = 0, $$176 = 0, $$2 = 0, $$25170 = 0, $$25569 = 0, $$258 = 0, $$352 = 0, $$359 = 0, $$371 = 0, $$468 = 0, $$cast = 0, $$pr$pre = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond72 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1040|0);
 $5 = sp;
 $6 = sp + 1024|0;
 $7 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $7;
 $8 = ($0|0)!=(0|0);
 $$056 = $8 ? $3 : 256;
 $$0 = $8 ? $0 : $5;
 $$cast = $7;
 $9 = ($7|0)!=(0);
 $10 = ($$056|0)!=(0);
 $or$cond72 = $10 & $9;
 L1: do {
  if ($or$cond72) {
   $$04975 = 0;$$05374 = $2;$$15773 = $$056;$$176 = $$0;$44 = $$cast;
   while(1) {
    $11 = $$05374 >>> 2;
    $12 = ($11>>>0)>=($$15773>>>0);
    $13 = ($$05374>>>0)>(131);
    $14 = $13 | $12;
    if (!($14)) {
     $$150 = $$04975;$$154 = $$05374;$$164 = $$176;$$359 = $$15773;$25 = $44;
     break L1;
    }
    $spec$select = $12 ? $$15773 : $11;
    $15 = (($$05374) - ($spec$select))|0;
    $16 = (_mbsrtowcs($$176,$6,$spec$select,$4)|0);
    $17 = ($16|0)==(-1);
    if ($17) {
     break;
    }
    $18 = ($$176|0)==($5|0);
    $19 = (($$176) + ($16<<2)|0);
    $20 = $18 ? 0 : $16;
    $$258 = (($$15773) - ($20))|0;
    $$2 = $18 ? $$176 : $19;
    $21 = (($16) + ($$04975))|0;
    $22 = HEAP32[$6>>2]|0;
    $23 = ($22|0)!=(0|0);
    $24 = ($$258|0)!=(0);
    $or$cond = $24 & $23;
    if ($or$cond) {
     $$04975 = $21;$$05374 = $15;$$15773 = $$258;$$176 = $$2;$44 = $22;
    } else {
     $$150 = $21;$$154 = $15;$$164 = $$2;$$359 = $$258;$25 = $22;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$6>>2]|0;
   $$150 = -1;$$154 = $15;$$164 = $$176;$$359 = 0;$25 = $$pr$pre;
  } else {
   $$150 = 0;$$154 = $2;$$164 = $$0;$$359 = $$056;$25 = $$cast;
  }
 } while(0);
 $26 = ($25|0)==(0|0);
 L9: do {
  if ($26) {
   $$352 = $$150;
  } else {
   $27 = ($$359|0)!=(0);
   $28 = ($$154|0)!=(0);
   $29 = $27 & $28;
   if ($29) {
    $$25170 = $$150;$$25569 = $$154;$$371 = $$164;$$468 = $$359;$30 = $25;
    while(1) {
     $31 = (_mbrtowc($$371,$30,$$25569,$4)|0);
     $32 = (($31) + 2)|0;
     $33 = ($32>>>0)<(3);
     if ($33) {
      break;
     }
     $34 = HEAP32[$6>>2]|0;
     $35 = (($34) + ($31)|0);
     HEAP32[$6>>2] = $35;
     $36 = (($$25569) - ($31))|0;
     $37 = ((($$371)) + 4|0);
     $38 = (($$468) + -1)|0;
     $39 = (($$25170) + 1)|0;
     $40 = ($38|0)!=(0);
     $41 = ($36|0)!=(0);
     $42 = $40 & $41;
     if ($42) {
      $$25170 = $39;$$25569 = $36;$$371 = $37;$$468 = $38;$30 = $35;
     } else {
      $$352 = $39;
      break L9;
     }
    }
    switch ($31|0) {
    case -1:  {
     $$352 = $31;
     break L9;
     break;
    }
    case 0:  {
     HEAP32[$6>>2] = 0;
     $$352 = $$25170;
     break L9;
     break;
    }
    default: {
     HEAP32[$4>>2] = 0;
     $$352 = $$25170;
     break L9;
    }
    }
   } else {
    $$352 = $$150;
   }
  }
 } while(0);
 if ($8) {
  $43 = HEAP32[$6>>2]|0;
  HEAP32[$1>>2] = $43;
 }
 STACKTOP = sp;return ($$352|0);
}
function _mbsrtowcs($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0105132 = 0, $$0111131 = 0, $$097 = 0, $$098$lcssa = 0, $$098133 = 0, $$10 = 0, $$11$ph = 0, $$1106$ph = 0, $$1106147 = 0, $$1112 = 0, $$1112$ph = 0, $$11122124 = 0, $$11182 = 0, $$11183 = 0, $$199 = 0, $$199$ph = 0, $$2 = 0, $$2100154 = 0, $$2107135 = 0, $$2113153 = 0;
 var $$3101 = 0, $$3108 = 0, $$3108$ph = 0, $$3108176 = 0, $$3114 = 0, $$4 = 0, $$4102 = 0, $$4109 = 0, $$4115 = 0, $$5 = 0, $$5103 = 0, $$5110 = 0, $$5110180 = 0, $$5110181 = 0, $$5116$ph = 0, $$5116146 = 0, $$6 = 0, $$6104$lcssa = 0, $$6104$ph = 0, $$6104148 = 0;
 var $$6117134 = 0, $$7118 = 0, $$7118$ph = 0, $$7118175 = 0, $$7136 = 0, $$8 = 0, $$8$ph = 0, $$8119 = 0, $$8177 = 0, $$9 = 0, $$9$sink = 0, $$9120 = 0, $$9120179 = 0, $$pre = 0, $$pre$phi173Z2D = 0, $$pre$phi174Z2D = 0, $$pre$phiZ2D = 0, $$pre$pre = 0, $$pre171 = 0, $$pre172 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($3|0)==(0|0);
 if ($5) {
  label = 5;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = ($6|0)==(0);
  if ($7) {
   label = 5;
  } else {
   $8 = ($0|0)==(0|0);
   if ($8) {
    $$2 = $6;$$4102 = $4;$$4115 = $2;
    label = 26;
   } else {
    HEAP32[$3>>2] = 0;
    $$4 = $6;$$4109 = $0;$$8119 = $2;$$9 = $4;
    label = 48;
   }
  }
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = (___pthread_self_417()|0);
   $10 = ((($9)) + 188|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==(0|0);
   $14 = ($0|0)!=(0|0);
   if (!($13)) {
    if ($14) {
     $$1106$ph = $0;$$5116$ph = $2;$$6104$ph = $4;
     label = 33;
     break;
    } else {
     $$1112$ph = $2;$$199$ph = $4;
     label = 15;
     break;
    }
   }
   if (!($14)) {
    $15 = (_strlen($4)|0);
    $$097 = $15;
    label = 63;
    break;
   }
   $16 = ($2|0)==(0);
   L13: do {
    if ($16) {
     $$098$lcssa = $4;
    } else {
     $$0105132 = $0;$$0111131 = $2;$$098133 = $4;
     while(1) {
      $17 = HEAP8[$$098133>>0]|0;
      $18 = ($17<<24>>24)==(0);
      if ($18) {
       break;
      }
      $19 = ((($$098133)) + 1|0);
      $20 = $17 << 24 >> 24;
      $21 = $20 & 57343;
      $22 = ((($$0105132)) + 4|0);
      HEAP32[$$0105132>>2] = $21;
      $23 = (($$0111131) + -1)|0;
      $24 = ($23|0)==(0);
      if ($24) {
       $$098$lcssa = $19;
       break L13;
      } else {
       $$0105132 = $22;$$0111131 = $23;$$098133 = $19;
      }
     }
     HEAP32[$$0105132>>2] = 0;
     HEAP32[$1>>2] = 0;
     $25 = (($2) - ($$0111131))|0;
     $$097 = $25;
     label = 63;
     break L5;
    }
   } while(0);
   HEAP32[$1>>2] = $$098$lcssa;
   $$097 = $2;
   label = 63;
  }
 } while(0);
 L20: while(1) {
  L21: do {
   if ((label|0) == 15) {
    label = 0;
    $$1112 = $$1112$ph;$$199 = $$199$ph;
    while(1) {
     $26 = HEAP8[$$199>>0]|0;
     $27 = $26&255;
     $28 = (($27) + -1)|0;
     $29 = ($28>>>0)<(127);
     if ($29) {
      $30 = $$199;
      $31 = $30 & 3;
      $32 = ($31|0)==(0);
      if ($32) {
       $33 = HEAP32[$$199>>2]|0;
       $34 = (($33) + -16843009)|0;
       $35 = $34 | $33;
       $36 = $35 & -2139062144;
       $37 = ($36|0)==(0);
       $38 = $33&255;
       if ($37) {
        $$2100154 = $$199;$$2113153 = $$1112;
        while(1) {
         $39 = ((($$2100154)) + 4|0);
         $40 = (($$2113153) + -4)|0;
         $41 = HEAP32[$39>>2]|0;
         $42 = (($41) + -16843009)|0;
         $43 = $42 | $41;
         $44 = $43 & -2139062144;
         $45 = ($44|0)==(0);
         if ($45) {
          $$2100154 = $39;$$2113153 = $40;
         } else {
          break;
         }
        }
        $46 = $41&255;
        $$3101 = $39;$$3114 = $40;$48 = $46;
       } else {
        $$3101 = $$199;$$3114 = $$1112;$48 = $38;
       }
      } else {
       $$3101 = $$199;$$3114 = $$1112;$48 = $26;
      }
     } else {
      $$3101 = $$199;$$3114 = $$1112;$48 = $26;
     }
     $47 = $48&255;
     $49 = (($47) + -1)|0;
     $50 = ($49>>>0)<(127);
     if (!($50)) {
      break;
     }
     $51 = ((($$3101)) + 1|0);
     $52 = (($$3114) + -1)|0;
     $$1112 = $52;$$199 = $51;
    }
    $53 = (($47) + -194)|0;
    $54 = ($53>>>0)>(50);
    if ($54) {
     $$11182 = $$3101;$$5110180 = $0;$$9120179 = $$3114;
     label = 57;
    } else {
     $55 = ((($$3101)) + 1|0);
     $56 = (736 + ($53<<2)|0);
     $57 = HEAP32[$56>>2]|0;
     $$2 = $57;$$4102 = $55;$$4115 = $$3114;
     label = 26;
     continue L20;
    }
   }
   else if ((label|0) == 26) {
    label = 0;
    $58 = HEAP8[$$4102>>0]|0;
    $59 = $58&255;
    $60 = $59 >>> 3;
    $61 = (($60) + -16)|0;
    $62 = $$2 >> 26;
    $63 = (($60) + ($62))|0;
    $64 = $61 | $63;
    $65 = ($64>>>0)>(7);
    if ($65) {
     $$5110 = $0;$$6 = $$2;$$9$sink = $$4102;$$9120 = $$4115;
     label = 56;
    } else {
     $66 = ((($$4102)) + 1|0);
     $67 = $$2 & 33554432;
     $68 = ($67|0)==(0);
     if ($68) {
      $$5103 = $66;
     } else {
      $69 = HEAP8[$66>>0]|0;
      $70 = $69 & -64;
      $71 = ($70<<24>>24)==(-128);
      if (!($71)) {
       $$5110 = $0;$$6 = $$2;$$9$sink = $$4102;$$9120 = $$4115;
       label = 56;
       break;
      }
      $72 = ((($$4102)) + 2|0);
      $73 = $$2 & 524288;
      $74 = ($73|0)==(0);
      if ($74) {
       $$5103 = $72;
      } else {
       $75 = HEAP8[$72>>0]|0;
       $76 = $75 & -64;
       $77 = ($76<<24>>24)==(-128);
       if (!($77)) {
        $$5110 = $0;$$6 = $$2;$$9$sink = $$4102;$$9120 = $$4115;
        label = 56;
        break;
       }
       $78 = ((($$4102)) + 3|0);
       $$5103 = $78;
      }
     }
     $79 = (($$4115) + -1)|0;
     $$1112$ph = $79;$$199$ph = $$5103;
     label = 15;
     continue L20;
    }
   }
   else if ((label|0) == 33) {
    label = 0;
    $80 = ($$5116$ph|0)==(0);
    L23: do {
     if ($80) {
      $$6104$lcssa = $$6104$ph;
     } else {
      $$1106147 = $$1106$ph;$$5116146 = $$5116$ph;$$6104148 = $$6104$ph;
      while(1) {
       $81 = HEAP8[$$6104148>>0]|0;
       $82 = $81&255;
       $83 = (($82) + -1)|0;
       $84 = ($83>>>0)<(127);
       if ($84) {
        $85 = $$6104148;
        $86 = $85 & 3;
        $87 = ($86|0)==(0);
        $88 = ($$5116146>>>0)>(4);
        $or$cond = $87 & $88;
        if ($or$cond) {
         $$2107135 = $$1106147;$$6117134 = $$5116146;$$7136 = $$6104148;
         while(1) {
          $89 = HEAP32[$$7136>>2]|0;
          $90 = (($89) + -16843009)|0;
          $91 = $90 | $89;
          $92 = $91 & -2139062144;
          $93 = ($92|0)==(0);
          if (!($93)) {
           label = 42;
           break;
          }
          $94 = ((($$7136)) + 1|0);
          $95 = $89 & 255;
          $96 = ((($$2107135)) + 4|0);
          HEAP32[$$2107135>>2] = $95;
          $97 = ((($$7136)) + 2|0);
          $98 = HEAP8[$94>>0]|0;
          $99 = $98&255;
          $100 = ((($$2107135)) + 8|0);
          HEAP32[$96>>2] = $99;
          $101 = ((($$7136)) + 3|0);
          $102 = HEAP8[$97>>0]|0;
          $103 = $102&255;
          $104 = ((($$2107135)) + 12|0);
          HEAP32[$100>>2] = $103;
          $105 = ((($$7136)) + 4|0);
          $106 = HEAP8[$101>>0]|0;
          $107 = $106&255;
          $108 = ((($$2107135)) + 16|0);
          HEAP32[$104>>2] = $107;
          $109 = (($$6117134) + -4)|0;
          $110 = ($109>>>0)>(4);
          if ($110) {
           $$2107135 = $108;$$6117134 = $109;$$7136 = $105;
          } else {
           label = 41;
           break;
          }
         }
         if ((label|0) == 41) {
          label = 0;
          $$pre$pre = HEAP8[$105>>0]|0;
          $$3108$ph = $108;$$7118$ph = $109;$$8$ph = $105;$$pre = $$pre$pre;
         }
         else if ((label|0) == 42) {
          label = 0;
          $111 = $89&255;
          $$3108$ph = $$2107135;$$7118$ph = $$6117134;$$8$ph = $$7136;$$pre = $111;
         }
         $$pre171 = $$pre&255;
         $$pre172 = (($$pre171) + -1)|0;
         $$3108 = $$3108$ph;$$7118 = $$7118$ph;$$8 = $$8$ph;$$pre$phi173Z2D = $$pre172;$$pre$phiZ2D = $$pre171;
         label = 44;
        } else {
         $$3108176 = $$1106147;$$7118175 = $$5116146;$$8177 = $$6104148;$$pre$phi174Z2D = $82;
        }
       } else {
        $$3108 = $$1106147;$$7118 = $$5116146;$$8 = $$6104148;$$pre$phi173Z2D = $83;$$pre$phiZ2D = $82;
        label = 44;
       }
       if ((label|0) == 44) {
        label = 0;
        $112 = ($$pre$phi173Z2D>>>0)<(127);
        if ($112) {
         $$3108176 = $$3108;$$7118175 = $$7118;$$8177 = $$8;$$pre$phi174Z2D = $$pre$phiZ2D;
        } else {
         break;
        }
       }
       $113 = ((($$8177)) + 1|0);
       $114 = ((($$3108176)) + 4|0);
       HEAP32[$$3108176>>2] = $$pre$phi174Z2D;
       $115 = (($$7118175) + -1)|0;
       $116 = ($115|0)==(0);
       if ($116) {
        $$6104$lcssa = $113;
        break L23;
       } else {
        $$1106147 = $114;$$5116146 = $115;$$6104148 = $113;
       }
      }
      $117 = (($$pre$phiZ2D) + -194)|0;
      $118 = ($117>>>0)>(50);
      if ($118) {
       $$11182 = $$8;$$5110180 = $$3108;$$9120179 = $$7118;
       label = 57;
       break L21;
      }
      $119 = ((($$8)) + 1|0);
      $120 = (736 + ($117<<2)|0);
      $121 = HEAP32[$120>>2]|0;
      $$4 = $121;$$4109 = $$3108;$$8119 = $$7118;$$9 = $119;
      label = 48;
      continue L20;
     }
    } while(0);
    HEAP32[$1>>2] = $$6104$lcssa;
    $$097 = $2;
    label = 63;
    continue L20;
   }
   else if ((label|0) == 48) {
    label = 0;
    $122 = HEAP8[$$9>>0]|0;
    $123 = $122&255;
    $124 = $123 >>> 3;
    $125 = (($124) + -16)|0;
    $126 = $$4 >> 26;
    $127 = (($124) + ($126))|0;
    $128 = $125 | $127;
    $129 = ($128>>>0)>(7);
    if ($129) {
     $$5110 = $$4109;$$6 = $$4;$$9$sink = $$9;$$9120 = $$8119;
     label = 56;
    } else {
     $130 = $$4 << 6;
     $131 = ((($$9)) + 1|0);
     $132 = (($123) + -128)|0;
     $133 = $132 | $130;
     $134 = ($133|0)<(0);
     do {
      if ($134) {
       $135 = HEAP8[$131>>0]|0;
       $136 = $135&255;
       $137 = (($136) + -128)|0;
       $138 = ($137>>>0)>(63);
       if (!($138)) {
        $139 = $133 << 6;
        $140 = ((($$9)) + 2|0);
        $141 = $137 | $139;
        $142 = ($141|0)<(0);
        if (!($142)) {
         $$10 = $140;$$5 = $141;
         break;
        }
        $143 = HEAP8[$140>>0]|0;
        $144 = $143&255;
        $145 = (($144) + -128)|0;
        $146 = ($145>>>0)>(63);
        if (!($146)) {
         $147 = $141 << 6;
         $148 = ((($$9)) + 3|0);
         $149 = $145 | $147;
         $$10 = $148;$$5 = $149;
         break;
        }
       }
       $$11$ph = ((($$9)) + -1|0);
       $152 = (___errno_location()|0);
       HEAP32[$152>>2] = 84;
       $$11122124 = $$11$ph;
       break L21;
      } else {
       $$10 = $131;$$5 = $133;
      }
     } while(0);
     $150 = ((($$4109)) + 4|0);
     HEAP32[$$4109>>2] = $$5;
     $151 = (($$8119) + -1)|0;
     $$1106$ph = $150;$$5116$ph = $151;$$6104$ph = $$10;
     label = 33;
     continue L20;
    }
   }
   else if ((label|0) == 63) {
    label = 0;
    return ($$097|0);
   }
  } while(0);
  if ((label|0) == 56) {
   label = 0;
   $153 = ((($$9$sink)) + -1|0);
   $154 = ($$6|0)==(0);
   if ($154) {
    $$11182 = $153;$$5110180 = $$5110;$$9120179 = $$9120;
    label = 57;
   } else {
    $$11183 = $153;$$5110181 = $$5110;
    label = 61;
   }
  }
  if ((label|0) == 57) {
   label = 0;
   $155 = HEAP8[$$11182>>0]|0;
   $156 = ($155<<24>>24)==(0);
   if ($156) {
    $157 = ($$5110180|0)==(0|0);
    if (!($157)) {
     HEAP32[$$5110180>>2] = 0;
     HEAP32[$1>>2] = 0;
    }
    $158 = (($2) - ($$9120179))|0;
    $$097 = $158;
    label = 63;
    continue;
   } else {
    $$11183 = $$11182;$$5110181 = $$5110180;
    label = 61;
   }
  }
  if ((label|0) == 61) {
   label = 0;
   $159 = (___errno_location()|0);
   HEAP32[$159>>2] = 84;
   $160 = ($$5110181|0)==(0|0);
   if ($160) {
    $$097 = -1;
    label = 63;
    continue;
   } else {
    $$11122124 = $$11183;
   }
  }
  HEAP32[$1>>2] = $$11122124;
  $$097 = -1;
  label = 63;
 }
 return (0)|0;
}
function ___pthread_self_417() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _wcsnrtombs($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$04773 = 0, $$05172 = 0, $$054 = 0, $$148 = 0, $$152 = 0, $$15571 = 0, $$162 = 0, $$174 = 0, $$2 = 0, $$24968 = 0, $$25367 = 0, $$256 = 0, $$350 = 0, $$357 = 0, $$369 = 0, $$466 = 0, $$cast = 0, $$pr$pre = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond70 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $5 = sp;
 $6 = sp + 256|0;
 $7 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $7;
 $8 = ($0|0)!=(0|0);
 $$054 = $8 ? $3 : 256;
 $$0 = $8 ? $0 : $5;
 $$cast = $7;
 $9 = ($7|0)!=(0);
 $10 = ($$054|0)!=(0);
 $or$cond70 = $10 & $9;
 L1: do {
  if ($or$cond70) {
   $$04773 = 0;$$05172 = $2;$$15571 = $$054;$$174 = $$0;$45 = $$cast;
   while(1) {
    $11 = ($$05172>>>0)>=($$15571>>>0);
    $12 = ($$05172>>>0)>(32);
    $13 = $11 | $12;
    if (!($13)) {
     $$148 = $$04773;$$152 = $$05172;$$162 = $$174;$$357 = $$15571;$24 = $45;
     break L1;
    }
    $spec$select = $11 ? $$15571 : $$05172;
    $14 = (($$05172) - ($spec$select))|0;
    $15 = (_wcsrtombs($$174,$6,$spec$select,0)|0);
    $16 = ($15|0)==(-1);
    if ($16) {
     break;
    }
    $17 = ($$174|0)==($5|0);
    $18 = (($$174) + ($15)|0);
    $19 = $17 ? 0 : $15;
    $$256 = (($$15571) - ($19))|0;
    $$2 = $17 ? $$174 : $18;
    $20 = (($15) + ($$04773))|0;
    $21 = HEAP32[$6>>2]|0;
    $22 = ($21|0)!=(0|0);
    $23 = ($$256|0)!=(0);
    $or$cond = $23 & $22;
    if ($or$cond) {
     $$04773 = $20;$$05172 = $14;$$15571 = $$256;$$174 = $$2;$45 = $21;
    } else {
     $$148 = $20;$$152 = $14;$$162 = $$2;$$357 = $$256;$24 = $21;
     break L1;
    }
   }
   $$pr$pre = HEAP32[$6>>2]|0;
   $$148 = -1;$$152 = $14;$$162 = $$174;$$357 = 0;$24 = $$pr$pre;
  } else {
   $$148 = 0;$$152 = $2;$$162 = $$0;$$357 = $$054;$24 = $$cast;
  }
 } while(0);
 $25 = ($24|0)==(0|0);
 L9: do {
  if ($25) {
   $$350 = $$148;
  } else {
   $26 = ($$357|0)!=(0);
   $27 = ($$152|0)!=(0);
   $28 = $26 & $27;
   if ($28) {
    $$24968 = $$148;$$25367 = $$152;$$369 = $$162;$$466 = $$357;$30 = $24;
    while(1) {
     $29 = HEAP32[$30>>2]|0;
     $31 = (_wcrtomb($$369,$29,0)|0);
     $32 = (($31) + 1)|0;
     $33 = ($32>>>0)<(2);
     if ($33) {
      break;
     }
     $35 = HEAP32[$6>>2]|0;
     $36 = ((($35)) + 4|0);
     HEAP32[$6>>2] = $36;
     $37 = (($$25367) + -1)|0;
     $38 = (($$369) + ($31)|0);
     $39 = (($$466) - ($31))|0;
     $40 = (($31) + ($$24968))|0;
     $41 = ($39|0)!=(0);
     $42 = ($37|0)!=(0);
     $43 = $41 & $42;
     if ($43) {
      $$24968 = $40;$$25367 = $37;$$369 = $38;$$466 = $39;$30 = $36;
     } else {
      $$350 = $40;
      break L9;
     }
    }
    $34 = ($31|0)==(0);
    if ($34) {
     HEAP32[$6>>2] = 0;
     $$350 = $$24968;
    } else {
     $$350 = -1;
    }
   } else {
    $$350 = $$148;
   }
  }
 } while(0);
 if ($8) {
  $44 = HEAP32[$6>>2]|0;
  HEAP32[$1>>2] = $44;
 }
 STACKTOP = sp;return ($$350|0);
}
function _wcsrtombs($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$05674 = 0, $$057$lcssa = 0, $$05784 = 0, $$05873 = 0, $$1 = 0, $$159 = 0, $$260$lcssa = 0, $$26083 = 0, $$278 = 0, $$3 = 0, $$361 = 0, $$477 = 0, $$5 = 0, $$pn = 0, $$pre = 0, $$pre100 = 0, $$pre101 = 0, $$pre99 = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==(0|0);
 L1: do {
  if ($5) {
   $6 = HEAP32[$1>>2]|0;
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7|0)==(0);
   if ($8) {
    $$0 = 0;
   } else {
    $$05674 = $6;$$05873 = 0;$9 = $7;
    while(1) {
     $10 = ($9>>>0)>(127);
     if ($10) {
      $11 = (_wcrtomb($4,$9,0)|0);
      $12 = ($11|0)==(-1);
      if ($12) {
       $$0 = -1;
       break L1;
      } else {
       $$pn = $11;
      }
     } else {
      $$pn = 1;
     }
     $$159 = (($$pn) + ($$05873))|0;
     $13 = ((($$05674)) + 4|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($14|0)==(0);
     if ($15) {
      $$0 = $$159;
      break;
     } else {
      $$05674 = $13;$$05873 = $$159;$9 = $14;
     }
    }
   }
  } else {
   $16 = ($2>>>0)>(3);
   L10: do {
    if ($16) {
     $$pre = HEAP32[$1>>2]|0;
     $$05784 = $0;$$26083 = $2;$18 = $$pre;
     while(1) {
      $17 = HEAP32[$18>>2]|0;
      $19 = (($17) + -1)|0;
      $20 = ($19>>>0)>(126);
      if ($20) {
       $21 = ($17|0)==(0);
       if ($21) {
        break;
       }
       $23 = (_wcrtomb($$05784,$17,0)|0);
       $24 = ($23|0)==(-1);
       if ($24) {
        $$0 = -1;
        break L1;
       }
       $25 = (($$05784) + ($23)|0);
       $26 = (($$26083) - ($23))|0;
       $$1 = $25;$$361 = $26;$31 = $18;
      } else {
       $27 = $17&255;
       $28 = ((($$05784)) + 1|0);
       HEAP8[$$05784>>0] = $27;
       $29 = (($$26083) + -1)|0;
       $$pre99 = HEAP32[$1>>2]|0;
       $$1 = $28;$$361 = $29;$31 = $$pre99;
      }
      $30 = ((($31)) + 4|0);
      HEAP32[$1>>2] = $30;
      $32 = ($$361>>>0)>(3);
      if ($32) {
       $$05784 = $$1;$$26083 = $$361;$18 = $30;
      } else {
       $$057$lcssa = $$1;$$260$lcssa = $$361;
       break L10;
      }
     }
     HEAP8[$$05784>>0] = 0;
     HEAP32[$1>>2] = 0;
     $22 = (($2) - ($$26083))|0;
     $$0 = $22;
     break L1;
    } else {
     $$057$lcssa = $0;$$260$lcssa = $2;
    }
   } while(0);
   $33 = ($$260$lcssa|0)==(0);
   if ($33) {
    $$0 = $2;
   } else {
    $$pre100 = HEAP32[$1>>2]|0;
    $$278 = $$057$lcssa;$$477 = $$260$lcssa;$35 = $$pre100;
    while(1) {
     $34 = HEAP32[$35>>2]|0;
     $36 = (($34) + -1)|0;
     $37 = ($36>>>0)>(126);
     if ($37) {
      $38 = ($34|0)==(0);
      if ($38) {
       label = 20;
       break;
      }
      $40 = (_wcrtomb($4,$34,0)|0);
      $41 = ($40|0)==(-1);
      if ($41) {
       $$0 = -1;
       break L1;
      }
      $42 = ($$477>>>0)<($40>>>0);
      if ($42) {
       label = 23;
       break;
      }
      $44 = HEAP32[$35>>2]|0;
      (_wcrtomb($$278,$44,0)|0);
      $45 = (($$278) + ($40)|0);
      $46 = (($$477) - ($40))|0;
      $$3 = $45;$$5 = $46;$51 = $35;
     } else {
      $47 = $34&255;
      $48 = ((($$278)) + 1|0);
      HEAP8[$$278>>0] = $47;
      $49 = (($$477) + -1)|0;
      $$pre101 = HEAP32[$1>>2]|0;
      $$3 = $48;$$5 = $49;$51 = $$pre101;
     }
     $50 = ((($51)) + 4|0);
     HEAP32[$1>>2] = $50;
     $52 = ($$5|0)==(0);
     if ($52) {
      $$0 = $2;
      break L1;
     } else {
      $$278 = $$3;$$477 = $$5;$35 = $50;
     }
    }
    if ((label|0) == 20) {
     HEAP8[$$278>>0] = 0;
     HEAP32[$1>>2] = 0;
     $39 = (($2) - ($$477))|0;
     $$0 = $39;
     break;
    }
    else if ((label|0) == 23) {
     $43 = (($2) - ($$477))|0;
     $$0 = $43;
     break;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _getc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)<(0);
 if ($3) {
  label = 3;
 } else {
  $4 = (___lockfile($0)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   label = 3;
  } else {
   $15 = ((($0)) + 4|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($0)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16>>>0)<($18>>>0);
   if ($19) {
    $20 = ((($16)) + 1|0);
    HEAP32[$15>>2] = $20;
    $21 = HEAP8[$16>>0]|0;
    $22 = $21&255;
    $24 = $22;
   } else {
    $23 = (___uflow($0)|0);
    $24 = $23;
   }
   $$0 = $24;
  }
 }
 do {
  if ((label|0) == 3) {
   $6 = ((($0)) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($7>>>0)<($9>>>0);
   if ($10) {
    $11 = ((($7)) + 1|0);
    HEAP32[$6>>2] = $11;
    $12 = HEAP8[$7>>0]|0;
    $13 = $12&255;
    $$0 = $13;
    break;
   } else {
    $14 = (___uflow($0)|0);
    $$0 = $14;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _vasprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $4 = (_vsnprintf(0,0,$1,$3)|0);
 $5 = ($4|0)<(0);
 if ($5) {
  $$0 = -1;
 } else {
  $6 = (($4) + 1)|0;
  $7 = (_malloc($6)|0);
  HEAP32[$0>>2] = $7;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   $9 = (_vsnprintf($7,$6,$1,$2)|0);
   $$0 = $9;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _ungetc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(-1);
 do {
  if ($2) {
   $$1 = -1;
  } else {
   $3 = ((($1)) + 76|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)>(-1);
   if ($5) {
    $6 = (___lockfile($1)|0);
    $16 = $6;
   } else {
    $16 = 0;
   }
   $7 = ((($1)) + 4|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    (___toread($1)|0);
    $$pr = HEAP32[$7>>2]|0;
    $10 = ($$pr|0)==(0|0);
    if (!($10)) {
     $14 = $$pr;
     label = 6;
    }
   } else {
    $14 = $8;
    label = 6;
   }
   if ((label|0) == 6) {
    $11 = ((($1)) + 44|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($12)) + -8|0);
    $15 = ($14>>>0)>($13>>>0);
    if ($15) {
     $18 = $0&255;
     $19 = ((($14)) + -1|0);
     HEAP32[$7>>2] = $19;
     HEAP8[$19>>0] = $18;
     $20 = HEAP32[$1>>2]|0;
     $21 = $20 & -17;
     HEAP32[$1>>2] = $21;
     $22 = ($16|0)==(0);
     if ($22) {
      $$1 = $0;
      break;
     }
     ___unlockfile($1);
     $$1 = $0;
     break;
    }
   }
   $17 = ($16|0)==(0);
   if ($17) {
    $$1 = -1;
   } else {
    ___unlockfile($1);
    $$1 = -1;
   }
  }
 } while(0);
 return ($$1|0);
}
function _fputc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(0);
 if ($4) {
  label = 3;
 } else {
  $5 = (___lockfile($1)|0);
  $6 = ($5|0)==(0);
  if ($6) {
   label = 3;
  } else {
   $20 = $0&255;
   $21 = $0 & 255;
   $22 = ((($1)) + 75|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23 << 24 >> 24;
   $25 = ($21|0)==($24|0);
   if ($25) {
    label = 10;
   } else {
    $26 = ((($1)) + 20|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ((($1)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27>>>0)<($29>>>0);
    if ($30) {
     $31 = ((($27)) + 1|0);
     HEAP32[$26>>2] = $31;
     HEAP8[$27>>0] = $20;
     $33 = $21;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $32 = (___overflow($1,$0)|0);
    $33 = $32;
   }
   ___unlockfile($1);
   $$0 = $33;
  }
 }
 do {
  if ((label|0) == 3) {
   $7 = $0&255;
   $8 = $0 & 255;
   $9 = ((($1)) + 75|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 << 24 >> 24;
   $12 = ($8|0)==($11|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ((($1)) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14>>>0)<($16>>>0);
    if ($17) {
     $18 = ((($14)) + 1|0);
     HEAP32[$13>>2] = $18;
     HEAP8[$14>>0] = $7;
     $$0 = $8;
     break;
    }
   }
   $19 = (___overflow($1,$0)|0);
   $$0 = $19;
  }
 } while(0);
 return ($$0|0);
}
function _strtod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_strtox($0,$1,1));
 return (+$2);
}
function _strtox($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $3 = sp;
 _memset(($3|0),0,144)|0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $0;
 $5 = ((($3)) + 8|0);
 HEAP32[$5>>2] = (-1);
 $6 = ((($3)) + 44|0);
 HEAP32[$6>>2] = $0;
 $7 = ((($3)) + 76|0);
 HEAP32[$7>>2] = -1;
 ___shlim($3,0,0);
 $8 = (+___floatscan($3,$2,1));
 $9 = ((($3)) + 120|0);
 $10 = $9;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$4>>2]|0;
 $17 = HEAP32[$5>>2]|0;
 $18 = (($16) - ($17))|0;
 $19 = ($18|0)<(0);
 $20 = $19 << 31 >> 31;
 $21 = (_i64Add(($12|0),($15|0),($18|0),($20|0))|0);
 $22 = (getTempRet0() | 0);
 $23 = ($1|0)==(0|0);
 if (!($23)) {
  $24 = ($21|0)==(0);
  $25 = ($22|0)==(0);
  $26 = $24 & $25;
  $27 = (($0) + ($21)|0);
  $28 = $26 ? $0 : $27;
  HEAP32[$1>>2] = $28;
 }
 STACKTOP = sp;return (+$8);
}
function _strtof($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0.0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_strtox($0,$1,0));
 $3 = $2;
 return (+$3);
}
function _strtold($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_strtox($0,$1,2));
 return (+$2);
}
function _strtof_l($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (+_strtof($0,$1));
 return (+$3);
}
function _strtod_l($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (+_strtod($0,$1));
 return (+$3);
}
function _strtold_l($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (+_strtold($0,$1));
 return (+$3);
}
function _wmemset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$056 = 0, $$07 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $$056 = $2;$$07 = $0;
  while(1) {
   $4 = (($$056) + -1)|0;
   $5 = ((($$07)) + 4|0);
   HEAP32[$$07>>2] = $1;
   $6 = ($4|0)==(0);
   if ($6) {
    break;
   } else {
    $$056 = $4;$$07 = $5;
   }
  }
 }
 return ($0|0);
}
function _wmemmove($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01416 = 0, $$018 = 0, $$117 = 0, $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $0;
 $4 = $1;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($2>>>0);
 if ($7) {
  $$in = $2;
  while(1) {
   $8 = (($$in) + -1)|0;
   $9 = (($1) + ($8<<2)|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($0) + ($8<<2)|0);
   HEAP32[$11>>2] = $10;
   $12 = ($8|0)==(0);
   if ($12) {
    break;
   } else {
    $$in = $8;
   }
  }
 } else {
  $13 = ($2|0)==(0);
  if (!($13)) {
   $$01416 = $1;$$018 = $0;$$117 = $2;
   while(1) {
    $14 = (($$117) + -1)|0;
    $15 = ((($$01416)) + 4|0);
    $16 = HEAP32[$$01416>>2]|0;
    $17 = ((($$018)) + 4|0);
    HEAP32[$$018>>2] = $16;
    $18 = ($14|0)==(0);
    if ($18) {
     break;
    } else {
     $$01416 = $15;$$018 = $17;$$117 = $14;
    }
   }
  }
 }
 return ($0|0);
}
function __GLOBAL__sub_I_bind_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_277();
 return;
}
function ___cxx_global_var_init_277() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(37669);
 return;
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 ___embind_register_native_and_builtin_types();
 STACKTOP = sp;return;
}
function ___embind_register_native_and_builtin_types() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal6TypeIDIvvE3getEv()|0);
 __embind_register_void(($0|0),(25740|0));
 $1 = (__ZN10emscripten8internal6TypeIDIbvE3getEv()|0);
 __embind_register_bool(($1|0),(25745|0),1,1,0);
 __ZN12_GLOBAL__N_116register_integerIcEEvPKc(25750);
 __ZN12_GLOBAL__N_116register_integerIaEEvPKc(25755);
 __ZN12_GLOBAL__N_116register_integerIhEEvPKc(25767);
 __ZN12_GLOBAL__N_116register_integerIsEEvPKc(25781);
 __ZN12_GLOBAL__N_116register_integerItEEvPKc(25787);
 __ZN12_GLOBAL__N_116register_integerIiEEvPKc(25802);
 __ZN12_GLOBAL__N_116register_integerIjEEvPKc(25806);
 __ZN12_GLOBAL__N_116register_integerIlEEvPKc(25819);
 __ZN12_GLOBAL__N_116register_integerImEEvPKc(25824);
 __ZN12_GLOBAL__N_114register_floatIfEEvPKc(25875);
 __ZN12_GLOBAL__N_114register_floatIdEEvPKc(30529);
 $2 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEvE3getEv()|0);
 __embind_register_std_string(($2|0),(26185|0));
 $3 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEvE3getEv()|0);
 __embind_register_std_string(($3|0),(21287|0));
 $4 = (__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEvE3getEv()|0);
 __embind_register_std_wstring(($4|0),4,(21320|0));
 $5 = (__ZN10emscripten8internal6TypeIDINS_3valEvE3getEv()|0);
 __embind_register_emval(($5|0),(21333|0));
 __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc(21349);
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(21379);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(21416);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(21455);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(21486);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(21526);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(21555);
 __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc(21593);
 __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc(21623);
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(21662);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(21694);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(21727);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(21760);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(21794);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(21827);
 __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc(21861);
 __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc(21892);
 __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc(21924);
 return;
}
function __ZN10emscripten8internal6TypeIDIvvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIvE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDIbvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIbE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_116register_integerIcEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIcvE3getEv()|0);
 $3 = $1;
 $4 = -128 << 24 >> 24;
 $5 = 127 << 24 >> 24;
 __embind_register_integer(($2|0),($3|0),1,($4|0),($5|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerIaEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIavE3getEv()|0);
 $3 = $1;
 $4 = -128 << 24 >> 24;
 $5 = 127 << 24 >> 24;
 __embind_register_integer(($2|0),($3|0),1,($4|0),($5|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerIhEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIhvE3getEv()|0);
 $3 = $1;
 $4 = 0;
 $5 = 255;
 __embind_register_integer(($2|0),($3|0),1,($4|0),($5|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerIsEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIsvE3getEv()|0);
 $3 = $1;
 $4 = -32768 << 16 >> 16;
 $5 = 32767 << 16 >> 16;
 __embind_register_integer(($2|0),($3|0),2,($4|0),($5|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerItEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDItvE3getEv()|0);
 $3 = $1;
 $4 = 0;
 $5 = 65535;
 __embind_register_integer(($2|0),($3|0),2,($4|0),($5|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerIiEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIivE3getEv()|0);
 $3 = $1;
 __embind_register_integer(($2|0),($3|0),4,-2147483648,2147483647);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerIjEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIjvE3getEv()|0);
 $3 = $1;
 __embind_register_integer(($2|0),($3|0),4,0,-1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerIlEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIlvE3getEv()|0);
 $3 = $1;
 __embind_register_integer(($2|0),($3|0),4,-2147483648,2147483647);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116register_integerImEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDImvE3getEv()|0);
 $3 = $1;
 __embind_register_integer(($2|0),($3|0),4,0,-1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_114register_floatIfEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIfvE3getEv()|0);
 $3 = $1;
 __embind_register_float(($2|0),($3|0),4);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_114register_floatIdEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDIdvE3getEv()|0);
 $3 = $1;
 __embind_register_float(($2|0),($3|0),8);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal6TypeIDINS_3valEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEvE3getEv()|0);
 $3 = (__ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv()|0);
 $4 = $1;
 __embind_register_memory_view(($2|0),($3|0),($4|0));
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIeEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7056|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIdEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 7;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7064|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIfEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 6;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7072|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexImEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7080|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIlEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7088|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIjEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 5;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7096|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIiEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7104|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexItEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 3;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7112|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIsEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7120|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIhEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7128|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIaEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7136|0);
}
function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv()|0);
 return ($0|0);
}
function __ZN12_GLOBAL__N_118getTypedArrayIndexIcEENS_15TypedArrayIndexEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7144|0);
}
function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7152|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7160|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7192|0);
}
function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (7216|0);
}
function __ZN10emscripten8internal6TypeIDIdvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIdE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10000|0);
}
function __ZN10emscripten8internal6TypeIDIfvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIfE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9992|0);
}
function __ZN10emscripten8internal6TypeIDImvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDImE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9984|0);
}
function __ZN10emscripten8internal6TypeIDIlvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIlE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9976|0);
}
function __ZN10emscripten8internal6TypeIDIjvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIjE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9968|0);
}
function __ZN10emscripten8internal6TypeIDIivE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIiE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9960|0);
}
function __ZN10emscripten8internal6TypeIDItvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDItE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9952|0);
}
function __ZN10emscripten8internal6TypeIDIsvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIsE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9944|0);
}
function __ZN10emscripten8internal6TypeIDIhvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIhE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9928|0);
}
function __ZN10emscripten8internal6TypeIDIavE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIaE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9936|0);
}
function __ZN10emscripten8internal6TypeIDIcvE3getEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZN10emscripten8internal11LightTypeIDIcE3getEv()|0);
 return ($0|0);
}
function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9920|0);
}
function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9912|0);
}
function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (9896|0);
}
function ___getTypeName($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2;
 $1 = $3;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (___strdup($6)|0);
 STACKTOP = sp;return ($7|0);
}
function _pthread_mutex_lock($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _pthread_mutex_unlock($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZSt18uncaught_exceptionv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZSt19uncaught_exceptionsv()|0);
 $1 = ($0|0)>(0);
 return ($1|0);
}
function __ZSt19uncaught_exceptionsv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_uncaught_exceptions()|0);
 return ($0|0);
}
function __ZNSt3__217bad_function_callD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__217bad_function_callD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__217bad_function_callD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__217bad_function_call4whatEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (22579|0);
}
function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}
function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__28ios_baseD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (11172);
 __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0,0);
 $1 = ((($0)) + 28|0);
 __ZNSt3__26localeD2Ev($1);
 $2 = ((($0)) + 32|0);
 $3 = HEAP32[$2>>2]|0;
 _free($3);
 $4 = ((($0)) + 36|0);
 $5 = HEAP32[$4>>2]|0;
 _free($5);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 _free($7);
 $8 = ((($0)) + 60|0);
 $9 = HEAP32[$8>>2]|0;
 _free($9);
 return;
}
function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 32|0);
 $5 = ((($0)) + 36|0);
 $$0 = $3;
 while(1) {
  $6 = ($$0|0)==(0);
  if ($6) {
   break;
  }
  $7 = (($$0) + -1)|0;
  $8 = HEAP32[$4>>2]|0;
  $9 = (($8) + ($7<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$5>>2]|0;
  $12 = (($11) + ($7<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_viii[$10 & 1023]($1,$0,$13);
  $$0 = $7;
 }
 return;
}
function __ZNSt3__28ios_baseD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28ios_baseD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (11188);
 $1 = ((($0)) + 4|0);
 __ZNSt3__26localeD2Ev($1);
 return;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 8|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = -1;
 return;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($0)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$124 = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $3 = ((($0)) + 12|0);
 $4 = ((($0)) + 16|0);
 $$0 = $1;$$023 = 0;
 while(1) {
  $5 = ($$023|0)<($2|0);
  if (!($5)) {
   break;
  }
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = $6;
   $10 = $7;
   $11 = (($10) - ($9))|0;
   $12 = (($2) - ($$023))|0;
   $13 = ($12|0)<($11|0);
   $14 = $13 ? $12 : $11;
   (__ZNSt3__211char_traitsIcE4copyEPcPKcm($$0,$6,$14)|0);
   $15 = (($$0) + ($14)|0);
   $16 = HEAP32[$3>>2]|0;
   $17 = (($16) + ($14)|0);
   HEAP32[$3>>2] = $17;
   $$1 = $15;$$pn = $14;
  } else {
   $18 = HEAP32[$0>>2]|0;
   $19 = ((($18)) + 40|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (FUNCTION_TABLE_ii[$20 & 1023]($0)|0);
   $22 = ($21|0)==(-1);
   if ($22) {
    break;
   }
   $23 = (__ZNSt3__211char_traitsIcE12to_char_typeEi($21)|0);
   HEAP8[$$0>>0] = $23;
   $24 = ((($$0)) + 1|0);
   $$1 = $24;$$pn = 1;
  }
  $$124 = (($$pn) + ($$023))|0;
  $$0 = $$1;$$023 = $$124;
 }
 return ($$023|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 return ($1|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 36|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($0)|0);
 $5 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $6 = ($4|0)==($5|0);
 if ($6) {
  $7 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $$0 = $7;
 } else {
  $8 = ((($0)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 1|0);
  HEAP32[$8>>2] = $10;
  $11 = HEAP8[$9>>0]|0;
  $12 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($11)|0);
  $$0 = $12;
 }
 return ($$0|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 return ($2|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$be = 0, $$021 = 0, $$021$be = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $4 = ((($0)) + 24|0);
 $5 = ((($0)) + 28|0);
 $$0 = $1;$$021 = 0;
 while(1) {
  $6 = ($$021|0)<($2|0);
  if (!($6)) {
   break;
  }
  $7 = HEAP32[$4>>2]|0;
  $8 = HEAP32[$5>>2]|0;
  $9 = ($7>>>0)<($8>>>0);
  if ($9) {
   $19 = $7;
   $20 = $8;
   $21 = (($20) - ($19))|0;
   $22 = (($2) - ($$021))|0;
   $23 = ($22|0)<($21|0);
   $$sroa$speculated = $23 ? $22 : $21;
   (__ZNSt3__211char_traitsIcE4copyEPcPKcm($7,$$0,$$sroa$speculated)|0);
   $24 = HEAP32[$4>>2]|0;
   $25 = (($24) + ($$sroa$speculated)|0);
   HEAP32[$4>>2] = $25;
   $26 = (($$0) + ($$sroa$speculated)|0);
   $27 = (($$sroa$speculated) + ($$021))|0;
   $$0$be = $26;$$021$be = $27;
  } else {
   $10 = HEAP32[$0>>2]|0;
   $11 = ((($10)) + 52|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP8[$$0>>0]|0;
   $14 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($13)|0);
   $15 = (FUNCTION_TABLE_iii[$12 & 1023]($0,$14)|0);
   $16 = ($15|0)==($3|0);
   if ($16) {
    break;
   }
   $17 = ((($$0)) + 1|0);
   $18 = (($$021) + 1)|0;
   $$0$be = $17;$$021$be = $18;
  }
  $$0 = $$0$be;$$021 = $$021$be;
 }
 return ($$021|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 return ($2|0);
}
function __ZNSt3__211char_traitsIcE4copyEPcPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  _memcpy(($0|0),($1|0),($2|0))|0;
 }
 return ($0|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (11252);
 $1 = ((($0)) + 4|0);
 __ZNSt3__26localeD2Ev($1);
 return;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 8|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = -1;
 return;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = ((($0)) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 return;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$124 = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (__ZNSt3__211char_traitsIwE3eofEv()|0);
 $3 = ((($0)) + 12|0);
 $4 = ((($0)) + 16|0);
 $$0 = $1;$$023 = 0;
 while(1) {
  $5 = ($$023|0)<($2|0);
  if (!($5)) {
   break;
  }
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = $6;
   $10 = $7;
   $11 = (($10) - ($9))|0;
   $12 = $11 >> 2;
   $13 = (($2) - ($$023))|0;
   $14 = ($13|0)<($12|0);
   $15 = $14 ? $13 : $12;
   (__ZNSt3__211char_traitsIwE4copyEPwPKwm($$0,$6,$15)|0);
   $16 = (($$0) + ($15<<2)|0);
   $17 = HEAP32[$3>>2]|0;
   $18 = (($17) + ($15<<2)|0);
   HEAP32[$3>>2] = $18;
   $$1 = $16;$$pn = $15;
  } else {
   $19 = HEAP32[$0>>2]|0;
   $20 = ((($19)) + 40|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_ii[$21 & 1023]($0)|0);
   $23 = ($22|0)==(-1);
   if ($23) {
    break;
   }
   $24 = (__ZNSt3__211char_traitsIwE12to_char_typeEj($22)|0);
   HEAP32[$$0>>2] = $24;
   $25 = ((($$0)) + 4|0);
   $$1 = $25;$$pn = 1;
  }
  $$124 = (($$pn) + ($$023))|0;
  $$0 = $$1;$$023 = $$124;
 }
 return ($$023|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 return ($1|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 36|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 1023]($0)|0);
 $5 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 $6 = ($4|0)==($5|0);
 if ($6) {
  $7 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $$0 = $7;
 } else {
  $8 = ((($0)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 4|0);
  HEAP32[$8>>2] = $10;
  $11 = HEAP32[$9>>2]|0;
  $12 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($11)|0);
  $$0 = $12;
 }
 return ($$0|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 return ($2|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$be = 0, $$021 = 0, $$021$be = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 $4 = ((($0)) + 24|0);
 $5 = ((($0)) + 28|0);
 $$0 = $1;$$021 = 0;
 while(1) {
  $6 = ($$021|0)<($2|0);
  if (!($6)) {
   break;
  }
  $7 = HEAP32[$4>>2]|0;
  $8 = HEAP32[$5>>2]|0;
  $9 = ($7>>>0)<($8>>>0);
  if ($9) {
   $19 = $7;
   $20 = $8;
   $21 = (($20) - ($19))|0;
   $22 = $21 >> 2;
   $23 = (($2) - ($$021))|0;
   $24 = ($23|0)<($22|0);
   $$sroa$speculated = $24 ? $23 : $22;
   (__ZNSt3__211char_traitsIwE4copyEPwPKwm($7,$$0,$$sroa$speculated)|0);
   $25 = HEAP32[$4>>2]|0;
   $26 = (($25) + ($$sroa$speculated<<2)|0);
   HEAP32[$4>>2] = $26;
   $27 = (($$0) + ($$sroa$speculated<<2)|0);
   $28 = (($$sroa$speculated) + ($$021))|0;
   $$0$be = $27;$$021$be = $28;
  } else {
   $10 = HEAP32[$0>>2]|0;
   $11 = ((($10)) + 52|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAP32[$$0>>2]|0;
   $14 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($13)|0);
   $15 = (FUNCTION_TABLE_iii[$12 & 1023]($0,$14)|0);
   $16 = ($15|0)==($3|0);
   if ($16) {
    break;
   }
   $17 = ((($$0)) + 4|0);
   $18 = (($$021) + 1)|0;
   $$0$be = $17;$$021$be = $18;
  }
  $$0 = $$0$be;$$021 = $$021$be;
 }
 return ($$021|0);
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 return ($2|0);
}
function __ZNSt3__211char_traitsIwE3eofEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -1;
}
function __ZNSt3__211char_traitsIwE11to_int_typeEw($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function __ZNSt3__211char_traitsIwE4copyEPwPKwm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $5 = $0;
 } else {
  $4 = (_wmemcpy($0,$1,$2)|0);
  $5 = $0;
 }
 return ($5|0);
}
function __ZNSt3__211char_traitsIwE12to_char_typeEj($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0,11348);
 $1 = ((($0)) + 8|0);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}
function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($4);
 return;
}
function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($4);
 return;
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev($0,11396);
 $1 = ((($0)) + 8|0);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($1);
 return;
}
function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0);
 __ZdlPv($0);
 return;
}
function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($4);
 return;
}
function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($4);
 return;
}
function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0,11444);
 $1 = ((($0)) + 4|0);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}
function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($4);
 return;
}
function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($4);
 return;
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev($0,11492);
 $1 = ((($0)) + 4|0);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($1);
 return;
}
function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0);
 __ZdlPv($0);
 return;
}
function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($4);
 return;
}
function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + -12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($0) + ($3)|0);
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($4);
 return;
}
function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__28ios_base5clearEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 $5 = $4&1;
 $spec$select = $5 | $1;
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = $spec$select;
 return;
}
function __ZNSt3__28ios_base4initEPv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 24|0);
 HEAP32[$2>>2] = $1;
 $3 = ($1|0)==(0|0);
 $4 = $3&1;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = $4;
 $6 = ((($0)) + 20|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 4|0);
 HEAP32[$7>>2] = 4098;
 $8 = ((($0)) + 12|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($0)) + 8|0);
 HEAP32[$9>>2] = 6;
 $10 = ((($0)) + 32|0);
 $11 = ((($0)) + 28|0);
 dest=$10; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__26localeC2Ev($11);
 return;
}
function __ZNKSt3__28ios_base6getlocEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 28|0);
 __ZNSt3__26localeC2ERKS0_($0,$2);
 return;
}
function __ZNSt3__211char_traitsIwE11eq_int_typeEjj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 return ($2|0);
}
function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (11188);
 $1 = ((($0)) + 4|0);
 __ZNSt3__26localeC2Ev($1);
 $2 = ((($0)) + 8|0);
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;
 return;
}
function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (11252);
 $1 = ((($0)) + 4|0);
 __ZNSt3__26localeC2Ev($1);
 $2 = ((($0)) + 8|0);
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;
 return;
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i12 = 0, $$pre$phiZ2D = 0, $$sroa$025$135 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $sext = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP8[$0>>0] = 0;
 $4 = HEAP32[$1>>2]|0;
 $5 = ((($4)) + -12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($1) + ($6)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 if ($10) {
  $11 = ((($7)) + 72|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($12|0)==(0|0);
  if (!($13)) {
   (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12)|0);
  }
  do {
   if (!($2)) {
    $14 = HEAP32[$1>>2]|0;
    $15 = ((($14)) + -12|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($1) + ($16)|0);
    $18 = ((($17)) + 4|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = $19 & 4096;
    $21 = ($20|0)==(0);
    if (!($21)) {
     __ZNKSt3__28ios_base6getlocEv($3,$17);
     $22 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,36724)|0);
     __ZNSt3__26localeD2Ev($3);
     $23 = HEAP32[$1>>2]|0;
     $24 = ((($23)) + -12|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = (($1) + ($25)|0);
     $27 = ((($26)) + 24|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ((($22)) + 8|0);
     $30 = $28;
     $31 = ($28|0)==(0);
     $32 = ((($30)) + 12|0);
     $33 = ((($30)) + 16|0);
     $34 = $28;
     while(1) {
      if ($31) {
       $$pre$phiZ2D = 0;$$sroa$025$135 = 0;
       break;
      }
      $35 = HEAP32[$32>>2]|0;
      $36 = HEAP32[$33>>2]|0;
      $37 = ($35|0)==($36|0);
      if ($37) {
       $38 = HEAP32[$34>>2]|0;
       $39 = ((($38)) + 36|0);
       $40 = HEAP32[$39>>2]|0;
       $41 = (FUNCTION_TABLE_ii[$40 & 1023]($30)|0);
       $$0$i$i$i$i12 = $41;
      } else {
       $42 = HEAP8[$35>>0]|0;
       $43 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($42)|0);
       $$0$i$i$i$i12 = $43;
      }
      $44 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
      $45 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i12,$44)|0);
      $spec$select = $45 ? 0 : $28;
      if ($45) {
       $$pre$phiZ2D = 0;$$sroa$025$135 = 0;
       break;
      }
      $46 = $spec$select;
      $47 = ((($46)) + 12|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ((($46)) + 16|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = ($48|0)==($50|0);
      if ($51) {
       $52 = $spec$select;
       $53 = HEAP32[$52>>2]|0;
       $54 = ((($53)) + 36|0);
       $55 = HEAP32[$54>>2]|0;
       $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
       $$0$i$i = $56;
      } else {
       $57 = HEAP8[$48>>0]|0;
       $58 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($57)|0);
       $$0$i$i = $58;
      }
      $59 = $$0$i$i&255;
      $60 = ($59<<24>>24)>(-1);
      if (!($60)) {
       label = 21;
       break;
      }
      $sext = $$0$i$i << 24;
      $61 = $sext >> 24;
      $62 = HEAP32[$29>>2]|0;
      $63 = (($62) + ($61<<1)|0);
      $64 = HEAP16[$63>>1]|0;
      $65 = $64 & 8192;
      $66 = ($65<<16>>16)==(0);
      if ($66) {
       label = 21;
       break;
      }
      $67 = HEAP32[$47>>2]|0;
      $68 = HEAP32[$49>>2]|0;
      $69 = ($67|0)==($68|0);
      if ($69) {
       $70 = $spec$select;
       $71 = HEAP32[$70>>2]|0;
       $72 = ((($71)) + 40|0);
       $73 = HEAP32[$72>>2]|0;
       (FUNCTION_TABLE_ii[$73 & 1023]($46)|0);
      } else {
       $74 = ((($67)) + 1|0);
       HEAP32[$47>>2] = $74;
       $75 = HEAP8[$67>>0]|0;
       (__ZNSt3__211char_traitsIcE11to_int_typeEc($75)|0);
      }
     }
     if ((label|0) == 21) {
      $76 = $spec$select;
      $$pre$phiZ2D = $76;$$sroa$025$135 = $28;
     }
     $77 = ($$sroa$025$135|0)==(0);
     if (!($77)) {
      $78 = ((($$pre$phiZ2D)) + 12|0);
      $79 = HEAP32[$78>>2]|0;
      $80 = ((($$pre$phiZ2D)) + 16|0);
      $81 = HEAP32[$80>>2]|0;
      $82 = ($79|0)==($81|0);
      if ($82) {
       $83 = $$sroa$025$135;
       $84 = HEAP32[$83>>2]|0;
       $85 = ((($84)) + 36|0);
       $86 = HEAP32[$85>>2]|0;
       $87 = (FUNCTION_TABLE_ii[$86 & 1023]($$pre$phiZ2D)|0);
       $$0$i$i$i$i = $87;
      } else {
       $88 = HEAP8[$79>>0]|0;
       $89 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($88)|0);
       $$0$i$i$i$i = $89;
      }
      $90 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
      $91 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$90)|0);
      if (!($91)) {
       break;
      }
     }
     $92 = HEAP32[$1>>2]|0;
     $93 = ((($92)) + -12|0);
     $94 = HEAP32[$93>>2]|0;
     $95 = (($1) + ($94)|0);
     $96 = ((($95)) + 16|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = $97 | 6;
     __ZNSt3__28ios_base5clearEj($95,$98);
    }
   }
  } while(0);
  $99 = HEAP32[$1>>2]|0;
  $100 = ((($99)) + -12|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (($1) + ($101)|0);
  $103 = ((($102)) + 16|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = ($104|0)==(0);
  $106 = $105&1;
  HEAP8[$0>>0] = $106;
 } else {
  $107 = $9 | 4;
  __ZNSt3__28ios_base5clearEj($7,$107);
 }
 STACKTOP = sp;return;
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($0) + ($4)|0);
 $6 = ((($5)) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($1,$0);
  $9 = HEAP8[$1>>0]|0;
  $10 = ($9<<24>>24)==(0);
  if (!($10)) {
   $11 = HEAP32[$0>>2]|0;
   $12 = ((($11)) + -12|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = (($0) + ($13)|0);
   $15 = ((($14)) + 24|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($17)) + 24|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = (FUNCTION_TABLE_ii[$19 & 1023]($16)|0);
   $21 = ($20|0)==(-1);
   if ($21) {
    $22 = HEAP32[$0>>2]|0;
    $23 = ((($22)) + -12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (($0) + ($24)|0);
    $26 = ((($25)) + 16|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = $27 | 1;
    __ZNSt3__28ios_base5clearEj($25,$28);
   }
  }
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($1);
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0] = 0;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 $3 = HEAP32[$1>>2]|0;
 $4 = ((($3)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($1) + ($5)|0);
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $10 = ((($6)) + 72|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   (__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11)|0);
  }
  HEAP8[$0>>0] = 1;
 }
 return;
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + -12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($2) + ($5)|0);
 $7 = ((($6)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $10 = ((($6)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = ((($6)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = $14 & 8192;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = (__ZSt18uncaught_exceptionv()|0);
    if (!($17)) {
     $18 = HEAP32[$1>>2]|0;
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($19)) + -12|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (($18) + ($21)|0);
     $23 = ((($22)) + 24|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($25)) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (FUNCTION_TABLE_ii[$27 & 1023]($24)|0);
     $29 = ($28|0)==(-1);
     if ($29) {
      $30 = HEAP32[$1>>2]|0;
      $31 = HEAP32[$30>>2]|0;
      $32 = ((($31)) + -12|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = (($30) + ($33)|0);
      $35 = ((($34)) + 16|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = $36 | 1;
      __ZNSt3__28ios_base5clearEj($34,$37);
     }
    }
   }
  }
 }
 return;
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE4readEPcl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($3,$0,1);
 $5 = HEAP8[$3>>0]|0;
 $6 = ($5<<24>>24)==(0);
 $7 = HEAP32[$0>>2]|0;
 $8 = ((($7)) + -12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($0) + ($9)|0);
 if ($6) {
  $25 = ((($10)) + 16|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = $26 | 4;
  __ZNSt3__28ios_base5clearEj($10,$27);
 } else {
  $11 = ((($10)) + 24|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 32|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (FUNCTION_TABLE_iiii[$15 & 1023]($12,$1,$2)|0);
  HEAP32[$4>>2] = $16;
  $17 = ($16|0)==($2|0);
  if (!($17)) {
   $18 = HEAP32[$0>>2]|0;
   $19 = ((($18)) + -12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($0) + ($20)|0);
   $22 = ((($21)) + 16|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = $23 | 6;
   __ZNSt3__28ios_base5clearEj($21,$24);
  }
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgENS_4fposI11__mbstate_tEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 16|0;
 $2 = sp + 32|0;
 $3 = sp;
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($4)) + -12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($0) + ($6)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & -3;
 __ZNSt3__28ios_base5clearEj($7,$10);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($2,$0,1);
 $11 = HEAP8[$2>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if (!($12)) {
  $13 = HEAP32[$0>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($0) + ($15)|0);
  $17 = ((($16)) + 24|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 20|0);
  $21 = HEAP32[$20>>2]|0;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$$byval_copy+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$$byval_copy+12>>2]=HEAP32[$1+12>>2]|0;
  FUNCTION_TABLE_viiii[$21 & 1023]($3,$18,$$byval_copy,8);
  $22 = ((($3)) + 8|0);
  $23 = $22;
  $24 = $23;
  $25 = HEAP32[$24>>2]|0;
  $26 = (($23) + 4)|0;
  $27 = $26;
  $28 = HEAP32[$27>>2]|0;
  $29 = ($25|0)==(-1);
  $30 = ($28|0)==(-1);
  $31 = $29 & $30;
  if ($31) {
   $32 = HEAP32[$0>>2]|0;
   $33 = ((($32)) + -12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (($0) + ($34)|0);
   $36 = ((($35)) + 16|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = $37 | 4;
   __ZNSt3__28ios_base5clearEj($35,$38);
  }
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE5seekgExNS_8ios_base7seekdirE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 16|0;
 $5 = sp;
 $6 = HEAP32[$0>>2]|0;
 $7 = ((($6)) + -12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($0) + ($8)|0);
 $10 = ((($9)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & -3;
 __ZNSt3__28ios_base5clearEj($9,$12);
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b($4,$0,1);
 $13 = HEAP8[$4>>0]|0;
 $14 = ($13<<24>>24)==(0);
 if (!($14)) {
  $15 = HEAP32[$0>>2]|0;
  $16 = ((($15)) + -12|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (($0) + ($17)|0);
  $19 = ((($18)) + 24|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = HEAP32[$20>>2]|0;
  $22 = ((($21)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  FUNCTION_TABLE_viiiiii[$23 & 1023]($5,$20,$1,$2,$3,8);
  $24 = ((($5)) + 8|0);
  $25 = $24;
  $26 = $25;
  $27 = HEAP32[$26>>2]|0;
  $28 = (($25) + 4)|0;
  $29 = $28;
  $30 = HEAP32[$29>>2]|0;
  $31 = ($27|0)==(-1);
  $32 = ($30|0)==(-1);
  $33 = $31 & $32;
  if ($33) {
   $34 = HEAP32[$0>>2]|0;
   $35 = ((($34)) + -12|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = (($0) + ($36)|0);
   $38 = ((($37)) + 16|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = $39 | 4;
   __ZNSt3__28ios_base5clearEj($37,$40);
  }
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($4,$0);
 $6 = HEAP8[$4>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[$0>>2]|0;
  $9 = ((($8)) + -12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($0) + ($10)|0);
  __ZNKSt3__28ios_base6getlocEv($5,$11);
  $12 = (__ZNKSt3__26locale9use_facetERNS0_2idE($5,36780)|0);
  __ZNSt3__26localeD2Ev($5);
  $13 = HEAP32[$0>>2]|0;
  $14 = ((($13)) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($0) + ($15)|0);
  $17 = ((($16)) + 24|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $20 = ((($16)) + 76|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($19,$21)|0);
  if ($22) {
   __ZNKSt3__28ios_base6getlocEv($3,$16);
   $23 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,36724)|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ((($24)) + 28|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (FUNCTION_TABLE_iii[$26 & 1023]($23,32)|0);
   __ZNSt3__26localeD2Ev($3);
   $28 = $27 << 24 >> 24;
   HEAP32[$20>>2] = $28;
   $30 = $28;
  } else {
   $$pre$i = HEAP32[$20>>2]|0;
   $30 = $$pre$i;
  }
  $29 = $30&255;
  $31 = HEAP32[$12>>2]|0;
  $32 = ((($31)) + 24|0);
  $33 = HEAP32[$32>>2]|0;
  HEAP32[$2>>2] = $18;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;
  $34 = (FUNCTION_TABLE_iiiiii[$33 & 511]($12,$$byval_copy,$16,$29,$1)|0);
  $35 = ($34|0)==(0|0);
  if ($35) {
   $36 = HEAP32[$0>>2]|0;
   $37 = ((($36)) + -12|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = (($0) + ($38)|0);
   $40 = ((($39)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = $41 | 5;
   __ZNSt3__28ios_base5clearEj($39,$42);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($4);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 | 1;
 HEAP32[$1>>2] = $3;
 return;
}
function __GLOBAL__I_000101() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init_402();
 return;
}
function __GLOBAL__sub_I_iostream_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___cxx_global_var_init_402() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28ios_base4InitC2Ev(0);
 return;
}
function __ZNSt3__28ios_base4InitC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[2713]|0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(36356,$1,36412);
 HEAP32[8919] = (11320);
 HEAP32[(35684)>>2] = (11340);
 HEAP32[(35680)>>2] = 0;
 __ZNSt3__28ios_base4initEPv((35684),36356);
 HEAP32[(35756)>>2] = 0;
 $2 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 HEAP32[(35760)>>2] = $2;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(36420,$1,36476);
 HEAP32[8941] = (11368);
 HEAP32[(35772)>>2] = (11388);
 HEAP32[(35768)>>2] = 0;
 __ZNSt3__28ios_base4initEPv((35772),36420);
 HEAP32[(35844)>>2] = 0;
 $3 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 HEAP32[(35848)>>2] = $3;
 $4 = HEAP32[2714]|0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(36484,$4,36532);
 HEAP32[8963] = (11416);
 HEAP32[(35856)>>2] = (11436);
 __ZNSt3__28ios_base4initEPv((35856),36484);
 HEAP32[(35928)>>2] = 0;
 $5 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 HEAP32[(35932)>>2] = $5;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(36540,$4,36588);
 HEAP32[8984] = (11464);
 HEAP32[(35940)>>2] = (11484);
 __ZNSt3__28ios_base4initEPv((35940),36540);
 HEAP32[(36012)>>2] = 0;
 $6 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 HEAP32[(36016)>>2] = $6;
 $7 = HEAP32[2712]|0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(36596,$7,36644);
 HEAP32[9005] = (11416);
 HEAP32[(36024)>>2] = (11436);
 __ZNSt3__28ios_base4initEPv((36024),36596);
 HEAP32[(36096)>>2] = 0;
 $8 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 HEAP32[(36100)>>2] = $8;
 $9 = HEAP32[9005]|0;
 $10 = ((($9)) + -12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (36020 + ($11)|0);
 $13 = ((($12)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 HEAP32[9047] = (11416);
 HEAP32[(36192)>>2] = (11436);
 __ZNSt3__28ios_base4initEPv((36192),$14);
 HEAP32[(36264)>>2] = 0;
 $15 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 HEAP32[(36268)>>2] = $15;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(36652,$7,36700);
 HEAP32[9026] = (11464);
 HEAP32[(36108)>>2] = (11484);
 __ZNSt3__28ios_base4initEPv((36108),36652);
 HEAP32[(36180)>>2] = 0;
 $16 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 HEAP32[(36184)>>2] = $16;
 $17 = HEAP32[9026]|0;
 $18 = ((($17)) + -12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (36104 + ($19)|0);
 $21 = ((($20)) + 24|0);
 $22 = HEAP32[$21>>2]|0;
 HEAP32[9068] = (11464);
 HEAP32[(36276)>>2] = (11484);
 __ZNSt3__28ios_base4initEPv((36276),$22);
 HEAP32[(36348)>>2] = 0;
 $23 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 HEAP32[(36352)>>2] = $23;
 $24 = HEAP32[8919]|0;
 $25 = ((($24)) + -12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = (35676 + ($26)|0);
 $28 = ((($27)) + 72|0);
 HEAP32[$28>>2] = 35852;
 $29 = HEAP32[8941]|0;
 $30 = ((($29)) + -12|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (35764 + ($31)|0);
 $33 = ((($32)) + 72|0);
 HEAP32[$33>>2] = 35936;
 $34 = HEAP32[9005]|0;
 $35 = ((($34)) + -12|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (36020 + ($36)|0);
 $38 = ((($37)) + 4|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = $39 | 8192;
 HEAP32[$38>>2] = $40;
 $41 = HEAP32[9026]|0;
 $42 = ((($41)) + -12|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = (36104 + ($43)|0);
 $45 = ((($44)) + 4|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = $46 | 8192;
 HEAP32[$45>>2] = $47;
 $48 = HEAP32[$35>>2]|0;
 $49 = (36020 + ($48)|0);
 $50 = ((($49)) + 72|0);
 HEAP32[$50>>2] = 35852;
 $51 = HEAP32[$42>>2]|0;
 $52 = (36104 + ($51)|0);
 $53 = ((($52)) + 72|0);
 HEAP32[$53>>2] = 35936;
 return;
}
function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0>>2] = (11700);
 $4 = ((($0)) + 32|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($0)) + 48|0);
 $7 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 HEAP32[$6>>2] = $7;
 $8 = ((($0)) + 52|0);
 HEAP8[$8>>0] = 0;
 $9 = HEAP32[$0>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 4|0);
 __ZNSt3__26localeC2ERKS0_($3,$12);
 FUNCTION_TABLE_vii[$11 & 1023]($0,$3);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0>>2] = (11636);
 $4 = ((($0)) + 32|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($0)) + 48|0);
 $7 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 HEAP32[$6>>2] = $7;
 $8 = ((($0)) + 52|0);
 HEAP8[$8>>0] = 0;
 $9 = HEAP32[$0>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 4|0);
 __ZNSt3__26localeC2ERKS0_($3,$12);
 FUNCTION_TABLE_vii[$11 & 1023]($0,$3);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0>>2] = (11572);
 $4 = ((($0)) + 32|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 36|0);
 $6 = ((($0)) + 4|0);
 __ZNSt3__26localeC2ERKS0_($3,$6);
 $7 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,37028)|0);
 __ZNSt3__26localeD2Ev($3);
 HEAP32[$5>>2] = $7;
 $8 = ((($0)) + 40|0);
 HEAP32[$8>>2] = $2;
 $9 = ((($0)) + 44|0);
 $10 = HEAP32[$7>>2]|0;
 $11 = ((($10)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 1023]($7)|0);
 $14 = $13&1;
 HEAP8[$9>>0] = $14;
 STACKTOP = sp;return;
}
function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0>>2] = (11508);
 $4 = ((($0)) + 32|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 36|0);
 $6 = ((($0)) + 4|0);
 __ZNSt3__26localeC2ERKS0_($3,$6);
 $7 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,37036)|0);
 __ZNSt3__26localeD2Ev($3);
 HEAP32[$5>>2] = $7;
 $8 = ((($0)) + 40|0);
 HEAP32[$8>>2] = $2;
 $9 = ((($0)) + 44|0);
 $10 = HEAP32[$7>>2]|0;
 $11 = ((($10)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 1023]($7)|0);
 $14 = $13&1;
 HEAP8[$9>>0] = $14;
 STACKTOP = sp;return;
}
function __ZNSt3__211__stdoutbufIwED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_ii[$4 & 1023]($0)|0);
 $5 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,37036)|0);
 $6 = ((($0)) + 36|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$5>>2]|0;
 $8 = ((($7)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 1023]($5)|0);
 $11 = ((($0)) + 44|0);
 $12 = $10&1;
 HEAP8[$11>>0] = $12;
 return;
}
function __ZNSt3__211__stdoutbufIwE4syncEv($0) {
 $0 = $0|0;
 var $$10 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 36|0);
 $4 = ((($0)) + 40|0);
 $5 = ((($1)) + 8|0);
 $6 = $1;
 $7 = ((($0)) + 32|0);
 L1: while(1) {
  $8 = HEAP32[$3>>2]|0;
  $9 = HEAP32[$4>>2]|0;
  $10 = HEAP32[$8>>2]|0;
  $11 = ((($10)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (FUNCTION_TABLE_iiiiii[$12 & 511]($8,$9,$1,$5,$2)|0);
  $14 = HEAP32[$2>>2]|0;
  $15 = (($14) - ($6))|0;
  $16 = HEAP32[$7>>2]|0;
  $17 = (_fwrite($1,1,$15,$16)|0);
  $18 = ($17|0)==($15|0);
  if (!($18)) {
   $$2 = -1;
   break;
  }
  switch ($13|0) {
  case 1:  {
   break;
  }
  case 2:  {
   $$2 = -1;
   break L1;
   break;
  }
  default: {
   label = 4;
   break L1;
  }
  }
 }
 if ((label|0) == 4) {
  $19 = HEAP32[$7>>2]|0;
  $20 = (_fflush($19)|0);
  $21 = ($20|0)!=(0);
  $$10 = $21 << 31 >> 31;
  $$2 = $$10;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNSt3__211__stdoutbufIwE6xsputnEPKwl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$010 = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 44|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 L1: do {
  if ($5) {
   $$0 = 0;$$011 = $1;
   while(1) {
    $9 = ($$0|0)<($2|0);
    if (!($9)) {
     $$010 = $$0;
     break L1;
    }
    $10 = HEAP32[$0>>2]|0;
    $11 = ((($10)) + 52|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = HEAP32[$$011>>2]|0;
    $14 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($13)|0);
    $15 = (FUNCTION_TABLE_iii[$12 & 1023]($0,$14)|0);
    $16 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $17 = ($15|0)==($16|0);
    if ($17) {
     $$010 = $$0;
     break L1;
    }
    $18 = (($$0) + 1)|0;
    $19 = ((($$011)) + 4|0);
    $$0 = $18;$$011 = $19;
   }
  } else {
   $6 = ((($0)) + 32|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (_fwrite($1,4,$2,$7)|0);
   $$010 = $8;
  }
 } while(0);
 return ($$010|0);
}
function __ZNSt3__211__stdoutbufIwE8overflowEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$032 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 $7 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($1,$6)|0);
 do {
  if ($7) {
   label = 15;
  } else {
   $8 = (__ZNSt3__211char_traitsIwE12to_char_typeEj($1)|0);
   HEAP32[$3>>2] = $8;
   $9 = ((($0)) + 44|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = ($10<<24>>24)==(0);
   if (!($11)) {
    $12 = ((($0)) + 32|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (_fwrite($3,4,1,$13)|0);
    $15 = ($14|0)==(1);
    if ($15) {
     label = 15;
     break;
    }
    $16 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $$4 = $16;
    break;
   }
   HEAP32[$4>>2] = $2;
   $17 = ((($3)) + 4|0);
   $18 = ((($0)) + 36|0);
   $19 = ((($0)) + 40|0);
   $20 = ((($2)) + 8|0);
   $21 = $2;
   $22 = ((($0)) + 32|0);
   $$032 = $3;
   while(1) {
    $23 = HEAP32[$18>>2]|0;
    $24 = HEAP32[$19>>2]|0;
    $25 = HEAP32[$23>>2]|0;
    $26 = ((($25)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (FUNCTION_TABLE_iiiiiiiii[$27 & 511]($23,$24,$$032,$17,$5,$2,$20,$4)|0);
    $29 = HEAP32[$5>>2]|0;
    $30 = ($29|0)==($$032|0);
    if ($30) {
     label = 14;
     break;
    }
    $31 = ($28|0)==(3);
    if ($31) {
     label = 8;
     break;
    }
    $35 = ($28|0)==(1);
    $36 = ($28>>>0)<(2);
    if (!($36)) {
     label = 14;
     break;
    }
    $37 = HEAP32[$4>>2]|0;
    $38 = (($37) - ($21))|0;
    $39 = HEAP32[$22>>2]|0;
    $40 = (_fwrite($2,1,$38,$39)|0);
    $41 = ($40|0)==($38|0);
    if (!($41)) {
     label = 14;
     break;
    }
    $42 = HEAP32[$5>>2]|0;
    if ($35) {
     $$032 = $42;
    } else {
     label = 13;
     break;
    }
   }
   if ((label|0) == 8) {
    $32 = HEAP32[$22>>2]|0;
    $33 = (_fwrite($$032,1,1,$32)|0);
    $34 = ($33|0)==(1);
    if ($34) {
     label = 13;
    } else {
     label = 14;
    }
   }
   if ((label|0) == 13) {
    label = 15;
    break;
   }
   else if ((label|0) == 14) {
    $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $$4 = $43;
    break;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $44 = (__ZNSt3__211char_traitsIwE7not_eofEj($1)|0);
  $$4 = $44;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZNSt3__211char_traitsIwE7not_eofEj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 $2 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($0,$1)|0);
 if ($2) {
  $3 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $4 = $3 ^ -1;
  $5 = $4;
 } else {
  $5 = $0;
 }
 return ($5|0);
}
function __ZNSt3__211__stdoutbufIcED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 (FUNCTION_TABLE_ii[$4 & 1023]($0)|0);
 $5 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,37028)|0);
 $6 = ((($0)) + 36|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$5>>2]|0;
 $8 = ((($7)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 1023]($5)|0);
 $11 = ((($0)) + 44|0);
 $12 = $10&1;
 HEAP8[$11>>0] = $12;
 return;
}
function __ZNSt3__211__stdoutbufIcE4syncEv($0) {
 $0 = $0|0;
 var $$10 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 36|0);
 $4 = ((($0)) + 40|0);
 $5 = ((($1)) + 8|0);
 $6 = $1;
 $7 = ((($0)) + 32|0);
 L1: while(1) {
  $8 = HEAP32[$3>>2]|0;
  $9 = HEAP32[$4>>2]|0;
  $10 = HEAP32[$8>>2]|0;
  $11 = ((($10)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (FUNCTION_TABLE_iiiiii[$12 & 511]($8,$9,$1,$5,$2)|0);
  $14 = HEAP32[$2>>2]|0;
  $15 = (($14) - ($6))|0;
  $16 = HEAP32[$7>>2]|0;
  $17 = (_fwrite($1,1,$15,$16)|0);
  $18 = ($17|0)==($15|0);
  if (!($18)) {
   $$2 = -1;
   break;
  }
  switch ($13|0) {
  case 1:  {
   break;
  }
  case 2:  {
   $$2 = -1;
   break L1;
   break;
  }
  default: {
   label = 4;
   break L1;
  }
  }
 }
 if ((label|0) == 4) {
  $19 = HEAP32[$7>>2]|0;
  $20 = (_fflush($19)|0);
  $21 = ($20|0)!=(0);
  $$10 = $21 << 31 >> 31;
  $$2 = $$10;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNSt3__211__stdoutbufIcE6xsputnEPKcl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$010 = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 44|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 L1: do {
  if ($5) {
   $$0 = 0;$$011 = $1;
   while(1) {
    $9 = ($$0|0)<($2|0);
    if (!($9)) {
     $$010 = $$0;
     break L1;
    }
    $10 = HEAP32[$0>>2]|0;
    $11 = ((($10)) + 52|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = HEAP8[$$011>>0]|0;
    $14 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($13)|0);
    $15 = (FUNCTION_TABLE_iii[$12 & 1023]($0,$14)|0);
    $16 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $17 = ($15|0)==($16|0);
    if ($17) {
     $$010 = $$0;
     break L1;
    }
    $18 = (($$0) + 1)|0;
    $19 = ((($$011)) + 1|0);
    $$0 = $18;$$011 = $19;
   }
  } else {
   $6 = ((($0)) + 32|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (_fwrite($1,1,$2,$7)|0);
   $$010 = $8;
  }
 } while(0);
 return ($$010|0);
}
function __ZNSt3__211__stdoutbufIcE8overflowEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$032 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $7 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($1,$6)|0);
 do {
  if ($7) {
   label = 15;
  } else {
   $8 = (__ZNSt3__211char_traitsIcE12to_char_typeEi($1)|0);
   HEAP8[$3>>0] = $8;
   $9 = ((($0)) + 44|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = ($10<<24>>24)==(0);
   if (!($11)) {
    $12 = ((($0)) + 32|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (_fwrite($3,1,1,$13)|0);
    $15 = ($14|0)==(1);
    if ($15) {
     label = 15;
     break;
    }
    $16 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $$4 = $16;
    break;
   }
   HEAP32[$4>>2] = $2;
   $17 = ((($3)) + 1|0);
   $18 = ((($0)) + 36|0);
   $19 = ((($0)) + 40|0);
   $20 = ((($2)) + 8|0);
   $21 = $2;
   $22 = ((($0)) + 32|0);
   $$032 = $3;
   while(1) {
    $23 = HEAP32[$18>>2]|0;
    $24 = HEAP32[$19>>2]|0;
    $25 = HEAP32[$23>>2]|0;
    $26 = ((($25)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (FUNCTION_TABLE_iiiiiiiii[$27 & 511]($23,$24,$$032,$17,$5,$2,$20,$4)|0);
    $29 = HEAP32[$5>>2]|0;
    $30 = ($29|0)==($$032|0);
    if ($30) {
     label = 14;
     break;
    }
    $31 = ($28|0)==(3);
    if ($31) {
     label = 8;
     break;
    }
    $35 = ($28|0)==(1);
    $36 = ($28>>>0)<(2);
    if (!($36)) {
     label = 14;
     break;
    }
    $37 = HEAP32[$4>>2]|0;
    $38 = (($37) - ($21))|0;
    $39 = HEAP32[$22>>2]|0;
    $40 = (_fwrite($2,1,$38,$39)|0);
    $41 = ($40|0)==($38|0);
    if (!($41)) {
     label = 14;
     break;
    }
    $42 = HEAP32[$5>>2]|0;
    if ($35) {
     $$032 = $42;
    } else {
     label = 13;
     break;
    }
   }
   if ((label|0) == 8) {
    $32 = HEAP32[$22>>2]|0;
    $33 = (_fwrite($$032,1,1,$32)|0);
    $34 = ($33|0)==(1);
    if ($34) {
     label = 13;
    } else {
     label = 14;
    }
   }
   if ((label|0) == 13) {
    label = 15;
    break;
   }
   else if ((label|0) == 14) {
    $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $$4 = $43;
    break;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $44 = (__ZNSt3__211char_traitsIcE7not_eofEi($1)|0);
  $$4 = $44;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZNSt3__210__stdinbufIwED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,37036)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_ii[$6 & 1023]($2)|0);
 $8 = ((($0)) + 44|0);
 HEAP32[$8>>2] = $7;
 $9 = HEAP32[$3>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 1023]($9)|0);
 $14 = ((($0)) + 53|0);
 $15 = $13&1;
 HEAP8[$14>>0] = $15;
 $16 = HEAP32[$8>>2]|0;
 $17 = ($16|0)>(8);
 if ($17) {
  __ZNSt3__221__throw_runtime_errorEPKc(23068);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__210__stdinbufIwE9underflowEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__210__stdinbufIwE9__getcharEb($0,0)|0);
 return ($1|0);
}
function __ZNSt3__210__stdinbufIwE5uflowEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__210__stdinbufIwE9__getcharEb($0,1)|0);
 return ($1|0);
}
function __ZNSt3__210__stdinbufIwE9pbackfailEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
 $7 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($1,$6)|0);
 $8 = ((($0)) + 52|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)!=(0);
 do {
  if ($7) {
   if ($10) {
    $$1 = $1;
   } else {
    $11 = ((($0)) + 48|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $14 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($12,$13)|0);
    $15 = $14 ^ 1;
    $16 = $15&1;
    HEAP8[$8>>0] = $16;
    $$1 = $12;
   }
  } else {
   if ($10) {
    $17 = ((($0)) + 48|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (__ZNSt3__211char_traitsIwE12to_char_typeEj($18)|0);
    HEAP32[$4>>2] = $19;
    $20 = ((($0)) + 36|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ((($0)) + 40|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($4)) + 4|0);
    $25 = ((($2)) + 8|0);
    $26 = HEAP32[$21>>2]|0;
    $27 = ((($26)) + 12|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (FUNCTION_TABLE_iiiiiiiii[$28 & 511]($21,$23,$4,$24,$5,$2,$25,$3)|0);
    switch ($29|0) {
    case 1: case 2:  {
     label = 11;
     break;
    }
    case 3:  {
     $30 = HEAP32[$17>>2]|0;
     $31 = $30&255;
     HEAP8[$2>>0] = $31;
     $32 = ((($2)) + 1|0);
     HEAP32[$3>>2] = $32;
     label = 8;
     break;
    }
    default: {
     label = 8;
    }
    }
    L9: do {
     if ((label|0) == 8) {
      $33 = ((($0)) + 32|0);
      while(1) {
       $34 = HEAP32[$3>>2]|0;
       $35 = ($34>>>0)>($2>>>0);
       if (!($35)) {
        $$0 = 1;$$07 = 0;
        break L9;
       }
       $36 = ((($34)) + -1|0);
       HEAP32[$3>>2] = $36;
       $37 = HEAP8[$36>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = HEAP32[$33>>2]|0;
       $40 = (_ungetc($38,$39)|0);
       $41 = ($40|0)==(-1);
       if ($41) {
        label = 11;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 11) {
     $42 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
     $$0 = 0;$$07 = $42;
    }
    if ($$0) {
     $$pre$phiZ2D = $17;
    } else {
     $$1 = $$07;
     break;
    }
   } else {
    $$pre = ((($0)) + 48|0);
    $$pre$phiZ2D = $$pre;
   }
   HEAP32[$$pre$phiZ2D>>2] = $1;
   HEAP8[$8>>0] = 1;
   $$1 = $1;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNSt3__210__stdinbufIwE9__getcharEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = ((($0)) + 52|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $12 = ((($0)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)>(1);
  $$sroa$speculated = $14 ? $13 : 1;
  $15 = ((($0)) + 32|0);
  $$052 = 0;
  while(1) {
   $16 = ($$052>>>0)<($$sroa$speculated>>>0);
   if (!($16)) {
    label = 9;
    break;
   }
   $17 = HEAP32[$15>>2]|0;
   $18 = (_getc($17)|0);
   $19 = ($18|0)==(-1);
   if ($19) {
    label = 8;
    break;
   }
   $20 = $18&255;
   $21 = (($2) + ($$052)|0);
   HEAP8[$21>>0] = $20;
   $22 = (($$052) + 1)|0;
   $$052 = $22;
  }
  if ((label|0) == 8) {
   $23 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $$10 = $23;
  }
  else if ((label|0) == 9) {
   $24 = ((($0)) + 53|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = ($25<<24>>24)==(0);
   do {
    if ($26) {
     $29 = ((($0)) + 40|0);
     $30 = ((($0)) + 36|0);
     $31 = ((($3)) + 4|0);
     $$048 = $$sroa$speculated;
     L11: while(1) {
      $32 = HEAP32[$29>>2]|0;
      $33 = $32;
      $34 = $33;
      $35 = HEAP32[$34>>2]|0;
      $36 = (($33) + 4)|0;
      $37 = $36;
      $38 = HEAP32[$37>>2]|0;
      $39 = HEAP32[$30>>2]|0;
      $40 = (($2) + ($$048)|0);
      $41 = HEAP32[$39>>2]|0;
      $42 = ((($41)) + 16|0);
      $43 = HEAP32[$42>>2]|0;
      $44 = (FUNCTION_TABLE_iiiiiiiii[$43 & 511]($39,$32,$2,$40,$4,$3,$31,$5)|0);
      switch ($44|0) {
      case 3:  {
       label = 15;
       break L11;
       break;
      }
      case 2:  {
       label = 17;
       break L11;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       break L11;
      }
      }
      $45 = HEAP32[$29>>2]|0;
      $46 = $45;
      $47 = $46;
      HEAP32[$47>>2] = $35;
      $48 = (($46) + 4)|0;
      $49 = $48;
      HEAP32[$49>>2] = $38;
      $50 = ($$048|0)==(8);
      if ($50) {
       label = 17;
       break;
      }
      $51 = HEAP32[$15>>2]|0;
      $52 = (_getc($51)|0);
      $53 = ($52|0)==(-1);
      if ($53) {
       label = 17;
       break;
      }
      $56 = $52&255;
      HEAP8[$40>>0] = $56;
      $57 = (($$048) + 1)|0;
      $$048 = $57;
     }
     if ((label|0) == 15) {
      $54 = HEAP8[$2>>0]|0;
      $55 = $54 << 24 >> 24;
      HEAP32[$3>>2] = $55;
     }
     else if ((label|0) == 17) {
      $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
      $$9 = $58;
      break;
     }
     $$351 = $$048;
     label = 19;
    } else {
     $27 = HEAP8[$2>>0]|0;
     $28 = $27 << 24 >> 24;
     HEAP32[$3>>2] = $28;
     $$351 = $$sroa$speculated;
     label = 19;
    }
   } while(0);
   L21: do {
    if ((label|0) == 19) {
     L23: do {
      if ($1) {
       $69 = HEAP32[$3>>2]|0;
       $70 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($69)|0);
       $71 = ((($0)) + 48|0);
       HEAP32[$71>>2] = $70;
      } else {
       $$0 = $$351;
       while(1) {
        $59 = ($$0|0)>(0);
        if (!($59)) {
         break L23;
        }
        $60 = (($$0) + -1)|0;
        $61 = (($2) + ($60)|0);
        $62 = HEAP8[$61>>0]|0;
        $63 = $62 << 24 >> 24;
        $64 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($63)|0);
        $65 = HEAP32[$15>>2]|0;
        $66 = (_ungetc($64,$65)|0);
        $67 = ($66|0)==(-1);
        if ($67) {
         break;
        } else {
         $$0 = $60;
        }
       }
       $68 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $$9 = $68;
       break L21;
      }
     } while(0);
     $72 = HEAP32[$3>>2]|0;
     $73 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($72)|0);
     $$9 = $73;
    }
   } while(0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $9 = ((($0)) + 48|0);
  $10 = HEAP32[$9>>2]|0;
  if ($1) {
   $11 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   HEAP32[$9>>2] = $11;
   HEAP8[$6>>0] = 0;
   $$11 = $10;
  } else {
   $$11 = $10;
  }
 }
 STACKTOP = sp;return ($$11|0);
}
function __ZNSt3__210__stdinbufIcED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,37028)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_ii[$6 & 1023]($2)|0);
 $8 = ((($0)) + 44|0);
 HEAP32[$8>>2] = $7;
 $9 = HEAP32[$3>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 1023]($9)|0);
 $14 = ((($0)) + 53|0);
 $15 = $13&1;
 HEAP8[$14>>0] = $15;
 $16 = HEAP32[$8>>2]|0;
 $17 = ($16|0)>(8);
 if ($17) {
  __ZNSt3__221__throw_runtime_errorEPKc(23068);
  // unreachable;
 } else {
  return;
 }
}
function __ZNSt3__210__stdinbufIcE9underflowEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__210__stdinbufIcE9__getcharEb($0,0)|0);
 return ($1|0);
}
function __ZNSt3__210__stdinbufIcE5uflowEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__210__stdinbufIcE9__getcharEb($0,1)|0);
 return ($1|0);
}
function __ZNSt3__210__stdinbufIcE9pbackfailEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 4|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
 $7 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($1,$6)|0);
 $8 = ((($0)) + 52|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)!=(0);
 do {
  if ($7) {
   if ($10) {
    $$1 = $1;
   } else {
    $11 = ((($0)) + 48|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $14 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($12,$13)|0);
    $15 = $14 ^ 1;
    $16 = $15&1;
    HEAP8[$8>>0] = $16;
    $$1 = $12;
   }
  } else {
   if ($10) {
    $17 = ((($0)) + 48|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (__ZNSt3__211char_traitsIcE12to_char_typeEi($18)|0);
    HEAP8[$4>>0] = $19;
    $20 = ((($0)) + 36|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ((($0)) + 40|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($4)) + 1|0);
    $25 = ((($2)) + 8|0);
    $26 = HEAP32[$21>>2]|0;
    $27 = ((($26)) + 12|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (FUNCTION_TABLE_iiiiiiiii[$28 & 511]($21,$23,$4,$24,$5,$2,$25,$3)|0);
    switch ($29|0) {
    case 1: case 2:  {
     label = 11;
     break;
    }
    case 3:  {
     $30 = HEAP32[$17>>2]|0;
     $31 = $30&255;
     HEAP8[$2>>0] = $31;
     $32 = ((($2)) + 1|0);
     HEAP32[$3>>2] = $32;
     label = 8;
     break;
    }
    default: {
     label = 8;
    }
    }
    L9: do {
     if ((label|0) == 8) {
      $33 = ((($0)) + 32|0);
      while(1) {
       $34 = HEAP32[$3>>2]|0;
       $35 = ($34>>>0)>($2>>>0);
       if (!($35)) {
        $$0 = 1;$$07 = 0;
        break L9;
       }
       $36 = ((($34)) + -1|0);
       HEAP32[$3>>2] = $36;
       $37 = HEAP8[$36>>0]|0;
       $38 = $37 << 24 >> 24;
       $39 = HEAP32[$33>>2]|0;
       $40 = (_ungetc($38,$39)|0);
       $41 = ($40|0)==(-1);
       if ($41) {
        label = 11;
        break;
       }
      }
     }
    } while(0);
    if ((label|0) == 11) {
     $42 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
     $$0 = 0;$$07 = $42;
    }
    if ($$0) {
     $$pre$phiZ2D = $17;
    } else {
     $$1 = $$07;
     break;
    }
   } else {
    $$pre = ((($0)) + 48|0);
    $$pre$phiZ2D = $$pre;
   }
   HEAP32[$$pre$phiZ2D>>2] = $1;
   HEAP8[$8>>0] = 1;
   $$1 = $1;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZNSt3__210__stdinbufIcE9__getcharEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 $6 = ((($0)) + 52|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $12 = ((($0)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)>(1);
  $$sroa$speculated = $14 ? $13 : 1;
  $15 = ((($0)) + 32|0);
  $$052 = 0;
  while(1) {
   $16 = ($$052>>>0)<($$sroa$speculated>>>0);
   if (!($16)) {
    label = 9;
    break;
   }
   $17 = HEAP32[$15>>2]|0;
   $18 = (_getc($17)|0);
   $19 = ($18|0)==(-1);
   if ($19) {
    label = 8;
    break;
   }
   $20 = $18&255;
   $21 = (($2) + ($$052)|0);
   HEAP8[$21>>0] = $20;
   $22 = (($$052) + 1)|0;
   $$052 = $22;
  }
  if ((label|0) == 8) {
   $23 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $$10 = $23;
  }
  else if ((label|0) == 9) {
   $24 = ((($0)) + 53|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = ($25<<24>>24)==(0);
   do {
    if ($26) {
     $28 = ((($0)) + 40|0);
     $29 = ((($0)) + 36|0);
     $30 = ((($3)) + 1|0);
     $$048 = $$sroa$speculated;
     L11: while(1) {
      $31 = HEAP32[$28>>2]|0;
      $32 = $31;
      $33 = $32;
      $34 = HEAP32[$33>>2]|0;
      $35 = (($32) + 4)|0;
      $36 = $35;
      $37 = HEAP32[$36>>2]|0;
      $38 = HEAP32[$29>>2]|0;
      $39 = (($2) + ($$048)|0);
      $40 = HEAP32[$38>>2]|0;
      $41 = ((($40)) + 16|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = (FUNCTION_TABLE_iiiiiiiii[$42 & 511]($38,$31,$2,$39,$4,$3,$30,$5)|0);
      switch ($43|0) {
      case 3:  {
       label = 15;
       break L11;
       break;
      }
      case 2:  {
       label = 17;
       break L11;
       break;
      }
      case 1:  {
       break;
      }
      default: {
       break L11;
      }
      }
      $44 = HEAP32[$28>>2]|0;
      $45 = $44;
      $46 = $45;
      HEAP32[$46>>2] = $34;
      $47 = (($45) + 4)|0;
      $48 = $47;
      HEAP32[$48>>2] = $37;
      $49 = ($$048|0)==(8);
      if ($49) {
       label = 17;
       break;
      }
      $50 = HEAP32[$15>>2]|0;
      $51 = (_getc($50)|0);
      $52 = ($51|0)==(-1);
      if ($52) {
       label = 17;
       break;
      }
      $54 = $51&255;
      HEAP8[$39>>0] = $54;
      $55 = (($$048) + 1)|0;
      $$048 = $55;
     }
     if ((label|0) == 15) {
      $53 = HEAP8[$2>>0]|0;
      HEAP8[$3>>0] = $53;
     }
     else if ((label|0) == 17) {
      $56 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
      $$9 = $56;
      break;
     }
     $$351 = $$048;
     label = 19;
    } else {
     $27 = HEAP8[$2>>0]|0;
     HEAP8[$3>>0] = $27;
     $$351 = $$sroa$speculated;
     label = 19;
    }
   } while(0);
   L21: do {
    if ((label|0) == 19) {
     L23: do {
      if ($1) {
       $66 = HEAP8[$3>>0]|0;
       $67 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($66)|0);
       $68 = ((($0)) + 48|0);
       HEAP32[$68>>2] = $67;
      } else {
       $$0 = $$351;
       while(1) {
        $57 = ($$0|0)>(0);
        if (!($57)) {
         break L23;
        }
        $58 = (($$0) + -1)|0;
        $59 = (($2) + ($58)|0);
        $60 = HEAP8[$59>>0]|0;
        $61 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($60)|0);
        $62 = HEAP32[$15>>2]|0;
        $63 = (_ungetc($61,$62)|0);
        $64 = ($63|0)==(-1);
        if ($64) {
         break;
        } else {
         $$0 = $58;
        }
       }
       $65 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $$9 = $65;
       break L21;
      }
     } while(0);
     $69 = HEAP8[$3>>0]|0;
     $70 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($69)|0);
     $$9 = $70;
    }
   } while(0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $9 = ((($0)) + 48|0);
  $10 = HEAP32[$9>>2]|0;
  if ($1) {
   $11 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   HEAP32[$9>>2] = $11;
   HEAP8[$6>>0] = 0;
   $$11 = $10;
  } else {
   $$11 = $10;
  }
 }
 STACKTOP = sp;return ($$11|0);
}
function __ZNSt3__27collateIcED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27collateIcED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__27collateIcED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__26locale5facet16__on_zero_sharedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ((($2)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  FUNCTION_TABLE_vi[$4 & 1023]($0);
 }
 return;
}
function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$011 = $3;$$012 = $1;
 while(1) {
  $5 = ($$011|0)==($4|0);
  if ($5) {
   label = 7;
   break;
  }
  $6 = ($$012|0)==($2|0);
  if ($6) {
   $$0 = -1;
   break;
  }
  $7 = HEAP8[$$012>>0]|0;
  $8 = HEAP8[$$011>>0]|0;
  $9 = ($7<<24>>24)<($8<<24>>24);
  if ($9) {
   $$0 = -1;
   break;
  }
  $10 = ($8<<24>>24)<($7<<24>>24);
  if ($10) {
   $$0 = 1;
   break;
  }
  $11 = ((($$012)) + 1|0);
  $12 = ((($$011)) + 1|0);
  $$011 = $12;$$012 = $11;
 }
 if ((label|0) == 7) {
  $13 = ($$012|0)!=($2|0);
  $14 = $13&1;
  $$0 = $14;
 }
 return ($$0|0);
}
function __ZNKSt3__27collateIcE12do_transformEPKcS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0,$2,$3);
 return;
}
function __ZNKSt3__27collateIcE7do_hashEPKcS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$020 = 0, $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = 0;$$020 = $1;
 while(1) {
  $3 = ($$020|0)==($2|0);
  if ($3) {
   break;
  }
  $4 = $$0 << 4;
  $5 = HEAP8[$$020>>0]|0;
  $6 = $5 << 24 >> 24;
  $7 = (($4) + ($6))|0;
  $8 = $7 & -268435456;
  $9 = $8 >>> 24;
  $10 = $9 | $8;
  $11 = $10 ^ $7;
  $12 = ((($$020)) + 1|0);
  $$0 = $11;$$020 = $12;
 }
 return ($$0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $scevgep23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = sp;
 $5 = $2;
 $6 = (($5) - ($3))|0;
 $7 = ($6>>>0)>(4294967279);
 if ($7) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $8 = ($6>>>0)<(11);
 if ($8) {
  $9 = $6&255;
  $10 = ((($0)) + 11|0);
  HEAP8[$10>>0] = $9;
  $$021 = $0;
 } else {
  $11 = (($6) + 16)|0;
  $12 = $11 & -16;
  $13 = (__Znwm($12)|0);
  HEAP32[$0>>2] = $13;
  $14 = $12 | -2147483648;
  $15 = ((($0)) + 8|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 4|0);
  HEAP32[$16>>2] = $6;
  $$021 = $13;
 }
 $17 = $2;
 $18 = (($17) - ($3))|0;
 $$0 = $1;$$1 = $$021;
 while(1) {
  $19 = ($$0|0)==($2|0);
  if ($19) {
   break;
  }
  __ZNSt3__211char_traitsIcE6assignERcRKc($$1,$$0);
  $20 = ((($$0)) + 1|0);
  $21 = ((($$1)) + 1|0);
  $$0 = $20;$$1 = $21;
 }
 $scevgep23 = (($$021) + ($18)|0);
 HEAP8[$4>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($scevgep23,$4);
 STACKTOP = sp;return;
}
function __ZNSt3__26locale5facetD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__27collateIwED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27collateIwED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__27collateIwED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$011 = $3;$$012 = $1;
 while(1) {
  $5 = ($$011|0)==($4|0);
  if ($5) {
   label = 7;
   break;
  }
  $6 = ($$012|0)==($2|0);
  if ($6) {
   $$0 = -1;
   break;
  }
  $7 = HEAP32[$$012>>2]|0;
  $8 = HEAP32[$$011>>2]|0;
  $9 = ($7|0)<($8|0);
  if ($9) {
   $$0 = -1;
   break;
  }
  $10 = ($8|0)<($7|0);
  if ($10) {
   $$0 = 1;
   break;
  }
  $11 = ((($$012)) + 4|0);
  $12 = ((($$011)) + 4|0);
  $$011 = $12;$$012 = $11;
 }
 if ((label|0) == 7) {
  $13 = ($$012|0)!=($2|0);
  $14 = $13&1;
  $$0 = $14;
 }
 return ($$0|0);
}
function __ZNKSt3__27collateIwE12do_transformEPKwS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0,$2,$3);
 return;
}
function __ZNKSt3__27collateIwE7do_hashEPKwS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$020 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = 0;$$020 = $1;
 while(1) {
  $3 = ($$020|0)==($2|0);
  if ($3) {
   break;
  }
  $4 = $$0 << 4;
  $5 = HEAP32[$$020>>2]|0;
  $6 = (($5) + ($4))|0;
  $7 = $6 & -268435456;
  $8 = $7 >>> 24;
  $9 = $8 | $7;
  $10 = $9 ^ $6;
  $11 = ((($$020)) + 4|0);
  $$0 = $10;$$020 = $11;
 }
 return ($$0|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1 = 0, $$1$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = $2;
 $5 = $1;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>(1073741807);
 if ($8) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $9 = ($7>>>0)<(2);
 do {
  if ($9) {
   $10 = $7&255;
   $11 = ((($0)) + 8|0);
   $12 = ((($11)) + 3|0);
   HEAP8[$12>>0] = $10;
   $$1$ph = $0;
  } else {
   $13 = (($7) + 4)|0;
   $14 = $13 & -4;
   $15 = ($14>>>0)>(1073741823);
   if ($15) {
    _abort();
    // unreachable;
   } else {
    $16 = $14 << 2;
    $17 = (__Znwm($16)|0);
    HEAP32[$0>>2] = $17;
    $18 = $14 | -2147483648;
    $19 = ((($0)) + 8|0);
    HEAP32[$19>>2] = $18;
    $20 = ((($0)) + 4|0);
    HEAP32[$20>>2] = $7;
    $$1$ph = $17;
    break;
   }
  }
 } while(0);
 $$0 = $1;$$1 = $$1$ph;
 while(1) {
  $21 = ($$0|0)==($2|0);
  if ($21) {
   break;
  }
  __ZNSt3__211char_traitsIwE6assignERwRKw($$1,$$0);
  $22 = ((($$0)) + 4|0);
  $23 = ((($$1)) + 4|0);
  $$0 = $22;$$1 = $23;
 }
 HEAP32[$3>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$1,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIwE6assignERwRKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$0>>2] = $2;
 return;
}
function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload = 0, $$sroa$022$0$copyload24 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 52|0;
 $$byval_copy = sp + 48|0;
 $6 = sp + 44|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 32|0;
 $10 = sp + 28|0;
 $11 = sp;
 $12 = sp + 24|0;
 $13 = ((($3)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14 & 1;
 $16 = ($15|0)==(0);
 if ($16) {
  HEAP32[$6>>2] = -1;
  $17 = HEAP32[$0>>2]|0;
  $18 = ((($17)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = HEAP32[$1>>2]|0;
  HEAP32[$7>>2] = $20;
  $21 = HEAP32[$2>>2]|0;
  HEAP32[$8>>2] = $21;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$8>>2]|0;
  $22 = (FUNCTION_TABLE_iiiiiii[$19 & 511]($0,$$byval_copy,$$byval_copy1,$3,$4,$6)|0);
  HEAP32[$1>>2] = $22;
  $23 = HEAP32[$6>>2]|0;
  switch ($23|0) {
  case 0:  {
   HEAP8[$5>>0] = 0;
   break;
  }
  case 1:  {
   HEAP8[$5>>0] = 1;
   break;
  }
  default: {
   HEAP8[$5>>0] = 1;
   HEAP32[$4>>2] = 4;
  }
  }
  $$sroa$022$0$copyload = HEAP32[$1>>2]|0;
  $$sroa$022$0 = $$sroa$022$0$copyload;
 } else {
  __ZNKSt3__28ios_base6getlocEv($9,$3);
  $24 = (__ZNKSt3__26locale9use_facetERNS0_2idE($9,36724)|0);
  __ZNSt3__26localeD2Ev($9);
  __ZNKSt3__28ios_base6getlocEv($10,$3);
  $25 = (__ZNKSt3__26locale9use_facetERNS0_2idE($10,36740)|0);
  __ZNSt3__26localeD2Ev($10);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 24|0);
  $28 = HEAP32[$27>>2]|0;
  FUNCTION_TABLE_vii[$28 & 1023]($11,$25);
  $29 = ((($11)) + 12|0);
  $30 = HEAP32[$25>>2]|0;
  $31 = ((($30)) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vii[$32 & 1023]($29,$25);
  $33 = HEAP32[$2>>2]|0;
  HEAP32[$12>>2] = $33;
  $34 = ((($11)) + 24|0);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$12>>2]|0;
  $35 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($1,$$byval_copy2,$11,$34,$24,$4,1)|0);
  $36 = ($35|0)==($11|0);
  $37 = $36&1;
  HEAP8[$5>>0] = $37;
  $$sroa$022$0$copyload24 = HEAP32[$1>>2]|0;
  $39 = $34;
  while(1) {
   $38 = ((($39)) + -12|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($38);
   $40 = ($38|0)==($11|0);
   if ($40) {
    break;
   } else {
    $39 = $38;
   }
  }
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;return ($$sroa$022$0|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i17 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i26 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i18 = 0;
 var $phitmp$i = 0, $phitmp$i33 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $vararg_buffer = sp + 192|0;
 $6 = sp + 160|0;
 $7 = sp + 224|0;
 $8 = sp + 220|0;
 $9 = sp + 208|0;
 $10 = sp + 204|0;
 $11 = sp;
 $12 = sp + 200|0;
 $13 = sp + 196|0;
 ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $14 = (($7) + ($$0$i$i<<2)|0);
  HEAP32[$14>>2] = 0;
  $15 = (($$0$i$i) + 1)|0;
  $$0$i$i = $15;
 }
 __ZNKSt3__28ios_base6getlocEv($8,$3);
 $16 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36724)|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 32|0);
 $19 = HEAP32[$18>>2]|0;
 (FUNCTION_TABLE_iiiii[$19 & 511]($16,5648,(5674),$6)|0);
 __ZNSt3__26localeD2Ev($8);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i17 = 0;
 while(1) {
  $exitcond$i$i18 = ($$0$i$i17|0)==(3);
  if ($exitcond$i$i18) {
   break;
  }
  $20 = (($9) + ($$0$i$i17<<2)|0);
  HEAP32[$20>>2] = 0;
  $21 = (($$0$i$i17) + 1)|0;
  $$0$i$i17 = $21;
 }
 $22 = ((($9)) + 11|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = ($23<<24>>24)<(0);
 $25 = ((($9)) + 8|0);
 if ($24) {
  $26 = HEAP32[$25>>2]|0;
  $27 = $26 & 2147483647;
  $phitmp$i = (($27) + -1)|0;
  $28 = $phitmp$i;
 } else {
  $28 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$28,0);
 $29 = HEAP8[$22>>0]|0;
 $30 = ($29<<24>>24)<(0);
 $31 = HEAP32[$9>>2]|0;
 $32 = $30 ? $31 : $9;
 HEAP32[$10>>2] = $32;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $33 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $32;$148 = $$pre;$34 = $$pre;
 L12: while(1) {
  $35 = ($34|0)==(0|0);
  if ($35) {
   $123 = 0;$149 = 1;$84 = 0;
  } else {
   $36 = ((($34)) + 12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = ((($34)) + 16|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($37|0)==($39|0);
   if ($40) {
    $41 = HEAP32[$34>>2]|0;
    $42 = ((($41)) + 36|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (FUNCTION_TABLE_ii[$43 & 1023]($34)|0);
    $$0$i$i$i$i20 = $44;
   } else {
    $45 = HEAP8[$37>>0]|0;
    $46 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($45)|0);
    $$0$i$i$i$i20 = $46;
   }
   $47 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $48 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i20,$47)|0);
   if ($48) {
    HEAP32[$1>>2] = 0;
    $123 = 0;$149 = 1;$84 = 0;
   } else {
    $123 = $148;$149 = 0;$84 = $34;
   }
  }
  $49 = HEAP32[$2>>2]|0;
  $50 = ($49|0)==(0|0);
  do {
   if ($50) {
    label = 22;
   } else {
    $51 = ((($49)) + 12|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ((($49)) + 16|0);
    $54 = HEAP32[$53>>2]|0;
    $55 = ($52|0)==($54|0);
    if ($55) {
     $56 = HEAP32[$49>>2]|0;
     $57 = ((($56)) + 36|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (FUNCTION_TABLE_ii[$58 & 1023]($49)|0);
     $$0$i$i2$i$i26 = $59;
    } else {
     $60 = HEAP8[$52>>0]|0;
     $61 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($60)|0);
     $$0$i$i2$i$i26 = $61;
    }
    $62 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $63 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i26,$62)|0);
    if ($63) {
     HEAP32[$2>>2] = 0;
     label = 22;
     break;
    } else {
     if ($149) {
      $150 = $49;
      break;
     } else {
      $$2 = $$0;$131 = $49;
      break L12;
     }
    }
   }
  } while(0);
  if ((label|0) == 22) {
   label = 0;
   if ($149) {
    $$2 = $$0;$131 = 0;
    break;
   } else {
    $150 = 0;
   }
  }
  $64 = HEAP32[$10>>2]|0;
  $65 = HEAP8[$22>>0]|0;
  $66 = ($65<<24>>24)<(0);
  $67 = HEAP32[$33>>2]|0;
  $68 = $65&255;
  $69 = $66 ? $67 : $68;
  $70 = (($$0) + ($69)|0);
  $71 = ($64|0)==($70|0);
  if ($71) {
   $72 = $69 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$72,0);
   $73 = HEAP8[$22>>0]|0;
   $74 = ($73<<24>>24)<(0);
   if ($74) {
    $75 = HEAP32[$25>>2]|0;
    $76 = $75 & 2147483647;
    $phitmp$i33 = (($76) + -1)|0;
    $77 = $phitmp$i33;
   } else {
    $77 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$77,0);
   $78 = HEAP8[$22>>0]|0;
   $79 = ($78<<24>>24)<(0);
   $80 = HEAP32[$9>>2]|0;
   $81 = $79 ? $80 : $9;
   $82 = (($81) + ($69)|0);
   HEAP32[$10>>2] = $82;
   $$1 = $81;
  } else {
   $$1 = $$0;
  }
  $83 = ((($84)) + 12|0);
  $85 = HEAP32[$83>>2]|0;
  $86 = ((($84)) + 16|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($85|0)==($87|0);
  if ($88) {
   $89 = HEAP32[$84>>2]|0;
   $90 = ((($89)) + 36|0);
   $91 = HEAP32[$90>>2]|0;
   $92 = (FUNCTION_TABLE_ii[$91 & 1023]($84)|0);
   $$0$i$i36 = $92;
  } else {
   $93 = HEAP8[$85>>0]|0;
   $94 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($93)|0);
   $$0$i$i36 = $94;
  }
  $95 = $$0$i$i36&255;
  $96 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($95,16,$$1,$10,$13,0,$7,$11,$12,$6)|0);
  $97 = ($96|0)==(0);
  if (!($97)) {
   $$2 = $$1;$131 = $150;
   break;
  }
  $98 = HEAP32[$83>>2]|0;
  $99 = HEAP32[$86>>2]|0;
  $100 = ($98|0)==($99|0);
  if ($100) {
   $101 = HEAP32[$84>>2]|0;
   $102 = ((($101)) + 40|0);
   $103 = HEAP32[$102>>2]|0;
   (FUNCTION_TABLE_ii[$103 & 1023]($84)|0);
  } else {
   $104 = ((($98)) + 1|0);
   HEAP32[$83>>2] = $104;
   $105 = HEAP8[$98>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($105)|0);
  }
  $$0 = $$1;$148 = $123;$34 = $84;
 }
 $106 = HEAP32[$10>>2]|0;
 $107 = $$2;
 $108 = (($106) - ($107))|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$108,0);
 $109 = HEAP8[$22>>0]|0;
 $110 = ($109<<24>>24)<(0);
 $111 = HEAP32[$9>>2]|0;
 $112 = $110 ? $111 : $9;
 $113 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $5;
 $114 = (__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($112,$113,23216,$vararg_buffer)|0);
 $115 = ($114|0)==(1);
 if (!($115)) {
  HEAP32[$4>>2] = 4;
 }
 $116 = ($84|0)==(0|0);
 if ($116) {
  $151 = 1;
 } else {
  $117 = ((($84)) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = ((($84)) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$123>>2]|0;
   $124 = ((($122)) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 1023]($84)|0);
   $$0$i$i$i$i = $126;
  } else {
   $127 = HEAP8[$118>>0]|0;
   $128 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($127)|0);
   $$0$i$i$i$i = $128;
  }
  $129 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $130 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$129)|0);
  if ($130) {
   HEAP32[$1>>2] = 0;
   $151 = 1;
  } else {
   $151 = 0;
  }
 }
 $132 = ($131|0)==(0|0);
 do {
  if ($132) {
   label = 50;
  } else {
   $133 = ((($131)) + 12|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = ((($131)) + 16|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = ($134|0)==($136|0);
   if ($137) {
    $138 = HEAP32[$131>>2]|0;
    $139 = ((($138)) + 36|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = (FUNCTION_TABLE_ii[$140 & 1023]($131)|0);
    $$0$i$i2$i$i = $141;
   } else {
    $142 = HEAP8[$134>>0]|0;
    $143 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($142)|0);
    $$0$i$i2$i$i = $143;
   }
   $144 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $145 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$144)|0);
   if ($145) {
    HEAP32[$2>>2] = 0;
    label = 50;
    break;
   } else {
    if ($151) {
     break;
    } else {
     label = 52;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($151) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $146 = HEAP32[$4>>2]|0;
  $147 = $146 | 2;
  HEAP32[$4>>2] = $147;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__26locale9use_facetERNS0_2idE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (__ZNSt3__26locale2id5__getEv($1)|0);
 $4 = (__ZNKSt3__26locale5__imp9use_facetEl($2,$3)|0);
 return ($4|0);
}
function __ZNSt3__26localeD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + -1)|0;
 HEAP32[$2>>2] = $4;
 $5 = ($3|0)==(0);
 if ($5) {
  $6 = HEAP32[$1>>2]|0;
  $7 = ((($6)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  FUNCTION_TABLE_vi[$8 & 1023]($1);
 }
 return;
}
function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0$i$add = 0, $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = HEAP32[$3>>2]|0;
 $11 = ($10|0)==($2|0);
 do {
  if ($11) {
   $12 = ((($9)) + 24|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = ($13<<24>>24)==($0<<24>>24);
   if (!($14)) {
    $15 = ((($9)) + 25|0);
    $16 = HEAP8[$15>>0]|0;
    $17 = ($16<<24>>24)==($0<<24>>24);
    if (!($17)) {
     label = 5;
     break;
    }
   }
   $18 = $14 ? 43 : 45;
   $19 = ((($2)) + 1|0);
   HEAP32[$3>>2] = $19;
   HEAP8[$2>>0] = $18;
   HEAP32[$4>>2] = 0;
   $$1 = 0;
  } else {
   label = 5;
  }
 } while(0);
 L6: do {
  if ((label|0) == 5) {
   $20 = ((($6)) + 11|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = ($21<<24>>24)<(0);
   $23 = ((($6)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $21&255;
   $26 = $22 ? $24 : $25;
   $27 = ($26|0)!=(0);
   $28 = ($0<<24>>24)==($5<<24>>24);
   $or$cond = $28 & $27;
   if ($or$cond) {
    $29 = HEAP32[$8>>2]|0;
    $30 = $29;
    $31 = $7;
    $32 = (($30) - ($31))|0;
    $33 = ($32|0)<(160);
    if (!($33)) {
     $$1 = 0;
     break;
    }
    $34 = HEAP32[$4>>2]|0;
    $35 = ((($29)) + 4|0);
    HEAP32[$8>>2] = $35;
    HEAP32[$29>>2] = $34;
    HEAP32[$4>>2] = 0;
    $$1 = 0;
    break;
   }
   $36 = ((($9)) + 26|0);
   $$0$i$idx = 0;
   while(1) {
    $$0$i$ptr = (($9) + ($$0$i$idx)|0);
    $37 = ($$0$i$idx|0)==(26);
    if ($37) {
     $$0$lcssa$i = $36;
     break;
    }
    $38 = HEAP8[$$0$i$ptr>>0]|0;
    $39 = ($38<<24>>24)==($0<<24>>24);
    $$0$i$add = (($$0$i$idx) + 1)|0;
    if ($39) {
     $$0$lcssa$i = $$0$i$ptr;
     break;
    } else {
     $$0$i$idx = $$0$i$add;
    }
   }
   $40 = $$0$lcssa$i;
   $41 = $9;
   $42 = (($40) - ($41))|0;
   $43 = ($42|0)>(23);
   if ($43) {
    $$1 = -1;
   } else {
    switch ($1|0) {
    case 10: case 8:  {
     $44 = ($42|0)<($1|0);
     if (!($44)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
    case 16:  {
     $45 = ($42|0)<(22);
     if (!($45)) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      $46 = $10;
      $47 = $2;
      $48 = (($46) - ($47))|0;
      $49 = ($48|0)<(3);
      if (!($49)) {
       $$1 = -1;
       break L6;
      }
      $50 = ((($10)) + -1|0);
      $51 = HEAP8[$50>>0]|0;
      $52 = ($51<<24>>24)==(48);
      if (!($52)) {
       $$1 = -1;
       break L6;
      }
      $53 = ((($10)) + 1|0);
      $54 = (5648 + ($42)|0);
      HEAP32[$4>>2] = 0;
      $55 = HEAP8[$54>>0]|0;
      HEAP32[$3>>2] = $53;
      HEAP8[$10>>0] = $55;
      $$1 = 0;
      break L6;
     }
     break;
    }
    default: {
    }
    }
    $56 = (5648 + ($42)|0);
    $57 = HEAP8[$56>>0]|0;
    $58 = ((($10)) + 1|0);
    HEAP32[$3>>2] = $58;
    HEAP8[$10>>0] = $57;
    $59 = HEAP32[$4>>2]|0;
    $60 = (($59) + 1)|0;
    HEAP32[$4>>2] = $60;
    $$1 = 0;
   }
  }
 } while(0);
 return ($$1|0);
}
function __ZNSt3__26__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[34896]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(34896)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (___newlocale(2147483647,23219,0)|0);
   HEAP32[9183] = $4;
   ___cxa_guard_release(34896);
  }
 }
 $5 = HEAP32[9183]|0;
 return ($5|0);
}
function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (___uselocale($1)|0);
 $5 = (_vsscanf($0,$2,$3)|0);
 $6 = ($4|0)==(0|0);
 if (!($6)) {
  (___uselocale($4)|0);
 }
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__26locale2id5__getEv($0) {
 $0 = $0|0;
 var $$byval_copy = 0, $$fca$1$gep = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $1 = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 8|0;
 $4 = sp;
 HEAP32[$4>>2] = (659);
 $$fca$1$gep = ((($4)) + 4|0);
 HEAP32[$$fca$1$gep>>2] = 0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_($3,$$byval_copy,$0);
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)==(-1);
 if (!($6)) {
  HEAP32[$1>>2] = $3;
  HEAP32[$2>>2] = $1;
  __ZNSt3__211__call_onceERVmPvPFvS2_E($0,$2,660);
 }
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + -1)|0;
 STACKTOP = sp;return ($9|0);
}
function __ZNKSt3__26locale5__imp9use_facetEl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 return ($5|0);
}
function __ZNSt3__26locale2id6__initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[9184]|0;
 $2 = (($1) + 1)|0;
 HEAP32[9184] = $2;
 $3 = (($1) + 1)|0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = $3;
 return;
}
function __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$elt4 = 0, $$repack = 0, $$repack7 = 0, $$unpack = 0, $$unpack5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$unpack = HEAP32[$1>>2]|0;
 $$elt4 = ((($1)) + 4|0);
 $$unpack5 = HEAP32[$$elt4>>2]|0;
 HEAP32[$0>>2] = $2;
 $$repack = ((($0)) + 4|0);
 HEAP32[$$repack>>2] = $$unpack;
 $$repack7 = ((($0)) + 8|0);
 HEAP32[$$repack7>>2] = $$unpack5;
 return;
}
function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv($2);
 return;
}
function __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv($0) {
 $0 = $0|0;
 var $$elt = 0, $$elt1 = 0, $$unpack = 0, $$unpack2 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $$elt = ((($0)) + 4|0);
 $$unpack = HEAP32[$$elt>>2]|0;
 $$elt1 = ((($0)) + 8|0);
 $$unpack2 = HEAP32[$$elt1>>2]|0;
 $2 = $$unpack2 >> 1;
 $3 = (($1) + ($2)|0);
 $4 = $$unpack2 & 1;
 $5 = ($4|0)==(0);
 if ($5) {
  $9 = $$unpack;
  $10 = $9;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (($6) + ($$unpack)|0);
  $8 = HEAP32[$7>>2]|0;
  $10 = $8;
 }
 FUNCTION_TABLE_vi[$10 & 1023]($3);
 return;
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 160|0;
 $7 = sp + 231|0;
 $8 = sp + 230|0;
 $9 = sp + 216|0;
 $10 = sp + 204|0;
 $11 = sp + 200|0;
 $12 = sp;
 $13 = sp + 196|0;
 $14 = sp + 192|0;
 $15 = sp + 229|0;
 $16 = sp + 228|0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9,$3,$6,$7,$8);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($10)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($10)) + 8|0);
 if ($21) {
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 2147483647;
  $phitmp$i = (($24) + -1)|0;
  $25 = $phitmp$i;
 } else {
  $25 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$25,0);
 $26 = HEAP8[$19>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$10>>2]|0;
 $29 = $27 ? $28 : $10;
 HEAP32[$11>>2] = $29;
 HEAP32[$13>>2] = $12;
 HEAP32[$14>>2] = 0;
 HEAP8[$15>>0] = 1;
 HEAP8[$16>>0] = 69;
 $30 = ((($10)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $29;$157 = $$pre;$31 = $$pre;
 L8: while(1) {
  $32 = ($31|0)==(0|0);
  if ($32) {
   $132 = 0;$158 = 1;$81 = 0;
  } else {
   $33 = ((($31)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($31)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($34|0)==($36|0);
   if ($37) {
    $38 = HEAP32[$31>>2]|0;
    $39 = ((($38)) + 36|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (FUNCTION_TABLE_ii[$40 & 1023]($31)|0);
    $$0$i$i$i$i15 = $41;
   } else {
    $42 = HEAP8[$34>>0]|0;
    $43 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($42)|0);
    $$0$i$i$i$i15 = $43;
   }
   $44 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $45 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15,$44)|0);
   if ($45) {
    HEAP32[$1>>2] = 0;
    $132 = 0;$158 = 1;$81 = 0;
   } else {
    $132 = $157;$158 = 0;$81 = $31;
   }
  }
  $46 = HEAP32[$2>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 19;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $53 = HEAP32[$46>>2]|0;
     $54 = ((($53)) + 36|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
     $$0$i$i2$i$i21 = $56;
    } else {
     $57 = HEAP8[$49>>0]|0;
     $58 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($57)|0);
     $$0$i$i2$i$i21 = $58;
    }
    $59 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $60 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21,$59)|0);
    if ($60) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($158) {
      $159 = $46;
      break;
     } else {
      $$2 = $$0;$140 = $46;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;$140 = 0;
    break;
   } else {
    $159 = 0;
   }
  }
  $61 = HEAP32[$11>>2]|0;
  $62 = HEAP8[$19>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = HEAP32[$30>>2]|0;
  $65 = $62&255;
  $66 = $63 ? $64 : $65;
  $67 = (($$0) + ($66)|0);
  $68 = ($61|0)==($67|0);
  if ($68) {
   $69 = $66 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$69,0);
   $70 = HEAP8[$19>>0]|0;
   $71 = ($70<<24>>24)<(0);
   if ($71) {
    $72 = HEAP32[$22>>2]|0;
    $73 = $72 & 2147483647;
    $phitmp$i28 = (($73) + -1)|0;
    $74 = $phitmp$i28;
   } else {
    $74 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$74,0);
   $75 = HEAP8[$19>>0]|0;
   $76 = ($75<<24>>24)<(0);
   $77 = HEAP32[$10>>2]|0;
   $78 = $76 ? $77 : $10;
   $79 = (($78) + ($66)|0);
   HEAP32[$11>>2] = $79;
   $$1 = $78;
  } else {
   $$1 = $$0;
  }
  $80 = ((($81)) + 12|0);
  $82 = HEAP32[$80>>2]|0;
  $83 = ((($81)) + 16|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($82|0)==($84|0);
  if ($85) {
   $86 = HEAP32[$81>>2]|0;
   $87 = ((($86)) + 36|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = (FUNCTION_TABLE_ii[$88 & 1023]($81)|0);
   $$0$i$i31 = $89;
  } else {
   $90 = HEAP8[$82>>0]|0;
   $91 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($90)|0);
   $$0$i$i31 = $91;
  }
  $92 = $$0$i$i31&255;
  $93 = HEAP8[$7>>0]|0;
  $94 = HEAP8[$8>>0]|0;
  $95 = (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$15,$16,$$1,$11,$93,$94,$9,$12,$13,$14,$6)|0);
  $96 = ($95|0)==(0);
  if (!($96)) {
   $$2 = $$1;$140 = $159;
   break;
  }
  $97 = HEAP32[$80>>2]|0;
  $98 = HEAP32[$83>>2]|0;
  $99 = ($97|0)==($98|0);
  if ($99) {
   $100 = HEAP32[$81>>2]|0;
   $101 = ((($100)) + 40|0);
   $102 = HEAP32[$101>>2]|0;
   (FUNCTION_TABLE_ii[$102 & 1023]($81)|0);
  } else {
   $103 = ((($97)) + 1|0);
   HEAP32[$80>>2] = $103;
   $104 = HEAP8[$97>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($104)|0);
  }
  $$0 = $$1;$157 = $132;$31 = $81;
 }
 $105 = ((($9)) + 11|0);
 $106 = HEAP8[$105>>0]|0;
 $107 = ($106<<24>>24)<(0);
 $108 = ((($9)) + 4|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $106&255;
 $111 = $107 ? $109 : $110;
 $112 = ($111|0)==(0);
 $113 = HEAP8[$15>>0]|0;
 $114 = ($113<<24>>24)==(0);
 $or$cond = $112 | $114;
 if (!($or$cond)) {
  $115 = HEAP32[$13>>2]|0;
  $116 = $115;
  $117 = $12;
  $118 = (($116) - ($117))|0;
  $119 = ($118|0)<(160);
  if ($119) {
   $120 = HEAP32[$14>>2]|0;
   $121 = ((($115)) + 4|0);
   HEAP32[$13>>2] = $121;
   HEAP32[$115>>2] = $120;
  }
 }
 $122 = HEAP32[$11>>2]|0;
 $123 = (+__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2,$122,$4));
 HEAPF64[$5>>3] = $123;
 $124 = HEAP32[$13>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9,$12,$124,$4);
 $125 = ($81|0)==(0|0);
 if ($125) {
  $160 = 1;
 } else {
  $126 = ((($81)) + 12|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ((($81)) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = ($127|0)==($129|0);
  if ($130) {
   $131 = HEAP32[$132>>2]|0;
   $133 = ((($131)) + 36|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($81)|0);
   $$0$i$i$i$i = $135;
  } else {
   $136 = HEAP8[$127>>0]|0;
   $137 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($136)|0);
   $$0$i$i$i$i = $137;
  }
  $138 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $139 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$138)|0);
  if ($139) {
   HEAP32[$1>>2] = 0;
   $160 = 1;
  } else {
   $160 = 0;
  }
 }
 $141 = ($140|0)==(0|0);
 do {
  if ($141) {
   label = 48;
  } else {
   $142 = ((($140)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($140)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$140>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 1023]($140)|0);
    $$0$i$i2$i$i = $150;
   } else {
    $151 = HEAP8[$143>>0]|0;
    $152 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($151)|0);
    $$0$i$i2$i$i = $152;
   }
   $153 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $154 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$153)|0);
   if ($154) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($160) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($160) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $155 = HEAP32[$4>>2]|0;
  $156 = $155 | 2;
  HEAP32[$4>>2] = $156;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 __ZNKSt3__28ios_base6getlocEv($5,$1);
 $6 = (__ZNKSt3__26locale9use_facetERNS0_2idE($5,36724)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 (FUNCTION_TABLE_iiiii[$9 & 511]($6,5648,(5680),$2)|0);
 $10 = (__ZNKSt3__26locale9use_facetERNS0_2idE($5,36740)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 1023]($10)|0);
 HEAP8[$3>>0] = $14;
 $15 = HEAP32[$10>>2]|0;
 $16 = ((($15)) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (FUNCTION_TABLE_ii[$17 & 1023]($10)|0);
 HEAP8[$4>>0] = $18;
 $19 = HEAP32[$10>>2]|0;
 $20 = ((($19)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_vii[$21 & 1023]($0,$10);
 __ZNSt3__26localeD2Ev($5);
 STACKTOP = sp;return;
}
function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $$0$i$add = 0, $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $12 = ($0<<24>>24)==($5<<24>>24);
 L1: do {
  if ($12) {
   $13 = HEAP8[$1>>0]|0;
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $$2 = -1;
   } else {
    HEAP8[$1>>0] = 0;
    $15 = HEAP32[$4>>2]|0;
    $16 = ((($15)) + 1|0);
    HEAP32[$4>>2] = $16;
    HEAP8[$15>>0] = 46;
    $17 = ((($7)) + 11|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = ($18<<24>>24)<(0);
    $20 = ((($7)) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $18&255;
    $23 = $19 ? $21 : $22;
    $24 = ($23|0)==(0);
    if ($24) {
     $$2 = 0;
    } else {
     $25 = HEAP32[$9>>2]|0;
     $26 = $25;
     $27 = $8;
     $28 = (($26) - ($27))|0;
     $29 = ($28|0)<(160);
     if ($29) {
      $30 = HEAP32[$10>>2]|0;
      $31 = ((($25)) + 4|0);
      HEAP32[$9>>2] = $31;
      HEAP32[$25>>2] = $30;
      $$2 = 0;
     } else {
      $$2 = 0;
     }
    }
   }
  } else {
   $32 = ($0<<24>>24)==($6<<24>>24);
   if ($32) {
    $33 = ((($7)) + 11|0);
    $34 = HEAP8[$33>>0]|0;
    $35 = ($34<<24>>24)<(0);
    $36 = ((($7)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = $34&255;
    $39 = $35 ? $37 : $38;
    $40 = ($39|0)==(0);
    if (!($40)) {
     $41 = HEAP8[$1>>0]|0;
     $42 = ($41<<24>>24)==(0);
     if ($42) {
      $$2 = -1;
      break;
     }
     $43 = HEAP32[$9>>2]|0;
     $44 = $43;
     $45 = $8;
     $46 = (($44) - ($45))|0;
     $47 = ($46|0)<(160);
     if (!($47)) {
      $$2 = 0;
      break;
     }
     $48 = HEAP32[$10>>2]|0;
     $49 = ((($43)) + 4|0);
     HEAP32[$9>>2] = $49;
     HEAP32[$43>>2] = $48;
     HEAP32[$10>>2] = 0;
     $$2 = 0;
     break;
    }
   }
   $50 = ((($11)) + 32|0);
   $$0$i$idx = 0;
   while(1) {
    $$0$i$ptr = (($11) + ($$0$i$idx)|0);
    $51 = ($$0$i$idx|0)==(32);
    if ($51) {
     $$0$lcssa$i = $50;
     break;
    }
    $52 = HEAP8[$$0$i$ptr>>0]|0;
    $53 = ($52<<24>>24)==($0<<24>>24);
    $$0$i$add = (($$0$i$idx) + 1)|0;
    if ($53) {
     $$0$lcssa$i = $$0$i$ptr;
     break;
    } else {
     $$0$i$idx = $$0$i$add;
    }
   }
   $54 = $$0$lcssa$i;
   $55 = $11;
   $56 = (($54) - ($55))|0;
   $57 = ($56|0)>(31);
   if ($57) {
    $$2 = -1;
   } else {
    $58 = (5648 + ($56)|0);
    $59 = HEAP8[$58>>0]|0;
    switch ($56|0) {
    case 24: case 25:  {
     $60 = HEAP32[$4>>2]|0;
     $61 = ($60|0)==($3|0);
     if (!($61)) {
      $62 = ((($60)) + -1|0);
      $63 = HEAP8[$62>>0]|0;
      $64 = $63 & 95;
      $65 = HEAP8[$2>>0]|0;
      $66 = $65 & 127;
      $67 = ($64<<24>>24)==($66<<24>>24);
      if (!($67)) {
       $$2 = -1;
       break L1;
      }
     }
     $68 = ((($60)) + 1|0);
     HEAP32[$4>>2] = $68;
     HEAP8[$60>>0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
    case 23: case 22:  {
     HEAP8[$2>>0] = 80;
     $69 = HEAP32[$4>>2]|0;
     $70 = ((($69)) + 1|0);
     HEAP32[$4>>2] = $70;
     HEAP8[$69>>0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
    default: {
     $71 = $59 & 95;
     $72 = $71&255;
     $73 = HEAP8[$2>>0]|0;
     $74 = $73 << 24 >> 24;
     $75 = ($72|0)==($74|0);
     if ($75) {
      $76 = $72 | 128;
      $77 = $76&255;
      HEAP8[$2>>0] = $77;
      $78 = HEAP8[$1>>0]|0;
      $79 = ($78<<24>>24)==(0);
      if (!($79)) {
       HEAP8[$1>>0] = 0;
       $80 = ((($7)) + 11|0);
       $81 = HEAP8[$80>>0]|0;
       $82 = ($81<<24>>24)<(0);
       $83 = ((($7)) + 4|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = $81&255;
       $86 = $82 ? $84 : $85;
       $87 = ($86|0)==(0);
       if (!($87)) {
        $88 = HEAP32[$9>>2]|0;
        $89 = $88;
        $90 = $8;
        $91 = (($89) - ($90))|0;
        $92 = ($91|0)<(160);
        if ($92) {
         $93 = HEAP32[$10>>2]|0;
         $94 = ((($88)) + 4|0);
         HEAP32[$9>>2] = $94;
         HEAP32[$88>>2] = $93;
        }
       }
      }
     }
     $95 = HEAP32[$4>>2]|0;
     $96 = ((($95)) + 1|0);
     HEAP32[$4>>2] = $96;
     HEAP8[$95>>0] = $59;
     $97 = ($56|0)>(21);
     if ($97) {
      $$2 = 0;
      break L1;
     }
     $98 = HEAP32[$10>>2]|0;
     $99 = (($98) + 1)|0;
     HEAP32[$10>>2] = $99;
     $$2 = 0;
     break L1;
    }
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($0|0)==($1|0);
 if ($4) {
  HEAP32[$2>>2] = 4;
  $$1 = 0.0;
 } else {
  $5 = (___errno_location()|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (___errno_location()|0);
  HEAP32[$7>>2] = 0;
  $8 = (__ZNSt3__26__clocEv()|0);
  $9 = (+_strtold_l($0,$3,$8));
  $10 = (___errno_location()|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = (___errno_location()|0);
   HEAP32[$13>>2] = $6;
  }
  $14 = HEAP32[$3>>2]|0;
  $15 = ($14|0)==($1|0);
  if ($15) {
   $16 = ($11|0)==(34);
   if ($16) {
    $$0$ph = $9;
    label = 6;
   } else {
    $$0 = $9;
   }
  } else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label|0) == 6) {
   HEAP32[$2>>2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return (+$$1);
}
function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i$i = 0, $$029 = 0, $$030 = 0, $$07$i$i = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre40 = 0, $$pre41 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond32 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 11|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)<(0);
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $5&255;
 $10 = $6 ? $8 : $9;
 $11 = ($10|0)==(0);
 do {
  if (!($11)) {
   $12 = ($1|0)==($2|0);
   if ($12) {
    $$pre$phiZ2D = $9;$18 = $5;$22 = $8;
   } else {
    $$0$i$i = $2;$$07$i$i = $1;
    while(1) {
     $13 = ((($$0$i$i)) + -4|0);
     $14 = ($$07$i$i>>>0)<($13>>>0);
     if (!($14)) {
      break;
     }
     $15 = HEAP32[$$07$i$i>>2]|0;
     $16 = HEAP32[$13>>2]|0;
     HEAP32[$$07$i$i>>2] = $16;
     HEAP32[$13>>2] = $15;
     $17 = ((($$07$i$i)) + 4|0);
     $$0$i$i = $13;$$07$i$i = $17;
    }
    $$pre = HEAP8[$4>>0]|0;
    $$pre40 = HEAP32[$7>>2]|0;
    $$pre41 = $$pre&255;
    $$pre$phiZ2D = $$pre41;$18 = $$pre;$22 = $$pre40;
   }
   $19 = ($18<<24>>24)<(0);
   $20 = HEAP32[$0>>2]|0;
   $21 = $19 ? $20 : $0;
   $23 = $19 ? $22 : $$pre$phiZ2D;
   $24 = (($21) + ($23)|0);
   $25 = ((($2)) + -4|0);
   $26 = $24;
   $$029 = $1;$$030 = $21;
   while(1) {
    $27 = ($$029>>>0)<($25>>>0);
    $28 = HEAP8[$$030>>0]|0;
    $29 = ($28<<24>>24)>(0);
    $30 = ($28<<24>>24)!=(127);
    $or$cond32 = $29 & $30;
    if (!($27)) {
     break;
    }
    if ($or$cond32) {
     $31 = $28 << 24 >> 24;
     $32 = HEAP32[$$029>>2]|0;
     $33 = ($32|0)==($31|0);
     if (!($33)) {
      label = 11;
      break;
     }
    }
    $34 = $$030;
    $35 = (($26) - ($34))|0;
    $36 = ($35|0)>(1);
    $37 = ((($$030)) + 1|0);
    $spec$select = $36 ? $37 : $$030;
    $38 = ((($$029)) + 4|0);
    $$029 = $38;$$030 = $spec$select;
   }
   if ((label|0) == 11) {
    HEAP32[$3>>2] = 4;
    break;
   }
   if ($or$cond32) {
    $39 = $28 << 24 >> 24;
    $40 = HEAP32[$25>>2]|0;
    $41 = (($40) + -1)|0;
    $42 = ($41>>>0)<($39>>>0);
    if (!($42)) {
     HEAP32[$3>>2] = 4;
    }
   }
  }
 } while(0);
 return;
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 160|0;
 $7 = sp + 231|0;
 $8 = sp + 230|0;
 $9 = sp + 216|0;
 $10 = sp + 204|0;
 $11 = sp + 200|0;
 $12 = sp;
 $13 = sp + 196|0;
 $14 = sp + 192|0;
 $15 = sp + 229|0;
 $16 = sp + 228|0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9,$3,$6,$7,$8);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($10)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($10)) + 8|0);
 if ($21) {
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 2147483647;
  $phitmp$i = (($24) + -1)|0;
  $25 = $phitmp$i;
 } else {
  $25 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$25,0);
 $26 = HEAP8[$19>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$10>>2]|0;
 $29 = $27 ? $28 : $10;
 HEAP32[$11>>2] = $29;
 HEAP32[$13>>2] = $12;
 HEAP32[$14>>2] = 0;
 HEAP8[$15>>0] = 1;
 HEAP8[$16>>0] = 69;
 $30 = ((($10)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $29;$157 = $$pre;$31 = $$pre;
 L8: while(1) {
  $32 = ($31|0)==(0|0);
  if ($32) {
   $132 = 0;$158 = 1;$81 = 0;
  } else {
   $33 = ((($31)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($31)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($34|0)==($36|0);
   if ($37) {
    $38 = HEAP32[$31>>2]|0;
    $39 = ((($38)) + 36|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (FUNCTION_TABLE_ii[$40 & 1023]($31)|0);
    $$0$i$i$i$i15 = $41;
   } else {
    $42 = HEAP8[$34>>0]|0;
    $43 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($42)|0);
    $$0$i$i$i$i15 = $43;
   }
   $44 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $45 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15,$44)|0);
   if ($45) {
    HEAP32[$1>>2] = 0;
    $132 = 0;$158 = 1;$81 = 0;
   } else {
    $132 = $157;$158 = 0;$81 = $31;
   }
  }
  $46 = HEAP32[$2>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 19;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $53 = HEAP32[$46>>2]|0;
     $54 = ((($53)) + 36|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
     $$0$i$i2$i$i21 = $56;
    } else {
     $57 = HEAP8[$49>>0]|0;
     $58 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($57)|0);
     $$0$i$i2$i$i21 = $58;
    }
    $59 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $60 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21,$59)|0);
    if ($60) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($158) {
      $159 = $46;
      break;
     } else {
      $$2 = $$0;$140 = $46;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;$140 = 0;
    break;
   } else {
    $159 = 0;
   }
  }
  $61 = HEAP32[$11>>2]|0;
  $62 = HEAP8[$19>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = HEAP32[$30>>2]|0;
  $65 = $62&255;
  $66 = $63 ? $64 : $65;
  $67 = (($$0) + ($66)|0);
  $68 = ($61|0)==($67|0);
  if ($68) {
   $69 = $66 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$69,0);
   $70 = HEAP8[$19>>0]|0;
   $71 = ($70<<24>>24)<(0);
   if ($71) {
    $72 = HEAP32[$22>>2]|0;
    $73 = $72 & 2147483647;
    $phitmp$i28 = (($73) + -1)|0;
    $74 = $phitmp$i28;
   } else {
    $74 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$74,0);
   $75 = HEAP8[$19>>0]|0;
   $76 = ($75<<24>>24)<(0);
   $77 = HEAP32[$10>>2]|0;
   $78 = $76 ? $77 : $10;
   $79 = (($78) + ($66)|0);
   HEAP32[$11>>2] = $79;
   $$1 = $78;
  } else {
   $$1 = $$0;
  }
  $80 = ((($81)) + 12|0);
  $82 = HEAP32[$80>>2]|0;
  $83 = ((($81)) + 16|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($82|0)==($84|0);
  if ($85) {
   $86 = HEAP32[$81>>2]|0;
   $87 = ((($86)) + 36|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = (FUNCTION_TABLE_ii[$88 & 1023]($81)|0);
   $$0$i$i31 = $89;
  } else {
   $90 = HEAP8[$82>>0]|0;
   $91 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($90)|0);
   $$0$i$i31 = $91;
  }
  $92 = $$0$i$i31&255;
  $93 = HEAP8[$7>>0]|0;
  $94 = HEAP8[$8>>0]|0;
  $95 = (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$15,$16,$$1,$11,$93,$94,$9,$12,$13,$14,$6)|0);
  $96 = ($95|0)==(0);
  if (!($96)) {
   $$2 = $$1;$140 = $159;
   break;
  }
  $97 = HEAP32[$80>>2]|0;
  $98 = HEAP32[$83>>2]|0;
  $99 = ($97|0)==($98|0);
  if ($99) {
   $100 = HEAP32[$81>>2]|0;
   $101 = ((($100)) + 40|0);
   $102 = HEAP32[$101>>2]|0;
   (FUNCTION_TABLE_ii[$102 & 1023]($81)|0);
  } else {
   $103 = ((($97)) + 1|0);
   HEAP32[$80>>2] = $103;
   $104 = HEAP8[$97>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($104)|0);
  }
  $$0 = $$1;$157 = $132;$31 = $81;
 }
 $105 = ((($9)) + 11|0);
 $106 = HEAP8[$105>>0]|0;
 $107 = ($106<<24>>24)<(0);
 $108 = ((($9)) + 4|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $106&255;
 $111 = $107 ? $109 : $110;
 $112 = ($111|0)==(0);
 $113 = HEAP8[$15>>0]|0;
 $114 = ($113<<24>>24)==(0);
 $or$cond = $112 | $114;
 if (!($or$cond)) {
  $115 = HEAP32[$13>>2]|0;
  $116 = $115;
  $117 = $12;
  $118 = (($116) - ($117))|0;
  $119 = ($118|0)<(160);
  if ($119) {
   $120 = HEAP32[$14>>2]|0;
   $121 = ((($115)) + 4|0);
   HEAP32[$13>>2] = $121;
   HEAP32[$115>>2] = $120;
  }
 }
 $122 = HEAP32[$11>>2]|0;
 $123 = (+__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2,$122,$4));
 HEAPF64[$5>>3] = $123;
 $124 = HEAP32[$13>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9,$12,$124,$4);
 $125 = ($81|0)==(0|0);
 if ($125) {
  $160 = 1;
 } else {
  $126 = ((($81)) + 12|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ((($81)) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = ($127|0)==($129|0);
  if ($130) {
   $131 = HEAP32[$132>>2]|0;
   $133 = ((($131)) + 36|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($81)|0);
   $$0$i$i$i$i = $135;
  } else {
   $136 = HEAP8[$127>>0]|0;
   $137 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($136)|0);
   $$0$i$i$i$i = $137;
  }
  $138 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $139 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$138)|0);
  if ($139) {
   HEAP32[$1>>2] = 0;
   $160 = 1;
  } else {
   $160 = 0;
  }
 }
 $141 = ($140|0)==(0|0);
 do {
  if ($141) {
   label = 48;
  } else {
   $142 = ((($140)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($140)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$140>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 1023]($140)|0);
    $$0$i$i2$i$i = $150;
   } else {
    $151 = HEAP8[$143>>0]|0;
    $152 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($151)|0);
    $$0$i$i2$i$i = $152;
   }
   $153 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $154 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$153)|0);
   if ($154) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($160) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($160) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $155 = HEAP32[$4>>2]|0;
  $156 = $155 | 2;
  HEAP32[$4>>2] = $156;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($0|0)==($1|0);
 if ($4) {
  HEAP32[$2>>2] = 4;
  $$1 = 0.0;
 } else {
  $5 = (___errno_location()|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (___errno_location()|0);
  HEAP32[$7>>2] = 0;
  $8 = (__ZNSt3__26__clocEv()|0);
  $9 = (+_strtod_l($0,$3,$8));
  $10 = (___errno_location()|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = (___errno_location()|0);
   HEAP32[$13>>2] = $6;
  }
  $14 = HEAP32[$3>>2]|0;
  $15 = ($14|0)==($1|0);
  if ($15) {
   $16 = ($11|0)==(34);
   if ($16) {
    $$0$ph = $9;
    label = 6;
   } else {
    $$0 = $9;
   }
  } else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label|0) == 6) {
   HEAP32[$2>>2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return (+$$1);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 160|0;
 $7 = sp + 231|0;
 $8 = sp + 230|0;
 $9 = sp + 216|0;
 $10 = sp + 204|0;
 $11 = sp + 200|0;
 $12 = sp;
 $13 = sp + 196|0;
 $14 = sp + 192|0;
 $15 = sp + 229|0;
 $16 = sp + 228|0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9,$3,$6,$7,$8);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($10)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($10)) + 8|0);
 if ($21) {
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 2147483647;
  $phitmp$i = (($24) + -1)|0;
  $25 = $phitmp$i;
 } else {
  $25 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$25,0);
 $26 = HEAP8[$19>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$10>>2]|0;
 $29 = $27 ? $28 : $10;
 HEAP32[$11>>2] = $29;
 HEAP32[$13>>2] = $12;
 HEAP32[$14>>2] = 0;
 HEAP8[$15>>0] = 1;
 HEAP8[$16>>0] = 69;
 $30 = ((($10)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $29;$157 = $$pre;$31 = $$pre;
 L8: while(1) {
  $32 = ($31|0)==(0|0);
  if ($32) {
   $132 = 0;$158 = 1;$81 = 0;
  } else {
   $33 = ((($31)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($31)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($34|0)==($36|0);
   if ($37) {
    $38 = HEAP32[$31>>2]|0;
    $39 = ((($38)) + 36|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (FUNCTION_TABLE_ii[$40 & 1023]($31)|0);
    $$0$i$i$i$i15 = $41;
   } else {
    $42 = HEAP8[$34>>0]|0;
    $43 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($42)|0);
    $$0$i$i$i$i15 = $43;
   }
   $44 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $45 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15,$44)|0);
   if ($45) {
    HEAP32[$1>>2] = 0;
    $132 = 0;$158 = 1;$81 = 0;
   } else {
    $132 = $157;$158 = 0;$81 = $31;
   }
  }
  $46 = HEAP32[$2>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 19;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $53 = HEAP32[$46>>2]|0;
     $54 = ((($53)) + 36|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
     $$0$i$i2$i$i21 = $56;
    } else {
     $57 = HEAP8[$49>>0]|0;
     $58 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($57)|0);
     $$0$i$i2$i$i21 = $58;
    }
    $59 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $60 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21,$59)|0);
    if ($60) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($158) {
      $159 = $46;
      break;
     } else {
      $$2 = $$0;$140 = $46;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;$140 = 0;
    break;
   } else {
    $159 = 0;
   }
  }
  $61 = HEAP32[$11>>2]|0;
  $62 = HEAP8[$19>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = HEAP32[$30>>2]|0;
  $65 = $62&255;
  $66 = $63 ? $64 : $65;
  $67 = (($$0) + ($66)|0);
  $68 = ($61|0)==($67|0);
  if ($68) {
   $69 = $66 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$69,0);
   $70 = HEAP8[$19>>0]|0;
   $71 = ($70<<24>>24)<(0);
   if ($71) {
    $72 = HEAP32[$22>>2]|0;
    $73 = $72 & 2147483647;
    $phitmp$i28 = (($73) + -1)|0;
    $74 = $phitmp$i28;
   } else {
    $74 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$74,0);
   $75 = HEAP8[$19>>0]|0;
   $76 = ($75<<24>>24)<(0);
   $77 = HEAP32[$10>>2]|0;
   $78 = $76 ? $77 : $10;
   $79 = (($78) + ($66)|0);
   HEAP32[$11>>2] = $79;
   $$1 = $78;
  } else {
   $$1 = $$0;
  }
  $80 = ((($81)) + 12|0);
  $82 = HEAP32[$80>>2]|0;
  $83 = ((($81)) + 16|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($82|0)==($84|0);
  if ($85) {
   $86 = HEAP32[$81>>2]|0;
   $87 = ((($86)) + 36|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = (FUNCTION_TABLE_ii[$88 & 1023]($81)|0);
   $$0$i$i31 = $89;
  } else {
   $90 = HEAP8[$82>>0]|0;
   $91 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($90)|0);
   $$0$i$i31 = $91;
  }
  $92 = $$0$i$i31&255;
  $93 = HEAP8[$7>>0]|0;
  $94 = HEAP8[$8>>0]|0;
  $95 = (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($92,$15,$16,$$1,$11,$93,$94,$9,$12,$13,$14,$6)|0);
  $96 = ($95|0)==(0);
  if (!($96)) {
   $$2 = $$1;$140 = $159;
   break;
  }
  $97 = HEAP32[$80>>2]|0;
  $98 = HEAP32[$83>>2]|0;
  $99 = ($97|0)==($98|0);
  if ($99) {
   $100 = HEAP32[$81>>2]|0;
   $101 = ((($100)) + 40|0);
   $102 = HEAP32[$101>>2]|0;
   (FUNCTION_TABLE_ii[$102 & 1023]($81)|0);
  } else {
   $103 = ((($97)) + 1|0);
   HEAP32[$80>>2] = $103;
   $104 = HEAP8[$97>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($104)|0);
  }
  $$0 = $$1;$157 = $132;$31 = $81;
 }
 $105 = ((($9)) + 11|0);
 $106 = HEAP8[$105>>0]|0;
 $107 = ($106<<24>>24)<(0);
 $108 = ((($9)) + 4|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $106&255;
 $111 = $107 ? $109 : $110;
 $112 = ($111|0)==(0);
 $113 = HEAP8[$15>>0]|0;
 $114 = ($113<<24>>24)==(0);
 $or$cond = $112 | $114;
 if (!($or$cond)) {
  $115 = HEAP32[$13>>2]|0;
  $116 = $115;
  $117 = $12;
  $118 = (($116) - ($117))|0;
  $119 = ($118|0)<(160);
  if ($119) {
   $120 = HEAP32[$14>>2]|0;
   $121 = ((($115)) + 4|0);
   HEAP32[$13>>2] = $121;
   HEAP32[$115>>2] = $120;
  }
 }
 $122 = HEAP32[$11>>2]|0;
 $123 = (+__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2,$122,$4));
 HEAPF32[$5>>2] = $123;
 $124 = HEAP32[$13>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9,$12,$124,$4);
 $125 = ($81|0)==(0|0);
 if ($125) {
  $160 = 1;
 } else {
  $126 = ((($81)) + 12|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ((($81)) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = ($127|0)==($129|0);
  if ($130) {
   $131 = HEAP32[$132>>2]|0;
   $133 = ((($131)) + 36|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($81)|0);
   $$0$i$i$i$i = $135;
  } else {
   $136 = HEAP8[$127>>0]|0;
   $137 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($136)|0);
   $$0$i$i$i$i = $137;
  }
  $138 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $139 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$138)|0);
  if ($139) {
   HEAP32[$1>>2] = 0;
   $160 = 1;
  } else {
   $160 = 0;
  }
 }
 $141 = ($140|0)==(0|0);
 do {
  if ($141) {
   label = 48;
  } else {
   $142 = ((($140)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($140)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$140>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 1023]($140)|0);
    $$0$i$i2$i$i = $150;
   } else {
    $151 = HEAP8[$143>>0]|0;
    $152 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($151)|0);
    $$0$i$i2$i$i = $152;
   }
   $153 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $154 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$153)|0);
   if ($154) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($160) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($160) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $155 = HEAP32[$4>>2]|0;
  $156 = $155 | 2;
  HEAP32[$4>>2] = $156;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($0|0)==($1|0);
 if ($4) {
  HEAP32[$2>>2] = 4;
  $$1 = 0.0;
 } else {
  $5 = (___errno_location()|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (___errno_location()|0);
  HEAP32[$7>>2] = 0;
  $8 = (__ZNSt3__26__clocEv()|0);
  $9 = (+_strtof_l($0,$3,$8));
  $10 = (___errno_location()|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $13 = (___errno_location()|0);
   HEAP32[$13>>2] = $6;
  }
  $14 = HEAP32[$3>>2]|0;
  $15 = ($14|0)==($1|0);
  if ($15) {
   $16 = ($11|0)==(34);
   if ($16) {
    $$0$ph = $9;
    label = 6;
   } else {
    $$0 = $9;
   }
  } else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label|0) == 6) {
   HEAP32[$2>>2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return (+$$1);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 224|0;
 $7 = sp + 160|0;
 $8 = sp + 212|0;
 $9 = sp + 200|0;
 $10 = sp + 196|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$3,$7)|0);
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$158 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $133 = 0;$159 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP8[$33>>0]|0;
    $42 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $133 = 0;$159 = 1;$80 = 0;
   } else {
    $133 = $158;$159 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP8[$48>>0]|0;
     $57 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($159) {
      $160 = $45;
      break;
     } else {
      $$2 = $$0;$141 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($159) {
    $$2 = $$0;$141 = 0;
    break;
   } else {
    $160 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP8[$81>>0]|0;
   $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = $$0$i$i41&255;
  $92 = HEAP8[$6>>0]|0;
  $93 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($91,$14,$$1,$10,$13,$92,$8,$11,$12,$15)|0);
  $94 = ($93|0)==(0);
  if (!($94)) {
   $$2 = $$1;$141 = $160;
   break;
  }
  $95 = HEAP32[$79>>2]|0;
  $96 = HEAP32[$82>>2]|0;
  $97 = ($95|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$80>>2]|0;
   $99 = ((($98)) + 40|0);
   $100 = HEAP32[$99>>2]|0;
   (FUNCTION_TABLE_ii[$100 & 1023]($80)|0);
  } else {
   $101 = ((($95)) + 1|0);
   HEAP32[$79>>2] = $101;
   $102 = HEAP8[$95>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
  }
  $$0 = $$1;$158 = $133;$30 = $80;
 }
 $103 = ((($8)) + 11|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = ($104<<24>>24)<(0);
 $106 = ((($8)) + 4|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = $104&255;
 $109 = $105 ? $107 : $108;
 $110 = ($109|0)==(0);
 if (!($110)) {
  $111 = HEAP32[$12>>2]|0;
  $112 = $111;
  $113 = $11;
  $114 = (($112) - ($113))|0;
  $115 = ($114|0)<(160);
  if ($115) {
   $116 = HEAP32[$13>>2]|0;
   $117 = ((($111)) + 4|0);
   HEAP32[$12>>2] = $117;
   HEAP32[$111>>2] = $116;
  }
 }
 $118 = HEAP32[$10>>2]|0;
 $119 = (__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2,$118,$4,$14)|0);
 $120 = (getTempRet0() | 0);
 $121 = $5;
 $122 = $121;
 HEAP32[$122>>2] = $119;
 $123 = (($121) + 4)|0;
 $124 = $123;
 HEAP32[$124>>2] = $120;
 $125 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$125,$4);
 $126 = ($80|0)==(0|0);
 if ($126) {
  $161 = 1;
 } else {
  $127 = ((($80)) + 12|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ((($80)) + 16|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = ($128|0)==($130|0);
  if ($131) {
   $132 = HEAP32[$133>>2]|0;
   $134 = ((($132)) + 36|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = (FUNCTION_TABLE_ii[$135 & 1023]($80)|0);
   $$0$i$i$i$i = $136;
  } else {
   $137 = HEAP8[$128>>0]|0;
   $138 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($137)|0);
   $$0$i$i$i$i = $138;
  }
  $139 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $140 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$139)|0);
  if ($140) {
   HEAP32[$1>>2] = 0;
   $161 = 1;
  } else {
   $161 = 0;
  }
 }
 $142 = ($141|0)==(0|0);
 do {
  if ($142) {
   label = 48;
  } else {
   $143 = ((($141)) + 12|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ((($141)) + 16|0);
   $146 = HEAP32[$145>>2]|0;
   $147 = ($144|0)==($146|0);
   if ($147) {
    $148 = HEAP32[$141>>2]|0;
    $149 = ((($148)) + 36|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = (FUNCTION_TABLE_ii[$150 & 1023]($141)|0);
    $$0$i$i2$i$i = $151;
   } else {
    $152 = HEAP8[$144>>0]|0;
    $153 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($152)|0);
    $$0$i$i2$i$i = $153;
   }
   $154 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $155 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$154)|0);
   if ($155) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($161) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($161) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $156 = HEAP32[$4>>2]|0;
  $157 = $156 | 2;
  HEAP32[$4>>2] = $157;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 74;
 $trunc = $3&255;
 $trunc$clear = $trunc & 127;
 switch ($trunc$clear<<24>>24) {
 case 64:  {
  $$0 = 8;
  break;
 }
 case 8:  {
  $$0 = 16;
  break;
 }
 case 0:  {
  $$0 = 0;
  break;
 }
 default: {
  $$0 = 10;
 }
 }
 return ($$0|0);
}
function __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc($0,$1,$2)|0);
 return ($3|0);
}
function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNKSt3__28ios_base6getlocEv($3,$1);
 $4 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,36740)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($4)|0);
 HEAP8[$2>>0] = $8;
 $9 = HEAP32[$4>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 1023]($0,$4);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$029 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==($1|0);
 do {
  if ($5) {
   HEAP32[$2>>2] = 4;
   $27 = 0;$28 = 0;
  } else {
   $6 = HEAP8[$0>>0]|0;
   $7 = ($6<<24>>24)==(45);
   if ($7) {
    $8 = ((($0)) + 1|0);
    $9 = ($8|0)==($1|0);
    if ($9) {
     HEAP32[$2>>2] = 4;
     $27 = 0;$28 = 0;
     break;
    } else {
     $$029 = $8;
    }
   } else {
    $$029 = $0;
   }
   $10 = (___errno_location()|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (___errno_location()|0);
   HEAP32[$12>>2] = 0;
   $13 = (__ZNSt3__26__clocEv()|0);
   $14 = (_strtoull_l($$029,$4,$3,$13)|0);
   $15 = (getTempRet0() | 0);
   $16 = (___errno_location()|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = (___errno_location()|0);
    HEAP32[$19>>2] = $11;
   }
   $20 = HEAP32[$4>>2]|0;
   $21 = ($20|0)==($1|0);
   do {
    if ($21) {
     $22 = ($17|0)==(34);
     if ($22) {
      HEAP32[$2>>2] = 4;
      $29 = -1;$30 = -1;
      break;
     } else {
      $23 = (_i64Subtract(0,0,($14|0),($15|0))|0);
      $24 = (getTempRet0() | 0);
      $25 = $7 ? $23 : $14;
      $26 = $7 ? $24 : $15;
      $29 = $25;$30 = $26;
      break;
     }
    } else {
     HEAP32[$2>>2] = 4;
     $29 = 0;$30 = 0;
    }
   } while(0);
   $27 = $30;$28 = $29;
  }
 } while(0);
 setTempRet0(($27) | 0);
 STACKTOP = sp;return ($28|0);
}
function __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (5648|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 224|0;
 $7 = sp + 160|0;
 $8 = sp + 212|0;
 $9 = sp + 200|0;
 $10 = sp + 196|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$3,$7)|0);
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$153 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $128 = 0;$154 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP8[$33>>0]|0;
    $42 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $128 = 0;$154 = 1;$80 = 0;
   } else {
    $128 = $153;$154 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP8[$48>>0]|0;
     $57 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($154) {
      $155 = $45;
      break;
     } else {
      $$2 = $$0;$136 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;$136 = 0;
    break;
   } else {
    $155 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP8[$81>>0]|0;
   $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = $$0$i$i41&255;
  $92 = HEAP8[$6>>0]|0;
  $93 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($91,$14,$$1,$10,$13,$92,$8,$11,$12,$15)|0);
  $94 = ($93|0)==(0);
  if (!($94)) {
   $$2 = $$1;$136 = $155;
   break;
  }
  $95 = HEAP32[$79>>2]|0;
  $96 = HEAP32[$82>>2]|0;
  $97 = ($95|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$80>>2]|0;
   $99 = ((($98)) + 40|0);
   $100 = HEAP32[$99>>2]|0;
   (FUNCTION_TABLE_ii[$100 & 1023]($80)|0);
  } else {
   $101 = ((($95)) + 1|0);
   HEAP32[$79>>2] = $101;
   $102 = HEAP8[$95>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
  }
  $$0 = $$1;$153 = $128;$30 = $80;
 }
 $103 = ((($8)) + 11|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = ($104<<24>>24)<(0);
 $106 = ((($8)) + 4|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = $104&255;
 $109 = $105 ? $107 : $108;
 $110 = ($109|0)==(0);
 if (!($110)) {
  $111 = HEAP32[$12>>2]|0;
  $112 = $111;
  $113 = $11;
  $114 = (($112) - ($113))|0;
  $115 = ($114|0)<(160);
  if ($115) {
   $116 = HEAP32[$13>>2]|0;
   $117 = ((($111)) + 4|0);
   HEAP32[$12>>2] = $117;
   HEAP32[$111>>2] = $116;
  }
 }
 $118 = HEAP32[$10>>2]|0;
 $119 = (__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2,$118,$4,$14)|0);
 HEAP32[$5>>2] = $119;
 $120 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$120,$4);
 $121 = ($80|0)==(0|0);
 if ($121) {
  $156 = 1;
 } else {
  $122 = ((($80)) + 12|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = ((($80)) + 16|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)==($125|0);
  if ($126) {
   $127 = HEAP32[$128>>2]|0;
   $129 = ((($127)) + 36|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 1023]($80)|0);
   $$0$i$i$i$i = $131;
  } else {
   $132 = HEAP8[$123>>0]|0;
   $133 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($132)|0);
   $$0$i$i$i$i = $133;
  }
  $134 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $135 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$134)|0);
  if ($135) {
   HEAP32[$1>>2] = 0;
   $156 = 1;
  } else {
   $156 = 0;
  }
 }
 $137 = ($136|0)==(0|0);
 do {
  if ($137) {
   label = 48;
  } else {
   $138 = ((($136)) + 12|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = ((($136)) + 16|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = ($139|0)==($141|0);
   if ($142) {
    $143 = HEAP32[$136>>2]|0;
    $144 = ((($143)) + 36|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = (FUNCTION_TABLE_ii[$145 & 1023]($136)|0);
    $$0$i$i2$i$i = $146;
   } else {
    $147 = HEAP8[$139>>0]|0;
    $148 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($147)|0);
    $$0$i$i2$i$i = $148;
   }
   $149 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $150 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$149)|0);
   if ($150) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($156) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($156) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $151 = HEAP32[$4>>2]|0;
  $152 = $151 | 2;
  HEAP32[$4>>2] = $152;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$028 = 0, $$029 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==($1|0);
 do {
  if ($5) {
   HEAP32[$2>>2] = 4;
   $$2 = 0;
  } else {
   $6 = HEAP8[$0>>0]|0;
   $7 = ($6<<24>>24)==(45);
   if ($7) {
    $8 = ((($0)) + 1|0);
    $9 = ($8|0)==($1|0);
    if ($9) {
     HEAP32[$2>>2] = 4;
     $$2 = 0;
     break;
    } else {
     $$029 = $8;
    }
   } else {
    $$029 = $0;
   }
   $10 = (___errno_location()|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (___errno_location()|0);
   HEAP32[$12>>2] = 0;
   $13 = (__ZNSt3__26__clocEv()|0);
   $14 = (_strtoull_l($$029,$4,$3,$13)|0);
   $15 = (getTempRet0() | 0);
   $16 = (___errno_location()|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = (___errno_location()|0);
    HEAP32[$19>>2] = $11;
   }
   $20 = HEAP32[$4>>2]|0;
   $21 = ($20|0)==($1|0);
   do {
    if ($21) {
     $22 = ($17|0)==(34);
     $23 = ($15>>>0)>(0);
     $24 = ($14>>>0)>(4294967295);
     $25 = ($15|0)==(0);
     $26 = $25 & $24;
     $27 = $23 | $26;
     $or$cond = $27 | $22;
     if ($or$cond) {
      HEAP32[$2>>2] = 4;
      $$028 = -1;
      break;
     } else {
      $28 = (0 - ($14))|0;
      $spec$select = $7 ? $28 : $14;
      $$028 = $spec$select;
      break;
     }
    } else {
     HEAP32[$2>>2] = 4;
     $$028 = 0;
    }
   } while(0);
   $$2 = $$028;
  }
 } while(0);
 STACKTOP = sp;return ($$2|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 224|0;
 $7 = sp + 160|0;
 $8 = sp + 212|0;
 $9 = sp + 200|0;
 $10 = sp + 196|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$3,$7)|0);
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$153 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $128 = 0;$154 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP8[$33>>0]|0;
    $42 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $128 = 0;$154 = 1;$80 = 0;
   } else {
    $128 = $153;$154 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP8[$48>>0]|0;
     $57 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($154) {
      $155 = $45;
      break;
     } else {
      $$2 = $$0;$136 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;$136 = 0;
    break;
   } else {
    $155 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP8[$81>>0]|0;
   $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = $$0$i$i41&255;
  $92 = HEAP8[$6>>0]|0;
  $93 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($91,$14,$$1,$10,$13,$92,$8,$11,$12,$15)|0);
  $94 = ($93|0)==(0);
  if (!($94)) {
   $$2 = $$1;$136 = $155;
   break;
  }
  $95 = HEAP32[$79>>2]|0;
  $96 = HEAP32[$82>>2]|0;
  $97 = ($95|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$80>>2]|0;
   $99 = ((($98)) + 40|0);
   $100 = HEAP32[$99>>2]|0;
   (FUNCTION_TABLE_ii[$100 & 1023]($80)|0);
  } else {
   $101 = ((($95)) + 1|0);
   HEAP32[$79>>2] = $101;
   $102 = HEAP8[$95>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
  }
  $$0 = $$1;$153 = $128;$30 = $80;
 }
 $103 = ((($8)) + 11|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = ($104<<24>>24)<(0);
 $106 = ((($8)) + 4|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = $104&255;
 $109 = $105 ? $107 : $108;
 $110 = ($109|0)==(0);
 if (!($110)) {
  $111 = HEAP32[$12>>2]|0;
  $112 = $111;
  $113 = $11;
  $114 = (($112) - ($113))|0;
  $115 = ($114|0)<(160);
  if ($115) {
   $116 = HEAP32[$13>>2]|0;
   $117 = ((($111)) + 4|0);
   HEAP32[$12>>2] = $117;
   HEAP32[$111>>2] = $116;
  }
 }
 $118 = HEAP32[$10>>2]|0;
 $119 = (__ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2,$118,$4,$14)|0);
 HEAP32[$5>>2] = $119;
 $120 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$120,$4);
 $121 = ($80|0)==(0|0);
 if ($121) {
  $156 = 1;
 } else {
  $122 = ((($80)) + 12|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = ((($80)) + 16|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)==($125|0);
  if ($126) {
   $127 = HEAP32[$128>>2]|0;
   $129 = ((($127)) + 36|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 1023]($80)|0);
   $$0$i$i$i$i = $131;
  } else {
   $132 = HEAP8[$123>>0]|0;
   $133 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($132)|0);
   $$0$i$i$i$i = $133;
  }
  $134 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $135 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$134)|0);
  if ($135) {
   HEAP32[$1>>2] = 0;
   $156 = 1;
  } else {
   $156 = 0;
  }
 }
 $137 = ($136|0)==(0|0);
 do {
  if ($137) {
   label = 48;
  } else {
   $138 = ((($136)) + 12|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = ((($136)) + 16|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = ($139|0)==($141|0);
   if ($142) {
    $143 = HEAP32[$136>>2]|0;
    $144 = ((($143)) + 36|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = (FUNCTION_TABLE_ii[$145 & 1023]($136)|0);
    $$0$i$i2$i$i = $146;
   } else {
    $147 = HEAP8[$139>>0]|0;
    $148 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($147)|0);
    $$0$i$i2$i$i = $148;
   }
   $149 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $150 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$149)|0);
   if ($150) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($156) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($156) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $151 = HEAP32[$4>>2]|0;
  $152 = $151 | 2;
  HEAP32[$4>>2] = $152;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$028 = 0, $$029 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==($1|0);
 do {
  if ($5) {
   HEAP32[$2>>2] = 4;
   $$2 = 0;
  } else {
   $6 = HEAP8[$0>>0]|0;
   $7 = ($6<<24>>24)==(45);
   if ($7) {
    $8 = ((($0)) + 1|0);
    $9 = ($8|0)==($1|0);
    if ($9) {
     HEAP32[$2>>2] = 4;
     $$2 = 0;
     break;
    } else {
     $$029 = $8;
    }
   } else {
    $$029 = $0;
   }
   $10 = (___errno_location()|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (___errno_location()|0);
   HEAP32[$12>>2] = 0;
   $13 = (__ZNSt3__26__clocEv()|0);
   $14 = (_strtoull_l($$029,$4,$3,$13)|0);
   $15 = (getTempRet0() | 0);
   $16 = (___errno_location()|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = (___errno_location()|0);
    HEAP32[$19>>2] = $11;
   }
   $20 = HEAP32[$4>>2]|0;
   $21 = ($20|0)==($1|0);
   do {
    if ($21) {
     $22 = ($17|0)==(34);
     $23 = ($15>>>0)>(0);
     $24 = ($14>>>0)>(4294967295);
     $25 = ($15|0)==(0);
     $26 = $25 & $24;
     $27 = $23 | $26;
     $or$cond = $27 | $22;
     if ($or$cond) {
      HEAP32[$2>>2] = 4;
      $$028 = -1;
      break;
     } else {
      $28 = (0 - ($14))|0;
      $spec$select = $7 ? $28 : $14;
      $$028 = $spec$select;
      break;
     }
    } else {
     HEAP32[$2>>2] = 4;
     $$028 = 0;
    }
   } while(0);
   $$2 = $$028;
  }
 } while(0);
 STACKTOP = sp;return ($$2|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 224|0;
 $7 = sp + 160|0;
 $8 = sp + 212|0;
 $9 = sp + 200|0;
 $10 = sp + 196|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$3,$7)|0);
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$153 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $128 = 0;$154 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP8[$33>>0]|0;
    $42 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $128 = 0;$154 = 1;$80 = 0;
   } else {
    $128 = $153;$154 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP8[$48>>0]|0;
     $57 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($154) {
      $155 = $45;
      break;
     } else {
      $$2 = $$0;$136 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;$136 = 0;
    break;
   } else {
    $155 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP8[$81>>0]|0;
   $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = $$0$i$i41&255;
  $92 = HEAP8[$6>>0]|0;
  $93 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($91,$14,$$1,$10,$13,$92,$8,$11,$12,$15)|0);
  $94 = ($93|0)==(0);
  if (!($94)) {
   $$2 = $$1;$136 = $155;
   break;
  }
  $95 = HEAP32[$79>>2]|0;
  $96 = HEAP32[$82>>2]|0;
  $97 = ($95|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$80>>2]|0;
   $99 = ((($98)) + 40|0);
   $100 = HEAP32[$99>>2]|0;
   (FUNCTION_TABLE_ii[$100 & 1023]($80)|0);
  } else {
   $101 = ((($95)) + 1|0);
   HEAP32[$79>>2] = $101;
   $102 = HEAP8[$95>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
  }
  $$0 = $$1;$153 = $128;$30 = $80;
 }
 $103 = ((($8)) + 11|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = ($104<<24>>24)<(0);
 $106 = ((($8)) + 4|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = $104&255;
 $109 = $105 ? $107 : $108;
 $110 = ($109|0)==(0);
 if (!($110)) {
  $111 = HEAP32[$12>>2]|0;
  $112 = $111;
  $113 = $11;
  $114 = (($112) - ($113))|0;
  $115 = ($114|0)<(160);
  if ($115) {
   $116 = HEAP32[$13>>2]|0;
   $117 = ((($111)) + 4|0);
   HEAP32[$12>>2] = $117;
   HEAP32[$111>>2] = $116;
  }
 }
 $118 = HEAP32[$10>>2]|0;
 $119 = (__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2,$118,$4,$14)|0);
 HEAP16[$5>>1] = $119;
 $120 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$120,$4);
 $121 = ($80|0)==(0|0);
 if ($121) {
  $156 = 1;
 } else {
  $122 = ((($80)) + 12|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = ((($80)) + 16|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)==($125|0);
  if ($126) {
   $127 = HEAP32[$128>>2]|0;
   $129 = ((($127)) + 36|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 1023]($80)|0);
   $$0$i$i$i$i = $131;
  } else {
   $132 = HEAP8[$123>>0]|0;
   $133 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($132)|0);
   $$0$i$i$i$i = $133;
  }
  $134 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $135 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$134)|0);
  if ($135) {
   HEAP32[$1>>2] = 0;
   $156 = 1;
  } else {
   $156 = 0;
  }
 }
 $137 = ($136|0)==(0|0);
 do {
  if ($137) {
   label = 48;
  } else {
   $138 = ((($136)) + 12|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = ((($136)) + 16|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = ($139|0)==($141|0);
   if ($142) {
    $143 = HEAP32[$136>>2]|0;
    $144 = ((($143)) + 36|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = (FUNCTION_TABLE_ii[$145 & 1023]($136)|0);
    $$0$i$i2$i$i = $146;
   } else {
    $147 = HEAP8[$139>>0]|0;
    $148 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($147)|0);
    $$0$i$i2$i$i = $148;
   }
   $149 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $150 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$149)|0);
   if ($150) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($156) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($156) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $151 = HEAP32[$4>>2]|0;
  $152 = $151 | 2;
  HEAP32[$4>>2] = $152;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$028 = 0, $$029 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==($1|0);
 do {
  if ($5) {
   HEAP32[$2>>2] = 4;
   $$2 = 0;
  } else {
   $6 = HEAP8[$0>>0]|0;
   $7 = ($6<<24>>24)==(45);
   if ($7) {
    $8 = ((($0)) + 1|0);
    $9 = ($8|0)==($1|0);
    if ($9) {
     HEAP32[$2>>2] = 4;
     $$2 = 0;
     break;
    } else {
     $$029 = $8;
    }
   } else {
    $$029 = $0;
   }
   $10 = (___errno_location()|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (___errno_location()|0);
   HEAP32[$12>>2] = 0;
   $13 = (__ZNSt3__26__clocEv()|0);
   $14 = (_strtoull_l($$029,$4,$3,$13)|0);
   $15 = (getTempRet0() | 0);
   $16 = (___errno_location()|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = (___errno_location()|0);
    HEAP32[$19>>2] = $11;
   }
   $20 = HEAP32[$4>>2]|0;
   $21 = ($20|0)==($1|0);
   do {
    if ($21) {
     $22 = ($17|0)==(34);
     $23 = ($15>>>0)>(0);
     $24 = ($14>>>0)>(65535);
     $25 = ($15|0)==(0);
     $26 = $25 & $24;
     $27 = $23 | $26;
     $or$cond = $27 | $22;
     if ($or$cond) {
      HEAP32[$2>>2] = 4;
      $$028 = -1;
      break;
     }
     $28 = $14&65535;
     if ($7) {
      $29 = (0 - ($14))|0;
      $30 = $29&65535;
      $$028 = $30;
     } else {
      $$028 = $28;
     }
    } else {
     HEAP32[$2>>2] = 4;
     $$028 = 0;
    }
   } while(0);
   $$2 = $$028;
  }
 } while(0);
 STACKTOP = sp;return ($$2|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 224|0;
 $7 = sp + 160|0;
 $8 = sp + 212|0;
 $9 = sp + 200|0;
 $10 = sp + 196|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$3,$7)|0);
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$158 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $133 = 0;$159 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP8[$33>>0]|0;
    $42 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $133 = 0;$159 = 1;$80 = 0;
   } else {
    $133 = $158;$159 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP8[$48>>0]|0;
     $57 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($159) {
      $160 = $45;
      break;
     } else {
      $$2 = $$0;$141 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($159) {
    $$2 = $$0;$141 = 0;
    break;
   } else {
    $160 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP8[$81>>0]|0;
   $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = $$0$i$i41&255;
  $92 = HEAP8[$6>>0]|0;
  $93 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($91,$14,$$1,$10,$13,$92,$8,$11,$12,$15)|0);
  $94 = ($93|0)==(0);
  if (!($94)) {
   $$2 = $$1;$141 = $160;
   break;
  }
  $95 = HEAP32[$79>>2]|0;
  $96 = HEAP32[$82>>2]|0;
  $97 = ($95|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$80>>2]|0;
   $99 = ((($98)) + 40|0);
   $100 = HEAP32[$99>>2]|0;
   (FUNCTION_TABLE_ii[$100 & 1023]($80)|0);
  } else {
   $101 = ((($95)) + 1|0);
   HEAP32[$79>>2] = $101;
   $102 = HEAP8[$95>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
  }
  $$0 = $$1;$158 = $133;$30 = $80;
 }
 $103 = ((($8)) + 11|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = ($104<<24>>24)<(0);
 $106 = ((($8)) + 4|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = $104&255;
 $109 = $105 ? $107 : $108;
 $110 = ($109|0)==(0);
 if (!($110)) {
  $111 = HEAP32[$12>>2]|0;
  $112 = $111;
  $113 = $11;
  $114 = (($112) - ($113))|0;
  $115 = ($114|0)<(160);
  if ($115) {
   $116 = HEAP32[$13>>2]|0;
   $117 = ((($111)) + 4|0);
   HEAP32[$12>>2] = $117;
   HEAP32[$111>>2] = $116;
  }
 }
 $118 = HEAP32[$10>>2]|0;
 $119 = (__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2,$118,$4,$14)|0);
 $120 = (getTempRet0() | 0);
 $121 = $5;
 $122 = $121;
 HEAP32[$122>>2] = $119;
 $123 = (($121) + 4)|0;
 $124 = $123;
 HEAP32[$124>>2] = $120;
 $125 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$125,$4);
 $126 = ($80|0)==(0|0);
 if ($126) {
  $161 = 1;
 } else {
  $127 = ((($80)) + 12|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ((($80)) + 16|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = ($128|0)==($130|0);
  if ($131) {
   $132 = HEAP32[$133>>2]|0;
   $134 = ((($132)) + 36|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = (FUNCTION_TABLE_ii[$135 & 1023]($80)|0);
   $$0$i$i$i$i = $136;
  } else {
   $137 = HEAP8[$128>>0]|0;
   $138 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($137)|0);
   $$0$i$i$i$i = $138;
  }
  $139 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $140 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$139)|0);
  if ($140) {
   HEAP32[$1>>2] = 0;
   $161 = 1;
  } else {
   $161 = 0;
  }
 }
 $142 = ($141|0)==(0|0);
 do {
  if ($142) {
   label = 48;
  } else {
   $143 = ((($141)) + 12|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ((($141)) + 16|0);
   $146 = HEAP32[$145>>2]|0;
   $147 = ($144|0)==($146|0);
   if ($147) {
    $148 = HEAP32[$141>>2]|0;
    $149 = ((($148)) + 36|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = (FUNCTION_TABLE_ii[$150 & 1023]($141)|0);
    $$0$i$i2$i$i = $151;
   } else {
    $152 = HEAP8[$144>>0]|0;
    $153 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($152)|0);
    $$0$i$i2$i$i = $153;
   }
   $154 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $155 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$154)|0);
   if ($155) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($161) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($161) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $156 = HEAP32[$4>>2]|0;
  $157 = $156 | 2;
  HEAP32[$4>>2] = $157;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==($1|0);
 if ($5) {
  HEAP32[$2>>2] = 4;
  $26 = 0;$27 = 0;
 } else {
  $6 = (___errno_location()|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (___errno_location()|0);
  HEAP32[$8>>2] = 0;
  $9 = (__ZNSt3__26__clocEv()|0);
  $10 = (_strtoll_l($0,$4,$3,$9)|0);
  $11 = (getTempRet0() | 0);
  $12 = (___errno_location()|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $15 = (___errno_location()|0);
   HEAP32[$15>>2] = $7;
  }
  $16 = HEAP32[$4>>2]|0;
  $17 = ($16|0)==($1|0);
  if ($17) {
   $18 = ($13|0)==(34);
   if ($18) {
    HEAP32[$2>>2] = 4;
    $19 = ($11|0)>(0);
    $20 = ($10>>>0)>(0);
    $21 = ($11|0)==(0);
    $22 = $21 & $20;
    $23 = $19 | $22;
    $24 = $23 ? -1 : 0;
    $25 = $23 ? 2147483647 : -2147483648;
    $28 = $24;$29 = $25;
   } else {
    $28 = $10;$29 = $11;
   }
  } else {
   HEAP32[$2>>2] = 4;
   $28 = 0;$29 = 0;
  }
  $26 = $29;$27 = $28;
 }
 setTempRet0(($26) | 0);
 STACKTOP = sp;return ($27|0);
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $6 = sp + 224|0;
 $7 = sp + 160|0;
 $8 = sp + 212|0;
 $9 = sp + 200|0;
 $10 = sp + 196|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0,$3,$7)|0);
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$153 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $128 = 0;$154 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP8[$33>>0]|0;
    $42 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $128 = 0;$154 = 1;$80 = 0;
   } else {
    $128 = $153;$154 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP8[$48>>0]|0;
     $57 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($154) {
      $155 = $45;
      break;
     } else {
      $$2 = $$0;$136 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;$136 = 0;
    break;
   } else {
    $155 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP8[$81>>0]|0;
   $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = $$0$i$i41&255;
  $92 = HEAP8[$6>>0]|0;
  $93 = (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($91,$14,$$1,$10,$13,$92,$8,$11,$12,$15)|0);
  $94 = ($93|0)==(0);
  if (!($94)) {
   $$2 = $$1;$136 = $155;
   break;
  }
  $95 = HEAP32[$79>>2]|0;
  $96 = HEAP32[$82>>2]|0;
  $97 = ($95|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$80>>2]|0;
   $99 = ((($98)) + 40|0);
   $100 = HEAP32[$99>>2]|0;
   (FUNCTION_TABLE_ii[$100 & 1023]($80)|0);
  } else {
   $101 = ((($95)) + 1|0);
   HEAP32[$79>>2] = $101;
   $102 = HEAP8[$95>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
  }
  $$0 = $$1;$153 = $128;$30 = $80;
 }
 $103 = ((($8)) + 11|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = ($104<<24>>24)<(0);
 $106 = ((($8)) + 4|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = $104&255;
 $109 = $105 ? $107 : $108;
 $110 = ($109|0)==(0);
 if (!($110)) {
  $111 = HEAP32[$12>>2]|0;
  $112 = $111;
  $113 = $11;
  $114 = (($112) - ($113))|0;
  $115 = ($114|0)<(160);
  if ($115) {
   $116 = HEAP32[$13>>2]|0;
   $117 = ((($111)) + 4|0);
   HEAP32[$12>>2] = $117;
   HEAP32[$111>>2] = $116;
  }
 }
 $118 = HEAP32[$10>>2]|0;
 $119 = (__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2,$118,$4,$14)|0);
 HEAP32[$5>>2] = $119;
 $120 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$120,$4);
 $121 = ($80|0)==(0|0);
 if ($121) {
  $156 = 1;
 } else {
  $122 = ((($80)) + 12|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = ((($80)) + 16|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)==($125|0);
  if ($126) {
   $127 = HEAP32[$128>>2]|0;
   $129 = ((($127)) + 36|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 1023]($80)|0);
   $$0$i$i$i$i = $131;
  } else {
   $132 = HEAP8[$123>>0]|0;
   $133 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($132)|0);
   $$0$i$i$i$i = $133;
  }
  $134 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $135 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$134)|0);
  if ($135) {
   HEAP32[$1>>2] = 0;
   $156 = 1;
  } else {
   $156 = 0;
  }
 }
 $137 = ($136|0)==(0|0);
 do {
  if ($137) {
   label = 48;
  } else {
   $138 = ((($136)) + 12|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = ((($136)) + 16|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = ($139|0)==($141|0);
   if ($142) {
    $143 = HEAP32[$136>>2]|0;
    $144 = ((($143)) + 36|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = (FUNCTION_TABLE_ii[$145 & 1023]($136)|0);
    $$0$i$i2$i$i = $146;
   } else {
    $147 = HEAP8[$139>>0]|0;
    $148 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($147)|0);
    $$0$i$i2$i$i = $148;
   }
   $149 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $150 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$149)|0);
   if ($150) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($156) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($156) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $151 = HEAP32[$4>>2]|0;
  $152 = $151 | 2;
  HEAP32[$4>>2] = $152;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($0|0)==($1|0);
 if ($5) {
  HEAP32[$2>>2] = 4;
  $$1 = 0;
 } else {
  $6 = (___errno_location()|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (___errno_location()|0);
  HEAP32[$8>>2] = 0;
  $9 = (__ZNSt3__26__clocEv()|0);
  $10 = (_strtoll_l($0,$4,$3,$9)|0);
  $11 = (getTempRet0() | 0);
  $12 = (___errno_location()|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $15 = (___errno_location()|0);
   HEAP32[$15>>2] = $7;
  }
  $16 = HEAP32[$4>>2]|0;
  $17 = ($16|0)==($1|0);
  L7: do {
   if ($17) {
    $18 = ($13|0)==(34);
    do {
     if ($18) {
      HEAP32[$2>>2] = 4;
      $29 = ($11|0)>(0);
      $30 = ($10>>>0)>(0);
      $31 = ($11|0)==(0);
      $32 = $31 & $30;
      $33 = $29 | $32;
      if ($33) {
       $$0 = 2147483647;
       break L7;
      }
     } else {
      $19 = ($11|0)<(-1);
      $20 = ($10>>>0)<(2147483648);
      $21 = ($11|0)==(-1);
      $22 = $21 & $20;
      $23 = $19 | $22;
      if ($23) {
       HEAP32[$2>>2] = 4;
       break;
      }
      $24 = ($11|0)>(0);
      $25 = ($10>>>0)>(2147483647);
      $26 = ($11|0)==(0);
      $27 = $26 & $25;
      $28 = $24 | $27;
      if ($28) {
       HEAP32[$2>>2] = 4;
       $$0 = 2147483647;
       break L7;
      } else {
       $$0 = $10;
       break L7;
      }
     }
    } while(0);
    $$0 = -2147483648;
   } else {
    HEAP32[$2>>2] = 4;
    $$0 = 0;
   }
  } while(0);
  $$1 = $$0;
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i112 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i118 = 0, $$0101 = 0, $$0107 = 0, $$0108 = 0, $$0108136 = 0, $$088 = 0, $$089 = 0, $$090$off0 = 0, $$091 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$097 = 0, $$1102 = 0, $$195 = 0;
 var $$198 = 0, $$2$off0 = 0, $$2103 = 0, $$296 = 0, $$299 = 0, $$299$be = 0, $$3 = 0, $$3100 = 0, $$3104 = 0, $$5 = 0, $$5106 = 0, $$6 = 0, $$7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i114 = 0, $$sroa$0125$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i115 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp;
 $8 = $3;
 $9 = $2;
 $10 = (($8) - ($9))|0;
 $11 = (($10|0) / 12)&-1;
 $12 = ($11>>>0)>(100);
 if ($12) {
  $13 = (_malloc($11)|0);
  $14 = ($13|0)==(0|0);
  if ($14) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$0107 = $13;$$sroa$0125$0 = $13;
  }
 } else {
  $$0107 = $7;$$sroa$0125$0 = 0;
 }
 $$0101 = $11;$$093 = $2;$$094 = $$0107;$$097 = 0;
 while(1) {
  $15 = ($$093|0)==($3|0);
  if ($15) {
   break;
  }
  $16 = ((($$093)) + 11|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = ($17<<24>>24)<(0);
  if ($18) {
   $19 = ((($$093)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   $22 = $20;
  } else {
   $21 = $17&255;
   $22 = $21;
  }
  $23 = ($22|0)==(0);
  if ($23) {
   HEAP8[$$094>>0] = 2;
   $24 = (($$0101) + -1)|0;
   $25 = (($$097) + 1)|0;
   $$1102 = $24;$$198 = $25;
  } else {
   HEAP8[$$094>>0] = 1;
   $$1102 = $$0101;$$198 = $$097;
  }
  $26 = ((($$093)) + 12|0);
  $27 = ((($$094)) + 1|0);
  $$0101 = $$1102;$$093 = $26;$$094 = $27;$$097 = $$198;
 }
 $$092 = 0;$$2103 = $$0101;$$299 = $$097;
 while(1) {
  $28 = HEAP32[$0>>2]|0;
  $29 = ($28|0)==(0|0);
  do {
   if ($29) {
    $60 = 1;
   } else {
    $30 = ((($28)) + 12|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($28)) + 16|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ($31|0)==($33|0);
    if ($34) {
     $35 = HEAP32[$28>>2]|0;
     $36 = ((($35)) + 36|0);
     $37 = HEAP32[$36>>2]|0;
     $38 = (FUNCTION_TABLE_ii[$37 & 1023]($28)|0);
     $$0$i$i$i$i = $38;
    } else {
     $39 = HEAP8[$31>>0]|0;
     $40 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($39)|0);
     $$0$i$i$i$i = $40;
    }
    $41 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $42 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$41)|0);
    if ($42) {
     HEAP32[$0>>2] = 0;
     $60 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$0>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $60 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $43 = HEAP32[$1>>2]|0;
  $44 = ($43|0)==(0|0);
  if ($44) {
   $59 = 1;$78 = 0;
  } else {
   $45 = ((($43)) + 12|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($43)) + 16|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($46|0)==($48|0);
   if ($49) {
    $50 = HEAP32[$43>>2]|0;
    $51 = ((($50)) + 36|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (FUNCTION_TABLE_ii[$52 & 1023]($43)|0);
    $$0$i$i2$i$i = $53;
   } else {
    $54 = HEAP8[$46>>0]|0;
    $55 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($54)|0);
    $$0$i$i2$i$i = $55;
   }
   $56 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $57 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$56)|0);
   if ($57) {
    HEAP32[$1>>2] = 0;
    $59 = 1;$78 = 0;
   } else {
    $59 = 0;$78 = $43;
   }
  }
  $58 = $60 ^ $59;
  $61 = ($$2103|0)!=(0);
  $62 = $61 & $58;
  $63 = HEAP32[$0>>2]|0;
  if (!($62)) {
   break;
  }
  $93 = ((($63)) + 12|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($63)) + 16|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = ($94|0)==($96|0);
  if ($97) {
   $98 = HEAP32[$63>>2]|0;
   $99 = ((($98)) + 36|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = (FUNCTION_TABLE_ii[$100 & 1023]($63)|0);
   $$0$i$i = $101;
  } else {
   $102 = HEAP8[$94>>0]|0;
   $103 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
   $$0$i$i = $103;
  }
  $104 = $$0$i$i&255;
  if ($6) {
   $$091 = $104;
  } else {
   $105 = HEAP32[$4>>2]|0;
   $106 = ((($105)) + 12|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (FUNCTION_TABLE_iii[$107 & 1023]($4,$104)|0);
   $$091 = $108;
  }
  $109 = (($$092) + 1)|0;
  $$089 = $2;$$090$off0 = 0;$$195 = $$0107;$$3100 = $$299;$$3104 = $$2103;
  while(1) {
   $110 = ($$089|0)==($3|0);
   if ($110) {
    break;
   }
   $111 = HEAP8[$$195>>0]|0;
   $112 = ($111<<24>>24)==(1);
   do {
    if ($112) {
     $113 = ((($$089)) + 11|0);
     $114 = HEAP8[$113>>0]|0;
     $115 = ($114<<24>>24)<(0);
     if ($115) {
      $116 = HEAP32[$$089>>2]|0;
      $118 = $116;
     } else {
      $118 = $$089;
     }
     $117 = (($118) + ($$092)|0);
     $119 = HEAP8[$117>>0]|0;
     if ($6) {
      $$088 = $119;
     } else {
      $120 = HEAP32[$4>>2]|0;
      $121 = ((($120)) + 12|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = (FUNCTION_TABLE_iii[$122 & 1023]($4,$119)|0);
      $$088 = $123;
     }
     $124 = ($$091<<24>>24)==($$088<<24>>24);
     if (!($124)) {
      HEAP8[$$195>>0] = 0;
      $134 = (($$3104) + -1)|0;
      $$2$off0 = $$090$off0;$$5 = $$3100;$$5106 = $134;
      break;
     }
     $125 = HEAP8[$113>>0]|0;
     $126 = ($125<<24>>24)<(0);
     if ($126) {
      $127 = ((($$089)) + 4|0);
      $128 = HEAP32[$127>>2]|0;
      $130 = $128;
     } else {
      $129 = $125&255;
      $130 = $129;
     }
     $131 = ($130|0)==($109|0);
     if ($131) {
      $132 = (($$3104) + -1)|0;
      $133 = (($$3100) + 1)|0;
      HEAP8[$$195>>0] = 2;
      $$2$off0 = 1;$$5 = $133;$$5106 = $132;
     } else {
      $$2$off0 = 1;$$5 = $$3100;$$5106 = $$3104;
     }
    } else {
     $$2$off0 = $$090$off0;$$5 = $$3100;$$5106 = $$3104;
    }
   } while(0);
   $135 = ((($$089)) + 12|0);
   $136 = ((($$195)) + 1|0);
   $$089 = $135;$$090$off0 = $$2$off0;$$195 = $136;$$3100 = $$5;$$3104 = $$5106;
  }
  L67: do {
   if ($$090$off0) {
    $137 = HEAP32[$0>>2]|0;
    $138 = ((($137)) + 12|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($137)) + 16|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = ($139|0)==($141|0);
    if ($142) {
     $143 = HEAP32[$137>>2]|0;
     $144 = ((($143)) + 40|0);
     $145 = HEAP32[$144>>2]|0;
     (FUNCTION_TABLE_ii[$145 & 1023]($137)|0);
    } else {
     $146 = ((($139)) + 1|0);
     HEAP32[$138>>2] = $146;
     $147 = HEAP8[$139>>0]|0;
     (__ZNSt3__211char_traitsIcE11to_int_typeEc($147)|0);
    }
    $148 = (($$3100) + ($$3104))|0;
    $149 = ($148>>>0)>(1);
    if ($149) {
     $$0 = $2;$$296 = $$0107;$$6 = $$3100;
     while(1) {
      $150 = ($$0|0)==($3|0);
      if ($150) {
       $$299$be = $$6;
       break L67;
      }
      $151 = HEAP8[$$296>>0]|0;
      $152 = ($151<<24>>24)==(2);
      if ($152) {
       $153 = ((($$0)) + 11|0);
       $154 = HEAP8[$153>>0]|0;
       $155 = ($154<<24>>24)<(0);
       if ($155) {
        $156 = ((($$0)) + 4|0);
        $157 = HEAP32[$156>>2]|0;
        $159 = $157;
       } else {
        $158 = $154&255;
        $159 = $158;
       }
       $160 = ($159|0)==($109|0);
       if ($160) {
        $$7 = $$6;
       } else {
        $161 = (($$6) + -1)|0;
        HEAP8[$$296>>0] = 0;
        $$7 = $161;
       }
      } else {
       $$7 = $$6;
      }
      $162 = ((($$0)) + 12|0);
      $163 = ((($$296)) + 1|0);
      $$0 = $162;$$296 = $163;$$6 = $$7;
     }
    } else {
     $$299$be = $$3100;
    }
   } else {
    $$299$be = $$3100;
   }
  } while(0);
  $$092 = $109;$$2103 = $$3104;$$299 = $$299$be;
 }
 $64 = ($63|0)==(0|0);
 do {
  if ($64) {
   $173 = 1;
  } else {
   $65 = ((($63)) + 12|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ((($63)) + 16|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = ($66|0)==($68|0);
   if ($69) {
    $70 = HEAP32[$63>>2]|0;
    $71 = ((($70)) + 36|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (FUNCTION_TABLE_ii[$72 & 1023]($63)|0);
    $$0$i$i$i$i112 = $73;
   } else {
    $74 = HEAP8[$66>>0]|0;
    $75 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($74)|0);
    $$0$i$i$i$i112 = $75;
   }
   $76 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $77 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i112,$76)|0);
   if ($77) {
    HEAP32[$0>>2] = 0;
    $173 = 1;
    break;
   } else {
    $$pre$i$i$i114 = HEAP32[$0>>2]|0;
    $phitmp$i$i$i115 = ($$pre$i$i$i114|0)==(0|0);
    $173 = $phitmp$i$i$i115;
    break;
   }
  }
 } while(0);
 $79 = ($78|0)==(0|0);
 do {
  if ($79) {
   label = 41;
  } else {
   $80 = ((($78)) + 12|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = ((($78)) + 16|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = ($81|0)==($83|0);
   if ($84) {
    $85 = HEAP32[$78>>2]|0;
    $86 = ((($85)) + 36|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = (FUNCTION_TABLE_ii[$87 & 1023]($78)|0);
    $$0$i$i2$i$i118 = $88;
   } else {
    $89 = HEAP8[$81>>0]|0;
    $90 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($89)|0);
    $$0$i$i2$i$i118 = $90;
   }
   $91 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $92 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i118,$91)|0);
   if ($92) {
    HEAP32[$1>>2] = 0;
    label = 41;
    break;
   } else {
    if ($173) {
     break;
    } else {
     label = 79;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 41) {
  if ($173) {
   label = 79;
  }
 }
 if ((label|0) == 79) {
  $164 = HEAP32[$5>>2]|0;
  $165 = $164 | 2;
  HEAP32[$5>>2] = $165;
 }
 $$0108 = $2;$$3 = $$0107;
 while(1) {
  $166 = ($$0108|0)==($3|0);
  if ($166) {
   label = 84;
   break;
  }
  $167 = HEAP8[$$3>>0]|0;
  $168 = ($167<<24>>24)==(2);
  if ($168) {
   $$0108136 = $$0108;
   break;
  }
  $169 = ((($$0108)) + 12|0);
  $170 = ((($$3)) + 1|0);
  $$0108 = $169;$$3 = $170;
 }
 if ((label|0) == 84) {
  $171 = HEAP32[$5>>2]|0;
  $172 = $171 | 4;
  HEAP32[$5>>2] = $172;
  $$0108136 = $3;
 }
 _free($$sroa$0125$0);
 STACKTOP = sp;return ($$0108136|0);
}
function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload = 0, $$sroa$022$0$copyload24 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 52|0;
 $$byval_copy = sp + 48|0;
 $6 = sp + 44|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 32|0;
 $10 = sp + 28|0;
 $11 = sp;
 $12 = sp + 24|0;
 $13 = ((($3)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14 & 1;
 $16 = ($15|0)==(0);
 if ($16) {
  HEAP32[$6>>2] = -1;
  $17 = HEAP32[$0>>2]|0;
  $18 = ((($17)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = HEAP32[$1>>2]|0;
  HEAP32[$7>>2] = $20;
  $21 = HEAP32[$2>>2]|0;
  HEAP32[$8>>2] = $21;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$8>>2]|0;
  $22 = (FUNCTION_TABLE_iiiiiii[$19 & 511]($0,$$byval_copy,$$byval_copy1,$3,$4,$6)|0);
  HEAP32[$1>>2] = $22;
  $23 = HEAP32[$6>>2]|0;
  switch ($23|0) {
  case 0:  {
   HEAP8[$5>>0] = 0;
   break;
  }
  case 1:  {
   HEAP8[$5>>0] = 1;
   break;
  }
  default: {
   HEAP8[$5>>0] = 1;
   HEAP32[$4>>2] = 4;
  }
  }
  $$sroa$022$0$copyload = HEAP32[$1>>2]|0;
  $$sroa$022$0 = $$sroa$022$0$copyload;
 } else {
  __ZNKSt3__28ios_base6getlocEv($9,$3);
  $24 = (__ZNKSt3__26locale9use_facetERNS0_2idE($9,36756)|0);
  __ZNSt3__26localeD2Ev($9);
  __ZNKSt3__28ios_base6getlocEv($10,$3);
  $25 = (__ZNKSt3__26locale9use_facetERNS0_2idE($10,36764)|0);
  __ZNSt3__26localeD2Ev($10);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 24|0);
  $28 = HEAP32[$27>>2]|0;
  FUNCTION_TABLE_vii[$28 & 1023]($11,$25);
  $29 = ((($11)) + 12|0);
  $30 = HEAP32[$25>>2]|0;
  $31 = ((($30)) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  FUNCTION_TABLE_vii[$32 & 1023]($29,$25);
  $33 = HEAP32[$2>>2]|0;
  HEAP32[$12>>2] = $33;
  $34 = ((($11)) + 24|0);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$12>>2]|0;
  $35 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($1,$$byval_copy2,$11,$34,$24,$4,1)|0);
  $36 = ($35|0)==($11|0);
  $37 = $36&1;
  HEAP8[$5>>0] = $37;
  $$sroa$022$0$copyload24 = HEAP32[$1>>2]|0;
  $39 = $34;
  while(1) {
   $38 = ((($39)) + -12|0);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($38);
   $40 = ($38|0)==($11|0);
   if ($40) {
    break;
   } else {
    $39 = $38;
   }
  }
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;return ($$sroa$022$0|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0,$$byval_copy,$$byval_copy1,$3,$4,$5)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i22 = 0, $$0$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i28 = 0, $$0$i$i38 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i20 = 0, $phitmp$i = 0;
 var $phitmp$i35 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(320|0);
 $vararg_buffer = sp + 264|0;
 $6 = sp + 160|0;
 $7 = sp + 296|0;
 $8 = sp + 292|0;
 $9 = sp + 280|0;
 $10 = sp + 276|0;
 $11 = sp;
 $12 = sp + 272|0;
 $13 = sp + 268|0;
 ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $14 = (($7) + ($$0$i$i<<2)|0);
  HEAP32[$14>>2] = 0;
  $15 = (($$0$i$i) + 1)|0;
  $$0$i$i = $15;
 }
 __ZNKSt3__28ios_base6getlocEv($8,$3);
 $16 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36756)|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 48|0);
 $19 = HEAP32[$18>>2]|0;
 (FUNCTION_TABLE_iiiii[$19 & 511]($16,5648,(5674),$6)|0);
 __ZNSt3__26localeD2Ev($8);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i19 = 0;
 while(1) {
  $exitcond$i$i20 = ($$0$i$i19|0)==(3);
  if ($exitcond$i$i20) {
   break;
  }
  $20 = (($9) + ($$0$i$i19<<2)|0);
  HEAP32[$20>>2] = 0;
  $21 = (($$0$i$i19) + 1)|0;
  $$0$i$i19 = $21;
 }
 $22 = ((($9)) + 11|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = ($23<<24>>24)<(0);
 $25 = ((($9)) + 8|0);
 if ($24) {
  $26 = HEAP32[$25>>2]|0;
  $27 = $26 & 2147483647;
  $phitmp$i = (($27) + -1)|0;
  $28 = $phitmp$i;
 } else {
  $28 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$28,0);
 $29 = HEAP8[$22>>0]|0;
 $30 = ($29<<24>>24)<(0);
 $31 = HEAP32[$9>>2]|0;
 $32 = $30 ? $31 : $9;
 HEAP32[$10>>2] = $32;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $33 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $32;$147 = $$pre;$34 = $$pre;
 L12: while(1) {
  $35 = ($34|0)==(0|0);
  if ($35) {
   $122 = 0;$148 = 1;$84 = 0;
  } else {
   $36 = ((($34)) + 12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = ((($34)) + 16|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($37|0)==($39|0);
   if ($40) {
    $41 = HEAP32[$34>>2]|0;
    $42 = ((($41)) + 36|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (FUNCTION_TABLE_ii[$43 & 1023]($34)|0);
    $$0$i$i$i$i22 = $44;
   } else {
    $45 = HEAP32[$37>>2]|0;
    $46 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($45)|0);
    $$0$i$i$i$i22 = $46;
   }
   $47 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $48 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i22,$47)|0);
   if ($48) {
    HEAP32[$1>>2] = 0;
    $122 = 0;$148 = 1;$84 = 0;
   } else {
    $122 = $147;$148 = 0;$84 = $34;
   }
  }
  $49 = HEAP32[$2>>2]|0;
  $50 = ($49|0)==(0|0);
  do {
   if ($50) {
    label = 22;
   } else {
    $51 = ((($49)) + 12|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ((($49)) + 16|0);
    $54 = HEAP32[$53>>2]|0;
    $55 = ($52|0)==($54|0);
    if ($55) {
     $56 = HEAP32[$49>>2]|0;
     $57 = ((($56)) + 36|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (FUNCTION_TABLE_ii[$58 & 1023]($49)|0);
     $$0$i$i2$i$i28 = $59;
    } else {
     $60 = HEAP32[$52>>2]|0;
     $61 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($60)|0);
     $$0$i$i2$i$i28 = $61;
    }
    $62 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $63 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i28,$62)|0);
    if ($63) {
     HEAP32[$2>>2] = 0;
     label = 22;
     break;
    } else {
     if ($148) {
      $149 = $49;
      break;
     } else {
      $$2 = $$0;$130 = $49;
      break L12;
     }
    }
   }
  } while(0);
  if ((label|0) == 22) {
   label = 0;
   if ($148) {
    $$2 = $$0;$130 = 0;
    break;
   } else {
    $149 = 0;
   }
  }
  $64 = HEAP32[$10>>2]|0;
  $65 = HEAP8[$22>>0]|0;
  $66 = ($65<<24>>24)<(0);
  $67 = HEAP32[$33>>2]|0;
  $68 = $65&255;
  $69 = $66 ? $67 : $68;
  $70 = (($$0) + ($69)|0);
  $71 = ($64|0)==($70|0);
  if ($71) {
   $72 = $69 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$72,0);
   $73 = HEAP8[$22>>0]|0;
   $74 = ($73<<24>>24)<(0);
   if ($74) {
    $75 = HEAP32[$25>>2]|0;
    $76 = $75 & 2147483647;
    $phitmp$i35 = (($76) + -1)|0;
    $77 = $phitmp$i35;
   } else {
    $77 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$77,0);
   $78 = HEAP8[$22>>0]|0;
   $79 = ($78<<24>>24)<(0);
   $80 = HEAP32[$9>>2]|0;
   $81 = $79 ? $80 : $9;
   $82 = (($81) + ($69)|0);
   HEAP32[$10>>2] = $82;
   $$1 = $81;
  } else {
   $$1 = $$0;
  }
  $83 = ((($84)) + 12|0);
  $85 = HEAP32[$83>>2]|0;
  $86 = ((($84)) + 16|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($85|0)==($87|0);
  if ($88) {
   $89 = HEAP32[$84>>2]|0;
   $90 = ((($89)) + 36|0);
   $91 = HEAP32[$90>>2]|0;
   $92 = (FUNCTION_TABLE_ii[$91 & 1023]($84)|0);
   $$0$i$i38 = $92;
  } else {
   $93 = HEAP32[$85>>2]|0;
   $94 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($93)|0);
   $$0$i$i38 = $94;
  }
  $95 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i38,16,$$1,$10,$13,0,$7,$11,$12,$6)|0);
  $96 = ($95|0)==(0);
  if (!($96)) {
   $$2 = $$1;$130 = $149;
   break;
  }
  $97 = HEAP32[$83>>2]|0;
  $98 = HEAP32[$86>>2]|0;
  $99 = ($97|0)==($98|0);
  if ($99) {
   $100 = HEAP32[$84>>2]|0;
   $101 = ((($100)) + 40|0);
   $102 = HEAP32[$101>>2]|0;
   (FUNCTION_TABLE_ii[$102 & 1023]($84)|0);
  } else {
   $103 = ((($97)) + 4|0);
   HEAP32[$83>>2] = $103;
   $104 = HEAP32[$97>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($104)|0);
  }
  $$0 = $$1;$147 = $122;$34 = $84;
 }
 $105 = HEAP32[$10>>2]|0;
 $106 = $$2;
 $107 = (($105) - ($106))|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$107,0);
 $108 = HEAP8[$22>>0]|0;
 $109 = ($108<<24>>24)<(0);
 $110 = HEAP32[$9>>2]|0;
 $111 = $109 ? $110 : $9;
 $112 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $5;
 $113 = (__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($111,$112,23216,$vararg_buffer)|0);
 $114 = ($113|0)==(1);
 if (!($114)) {
  HEAP32[$4>>2] = 4;
 }
 $115 = ($84|0)==(0|0);
 if ($115) {
  $150 = 1;
 } else {
  $116 = ((($84)) + 12|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = ((($84)) + 16|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = ($117|0)==($119|0);
  if ($120) {
   $121 = HEAP32[$122>>2]|0;
   $123 = ((($121)) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 1023]($84)|0);
   $$0$i$i$i$i = $125;
  } else {
   $126 = HEAP32[$117>>2]|0;
   $127 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($126)|0);
   $$0$i$i$i$i = $127;
  }
  $128 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $129 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$128)|0);
  if ($129) {
   HEAP32[$1>>2] = 0;
   $150 = 1;
  } else {
   $150 = 0;
  }
 }
 $131 = ($130|0)==(0|0);
 do {
  if ($131) {
   label = 50;
  } else {
   $132 = ((($130)) + 12|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = ((($130)) + 16|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = ($133|0)==($135|0);
   if ($136) {
    $137 = HEAP32[$130>>2]|0;
    $138 = ((($137)) + 36|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (FUNCTION_TABLE_ii[$139 & 1023]($130)|0);
    $$0$i$i2$i$i = $140;
   } else {
    $141 = HEAP32[$133>>2]|0;
    $142 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($141)|0);
    $$0$i$i2$i$i = $142;
   }
   $143 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $144 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$143)|0);
   if ($144) {
    HEAP32[$2>>2] = 0;
    label = 50;
    break;
   } else {
    if ($150) {
     break;
    } else {
     label = 52;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($150) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $145 = HEAP32[$4>>2]|0;
  $146 = $145 | 2;
  HEAP32[$4>>2] = $146;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0$i$add = 0, $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = HEAP32[$3>>2]|0;
 $11 = ($10|0)==($2|0);
 do {
  if ($11) {
   $12 = ((($9)) + 96|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)==($0|0);
   if (!($14)) {
    $15 = ((($9)) + 100|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==($0|0);
    if (!($17)) {
     label = 5;
     break;
    }
   }
   $18 = $14 ? 43 : 45;
   $19 = ((($2)) + 1|0);
   HEAP32[$3>>2] = $19;
   HEAP8[$2>>0] = $18;
   HEAP32[$4>>2] = 0;
   $$1 = 0;
  } else {
   label = 5;
  }
 } while(0);
 L6: do {
  if ((label|0) == 5) {
   $20 = ((($6)) + 11|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = ($21<<24>>24)<(0);
   $23 = ((($6)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $21&255;
   $26 = $22 ? $24 : $25;
   $27 = ($26|0)!=(0);
   $28 = ($0|0)==($5|0);
   $or$cond = $28 & $27;
   if ($or$cond) {
    $29 = HEAP32[$8>>2]|0;
    $30 = $29;
    $31 = $7;
    $32 = (($30) - ($31))|0;
    $33 = ($32|0)<(160);
    if (!($33)) {
     $$1 = 0;
     break;
    }
    $34 = HEAP32[$4>>2]|0;
    $35 = ((($29)) + 4|0);
    HEAP32[$8>>2] = $35;
    HEAP32[$29>>2] = $34;
    HEAP32[$4>>2] = 0;
    $$1 = 0;
    break;
   }
   $36 = ((($9)) + 104|0);
   $$0$i$idx = 0;
   while(1) {
    $$0$i$ptr = (($9) + ($$0$i$idx<<2)|0);
    $37 = ($$0$i$idx|0)==(26);
    if ($37) {
     $$0$lcssa$i = $36;
     break;
    }
    $38 = HEAP32[$$0$i$ptr>>2]|0;
    $39 = ($38|0)==($0|0);
    $$0$i$add = (($$0$i$idx) + 1)|0;
    if ($39) {
     $$0$lcssa$i = $$0$i$ptr;
     break;
    } else {
     $$0$i$idx = $$0$i$add;
    }
   }
   $40 = $$0$lcssa$i;
   $41 = $9;
   $42 = (($40) - ($41))|0;
   $43 = $42 >> 2;
   $44 = ($42|0)>(92);
   if ($44) {
    $$1 = -1;
   } else {
    switch ($1|0) {
    case 10: case 8:  {
     $45 = ($43|0)<($1|0);
     if (!($45)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
    case 16:  {
     $46 = ($42|0)<(88);
     if (!($46)) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      $47 = $10;
      $48 = $2;
      $49 = (($47) - ($48))|0;
      $50 = ($49|0)<(3);
      if (!($50)) {
       $$1 = -1;
       break L6;
      }
      $51 = ((($10)) + -1|0);
      $52 = HEAP8[$51>>0]|0;
      $53 = ($52<<24>>24)==(48);
      if (!($53)) {
       $$1 = -1;
       break L6;
      }
      $54 = ((($10)) + 1|0);
      $55 = (5648 + ($43)|0);
      HEAP32[$4>>2] = 0;
      $56 = HEAP8[$55>>0]|0;
      HEAP32[$3>>2] = $54;
      HEAP8[$10>>0] = $56;
      $$1 = 0;
      break L6;
     }
     break;
    }
    default: {
    }
    }
    $57 = (5648 + ($43)|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = ((($10)) + 1|0);
    HEAP32[$3>>2] = $59;
    HEAP8[$10>>0] = $58;
    $60 = HEAP32[$4>>2]|0;
    $61 = (($60) + 1)|0;
    HEAP32[$4>>2] = $61;
    $$1 = 0;
   }
  }
 } while(0);
 return ($$1|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $6 = sp + 160|0;
 $7 = sp + 328|0;
 $8 = sp + 324|0;
 $9 = sp + 312|0;
 $10 = sp + 300|0;
 $11 = sp + 296|0;
 $12 = sp;
 $13 = sp + 292|0;
 $14 = sp + 288|0;
 $15 = sp + 333|0;
 $16 = sp + 332|0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9,$3,$6,$7,$8);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($10)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($10)) + 8|0);
 if ($21) {
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 2147483647;
  $phitmp$i = (($24) + -1)|0;
  $25 = $phitmp$i;
 } else {
  $25 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$25,0);
 $26 = HEAP8[$19>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$10>>2]|0;
 $29 = $27 ? $28 : $10;
 HEAP32[$11>>2] = $29;
 HEAP32[$13>>2] = $12;
 HEAP32[$14>>2] = 0;
 HEAP8[$15>>0] = 1;
 HEAP8[$16>>0] = 69;
 $30 = ((($10)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $29;$156 = $$pre;$31 = $$pre;
 L8: while(1) {
  $32 = ($31|0)==(0|0);
  if ($32) {
   $131 = 0;$157 = 1;$81 = 0;
  } else {
   $33 = ((($31)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($31)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($34|0)==($36|0);
   if ($37) {
    $38 = HEAP32[$31>>2]|0;
    $39 = ((($38)) + 36|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (FUNCTION_TABLE_ii[$40 & 1023]($31)|0);
    $$0$i$i$i$i15 = $41;
   } else {
    $42 = HEAP32[$34>>2]|0;
    $43 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($42)|0);
    $$0$i$i$i$i15 = $43;
   }
   $44 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $45 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15,$44)|0);
   if ($45) {
    HEAP32[$1>>2] = 0;
    $131 = 0;$157 = 1;$81 = 0;
   } else {
    $131 = $156;$157 = 0;$81 = $31;
   }
  }
  $46 = HEAP32[$2>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 19;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $53 = HEAP32[$46>>2]|0;
     $54 = ((($53)) + 36|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
     $$0$i$i2$i$i21 = $56;
    } else {
     $57 = HEAP32[$49>>2]|0;
     $58 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($57)|0);
     $$0$i$i2$i$i21 = $58;
    }
    $59 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $60 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21,$59)|0);
    if ($60) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($157) {
      $158 = $46;
      break;
     } else {
      $$2 = $$0;$139 = $46;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;$139 = 0;
    break;
   } else {
    $158 = 0;
   }
  }
  $61 = HEAP32[$11>>2]|0;
  $62 = HEAP8[$19>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = HEAP32[$30>>2]|0;
  $65 = $62&255;
  $66 = $63 ? $64 : $65;
  $67 = (($$0) + ($66)|0);
  $68 = ($61|0)==($67|0);
  if ($68) {
   $69 = $66 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$69,0);
   $70 = HEAP8[$19>>0]|0;
   $71 = ($70<<24>>24)<(0);
   if ($71) {
    $72 = HEAP32[$22>>2]|0;
    $73 = $72 & 2147483647;
    $phitmp$i28 = (($73) + -1)|0;
    $74 = $phitmp$i28;
   } else {
    $74 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$74,0);
   $75 = HEAP8[$19>>0]|0;
   $76 = ($75<<24>>24)<(0);
   $77 = HEAP32[$10>>2]|0;
   $78 = $76 ? $77 : $10;
   $79 = (($78) + ($66)|0);
   HEAP32[$11>>2] = $79;
   $$1 = $78;
  } else {
   $$1 = $$0;
  }
  $80 = ((($81)) + 12|0);
  $82 = HEAP32[$80>>2]|0;
  $83 = ((($81)) + 16|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($82|0)==($84|0);
  if ($85) {
   $86 = HEAP32[$81>>2]|0;
   $87 = ((($86)) + 36|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = (FUNCTION_TABLE_ii[$88 & 1023]($81)|0);
   $$0$i$i31 = $89;
  } else {
   $90 = HEAP32[$82>>2]|0;
   $91 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($90)|0);
   $$0$i$i31 = $91;
  }
  $92 = HEAP32[$7>>2]|0;
  $93 = HEAP32[$8>>2]|0;
  $94 = (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31,$15,$16,$$1,$11,$92,$93,$9,$12,$13,$14,$6)|0);
  $95 = ($94|0)==(0);
  if (!($95)) {
   $$2 = $$1;$139 = $158;
   break;
  }
  $96 = HEAP32[$80>>2]|0;
  $97 = HEAP32[$83>>2]|0;
  $98 = ($96|0)==($97|0);
  if ($98) {
   $99 = HEAP32[$81>>2]|0;
   $100 = ((($99)) + 40|0);
   $101 = HEAP32[$100>>2]|0;
   (FUNCTION_TABLE_ii[$101 & 1023]($81)|0);
  } else {
   $102 = ((($96)) + 4|0);
   HEAP32[$80>>2] = $102;
   $103 = HEAP32[$96>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($103)|0);
  }
  $$0 = $$1;$156 = $131;$31 = $81;
 }
 $104 = ((($9)) + 11|0);
 $105 = HEAP8[$104>>0]|0;
 $106 = ($105<<24>>24)<(0);
 $107 = ((($9)) + 4|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = $105&255;
 $110 = $106 ? $108 : $109;
 $111 = ($110|0)==(0);
 $112 = HEAP8[$15>>0]|0;
 $113 = ($112<<24>>24)==(0);
 $or$cond = $111 | $113;
 if (!($or$cond)) {
  $114 = HEAP32[$13>>2]|0;
  $115 = $114;
  $116 = $12;
  $117 = (($115) - ($116))|0;
  $118 = ($117|0)<(160);
  if ($118) {
   $119 = HEAP32[$14>>2]|0;
   $120 = ((($114)) + 4|0);
   HEAP32[$13>>2] = $120;
   HEAP32[$114>>2] = $119;
  }
 }
 $121 = HEAP32[$11>>2]|0;
 $122 = (+__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2,$121,$4));
 HEAPF64[$5>>3] = $122;
 $123 = HEAP32[$13>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9,$12,$123,$4);
 $124 = ($81|0)==(0|0);
 if ($124) {
  $159 = 1;
 } else {
  $125 = ((($81)) + 12|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = ((($81)) + 16|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ($126|0)==($128|0);
  if ($129) {
   $130 = HEAP32[$131>>2]|0;
   $132 = ((($130)) + 36|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = (FUNCTION_TABLE_ii[$133 & 1023]($81)|0);
   $$0$i$i$i$i = $134;
  } else {
   $135 = HEAP32[$126>>2]|0;
   $136 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($135)|0);
   $$0$i$i$i$i = $136;
  }
  $137 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $138 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$137)|0);
  if ($138) {
   HEAP32[$1>>2] = 0;
   $159 = 1;
  } else {
   $159 = 0;
  }
 }
 $140 = ($139|0)==(0|0);
 do {
  if ($140) {
   label = 48;
  } else {
   $141 = ((($139)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($139)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$139>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 1023]($139)|0);
    $$0$i$i2$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $151 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($150)|0);
    $$0$i$i2$i$i = $151;
   }
   $152 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $153 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$152)|0);
   if ($153) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($159) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($159) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $154 = HEAP32[$4>>2]|0;
  $155 = $154 | 2;
  HEAP32[$4>>2] = $155;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 __ZNKSt3__28ios_base6getlocEv($5,$1);
 $6 = (__ZNKSt3__26locale9use_facetERNS0_2idE($5,36756)|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 48|0);
 $9 = HEAP32[$8>>2]|0;
 (FUNCTION_TABLE_iiiii[$9 & 511]($6,5648,(5680),$2)|0);
 $10 = (__ZNKSt3__26locale9use_facetERNS0_2idE($5,36764)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 1023]($10)|0);
 HEAP32[$3>>2] = $14;
 $15 = HEAP32[$10>>2]|0;
 $16 = ((($15)) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (FUNCTION_TABLE_ii[$17 & 1023]($10)|0);
 HEAP32[$4>>2] = $18;
 $19 = HEAP32[$10>>2]|0;
 $20 = ((($19)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_vii[$21 & 1023]($0,$10);
 __ZNSt3__26localeD2Ev($5);
 STACKTOP = sp;return;
}
function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $$0$i$add = 0, $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $100 = 0, $101 = 0, $102 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $12 = ($0|0)==($5|0);
 L1: do {
  if ($12) {
   $13 = HEAP8[$1>>0]|0;
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $$2 = -1;
   } else {
    HEAP8[$1>>0] = 0;
    $15 = HEAP32[$4>>2]|0;
    $16 = ((($15)) + 1|0);
    HEAP32[$4>>2] = $16;
    HEAP8[$15>>0] = 46;
    $17 = ((($7)) + 11|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = ($18<<24>>24)<(0);
    $20 = ((($7)) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $18&255;
    $23 = $19 ? $21 : $22;
    $24 = ($23|0)==(0);
    if ($24) {
     $$2 = 0;
    } else {
     $25 = HEAP32[$9>>2]|0;
     $26 = $25;
     $27 = $8;
     $28 = (($26) - ($27))|0;
     $29 = ($28|0)<(160);
     if ($29) {
      $30 = HEAP32[$10>>2]|0;
      $31 = ((($25)) + 4|0);
      HEAP32[$9>>2] = $31;
      HEAP32[$25>>2] = $30;
      $$2 = 0;
     } else {
      $$2 = 0;
     }
    }
   }
  } else {
   $32 = ($0|0)==($6|0);
   if ($32) {
    $33 = ((($7)) + 11|0);
    $34 = HEAP8[$33>>0]|0;
    $35 = ($34<<24>>24)<(0);
    $36 = ((($7)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = $34&255;
    $39 = $35 ? $37 : $38;
    $40 = ($39|0)==(0);
    if (!($40)) {
     $41 = HEAP8[$1>>0]|0;
     $42 = ($41<<24>>24)==(0);
     if ($42) {
      $$2 = -1;
      break;
     }
     $43 = HEAP32[$9>>2]|0;
     $44 = $43;
     $45 = $8;
     $46 = (($44) - ($45))|0;
     $47 = ($46|0)<(160);
     if (!($47)) {
      $$2 = 0;
      break;
     }
     $48 = HEAP32[$10>>2]|0;
     $49 = ((($43)) + 4|0);
     HEAP32[$9>>2] = $49;
     HEAP32[$43>>2] = $48;
     HEAP32[$10>>2] = 0;
     $$2 = 0;
     break;
    }
   }
   $50 = ((($11)) + 128|0);
   $$0$i$idx = 0;
   while(1) {
    $$0$i$ptr = (($11) + ($$0$i$idx<<2)|0);
    $51 = ($$0$i$idx|0)==(32);
    if ($51) {
     $$0$lcssa$i = $50;
     break;
    }
    $52 = HEAP32[$$0$i$ptr>>2]|0;
    $53 = ($52|0)==($0|0);
    $$0$i$add = (($$0$i$idx) + 1)|0;
    if ($53) {
     $$0$lcssa$i = $$0$i$ptr;
     break;
    } else {
     $$0$i$idx = $$0$i$add;
    }
   }
   $54 = $$0$lcssa$i;
   $55 = $11;
   $56 = (($54) - ($55))|0;
   $57 = ($56|0)>(124);
   if ($57) {
    $$2 = -1;
   } else {
    $58 = $56 >> 2;
    $59 = (5648 + ($58)|0);
    $60 = HEAP8[$59>>0]|0;
    $61 = (($56) + -88)|0;
    $62 = $61 >>> 2;
    $63 = $61 << 30;
    $64 = $62 | $63;
    switch ($64|0) {
    case 2: case 3:  {
     $65 = HEAP32[$4>>2]|0;
     $66 = ($65|0)==($3|0);
     if (!($66)) {
      $67 = ((($65)) + -1|0);
      $68 = HEAP8[$67>>0]|0;
      $69 = $68 & 95;
      $70 = HEAP8[$2>>0]|0;
      $71 = $70 & 127;
      $72 = ($69<<24>>24)==($71<<24>>24);
      if (!($72)) {
       $$2 = -1;
       break L1;
      }
     }
     $73 = ((($65)) + 1|0);
     HEAP32[$4>>2] = $73;
     HEAP8[$65>>0] = $60;
     $$2 = 0;
     break L1;
     break;
    }
    case 1: case 0:  {
     HEAP8[$2>>0] = 80;
     break;
    }
    default: {
     $74 = $60 & 95;
     $75 = $74&255;
     $76 = HEAP8[$2>>0]|0;
     $77 = $76 << 24 >> 24;
     $78 = ($75|0)==($77|0);
     if ($78) {
      $79 = $75 | 128;
      $80 = $79&255;
      HEAP8[$2>>0] = $80;
      $81 = HEAP8[$1>>0]|0;
      $82 = ($81<<24>>24)==(0);
      if (!($82)) {
       HEAP8[$1>>0] = 0;
       $83 = ((($7)) + 11|0);
       $84 = HEAP8[$83>>0]|0;
       $85 = ($84<<24>>24)<(0);
       $86 = ((($7)) + 4|0);
       $87 = HEAP32[$86>>2]|0;
       $88 = $84&255;
       $89 = $85 ? $87 : $88;
       $90 = ($89|0)==(0);
       if (!($90)) {
        $91 = HEAP32[$9>>2]|0;
        $92 = $91;
        $93 = $8;
        $94 = (($92) - ($93))|0;
        $95 = ($94|0)<(160);
        if ($95) {
         $96 = HEAP32[$10>>2]|0;
         $97 = ((($91)) + 4|0);
         HEAP32[$9>>2] = $97;
         HEAP32[$91>>2] = $96;
        }
       }
      }
     }
    }
    }
    $98 = HEAP32[$4>>2]|0;
    $99 = ((($98)) + 1|0);
    HEAP32[$4>>2] = $99;
    HEAP8[$98>>0] = $60;
    $100 = ($56|0)>(84);
    if ($100) {
     $$2 = 0;
    } else {
     $101 = HEAP32[$10>>2]|0;
     $102 = (($101) + 1)|0;
     HEAP32[$10>>2] = $102;
     $$2 = 0;
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $6 = sp + 160|0;
 $7 = sp + 328|0;
 $8 = sp + 324|0;
 $9 = sp + 312|0;
 $10 = sp + 300|0;
 $11 = sp + 296|0;
 $12 = sp;
 $13 = sp + 292|0;
 $14 = sp + 288|0;
 $15 = sp + 333|0;
 $16 = sp + 332|0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9,$3,$6,$7,$8);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($10)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($10)) + 8|0);
 if ($21) {
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 2147483647;
  $phitmp$i = (($24) + -1)|0;
  $25 = $phitmp$i;
 } else {
  $25 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$25,0);
 $26 = HEAP8[$19>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$10>>2]|0;
 $29 = $27 ? $28 : $10;
 HEAP32[$11>>2] = $29;
 HEAP32[$13>>2] = $12;
 HEAP32[$14>>2] = 0;
 HEAP8[$15>>0] = 1;
 HEAP8[$16>>0] = 69;
 $30 = ((($10)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $29;$156 = $$pre;$31 = $$pre;
 L8: while(1) {
  $32 = ($31|0)==(0|0);
  if ($32) {
   $131 = 0;$157 = 1;$81 = 0;
  } else {
   $33 = ((($31)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($31)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($34|0)==($36|0);
   if ($37) {
    $38 = HEAP32[$31>>2]|0;
    $39 = ((($38)) + 36|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (FUNCTION_TABLE_ii[$40 & 1023]($31)|0);
    $$0$i$i$i$i15 = $41;
   } else {
    $42 = HEAP32[$34>>2]|0;
    $43 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($42)|0);
    $$0$i$i$i$i15 = $43;
   }
   $44 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $45 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15,$44)|0);
   if ($45) {
    HEAP32[$1>>2] = 0;
    $131 = 0;$157 = 1;$81 = 0;
   } else {
    $131 = $156;$157 = 0;$81 = $31;
   }
  }
  $46 = HEAP32[$2>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 19;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $53 = HEAP32[$46>>2]|0;
     $54 = ((($53)) + 36|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
     $$0$i$i2$i$i21 = $56;
    } else {
     $57 = HEAP32[$49>>2]|0;
     $58 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($57)|0);
     $$0$i$i2$i$i21 = $58;
    }
    $59 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $60 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21,$59)|0);
    if ($60) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($157) {
      $158 = $46;
      break;
     } else {
      $$2 = $$0;$139 = $46;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;$139 = 0;
    break;
   } else {
    $158 = 0;
   }
  }
  $61 = HEAP32[$11>>2]|0;
  $62 = HEAP8[$19>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = HEAP32[$30>>2]|0;
  $65 = $62&255;
  $66 = $63 ? $64 : $65;
  $67 = (($$0) + ($66)|0);
  $68 = ($61|0)==($67|0);
  if ($68) {
   $69 = $66 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$69,0);
   $70 = HEAP8[$19>>0]|0;
   $71 = ($70<<24>>24)<(0);
   if ($71) {
    $72 = HEAP32[$22>>2]|0;
    $73 = $72 & 2147483647;
    $phitmp$i28 = (($73) + -1)|0;
    $74 = $phitmp$i28;
   } else {
    $74 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$74,0);
   $75 = HEAP8[$19>>0]|0;
   $76 = ($75<<24>>24)<(0);
   $77 = HEAP32[$10>>2]|0;
   $78 = $76 ? $77 : $10;
   $79 = (($78) + ($66)|0);
   HEAP32[$11>>2] = $79;
   $$1 = $78;
  } else {
   $$1 = $$0;
  }
  $80 = ((($81)) + 12|0);
  $82 = HEAP32[$80>>2]|0;
  $83 = ((($81)) + 16|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($82|0)==($84|0);
  if ($85) {
   $86 = HEAP32[$81>>2]|0;
   $87 = ((($86)) + 36|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = (FUNCTION_TABLE_ii[$88 & 1023]($81)|0);
   $$0$i$i31 = $89;
  } else {
   $90 = HEAP32[$82>>2]|0;
   $91 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($90)|0);
   $$0$i$i31 = $91;
  }
  $92 = HEAP32[$7>>2]|0;
  $93 = HEAP32[$8>>2]|0;
  $94 = (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31,$15,$16,$$1,$11,$92,$93,$9,$12,$13,$14,$6)|0);
  $95 = ($94|0)==(0);
  if (!($95)) {
   $$2 = $$1;$139 = $158;
   break;
  }
  $96 = HEAP32[$80>>2]|0;
  $97 = HEAP32[$83>>2]|0;
  $98 = ($96|0)==($97|0);
  if ($98) {
   $99 = HEAP32[$81>>2]|0;
   $100 = ((($99)) + 40|0);
   $101 = HEAP32[$100>>2]|0;
   (FUNCTION_TABLE_ii[$101 & 1023]($81)|0);
  } else {
   $102 = ((($96)) + 4|0);
   HEAP32[$80>>2] = $102;
   $103 = HEAP32[$96>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($103)|0);
  }
  $$0 = $$1;$156 = $131;$31 = $81;
 }
 $104 = ((($9)) + 11|0);
 $105 = HEAP8[$104>>0]|0;
 $106 = ($105<<24>>24)<(0);
 $107 = ((($9)) + 4|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = $105&255;
 $110 = $106 ? $108 : $109;
 $111 = ($110|0)==(0);
 $112 = HEAP8[$15>>0]|0;
 $113 = ($112<<24>>24)==(0);
 $or$cond = $111 | $113;
 if (!($or$cond)) {
  $114 = HEAP32[$13>>2]|0;
  $115 = $114;
  $116 = $12;
  $117 = (($115) - ($116))|0;
  $118 = ($117|0)<(160);
  if ($118) {
   $119 = HEAP32[$14>>2]|0;
   $120 = ((($114)) + 4|0);
   HEAP32[$13>>2] = $120;
   HEAP32[$114>>2] = $119;
  }
 }
 $121 = HEAP32[$11>>2]|0;
 $122 = (+__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2,$121,$4));
 HEAPF64[$5>>3] = $122;
 $123 = HEAP32[$13>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9,$12,$123,$4);
 $124 = ($81|0)==(0|0);
 if ($124) {
  $159 = 1;
 } else {
  $125 = ((($81)) + 12|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = ((($81)) + 16|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ($126|0)==($128|0);
  if ($129) {
   $130 = HEAP32[$131>>2]|0;
   $132 = ((($130)) + 36|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = (FUNCTION_TABLE_ii[$133 & 1023]($81)|0);
   $$0$i$i$i$i = $134;
  } else {
   $135 = HEAP32[$126>>2]|0;
   $136 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($135)|0);
   $$0$i$i$i$i = $136;
  }
  $137 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $138 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$137)|0);
  if ($138) {
   HEAP32[$1>>2] = 0;
   $159 = 1;
  } else {
   $159 = 0;
  }
 }
 $140 = ($139|0)==(0|0);
 do {
  if ($140) {
   label = 48;
  } else {
   $141 = ((($139)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($139)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$139>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 1023]($139)|0);
    $$0$i$i2$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $151 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($150)|0);
    $$0$i$i2$i$i = $151;
   }
   $152 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $153 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$152)|0);
   if ($153) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($159) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($159) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $154 = HEAP32[$4>>2]|0;
  $155 = $154 | 2;
  HEAP32[$4>>2] = $155;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond = 0, $phitmp$i = 0, $phitmp$i28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $6 = sp + 160|0;
 $7 = sp + 328|0;
 $8 = sp + 324|0;
 $9 = sp + 312|0;
 $10 = sp + 300|0;
 $11 = sp + 296|0;
 $12 = sp;
 $13 = sp + 292|0;
 $14 = sp + 288|0;
 $15 = sp + 333|0;
 $16 = sp + 332|0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9,$3,$6,$7,$8);
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($10)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($10)) + 8|0);
 if ($21) {
  $23 = HEAP32[$22>>2]|0;
  $24 = $23 & 2147483647;
  $phitmp$i = (($24) + -1)|0;
  $25 = $phitmp$i;
 } else {
  $25 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$25,0);
 $26 = HEAP8[$19>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$10>>2]|0;
 $29 = $27 ? $28 : $10;
 HEAP32[$11>>2] = $29;
 HEAP32[$13>>2] = $12;
 HEAP32[$14>>2] = 0;
 HEAP8[$15>>0] = 1;
 HEAP8[$16>>0] = 69;
 $30 = ((($10)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $29;$156 = $$pre;$31 = $$pre;
 L8: while(1) {
  $32 = ($31|0)==(0|0);
  if ($32) {
   $131 = 0;$157 = 1;$81 = 0;
  } else {
   $33 = ((($31)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($31)) + 16|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($34|0)==($36|0);
   if ($37) {
    $38 = HEAP32[$31>>2]|0;
    $39 = ((($38)) + 36|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (FUNCTION_TABLE_ii[$40 & 1023]($31)|0);
    $$0$i$i$i$i15 = $41;
   } else {
    $42 = HEAP32[$34>>2]|0;
    $43 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($42)|0);
    $$0$i$i$i$i15 = $43;
   }
   $44 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $45 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15,$44)|0);
   if ($45) {
    HEAP32[$1>>2] = 0;
    $131 = 0;$157 = 1;$81 = 0;
   } else {
    $131 = $156;$157 = 0;$81 = $31;
   }
  }
  $46 = HEAP32[$2>>2]|0;
  $47 = ($46|0)==(0|0);
  do {
   if ($47) {
    label = 19;
   } else {
    $48 = ((($46)) + 12|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ((($46)) + 16|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $53 = HEAP32[$46>>2]|0;
     $54 = ((($53)) + 36|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
     $$0$i$i2$i$i21 = $56;
    } else {
     $57 = HEAP32[$49>>2]|0;
     $58 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($57)|0);
     $$0$i$i2$i$i21 = $58;
    }
    $59 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $60 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21,$59)|0);
    if ($60) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($157) {
      $158 = $46;
      break;
     } else {
      $$2 = $$0;$139 = $46;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;$139 = 0;
    break;
   } else {
    $158 = 0;
   }
  }
  $61 = HEAP32[$11>>2]|0;
  $62 = HEAP8[$19>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = HEAP32[$30>>2]|0;
  $65 = $62&255;
  $66 = $63 ? $64 : $65;
  $67 = (($$0) + ($66)|0);
  $68 = ($61|0)==($67|0);
  if ($68) {
   $69 = $66 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$69,0);
   $70 = HEAP8[$19>>0]|0;
   $71 = ($70<<24>>24)<(0);
   if ($71) {
    $72 = HEAP32[$22>>2]|0;
    $73 = $72 & 2147483647;
    $phitmp$i28 = (($73) + -1)|0;
    $74 = $phitmp$i28;
   } else {
    $74 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10,$74,0);
   $75 = HEAP8[$19>>0]|0;
   $76 = ($75<<24>>24)<(0);
   $77 = HEAP32[$10>>2]|0;
   $78 = $76 ? $77 : $10;
   $79 = (($78) + ($66)|0);
   HEAP32[$11>>2] = $79;
   $$1 = $78;
  } else {
   $$1 = $$0;
  }
  $80 = ((($81)) + 12|0);
  $82 = HEAP32[$80>>2]|0;
  $83 = ((($81)) + 16|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ($82|0)==($84|0);
  if ($85) {
   $86 = HEAP32[$81>>2]|0;
   $87 = ((($86)) + 36|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = (FUNCTION_TABLE_ii[$88 & 1023]($81)|0);
   $$0$i$i31 = $89;
  } else {
   $90 = HEAP32[$82>>2]|0;
   $91 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($90)|0);
   $$0$i$i31 = $91;
  }
  $92 = HEAP32[$7>>2]|0;
  $93 = HEAP32[$8>>2]|0;
  $94 = (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31,$15,$16,$$1,$11,$92,$93,$9,$12,$13,$14,$6)|0);
  $95 = ($94|0)==(0);
  if (!($95)) {
   $$2 = $$1;$139 = $158;
   break;
  }
  $96 = HEAP32[$80>>2]|0;
  $97 = HEAP32[$83>>2]|0;
  $98 = ($96|0)==($97|0);
  if ($98) {
   $99 = HEAP32[$81>>2]|0;
   $100 = ((($99)) + 40|0);
   $101 = HEAP32[$100>>2]|0;
   (FUNCTION_TABLE_ii[$101 & 1023]($81)|0);
  } else {
   $102 = ((($96)) + 4|0);
   HEAP32[$80>>2] = $102;
   $103 = HEAP32[$96>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($103)|0);
  }
  $$0 = $$1;$156 = $131;$31 = $81;
 }
 $104 = ((($9)) + 11|0);
 $105 = HEAP8[$104>>0]|0;
 $106 = ($105<<24>>24)<(0);
 $107 = ((($9)) + 4|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = $105&255;
 $110 = $106 ? $108 : $109;
 $111 = ($110|0)==(0);
 $112 = HEAP8[$15>>0]|0;
 $113 = ($112<<24>>24)==(0);
 $or$cond = $111 | $113;
 if (!($or$cond)) {
  $114 = HEAP32[$13>>2]|0;
  $115 = $114;
  $116 = $12;
  $117 = (($115) - ($116))|0;
  $118 = ($117|0)<(160);
  if ($118) {
   $119 = HEAP32[$14>>2]|0;
   $120 = ((($114)) + 4|0);
   HEAP32[$13>>2] = $120;
   HEAP32[$114>>2] = $119;
  }
 }
 $121 = HEAP32[$11>>2]|0;
 $122 = (+__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2,$121,$4));
 HEAPF32[$5>>2] = $122;
 $123 = HEAP32[$13>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9,$12,$123,$4);
 $124 = ($81|0)==(0|0);
 if ($124) {
  $159 = 1;
 } else {
  $125 = ((($81)) + 12|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = ((($81)) + 16|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ($126|0)==($128|0);
  if ($129) {
   $130 = HEAP32[$131>>2]|0;
   $132 = ((($130)) + 36|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = (FUNCTION_TABLE_ii[$133 & 1023]($81)|0);
   $$0$i$i$i$i = $134;
  } else {
   $135 = HEAP32[$126>>2]|0;
   $136 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($135)|0);
   $$0$i$i$i$i = $136;
  }
  $137 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $138 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$137)|0);
  if ($138) {
   HEAP32[$1>>2] = 0;
   $159 = 1;
  } else {
   $159 = 0;
  }
 }
 $140 = ($139|0)==(0|0);
 do {
  if ($140) {
   label = 48;
  } else {
   $141 = ((($139)) + 12|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = ((($139)) + 16|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = ($142|0)==($144|0);
   if ($145) {
    $146 = HEAP32[$139>>2]|0;
    $147 = ((($146)) + 36|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (FUNCTION_TABLE_ii[$148 & 1023]($139)|0);
    $$0$i$i2$i$i = $149;
   } else {
    $150 = HEAP32[$142>>2]|0;
    $151 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($150)|0);
    $$0$i$i2$i$i = $151;
   }
   $152 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $153 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$152)|0);
   if ($153) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($159) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($159) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $154 = HEAP32[$4>>2]|0;
  $155 = $154 | 2;
  HEAP32[$4>>2] = $155;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $6 = sp + 300|0;
 $7 = sp + 160|0;
 $8 = sp + 288|0;
 $9 = sp + 276|0;
 $10 = sp + 272|0;
 $11 = sp;
 $12 = sp + 268|0;
 $13 = sp + 264|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$3,$7)|0);
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$157 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $132 = 0;$158 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP32[$33>>2]|0;
    $42 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $132 = 0;$158 = 1;$80 = 0;
   } else {
    $132 = $157;$158 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP32[$48>>2]|0;
     $57 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($158) {
      $159 = $45;
      break;
     } else {
      $$2 = $$0;$140 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;$140 = 0;
    break;
   } else {
    $159 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP32[$81>>2]|0;
   $90 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = HEAP32[$6>>2]|0;
  $92 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41,$14,$$1,$10,$13,$91,$8,$11,$12,$15)|0);
  $93 = ($92|0)==(0);
  if (!($93)) {
   $$2 = $$1;$140 = $159;
   break;
  }
  $94 = HEAP32[$79>>2]|0;
  $95 = HEAP32[$82>>2]|0;
  $96 = ($94|0)==($95|0);
  if ($96) {
   $97 = HEAP32[$80>>2]|0;
   $98 = ((($97)) + 40|0);
   $99 = HEAP32[$98>>2]|0;
   (FUNCTION_TABLE_ii[$99 & 1023]($80)|0);
  } else {
   $100 = ((($94)) + 4|0);
   HEAP32[$79>>2] = $100;
   $101 = HEAP32[$94>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
  }
  $$0 = $$1;$157 = $132;$30 = $80;
 }
 $102 = ((($8)) + 11|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = ($103<<24>>24)<(0);
 $105 = ((($8)) + 4|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $103&255;
 $108 = $104 ? $106 : $107;
 $109 = ($108|0)==(0);
 if (!($109)) {
  $110 = HEAP32[$12>>2]|0;
  $111 = $110;
  $112 = $11;
  $113 = (($111) - ($112))|0;
  $114 = ($113|0)<(160);
  if ($114) {
   $115 = HEAP32[$13>>2]|0;
   $116 = ((($110)) + 4|0);
   HEAP32[$12>>2] = $116;
   HEAP32[$110>>2] = $115;
  }
 }
 $117 = HEAP32[$10>>2]|0;
 $118 = (__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2,$117,$4,$14)|0);
 $119 = (getTempRet0() | 0);
 $120 = $5;
 $121 = $120;
 HEAP32[$121>>2] = $118;
 $122 = (($120) + 4)|0;
 $123 = $122;
 HEAP32[$123>>2] = $119;
 $124 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$124,$4);
 $125 = ($80|0)==(0|0);
 if ($125) {
  $160 = 1;
 } else {
  $126 = ((($80)) + 12|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ((($80)) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = ($127|0)==($129|0);
  if ($130) {
   $131 = HEAP32[$132>>2]|0;
   $133 = ((($131)) + 36|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($80)|0);
   $$0$i$i$i$i = $135;
  } else {
   $136 = HEAP32[$127>>2]|0;
   $137 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($136)|0);
   $$0$i$i$i$i = $137;
  }
  $138 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $139 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$138)|0);
  if ($139) {
   HEAP32[$1>>2] = 0;
   $160 = 1;
  } else {
   $160 = 0;
  }
 }
 $141 = ($140|0)==(0|0);
 do {
  if ($141) {
   label = 48;
  } else {
   $142 = ((($140)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($140)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$140>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 1023]($140)|0);
    $$0$i$i2$i$i = $150;
   } else {
    $151 = HEAP32[$143>>2]|0;
    $152 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($151)|0);
    $$0$i$i2$i$i = $152;
   }
   $153 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $154 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$153)|0);
   if ($154) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($160) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($160) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $155 = HEAP32[$4>>2]|0;
  $156 = $155 | 2;
  HEAP32[$4>>2] = $156;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_($0,$1,$2)|0);
 return ($3|0);
}
function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNKSt3__28ios_base6getlocEv($3,$1);
 $4 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,36764)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_ii[$7 & 1023]($4)|0);
 HEAP32[$2>>2] = $8;
 $9 = HEAP32[$4>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 1023]($0,$4);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 __ZNKSt3__28ios_base6getlocEv($3,$1);
 $4 = (__ZNKSt3__26locale9use_facetERNS0_2idE($3,36756)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 (FUNCTION_TABLE_iiiii[$7 & 511]($4,5648,(5674),$2)|0);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;return ($2|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $6 = sp + 300|0;
 $7 = sp + 160|0;
 $8 = sp + 288|0;
 $9 = sp + 276|0;
 $10 = sp + 272|0;
 $11 = sp;
 $12 = sp + 268|0;
 $13 = sp + 264|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$3,$7)|0);
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$152 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $127 = 0;$153 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP32[$33>>2]|0;
    $42 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $127 = 0;$153 = 1;$80 = 0;
   } else {
    $127 = $152;$153 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP32[$48>>2]|0;
     $57 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($153) {
      $154 = $45;
      break;
     } else {
      $$2 = $$0;$135 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;$135 = 0;
    break;
   } else {
    $154 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP32[$81>>2]|0;
   $90 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = HEAP32[$6>>2]|0;
  $92 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41,$14,$$1,$10,$13,$91,$8,$11,$12,$15)|0);
  $93 = ($92|0)==(0);
  if (!($93)) {
   $$2 = $$1;$135 = $154;
   break;
  }
  $94 = HEAP32[$79>>2]|0;
  $95 = HEAP32[$82>>2]|0;
  $96 = ($94|0)==($95|0);
  if ($96) {
   $97 = HEAP32[$80>>2]|0;
   $98 = ((($97)) + 40|0);
   $99 = HEAP32[$98>>2]|0;
   (FUNCTION_TABLE_ii[$99 & 1023]($80)|0);
  } else {
   $100 = ((($94)) + 4|0);
   HEAP32[$79>>2] = $100;
   $101 = HEAP32[$94>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
  }
  $$0 = $$1;$152 = $127;$30 = $80;
 }
 $102 = ((($8)) + 11|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = ($103<<24>>24)<(0);
 $105 = ((($8)) + 4|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $103&255;
 $108 = $104 ? $106 : $107;
 $109 = ($108|0)==(0);
 if (!($109)) {
  $110 = HEAP32[$12>>2]|0;
  $111 = $110;
  $112 = $11;
  $113 = (($111) - ($112))|0;
  $114 = ($113|0)<(160);
  if ($114) {
   $115 = HEAP32[$13>>2]|0;
   $116 = ((($110)) + 4|0);
   HEAP32[$12>>2] = $116;
   HEAP32[$110>>2] = $115;
  }
 }
 $117 = HEAP32[$10>>2]|0;
 $118 = (__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2,$117,$4,$14)|0);
 HEAP32[$5>>2] = $118;
 $119 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$119,$4);
 $120 = ($80|0)==(0|0);
 if ($120) {
  $155 = 1;
 } else {
  $121 = ((($80)) + 12|0);
  $122 = HEAP32[$121>>2]|0;
  $123 = ((($80)) + 16|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($122|0)==($124|0);
  if ($125) {
   $126 = HEAP32[$127>>2]|0;
   $128 = ((($126)) + 36|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 1023]($80)|0);
   $$0$i$i$i$i = $130;
  } else {
   $131 = HEAP32[$122>>2]|0;
   $132 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($131)|0);
   $$0$i$i$i$i = $132;
  }
  $133 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $134 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$133)|0);
  if ($134) {
   HEAP32[$1>>2] = 0;
   $155 = 1;
  } else {
   $155 = 0;
  }
 }
 $136 = ($135|0)==(0|0);
 do {
  if ($136) {
   label = 48;
  } else {
   $137 = ((($135)) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = ((($135)) + 16|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = ($138|0)==($140|0);
   if ($141) {
    $142 = HEAP32[$135>>2]|0;
    $143 = ((($142)) + 36|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_ii[$144 & 1023]($135)|0);
    $$0$i$i2$i$i = $145;
   } else {
    $146 = HEAP32[$138>>2]|0;
    $147 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($146)|0);
    $$0$i$i2$i$i = $147;
   }
   $148 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $149 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$148)|0);
   if ($149) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($155) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($155) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $150 = HEAP32[$4>>2]|0;
  $151 = $150 | 2;
  HEAP32[$4>>2] = $151;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $6 = sp + 300|0;
 $7 = sp + 160|0;
 $8 = sp + 288|0;
 $9 = sp + 276|0;
 $10 = sp + 272|0;
 $11 = sp;
 $12 = sp + 268|0;
 $13 = sp + 264|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$3,$7)|0);
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$152 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $127 = 0;$153 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP32[$33>>2]|0;
    $42 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $127 = 0;$153 = 1;$80 = 0;
   } else {
    $127 = $152;$153 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP32[$48>>2]|0;
     $57 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($153) {
      $154 = $45;
      break;
     } else {
      $$2 = $$0;$135 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;$135 = 0;
    break;
   } else {
    $154 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP32[$81>>2]|0;
   $90 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = HEAP32[$6>>2]|0;
  $92 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41,$14,$$1,$10,$13,$91,$8,$11,$12,$15)|0);
  $93 = ($92|0)==(0);
  if (!($93)) {
   $$2 = $$1;$135 = $154;
   break;
  }
  $94 = HEAP32[$79>>2]|0;
  $95 = HEAP32[$82>>2]|0;
  $96 = ($94|0)==($95|0);
  if ($96) {
   $97 = HEAP32[$80>>2]|0;
   $98 = ((($97)) + 40|0);
   $99 = HEAP32[$98>>2]|0;
   (FUNCTION_TABLE_ii[$99 & 1023]($80)|0);
  } else {
   $100 = ((($94)) + 4|0);
   HEAP32[$79>>2] = $100;
   $101 = HEAP32[$94>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
  }
  $$0 = $$1;$152 = $127;$30 = $80;
 }
 $102 = ((($8)) + 11|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = ($103<<24>>24)<(0);
 $105 = ((($8)) + 4|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $103&255;
 $108 = $104 ? $106 : $107;
 $109 = ($108|0)==(0);
 if (!($109)) {
  $110 = HEAP32[$12>>2]|0;
  $111 = $110;
  $112 = $11;
  $113 = (($111) - ($112))|0;
  $114 = ($113|0)<(160);
  if ($114) {
   $115 = HEAP32[$13>>2]|0;
   $116 = ((($110)) + 4|0);
   HEAP32[$12>>2] = $116;
   HEAP32[$110>>2] = $115;
  }
 }
 $117 = HEAP32[$10>>2]|0;
 $118 = (__ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2,$117,$4,$14)|0);
 HEAP32[$5>>2] = $118;
 $119 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$119,$4);
 $120 = ($80|0)==(0|0);
 if ($120) {
  $155 = 1;
 } else {
  $121 = ((($80)) + 12|0);
  $122 = HEAP32[$121>>2]|0;
  $123 = ((($80)) + 16|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($122|0)==($124|0);
  if ($125) {
   $126 = HEAP32[$127>>2]|0;
   $128 = ((($126)) + 36|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 1023]($80)|0);
   $$0$i$i$i$i = $130;
  } else {
   $131 = HEAP32[$122>>2]|0;
   $132 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($131)|0);
   $$0$i$i$i$i = $132;
  }
  $133 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $134 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$133)|0);
  if ($134) {
   HEAP32[$1>>2] = 0;
   $155 = 1;
  } else {
   $155 = 0;
  }
 }
 $136 = ($135|0)==(0|0);
 do {
  if ($136) {
   label = 48;
  } else {
   $137 = ((($135)) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = ((($135)) + 16|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = ($138|0)==($140|0);
   if ($141) {
    $142 = HEAP32[$135>>2]|0;
    $143 = ((($142)) + 36|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_ii[$144 & 1023]($135)|0);
    $$0$i$i2$i$i = $145;
   } else {
    $146 = HEAP32[$138>>2]|0;
    $147 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($146)|0);
    $$0$i$i2$i$i = $147;
   }
   $148 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $149 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$148)|0);
   if ($149) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($155) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($155) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $150 = HEAP32[$4>>2]|0;
  $151 = $150 | 2;
  HEAP32[$4>>2] = $151;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $6 = sp + 300|0;
 $7 = sp + 160|0;
 $8 = sp + 288|0;
 $9 = sp + 276|0;
 $10 = sp + 272|0;
 $11 = sp;
 $12 = sp + 268|0;
 $13 = sp + 264|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$3,$7)|0);
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$152 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $127 = 0;$153 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP32[$33>>2]|0;
    $42 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $127 = 0;$153 = 1;$80 = 0;
   } else {
    $127 = $152;$153 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP32[$48>>2]|0;
     $57 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($153) {
      $154 = $45;
      break;
     } else {
      $$2 = $$0;$135 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;$135 = 0;
    break;
   } else {
    $154 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP32[$81>>2]|0;
   $90 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = HEAP32[$6>>2]|0;
  $92 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41,$14,$$1,$10,$13,$91,$8,$11,$12,$15)|0);
  $93 = ($92|0)==(0);
  if (!($93)) {
   $$2 = $$1;$135 = $154;
   break;
  }
  $94 = HEAP32[$79>>2]|0;
  $95 = HEAP32[$82>>2]|0;
  $96 = ($94|0)==($95|0);
  if ($96) {
   $97 = HEAP32[$80>>2]|0;
   $98 = ((($97)) + 40|0);
   $99 = HEAP32[$98>>2]|0;
   (FUNCTION_TABLE_ii[$99 & 1023]($80)|0);
  } else {
   $100 = ((($94)) + 4|0);
   HEAP32[$79>>2] = $100;
   $101 = HEAP32[$94>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
  }
  $$0 = $$1;$152 = $127;$30 = $80;
 }
 $102 = ((($8)) + 11|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = ($103<<24>>24)<(0);
 $105 = ((($8)) + 4|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $103&255;
 $108 = $104 ? $106 : $107;
 $109 = ($108|0)==(0);
 if (!($109)) {
  $110 = HEAP32[$12>>2]|0;
  $111 = $110;
  $112 = $11;
  $113 = (($111) - ($112))|0;
  $114 = ($113|0)<(160);
  if ($114) {
   $115 = HEAP32[$13>>2]|0;
   $116 = ((($110)) + 4|0);
   HEAP32[$12>>2] = $116;
   HEAP32[$110>>2] = $115;
  }
 }
 $117 = HEAP32[$10>>2]|0;
 $118 = (__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2,$117,$4,$14)|0);
 HEAP16[$5>>1] = $118;
 $119 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$119,$4);
 $120 = ($80|0)==(0|0);
 if ($120) {
  $155 = 1;
 } else {
  $121 = ((($80)) + 12|0);
  $122 = HEAP32[$121>>2]|0;
  $123 = ((($80)) + 16|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($122|0)==($124|0);
  if ($125) {
   $126 = HEAP32[$127>>2]|0;
   $128 = ((($126)) + 36|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 1023]($80)|0);
   $$0$i$i$i$i = $130;
  } else {
   $131 = HEAP32[$122>>2]|0;
   $132 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($131)|0);
   $$0$i$i$i$i = $132;
  }
  $133 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $134 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$133)|0);
  if ($134) {
   HEAP32[$1>>2] = 0;
   $155 = 1;
  } else {
   $155 = 0;
  }
 }
 $136 = ($135|0)==(0|0);
 do {
  if ($136) {
   label = 48;
  } else {
   $137 = ((($135)) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = ((($135)) + 16|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = ($138|0)==($140|0);
   if ($141) {
    $142 = HEAP32[$135>>2]|0;
    $143 = ((($142)) + 36|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_ii[$144 & 1023]($135)|0);
    $$0$i$i2$i$i = $145;
   } else {
    $146 = HEAP32[$138>>2]|0;
    $147 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($146)|0);
    $$0$i$i2$i$i = $147;
   }
   $148 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $149 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$148)|0);
   if ($149) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($155) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($155) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $150 = HEAP32[$4>>2]|0;
  $151 = $150 | 2;
  HEAP32[$4>>2] = $151;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $6 = sp + 300|0;
 $7 = sp + 160|0;
 $8 = sp + 288|0;
 $9 = sp + 276|0;
 $10 = sp + 272|0;
 $11 = sp;
 $12 = sp + 268|0;
 $13 = sp + 264|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$3,$7)|0);
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$157 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $132 = 0;$158 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP32[$33>>2]|0;
    $42 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $132 = 0;$158 = 1;$80 = 0;
   } else {
    $132 = $157;$158 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP32[$48>>2]|0;
     $57 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($158) {
      $159 = $45;
      break;
     } else {
      $$2 = $$0;$140 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;$140 = 0;
    break;
   } else {
    $159 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP32[$81>>2]|0;
   $90 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = HEAP32[$6>>2]|0;
  $92 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41,$14,$$1,$10,$13,$91,$8,$11,$12,$15)|0);
  $93 = ($92|0)==(0);
  if (!($93)) {
   $$2 = $$1;$140 = $159;
   break;
  }
  $94 = HEAP32[$79>>2]|0;
  $95 = HEAP32[$82>>2]|0;
  $96 = ($94|0)==($95|0);
  if ($96) {
   $97 = HEAP32[$80>>2]|0;
   $98 = ((($97)) + 40|0);
   $99 = HEAP32[$98>>2]|0;
   (FUNCTION_TABLE_ii[$99 & 1023]($80)|0);
  } else {
   $100 = ((($94)) + 4|0);
   HEAP32[$79>>2] = $100;
   $101 = HEAP32[$94>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
  }
  $$0 = $$1;$157 = $132;$30 = $80;
 }
 $102 = ((($8)) + 11|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = ($103<<24>>24)<(0);
 $105 = ((($8)) + 4|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $103&255;
 $108 = $104 ? $106 : $107;
 $109 = ($108|0)==(0);
 if (!($109)) {
  $110 = HEAP32[$12>>2]|0;
  $111 = $110;
  $112 = $11;
  $113 = (($111) - ($112))|0;
  $114 = ($113|0)<(160);
  if ($114) {
   $115 = HEAP32[$13>>2]|0;
   $116 = ((($110)) + 4|0);
   HEAP32[$12>>2] = $116;
   HEAP32[$110>>2] = $115;
  }
 }
 $117 = HEAP32[$10>>2]|0;
 $118 = (__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2,$117,$4,$14)|0);
 $119 = (getTempRet0() | 0);
 $120 = $5;
 $121 = $120;
 HEAP32[$121>>2] = $118;
 $122 = (($120) + 4)|0;
 $123 = $122;
 HEAP32[$123>>2] = $119;
 $124 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$124,$4);
 $125 = ($80|0)==(0|0);
 if ($125) {
  $160 = 1;
 } else {
  $126 = ((($80)) + 12|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ((($80)) + 16|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = ($127|0)==($129|0);
  if ($130) {
   $131 = HEAP32[$132>>2]|0;
   $133 = ((($131)) + 36|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = (FUNCTION_TABLE_ii[$134 & 1023]($80)|0);
   $$0$i$i$i$i = $135;
  } else {
   $136 = HEAP32[$127>>2]|0;
   $137 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($136)|0);
   $$0$i$i$i$i = $137;
  }
  $138 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $139 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$138)|0);
  if ($139) {
   HEAP32[$1>>2] = 0;
   $160 = 1;
  } else {
   $160 = 0;
  }
 }
 $141 = ($140|0)==(0|0);
 do {
  if ($141) {
   label = 48;
  } else {
   $142 = ((($140)) + 12|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ((($140)) + 16|0);
   $145 = HEAP32[$144>>2]|0;
   $146 = ($143|0)==($145|0);
   if ($146) {
    $147 = HEAP32[$140>>2]|0;
    $148 = ((($147)) + 36|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (FUNCTION_TABLE_ii[$149 & 1023]($140)|0);
    $$0$i$i2$i$i = $150;
   } else {
    $151 = HEAP32[$143>>2]|0;
    $152 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($151)|0);
    $$0$i$i2$i$i = $152;
   }
   $153 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $154 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$153)|0);
   if ($154) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($160) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($160) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $155 = HEAP32[$4>>2]|0;
  $156 = $155 | 2;
  HEAP32[$4>>2] = $156;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond$i$i = 0, $phitmp$i = 0, $phitmp$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $6 = sp + 300|0;
 $7 = sp + 160|0;
 $8 = sp + 288|0;
 $9 = sp + 276|0;
 $10 = sp + 272|0;
 $11 = sp;
 $12 = sp + 268|0;
 $13 = sp + 264|0;
 $14 = (__ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3)|0);
 $15 = (__ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0,$3,$7)|0);
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8,$3,$6);
 ;HEAP32[$9>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $16 = (($9) + ($$0$i$i<<2)|0);
  HEAP32[$16>>2] = 0;
  $17 = (($$0$i$i) + 1)|0;
  $$0$i$i = $17;
 }
 $18 = ((($9)) + 11|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)<(0);
 $21 = ((($9)) + 8|0);
 if ($20) {
  $22 = HEAP32[$21>>2]|0;
  $23 = $22 & 2147483647;
  $phitmp$i = (($23) + -1)|0;
  $24 = $phitmp$i;
 } else {
  $24 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$24,0);
 $25 = HEAP8[$18>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$9>>2]|0;
 $28 = $26 ? $27 : $9;
 HEAP32[$10>>2] = $28;
 HEAP32[$12>>2] = $11;
 HEAP32[$13>>2] = 0;
 $29 = ((($9)) + 4|0);
 $$pre = HEAP32[$1>>2]|0;
 $$0 = $28;$152 = $$pre;$30 = $$pre;
 L8: while(1) {
  $31 = ($30|0)==(0|0);
  if ($31) {
   $127 = 0;$153 = 1;$80 = 0;
  } else {
   $32 = ((($30)) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($30)) + 16|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33|0)==($35|0);
   if ($36) {
    $37 = HEAP32[$30>>2]|0;
    $38 = ((($37)) + 36|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_ii[$39 & 1023]($30)|0);
    $$0$i$i$i$i25 = $40;
   } else {
    $41 = HEAP32[$33>>2]|0;
    $42 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($41)|0);
    $$0$i$i$i$i25 = $42;
   }
   $43 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $44 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25,$43)|0);
   if ($44) {
    HEAP32[$1>>2] = 0;
    $127 = 0;$153 = 1;$80 = 0;
   } else {
    $127 = $152;$153 = 0;$80 = $30;
   }
  }
  $45 = HEAP32[$2>>2]|0;
  $46 = ($45|0)==(0|0);
  do {
   if ($46) {
    label = 19;
   } else {
    $47 = ((($45)) + 12|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = ((($45)) + 16|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48|0)==($50|0);
    if ($51) {
     $52 = HEAP32[$45>>2]|0;
     $53 = ((($52)) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_ii[$54 & 1023]($45)|0);
     $$0$i$i2$i$i31 = $55;
    } else {
     $56 = HEAP32[$48>>2]|0;
     $57 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($56)|0);
     $$0$i$i2$i$i31 = $57;
    }
    $58 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $59 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31,$58)|0);
    if ($59) {
     HEAP32[$2>>2] = 0;
     label = 19;
     break;
    } else {
     if ($153) {
      $154 = $45;
      break;
     } else {
      $$2 = $$0;$135 = $45;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;$135 = 0;
    break;
   } else {
    $154 = 0;
   }
  }
  $60 = HEAP32[$10>>2]|0;
  $61 = HEAP8[$18>>0]|0;
  $62 = ($61<<24>>24)<(0);
  $63 = HEAP32[$29>>2]|0;
  $64 = $61&255;
  $65 = $62 ? $63 : $64;
  $66 = (($$0) + ($65)|0);
  $67 = ($60|0)==($66|0);
  if ($67) {
   $68 = $65 << 1;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$68,0);
   $69 = HEAP8[$18>>0]|0;
   $70 = ($69<<24>>24)<(0);
   if ($70) {
    $71 = HEAP32[$21>>2]|0;
    $72 = $71 & 2147483647;
    $phitmp$i38 = (($72) + -1)|0;
    $73 = $phitmp$i38;
   } else {
    $73 = 10;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9,$73,0);
   $74 = HEAP8[$18>>0]|0;
   $75 = ($74<<24>>24)<(0);
   $76 = HEAP32[$9>>2]|0;
   $77 = $75 ? $76 : $9;
   $78 = (($77) + ($65)|0);
   HEAP32[$10>>2] = $78;
   $$1 = $77;
  } else {
   $$1 = $$0;
  }
  $79 = ((($80)) + 12|0);
  $81 = HEAP32[$79>>2]|0;
  $82 = ((($80)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81|0)==($83|0);
  if ($84) {
   $85 = HEAP32[$80>>2]|0;
   $86 = ((($85)) + 36|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = (FUNCTION_TABLE_ii[$87 & 1023]($80)|0);
   $$0$i$i41 = $88;
  } else {
   $89 = HEAP32[$81>>2]|0;
   $90 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($89)|0);
   $$0$i$i41 = $90;
  }
  $91 = HEAP32[$6>>2]|0;
  $92 = (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41,$14,$$1,$10,$13,$91,$8,$11,$12,$15)|0);
  $93 = ($92|0)==(0);
  if (!($93)) {
   $$2 = $$1;$135 = $154;
   break;
  }
  $94 = HEAP32[$79>>2]|0;
  $95 = HEAP32[$82>>2]|0;
  $96 = ($94|0)==($95|0);
  if ($96) {
   $97 = HEAP32[$80>>2]|0;
   $98 = ((($97)) + 40|0);
   $99 = HEAP32[$98>>2]|0;
   (FUNCTION_TABLE_ii[$99 & 1023]($80)|0);
  } else {
   $100 = ((($94)) + 4|0);
   HEAP32[$79>>2] = $100;
   $101 = HEAP32[$94>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
  }
  $$0 = $$1;$152 = $127;$30 = $80;
 }
 $102 = ((($8)) + 11|0);
 $103 = HEAP8[$102>>0]|0;
 $104 = ($103<<24>>24)<(0);
 $105 = ((($8)) + 4|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = $103&255;
 $108 = $104 ? $106 : $107;
 $109 = ($108|0)==(0);
 if (!($109)) {
  $110 = HEAP32[$12>>2]|0;
  $111 = $110;
  $112 = $11;
  $113 = (($111) - ($112))|0;
  $114 = ($113|0)<(160);
  if ($114) {
   $115 = HEAP32[$13>>2]|0;
   $116 = ((($110)) + 4|0);
   HEAP32[$12>>2] = $116;
   HEAP32[$110>>2] = $115;
  }
 }
 $117 = HEAP32[$10>>2]|0;
 $118 = (__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2,$117,$4,$14)|0);
 HEAP32[$5>>2] = $118;
 $119 = HEAP32[$12>>2]|0;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8,$11,$119,$4);
 $120 = ($80|0)==(0|0);
 if ($120) {
  $155 = 1;
 } else {
  $121 = ((($80)) + 12|0);
  $122 = HEAP32[$121>>2]|0;
  $123 = ((($80)) + 16|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ($122|0)==($124|0);
  if ($125) {
   $126 = HEAP32[$127>>2]|0;
   $128 = ((($126)) + 36|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 1023]($80)|0);
   $$0$i$i$i$i = $130;
  } else {
   $131 = HEAP32[$122>>2]|0;
   $132 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($131)|0);
   $$0$i$i$i$i = $132;
  }
  $133 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $134 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$133)|0);
  if ($134) {
   HEAP32[$1>>2] = 0;
   $155 = 1;
  } else {
   $155 = 0;
  }
 }
 $136 = ($135|0)==(0|0);
 do {
  if ($136) {
   label = 48;
  } else {
   $137 = ((($135)) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = ((($135)) + 16|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = ($138|0)==($140|0);
   if ($141) {
    $142 = HEAP32[$135>>2]|0;
    $143 = ((($142)) + 36|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_ii[$144 & 1023]($135)|0);
    $$0$i$i2$i$i = $145;
   } else {
    $146 = HEAP32[$138>>2]|0;
    $147 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($146)|0);
    $$0$i$i2$i$i = $147;
   }
   $148 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $149 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$148)|0);
   if ($149) {
    HEAP32[$2>>2] = 0;
    label = 48;
    break;
   } else {
    if ($155) {
     break;
    } else {
     label = 50;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 48) {
  if ($155) {
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $150 = HEAP32[$4>>2]|0;
  $151 = $150 | 2;
  HEAP32[$4>>2] = $151;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i116 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i122 = 0, $$0101 = 0, $$0105 = 0, $$0111 = 0, $$0112 = 0, $$0112140 = 0, $$092 = 0, $$093 = 0, $$094$off0 = 0, $$095 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1102 = 0, $$1106 = 0;
 var $$199 = 0, $$2$off0 = 0, $$2100 = 0, $$2103 = 0, $$2103$be = 0, $$2107 = 0, $$3 = 0, $$3104 = 0, $$3108 = 0, $$5 = 0, $$5110 = 0, $$6 = 0, $$7 = 0, $$pre$i$i$i = 0, $$pre$i$i$i118 = 0, $$sroa$0129$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i119 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp;
 $8 = $3;
 $9 = $2;
 $10 = (($8) - ($9))|0;
 $11 = (($10|0) / 12)&-1;
 $12 = ($11>>>0)>(100);
 if ($12) {
  $13 = (_malloc($11)|0);
  $14 = ($13|0)==(0|0);
  if ($14) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$0111 = $13;$$sroa$0129$0 = $13;
  }
 } else {
  $$0111 = $7;$$sroa$0129$0 = 0;
 }
 $$0101 = 0;$$0105 = $11;$$097 = $2;$$098 = $$0111;
 while(1) {
  $15 = ($$097|0)==($3|0);
  if ($15) {
   break;
  }
  $16 = ((($$097)) + 8|0);
  $17 = ((($16)) + 3|0);
  $18 = HEAP8[$17>>0]|0;
  $19 = ($18<<24>>24)<(0);
  if ($19) {
   $20 = ((($$097)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $23 = $21;
  } else {
   $22 = $18&255;
   $23 = $22;
  }
  $24 = ($23|0)==(0);
  if ($24) {
   HEAP8[$$098>>0] = 2;
   $25 = (($$0105) + -1)|0;
   $26 = (($$0101) + 1)|0;
   $$1102 = $26;$$1106 = $25;
  } else {
   HEAP8[$$098>>0] = 1;
   $$1102 = $$0101;$$1106 = $$0105;
  }
  $27 = ((($$097)) + 12|0);
  $28 = ((($$098)) + 1|0);
  $$0101 = $$1102;$$0105 = $$1106;$$097 = $27;$$098 = $28;
 }
 $$096 = 0;$$2103 = $$0101;$$2107 = $$0105;
 while(1) {
  $29 = HEAP32[$0>>2]|0;
  $30 = ($29|0)==(0|0);
  do {
   if ($30) {
    $61 = 1;
   } else {
    $31 = ((($29)) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($29)) + 16|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ($32|0)==($34|0);
    if ($35) {
     $36 = HEAP32[$29>>2]|0;
     $37 = ((($36)) + 36|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = (FUNCTION_TABLE_ii[$38 & 1023]($29)|0);
     $$0$i$i$i$i = $39;
    } else {
     $40 = HEAP32[$32>>2]|0;
     $41 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($40)|0);
     $$0$i$i$i$i = $41;
    }
    $42 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $43 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$42)|0);
    if ($43) {
     HEAP32[$0>>2] = 0;
     $61 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$0>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $61 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $44 = HEAP32[$1>>2]|0;
  $45 = ($44|0)==(0|0);
  if ($45) {
   $60 = 1;$79 = 0;
  } else {
   $46 = ((($44)) + 12|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ((($44)) + 16|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ($47|0)==($49|0);
   if ($50) {
    $51 = HEAP32[$44>>2]|0;
    $52 = ((($51)) + 36|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = (FUNCTION_TABLE_ii[$53 & 1023]($44)|0);
    $$0$i$i2$i$i = $54;
   } else {
    $55 = HEAP32[$47>>2]|0;
    $56 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($55)|0);
    $$0$i$i2$i$i = $56;
   }
   $57 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $58 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$57)|0);
   if ($58) {
    HEAP32[$1>>2] = 0;
    $60 = 1;$79 = 0;
   } else {
    $60 = 0;$79 = $44;
   }
  }
  $59 = $61 ^ $60;
  $62 = ($$2107|0)!=(0);
  $63 = $62 & $59;
  $64 = HEAP32[$0>>2]|0;
  if (!($63)) {
   break;
  }
  $94 = ((($64)) + 12|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = ((($64)) + 16|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ($95|0)==($97|0);
  if ($98) {
   $99 = HEAP32[$64>>2]|0;
   $100 = ((($99)) + 36|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = (FUNCTION_TABLE_ii[$101 & 1023]($64)|0);
   $$0$i$i = $102;
  } else {
   $103 = HEAP32[$95>>2]|0;
   $104 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($103)|0);
   $$0$i$i = $104;
  }
  if ($6) {
   $$095 = $$0$i$i;
  } else {
   $105 = HEAP32[$4>>2]|0;
   $106 = ((($105)) + 28|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (FUNCTION_TABLE_iii[$107 & 1023]($4,$$0$i$i)|0);
   $$095 = $108;
  }
  $109 = (($$096) + 1)|0;
  $$093 = $2;$$094$off0 = 0;$$199 = $$0111;$$3104 = $$2103;$$3108 = $$2107;
  while(1) {
   $110 = ($$093|0)==($3|0);
   if ($110) {
    break;
   }
   $111 = HEAP8[$$199>>0]|0;
   $112 = ($111<<24>>24)==(1);
   do {
    if ($112) {
     $113 = ((($$093)) + 8|0);
     $114 = ((($113)) + 3|0);
     $115 = HEAP8[$114>>0]|0;
     $116 = ($115<<24>>24)<(0);
     if ($116) {
      $117 = HEAP32[$$093>>2]|0;
      $119 = $117;
     } else {
      $119 = $$093;
     }
     $118 = (($119) + ($$096<<2)|0);
     $120 = HEAP32[$118>>2]|0;
     if ($6) {
      $$092 = $120;
     } else {
      $121 = HEAP32[$4>>2]|0;
      $122 = ((($121)) + 28|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = (FUNCTION_TABLE_iii[$123 & 1023]($4,$120)|0);
      $$092 = $124;
     }
     $125 = ($$095|0)==($$092|0);
     if (!($125)) {
      HEAP8[$$199>>0] = 0;
      $135 = (($$3108) + -1)|0;
      $$2$off0 = $$094$off0;$$5 = $$3104;$$5110 = $135;
      break;
     }
     $126 = HEAP8[$114>>0]|0;
     $127 = ($126<<24>>24)<(0);
     if ($127) {
      $128 = ((($$093)) + 4|0);
      $129 = HEAP32[$128>>2]|0;
      $131 = $129;
     } else {
      $130 = $126&255;
      $131 = $130;
     }
     $132 = ($131|0)==($109|0);
     if ($132) {
      $133 = (($$3108) + -1)|0;
      $134 = (($$3104) + 1)|0;
      HEAP8[$$199>>0] = 2;
      $$2$off0 = 1;$$5 = $134;$$5110 = $133;
     } else {
      $$2$off0 = 1;$$5 = $$3104;$$5110 = $$3108;
     }
    } else {
     $$2$off0 = $$094$off0;$$5 = $$3104;$$5110 = $$3108;
    }
   } while(0);
   $136 = ((($$093)) + 12|0);
   $137 = ((($$199)) + 1|0);
   $$093 = $136;$$094$off0 = $$2$off0;$$199 = $137;$$3104 = $$5;$$3108 = $$5110;
  }
  L67: do {
   if ($$094$off0) {
    $138 = HEAP32[$0>>2]|0;
    $139 = ((($138)) + 12|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ((($138)) + 16|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = ($140|0)==($142|0);
    if ($143) {
     $144 = HEAP32[$138>>2]|0;
     $145 = ((($144)) + 40|0);
     $146 = HEAP32[$145>>2]|0;
     (FUNCTION_TABLE_ii[$146 & 1023]($138)|0);
    } else {
     $147 = ((($140)) + 4|0);
     HEAP32[$139>>2] = $147;
     $148 = HEAP32[$140>>2]|0;
     (__ZNSt3__211char_traitsIwE11to_int_typeEw($148)|0);
    }
    $149 = (($$3104) + ($$3108))|0;
    $150 = ($149>>>0)>(1);
    if ($150) {
     $$0 = $2;$$2100 = $$0111;$$6 = $$3104;
     while(1) {
      $151 = ($$0|0)==($3|0);
      if ($151) {
       $$2103$be = $$6;
       break L67;
      }
      $152 = HEAP8[$$2100>>0]|0;
      $153 = ($152<<24>>24)==(2);
      if ($153) {
       $154 = ((($$0)) + 8|0);
       $155 = ((($154)) + 3|0);
       $156 = HEAP8[$155>>0]|0;
       $157 = ($156<<24>>24)<(0);
       if ($157) {
        $158 = ((($$0)) + 4|0);
        $159 = HEAP32[$158>>2]|0;
        $161 = $159;
       } else {
        $160 = $156&255;
        $161 = $160;
       }
       $162 = ($161|0)==($109|0);
       if ($162) {
        $$7 = $$6;
       } else {
        $163 = (($$6) + -1)|0;
        HEAP8[$$2100>>0] = 0;
        $$7 = $163;
       }
      } else {
       $$7 = $$6;
      }
      $164 = ((($$0)) + 12|0);
      $165 = ((($$2100)) + 1|0);
      $$0 = $164;$$2100 = $165;$$6 = $$7;
     }
    } else {
     $$2103$be = $$3104;
    }
   } else {
    $$2103$be = $$3104;
   }
  } while(0);
  $$096 = $109;$$2103 = $$2103$be;$$2107 = $$3108;
 }
 $65 = ($64|0)==(0|0);
 do {
  if ($65) {
   $175 = 1;
  } else {
   $66 = ((($64)) + 12|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ((($64)) + 16|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ($67|0)==($69|0);
   if ($70) {
    $71 = HEAP32[$64>>2]|0;
    $72 = ((($71)) + 36|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = (FUNCTION_TABLE_ii[$73 & 1023]($64)|0);
    $$0$i$i$i$i116 = $74;
   } else {
    $75 = HEAP32[$67>>2]|0;
    $76 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($75)|0);
    $$0$i$i$i$i116 = $76;
   }
   $77 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $78 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i116,$77)|0);
   if ($78) {
    HEAP32[$0>>2] = 0;
    $175 = 1;
    break;
   } else {
    $$pre$i$i$i118 = HEAP32[$0>>2]|0;
    $phitmp$i$i$i119 = ($$pre$i$i$i118|0)==(0|0);
    $175 = $phitmp$i$i$i119;
    break;
   }
  }
 } while(0);
 $80 = ($79|0)==(0|0);
 do {
  if ($80) {
   label = 41;
  } else {
   $81 = ((($79)) + 12|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = ((($79)) + 16|0);
   $84 = HEAP32[$83>>2]|0;
   $85 = ($82|0)==($84|0);
   if ($85) {
    $86 = HEAP32[$79>>2]|0;
    $87 = ((($86)) + 36|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = (FUNCTION_TABLE_ii[$88 & 1023]($79)|0);
    $$0$i$i2$i$i122 = $89;
   } else {
    $90 = HEAP32[$82>>2]|0;
    $91 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($90)|0);
    $$0$i$i2$i$i122 = $91;
   }
   $92 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $93 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i122,$92)|0);
   if ($93) {
    HEAP32[$1>>2] = 0;
    label = 41;
    break;
   } else {
    if ($175) {
     break;
    } else {
     label = 79;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 41) {
  if ($175) {
   label = 79;
  }
 }
 if ((label|0) == 79) {
  $166 = HEAP32[$5>>2]|0;
  $167 = $166 | 2;
  HEAP32[$5>>2] = $167;
 }
 $$0112 = $2;$$3 = $$0111;
 while(1) {
  $168 = ($$0112|0)==($3|0);
  if ($168) {
   label = 84;
   break;
  }
  $169 = HEAP8[$$3>>0]|0;
  $170 = ($169<<24>>24)==(2);
  if ($170) {
   $$0112140 = $$0112;
   break;
  }
  $171 = ((($$0112)) + 12|0);
  $172 = ((($$3)) + 1|0);
  $$0112 = $171;$$3 = $172;
 }
 if ((label|0) == 84) {
  $173 = HEAP32[$5>>2]|0;
  $174 = $173 | 4;
  HEAP32[$5>>2] = $174;
  $$0112140 = $3;
 }
 _free($$sroa$0129$0);
 STACKTOP = sp;return ($$0112140|0);
}
function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$pre = 0, $$pre13 = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 20|0;
 $5 = sp + 16|0;
 $6 = sp + 12|0;
 $7 = sp;
 $8 = ((($2)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 1;
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $13 = ((($12)) + 24|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$1>>2]|0;
  HEAP32[$5>>2] = $15;
  $16 = $4&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;
  $17 = (FUNCTION_TABLE_iiiiii[$14 & 511]($0,$$byval_copy,$2,$3,$16)|0);
  $$sroa$0$0 = $17;
 } else {
  __ZNKSt3__28ios_base6getlocEv($6,$2);
  $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36740)|0);
  __ZNSt3__26localeD2Ev($6);
  $19 = HEAP32[$18>>2]|0;
  if ($4) {
   $20 = ((($19)) + 24|0);
   $21 = HEAP32[$20>>2]|0;
   FUNCTION_TABLE_vii[$21 & 1023]($7,$18);
  } else {
   $22 = ((($19)) + 28|0);
   $23 = HEAP32[$22>>2]|0;
   FUNCTION_TABLE_vii[$23 & 1023]($7,$18);
  }
  $24 = ((($7)) + 11|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = ($25<<24>>24)<(0);
  $27 = HEAP32[$7>>2]|0;
  $28 = $26 ? $27 : $7;
  $29 = ((($7)) + 4|0);
  $$sroa$09$0 = $28;$30 = $25;$34 = $27;
  while(1) {
   $31 = ($30<<24>>24)<(0);
   $32 = HEAP32[$29>>2]|0;
   $33 = $30&255;
   $35 = $31 ? $34 : $7;
   $36 = $31 ? $32 : $33;
   $37 = (($35) + ($36)|0);
   $38 = ($$sroa$09$0|0)==($37|0);
   if ($38) {
    break;
   }
   $39 = HEAP8[$$sroa$09$0>>0]|0;
   $40 = HEAP32[$1>>2]|0;
   $41 = ($40|0)==(0|0);
   if (!($41)) {
    $42 = ((($40)) + 24|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = ((($40)) + 28|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = ($43|0)==($45|0);
    if ($46) {
     $47 = HEAP32[$40>>2]|0;
     $48 = ((($47)) + 52|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($39)|0);
     $51 = (FUNCTION_TABLE_iii[$49 & 1023]($40,$50)|0);
     $$0$i$i = $51;
    } else {
     $52 = ((($43)) + 1|0);
     HEAP32[$42>>2] = $52;
     HEAP8[$43>>0] = $39;
     $53 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($39)|0);
     $$0$i$i = $53;
    }
    $54 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $55 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i,$54)|0);
    if ($55) {
     HEAP32[$1>>2] = 0;
    }
   }
   $56 = ((($$sroa$09$0)) + 1|0);
   $$pre = HEAP8[$24>>0]|0;
   $$pre13 = HEAP32[$7>>2]|0;
   $$sroa$09$0 = $56;$30 = $$pre;$34 = $$pre13;
  }
  $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 12|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 ;HEAP8[$5>>0]=HEAP8[23434>>0]|0;HEAP8[$5+1>>0]=HEAP8[23434+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[23434+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[23434+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[23434+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[23434+5>>0]|0;
 $10 = ((($5)) + 1|0);
 $11 = ((($2)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($10,26678,1,$12);
 $13 = HEAP32[$11>>2]|0;
 $14 = $13 >>> 9;
 $$lobit = $14 & 1;
 $15 = (($$lobit) + 13)|0;
 $16 = (_llvm_stacksave()|0);
 $$alloca_mul = $15;
 $17 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $18 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $4;
 $19 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($17,$15,$18,$5,$vararg_buffer)|0);
 $20 = (($17) + ($19)|0);
 $21 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($17,$20,$2)|0);
 $22 = $$lobit << 1;
 $23 = $22 | 24;
 $24 = (($23) + -1)|0;
 $$alloca_mul6 = $24;
 $25 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($8,$2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($17,$21,$20,$25,$6,$7,$8);
 __ZNSt3__26localeD2Ev($8);
 $26 = HEAP32[$1>>2]|0;
 HEAP32[$9>>2] = $26;
 $27 = HEAP32[$6>>2]|0;
 $28 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
 $29 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$25,$27,$28,$2,$3)|0);
 _llvm_stackrestore(($16|0));
 STACKTOP = sp;return ($29|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $6 = sp;
 $7 = sp + 28|0;
 $8 = sp + 24|0;
 $9 = sp + 20|0;
 $10 = sp + 16|0;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = 37;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 0;
 $15 = ((($6)) + 1|0);
 $16 = ((($2)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($15,26683,1,$17);
 $18 = HEAP32[$16>>2]|0;
 $19 = $18 >>> 9;
 $$lobit = $19 & 1;
 $20 = (($$lobit) + 23)|0;
 $21 = (_llvm_stacksave()|0);
 $$alloca_mul = $20;
 $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $23 = (__ZNSt3__26__clocEv()|0);
 $24 = $vararg_buffer;
 $25 = $24;
 HEAP32[$25>>2] = $4;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $5;
 $28 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($22,$20,$23,$6,$vararg_buffer)|0);
 $29 = (($22) + ($28)|0);
 $30 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($22,$29,$2)|0);
 $31 = $$lobit << 1;
 $32 = $31 | 44;
 $33 = (($32) + -1)|0;
 $$alloca_mul6 = $33;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($9,$2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($22,$30,$29,$34,$7,$8,$9);
 __ZNSt3__26localeD2Ev($9);
 $35 = HEAP32[$1>>2]|0;
 HEAP32[$10>>2] = $35;
 $36 = HEAP32[$7>>2]|0;
 $37 = HEAP32[$8>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$10>>2]|0;
 $38 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$34,$36,$37,$2,$3)|0);
 _llvm_stackrestore(($21|0));
 STACKTOP = sp;return ($38|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 12|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 ;HEAP8[$5>>0]=HEAP8[23434>>0]|0;HEAP8[$5+1>>0]=HEAP8[23434+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[23434+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[23434+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[23434+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[23434+5>>0]|0;
 $10 = ((($5)) + 1|0);
 $11 = ((($2)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($10,26678,0,$12);
 $13 = HEAP32[$11>>2]|0;
 $14 = $13 >>> 9;
 $$lobit = $14 & 1;
 $15 = $$lobit | 12;
 $16 = (_llvm_stacksave()|0);
 $$alloca_mul = $15;
 $17 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $18 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $4;
 $19 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($17,$15,$18,$5,$vararg_buffer)|0);
 $20 = (($17) + ($19)|0);
 $21 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($17,$20,$2)|0);
 $22 = $$lobit << 1;
 $23 = $22 | 21;
 $$alloca_mul6 = $23;
 $24 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($8,$2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($17,$21,$20,$24,$6,$7,$8);
 __ZNSt3__26localeD2Ev($8);
 $25 = HEAP32[$1>>2]|0;
 HEAP32[$9>>2] = $25;
 $26 = HEAP32[$6>>2]|0;
 $27 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
 $28 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$24,$26,$27,$2,$3)|0);
 _llvm_stackrestore(($16|0));
 STACKTOP = sp;return ($28|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $6 = sp;
 $7 = sp + 28|0;
 $8 = sp + 24|0;
 $9 = sp + 20|0;
 $10 = sp + 16|0;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = 37;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 0;
 $15 = ((($6)) + 1|0);
 $16 = ((($2)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($15,26683,0,$17);
 $18 = HEAP32[$16>>2]|0;
 $19 = $18 >>> 9;
 $$lobit = $19 & 1;
 $20 = $$lobit | 22;
 $21 = (($20) + 1)|0;
 $22 = (_llvm_stacksave()|0);
 $$alloca_mul = $21;
 $23 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $24 = (__ZNSt3__26__clocEv()|0);
 $25 = $vararg_buffer;
 $26 = $25;
 HEAP32[$26>>2] = $4;
 $27 = (($25) + 4)|0;
 $28 = $27;
 HEAP32[$28>>2] = $5;
 $29 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($23,$21,$24,$6,$vararg_buffer)|0);
 $30 = (($23) + ($29)|0);
 $31 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$30,$2)|0);
 $32 = $20 << 1;
 $33 = (($32) + -1)|0;
 $$alloca_mul6 = $33;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($9,$2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($23,$31,$30,$34,$7,$8,$9);
 __ZNSt3__26localeD2Ev($9);
 $35 = HEAP32[$1>>2]|0;
 HEAP32[$10>>2] = $35;
 $36 = HEAP32[$7>>2]|0;
 $37 = HEAP32[$8>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$10>>2]|0;
 $38 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$34,$36,$37,$2,$3)|0);
 _llvm_stackrestore(($22|0));
 STACKTOP = sp;return ($38|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $$byval_copy = sp + 172|0;
 $vararg_buffer9 = sp + 144|0;
 $vararg_buffer5 = sp + 128|0;
 $vararg_buffer2 = sp + 120|0;
 $vararg_buffer = sp + 104|0;
 $5 = sp + 96|0;
 $6 = sp + 64|0;
 $7 = sp + 168|0;
 $8 = sp;
 $9 = sp + 164|0;
 $10 = sp + 160|0;
 $11 = sp + 156|0;
 $12 = sp + 152|0;
 $13 = $5;
 $14 = $13;
 HEAP32[$14>>2] = 37;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = ((($5)) + 1|0);
 $18 = ((($2)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (__ZNSt3__214__num_put_base14__format_floatEPcPKcj($17,37670,$19)|0);
 HEAP32[$7>>2] = $6;
 $21 = (__ZNSt3__26__clocEv()|0);
 if ($20) {
  $22 = ((($2)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$vararg_buffer>>2] = $23;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $4;
  $24 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer)|0);
  $$0 = $24;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $4;
  $25 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer2)|0);
  $$0 = $25;
 }
 $26 = ($$0|0)>(29);
 if ($26) {
  $27 = (__ZNSt3__26__clocEv()|0);
  if ($20) {
   $28 = ((($2)) + 8|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $29;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $4;
   $30 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer5)|0);
   $$1 = $30;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $4;
   $31 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer9)|0);
   $$1 = $31;
  }
  $32 = HEAP32[$7>>2]|0;
  $33 = ($32|0)==(0|0);
  if ($33) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$2 = $$1;$$sroa$048$0 = $32;$35 = $32;
  }
 } else {
  $$pre = HEAP32[$7>>2]|0;
  $$2 = $$0;$$sroa$048$0 = 0;$35 = $$pre;
 }
 $34 = (($35) + ($$2)|0);
 $36 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($35,$34,$2)|0);
 $37 = ($35|0)==($6|0);
 if ($37) {
  $$037 = $8;$$sroa$041$0 = 0;
 } else {
  $38 = $$2 << 1;
  $39 = (_malloc($38)|0);
  $40 = ($39|0)==(0|0);
  if ($40) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$037 = $39;$$sroa$041$0 = $39;
  }
 }
 __ZNKSt3__28ios_base6getlocEv($11,$2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($35,$36,$34,$$037,$9,$10,$11);
 __ZNSt3__26localeD2Ev($11);
 $41 = HEAP32[$1>>2]|0;
 HEAP32[$12>>2] = $41;
 $42 = HEAP32[$9>>2]|0;
 $43 = HEAP32[$10>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$12>>2]|0;
 $44 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$037,$42,$43,$2,$3)|0);
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;return ($44|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $$byval_copy = sp + 172|0;
 $vararg_buffer9 = sp + 144|0;
 $vararg_buffer5 = sp + 128|0;
 $vararg_buffer2 = sp + 120|0;
 $vararg_buffer = sp + 104|0;
 $5 = sp + 96|0;
 $6 = sp + 64|0;
 $7 = sp + 168|0;
 $8 = sp;
 $9 = sp + 164|0;
 $10 = sp + 160|0;
 $11 = sp + 156|0;
 $12 = sp + 152|0;
 $13 = $5;
 $14 = $13;
 HEAP32[$14>>2] = 37;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = ((($5)) + 1|0);
 $18 = ((($2)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (__ZNSt3__214__num_put_base14__format_floatEPcPKcj($17,23432,$19)|0);
 HEAP32[$7>>2] = $6;
 $21 = (__ZNSt3__26__clocEv()|0);
 if ($20) {
  $22 = ((($2)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$vararg_buffer>>2] = $23;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $4;
  $24 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer)|0);
  $$0 = $24;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $4;
  $25 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer2)|0);
  $$0 = $25;
 }
 $26 = ($$0|0)>(29);
 if ($26) {
  $27 = (__ZNSt3__26__clocEv()|0);
  if ($20) {
   $28 = ((($2)) + 8|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $29;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $4;
   $30 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer5)|0);
   $$1 = $30;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $4;
   $31 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer9)|0);
   $$1 = $31;
  }
  $32 = HEAP32[$7>>2]|0;
  $33 = ($32|0)==(0|0);
  if ($33) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$2 = $$1;$$sroa$048$0 = $32;$35 = $32;
  }
 } else {
  $$pre = HEAP32[$7>>2]|0;
  $$2 = $$0;$$sroa$048$0 = 0;$35 = $$pre;
 }
 $34 = (($35) + ($$2)|0);
 $36 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($35,$34,$2)|0);
 $37 = ($35|0)==($6|0);
 if ($37) {
  $$037 = $8;$$sroa$041$0 = 0;
 } else {
  $38 = $$2 << 1;
  $39 = (_malloc($38)|0);
  $40 = ($39|0)==(0|0);
  if ($40) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$037 = $39;$$sroa$041$0 = $39;
  }
 }
 __ZNKSt3__28ios_base6getlocEv($11,$2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($35,$36,$34,$$037,$9,$10,$11);
 __ZNSt3__26localeD2Ev($11);
 $41 = HEAP32[$1>>2]|0;
 HEAP32[$12>>2] = $41;
 $42 = HEAP32[$9>>2]|0;
 $43 = HEAP32[$10>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$12>>2]|0;
 $44 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$037,$42,$43,$2,$3)|0);
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;return ($44|0);
}
function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy = sp + 84|0;
 $vararg_buffer = sp + 72|0;
 $5 = sp + 88|0;
 $6 = sp + 48|0;
 $7 = sp;
 $8 = sp + 80|0;
 $9 = sp + 76|0;
 ;HEAP8[$5>>0]=HEAP8[23426>>0]|0;HEAP8[$5+1>>0]=HEAP8[23426+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[23426+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[23426+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[23426+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[23426+5>>0]|0;
 $10 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $4;
 $11 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,20,$10,$5,$vararg_buffer)|0);
 $12 = (($6) + ($11)|0);
 $13 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6,$12,$2)|0);
 __ZNKSt3__28ios_base6getlocEv($8,$2);
 $14 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36724)|0);
 __ZNSt3__26localeD2Ev($8);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 32|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iiiii[$17 & 511]($14,$6,$12,$7)|0);
 $18 = (($7) + ($11)|0);
 $19 = ($13|0)==($12|0);
 $20 = $6;
 $21 = $13;
 $22 = (($21) - ($20))|0;
 $23 = (($7) + ($22)|0);
 $$0 = $19 ? $18 : $23;
 $24 = HEAP32[$1>>2]|0;
 HEAP32[$9>>2] = $24;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
 $25 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$7,$$0,$18,$2,$3)|0);
 STACKTOP = sp;return ($25|0);
}
function __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($0,$1,$2,$3,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $varargs = $varargs|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 HEAP32[$4>>2] = $varargs;
 $5 = (___uselocale($2)|0);
 $6 = (_vsnprintf($0,$1,$3,$4)|0);
 $7 = ($5|0)==(0|0);
 if (!($7)) {
  (___uselocale($5)|0);
 }
 STACKTOP = sp;return ($6|0);
}
function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 176;
 $trunc = $5&255;
 L1: do {
  switch ($trunc<<24>>24) {
  case 16:  {
   $6 = HEAP8[$0>>0]|0;
   switch ($6<<24>>24) {
   case 43: case 45:  {
    $7 = ((($0)) + 1|0);
    $$0 = $7;
    break L1;
    break;
   }
   default: {
   }
   }
   $8 = $1;
   $9 = $0;
   $10 = (($8) - ($9))|0;
   $11 = ($10|0)>(1);
   $12 = ($6<<24>>24)==(48);
   $or$cond = $11 & $12;
   if ($or$cond) {
    $13 = ((($0)) + 1|0);
    $14 = HEAP8[$13>>0]|0;
    switch ($14<<24>>24) {
    case 88: case 120:  {
     break;
    }
    default: {
     label = 7;
     break L1;
    }
    }
    $15 = ((($0)) + 2|0);
    $$0 = $15;
   } else {
    label = 7;
   }
   break;
  }
  case 32:  {
   $$0 = $1;
   break;
  }
  default: {
   label = 7;
  }
  }
 } while(0);
 if ((label|0) == 7) {
  $$0 = $0;
 }
 return ($$0|0);
}
function __ZNSt3__214__num_put_base14__format_floatEPcPKcj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$022 = 0, $$023$off0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $2 & 2048;
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = $0;
 } else {
  $5 = ((($0)) + 1|0);
  HEAP8[$0>>0] = 43;
  $$0 = $5;
 }
 $6 = $2 & 1024;
 $7 = ($6|0)==(0);
 if ($7) {
  $$1 = $$0;
 } else {
  $8 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $8;
 }
 $9 = $2 & 260;
 $10 = $2 & 16384;
 $11 = ($9|0)==(260);
 if ($11) {
  $$023$off0 = 0;$$2 = $$1;
 } else {
  $12 = ((($$1)) + 1|0);
  HEAP8[$$1>>0] = 46;
  $13 = ((($$1)) + 2|0);
  HEAP8[$12>>0] = 42;
  $$023$off0 = 1;$$2 = $13;
 }
 $$022 = $1;$$3 = $$2;
 while(1) {
  $14 = HEAP8[$$022>>0]|0;
  $15 = ($14<<24>>24)==(0);
  if ($15) {
   break;
  }
  $16 = ((($$022)) + 1|0);
  $17 = ((($$3)) + 1|0);
  HEAP8[$$3>>0] = $14;
  $$022 = $16;$$3 = $17;
 }
 $trunc = $9&65535;
 $trunc$clear = $trunc & 511;
 L14: do {
  switch ($trunc$clear<<16>>16) {
  case 4:  {
   $18 = $10 >>> 9;
   $19 = $18&255;
   $20 = $19 ^ 102;
   $$sink = $20;
   break;
  }
  case 256:  {
   $21 = $10 >>> 9;
   $22 = $21&255;
   $23 = $22 ^ 101;
   $$sink = $23;
   break;
  }
  default: {
   $24 = $10 >>> 9;
   $25 = $24&255;
   if ($11) {
    $26 = $25 ^ 97;
    $$sink = $26;
    break L14;
   } else {
    $27 = $25 ^ 103;
    $$sink = $27;
    break L14;
   }
  }
  }
 } while(0);
 HEAP8[$$3>>0] = $$sink;
 return ($$023$off0|0);
}
function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (___uselocale($1)|0);
 $5 = (_vasprintf($0,$2,$3)|0);
 $6 = ($4|0)==(0|0);
 if (!($6)) {
  (___uselocale($4)|0);
 }
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0100 = 0, $$0102 = 0, $$0104 = 0, $$07$i$i = 0, $$07$i$i107 = 0, $$099 = 0, $$1 = 0, $$1101 = 0, $$1103 = 0, $$1105 = 0, $$2 = 0, $$2106 = 0, $$3 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36724)|0);
 $9 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36740)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 1023]($7,$9);
 HEAP32[$5>>2] = $3;
 $13 = HEAP8[$0>>0]|0;
 switch ($13<<24>>24) {
 case 43: case 45:  {
  $14 = ((($0)) + 1|0);
  $15 = HEAP32[$8>>2]|0;
  $16 = ((($15)) + 28|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (FUNCTION_TABLE_iii[$17 & 1023]($8,$13)|0);
  $19 = HEAP32[$5>>2]|0;
  $20 = ((($19)) + 1|0);
  HEAP32[$5>>2] = $20;
  HEAP8[$19>>0] = $18;
  $$0102 = $14;
  break;
 }
 default: {
  $$0102 = $0;
 }
 }
 $21 = $2;
 $22 = $$0102;
 $23 = (($21) - ($22))|0;
 $24 = ($23|0)>(1);
 L4: do {
  if ($24) {
   $25 = HEAP8[$$0102>>0]|0;
   $26 = ($25<<24>>24)==(48);
   if ($26) {
    $27 = ((($$0102)) + 1|0);
    $28 = HEAP8[$27>>0]|0;
    switch ($28<<24>>24) {
    case 88: case 120:  {
     break;
    }
    default: {
     label = 4;
     break L4;
    }
    }
    $29 = HEAP32[$8>>2]|0;
    $30 = ((($29)) + 28|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (FUNCTION_TABLE_iii[$31 & 1023]($8,48)|0);
    $33 = HEAP32[$5>>2]|0;
    $34 = ((($33)) + 1|0);
    HEAP32[$5>>2] = $34;
    HEAP8[$33>>0] = $32;
    $35 = ((($$0102)) + 2|0);
    $36 = HEAP8[$27>>0]|0;
    $37 = HEAP32[$8>>2]|0;
    $38 = ((($37)) + 28|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iii[$39 & 1023]($8,$36)|0);
    $41 = HEAP32[$5>>2]|0;
    $42 = ((($41)) + 1|0);
    HEAP32[$5>>2] = $42;
    HEAP8[$41>>0] = $40;
    $$0104 = $35;
    while(1) {
     $43 = ($$0104>>>0)<($2>>>0);
     if (!($43)) {
      $$1103 = $35;$$2106 = $$0104;
      break L4;
     }
     $44 = HEAP8[$$0104>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__26__clocEv()|0);
     $47 = (_isxdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $$1103 = $35;$$2106 = $$0104;
      break L4;
     }
     $49 = ((($$0104)) + 1|0);
     $$0104 = $49;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L12: do {
  if ((label|0) == 4) {
   $$1105 = $$0102;
   while(1) {
    $50 = ($$1105>>>0)<($2>>>0);
    if (!($50)) {
     $$1103 = $$0102;$$2106 = $$1105;
     break L12;
    }
    $51 = HEAP8[$$1105>>0]|0;
    $52 = $51 << 24 >> 24;
    $53 = (__ZNSt3__26__clocEv()|0);
    $54 = (_isdigit_l($52,$53)|0);
    $55 = ($54|0)==(0);
    if ($55) {
     $$1103 = $$0102;$$2106 = $$1105;
     break L12;
    }
    $56 = ((($$1105)) + 1|0);
    $$1105 = $56;
   }
  }
 } while(0);
 $57 = ((($7)) + 11|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = ($58<<24>>24)<(0);
 $60 = ((($7)) + 4|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = $58&255;
 $63 = $59 ? $61 : $62;
 $64 = ($63|0)==(0);
 L19: do {
  if ($64) {
   $65 = HEAP32[$5>>2]|0;
   $66 = HEAP32[$8>>2]|0;
   $67 = ((($66)) + 32|0);
   $68 = HEAP32[$67>>2]|0;
   (FUNCTION_TABLE_iiiii[$68 & 511]($8,$$1103,$$2106,$65)|0);
   $69 = $$2106;
   $70 = $$1103;
   $71 = (($69) - ($70))|0;
   $72 = HEAP32[$5>>2]|0;
   $73 = (($72) + ($71)|0);
   HEAP32[$5>>2] = $73;
   $$pre$phiZ2D = $8;
  } else {
   $74 = ($$1103|0)==($$2106|0);
   L22: do {
    if (!($74)) {
     $$0$i$i = $$2106;$$07$i$i = $$1103;
     while(1) {
      $75 = ((($$0$i$i)) + -1|0);
      $76 = ($$07$i$i>>>0)<($75>>>0);
      if (!($76)) {
       break L22;
      }
      $77 = HEAP8[$$07$i$i>>0]|0;
      $78 = HEAP8[$75>>0]|0;
      HEAP8[$$07$i$i>>0] = $78;
      HEAP8[$75>>0] = $77;
      $79 = ((($$07$i$i)) + 1|0);
      $$0$i$i = $75;$$07$i$i = $79;
     }
    }
   } while(0);
   $80 = HEAP32[$9>>2]|0;
   $81 = ((($80)) + 16|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (FUNCTION_TABLE_ii[$82 & 1023]($9)|0);
   $$0 = $$1103;$$0100 = 0;$$099 = 0;
   while(1) {
    $84 = ($$0>>>0)<($$2106>>>0);
    if (!($84)) {
     break;
    }
    $96 = HEAP8[$57>>0]|0;
    $97 = ($96<<24>>24)<(0);
    $98 = HEAP32[$7>>2]|0;
    $99 = $97 ? $98 : $7;
    $100 = (($99) + ($$099)|0);
    $101 = HEAP8[$100>>0]|0;
    $102 = ($101<<24>>24)>(0);
    $103 = $101 << 24 >> 24;
    $104 = ($$0100|0)==($103|0);
    $or$cond = $102 & $104;
    if ($or$cond) {
     $105 = HEAP32[$5>>2]|0;
     $106 = ((($105)) + 1|0);
     HEAP32[$5>>2] = $106;
     HEAP8[$105>>0] = $83;
     $107 = HEAP8[$57>>0]|0;
     $108 = ($107<<24>>24)<(0);
     $109 = HEAP32[$60>>2]|0;
     $110 = $107&255;
     $111 = $108 ? $109 : $110;
     $112 = (($111) + -1)|0;
     $113 = ($$099>>>0)<($112>>>0);
     $114 = $113&1;
     $spec$select = (($$099) + ($114))|0;
     $$1 = $spec$select;$$1101 = 0;
    } else {
     $$1 = $$099;$$1101 = $$0100;
    }
    $115 = HEAP8[$$0>>0]|0;
    $116 = HEAP32[$8>>2]|0;
    $117 = ((($116)) + 28|0);
    $118 = HEAP32[$117>>2]|0;
    $119 = (FUNCTION_TABLE_iii[$118 & 1023]($8,$115)|0);
    $120 = HEAP32[$5>>2]|0;
    $121 = ((($120)) + 1|0);
    HEAP32[$5>>2] = $121;
    HEAP8[$120>>0] = $119;
    $122 = (($$1101) + 1)|0;
    $123 = ((($$0)) + 1|0);
    $$0 = $123;$$0100 = $122;$$099 = $$1;
   }
   $85 = $$1103;
   $86 = $0;
   $87 = (($85) - ($86))|0;
   $88 = (($3) + ($87)|0);
   $89 = HEAP32[$5>>2]|0;
   $90 = ($88|0)==($89|0);
   if ($90) {
    $$pre$phiZ2D = $8;
   } else {
    $$0$i$i108 = $89;$$07$i$i107 = $88;
    while(1) {
     $91 = ((($$0$i$i108)) + -1|0);
     $92 = ($$07$i$i107>>>0)<($91>>>0);
     if (!($92)) {
      $$pre$phiZ2D = $8;
      break L19;
     }
     $93 = HEAP8[$$07$i$i107>>0]|0;
     $94 = HEAP8[$91>>0]|0;
     HEAP8[$$07$i$i107>>0] = $94;
     HEAP8[$91>>0] = $93;
     $95 = ((($$07$i$i107)) + 1|0);
     $$0$i$i108 = $91;$$07$i$i107 = $95;
    }
   }
  }
 } while(0);
 $$2 = $$2106;
 while(1) {
  $124 = ($$2>>>0)<($2>>>0);
  if (!($124)) {
   $$3 = $$2;
   break;
  }
  $125 = HEAP8[$$2>>0]|0;
  $126 = ($125<<24>>24)==(46);
  if ($126) {
   label = 32;
   break;
  }
  $134 = HEAP32[$$pre$phiZ2D>>2]|0;
  $135 = ((($134)) + 28|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = (FUNCTION_TABLE_iii[$136 & 1023]($8,$125)|0);
  $138 = HEAP32[$5>>2]|0;
  $139 = ((($138)) + 1|0);
  HEAP32[$5>>2] = $139;
  HEAP8[$138>>0] = $137;
  $140 = ((($$2)) + 1|0);
  $$2 = $140;
 }
 if ((label|0) == 32) {
  $127 = HEAP32[$9>>2]|0;
  $128 = ((($127)) + 12|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (FUNCTION_TABLE_ii[$129 & 1023]($9)|0);
  $131 = HEAP32[$5>>2]|0;
  $132 = ((($131)) + 1|0);
  HEAP32[$5>>2] = $132;
  HEAP8[$131>>0] = $130;
  $133 = ((($$2)) + 1|0);
  $$3 = $133;
 }
 $141 = HEAP32[$5>>2]|0;
 $142 = HEAP32[$8>>2]|0;
 $143 = ((($142)) + 32|0);
 $144 = HEAP32[$143>>2]|0;
 (FUNCTION_TABLE_iiiii[$144 & 511]($8,$$3,$2,$141)|0);
 $145 = $$3;
 $146 = (($21) - ($145))|0;
 $147 = HEAP32[$5>>2]|0;
 $148 = (($147) + ($146)|0);
 HEAP32[$5>>2] = $148;
 $149 = ($1|0)==($2|0);
 $150 = $1;
 $151 = $0;
 $152 = (($150) - ($151))|0;
 $153 = (($3) + ($152)|0);
 $storemerge = $149 ? $148 : $153;
 HEAP32[$4>>2] = $storemerge;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;return;
}
function __ZNSt3__214__num_put_base12__format_intEPcPKcbj($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$013 = 0, $$14 = 0, $$2 = 0, $$2$ph = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $3 & 2048;
 $5 = ($4|0)==(0);
 if ($5) {
  $$0 = $0;
 } else {
  $6 = ((($0)) + 1|0);
  HEAP8[$0>>0] = 43;
  $$0 = $6;
 }
 $7 = $3 & 512;
 $8 = ($7|0)==(0);
 if ($8) {
  $$2$ph = $$0;
 } else {
  $9 = ((($$0)) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$2$ph = $9;
 }
 $$013 = $1;$$2 = $$2$ph;
 while(1) {
  $10 = HEAP8[$$013>>0]|0;
  $11 = ($10<<24>>24)==(0);
  if ($11) {
   break;
  }
  $12 = ((($$013)) + 1|0);
  $13 = ((($$2)) + 1|0);
  HEAP8[$$2>>0] = $10;
  $$013 = $12;$$2 = $13;
 }
 $14 = $3 & 74;
 $trunc = $14&255;
 $trunc$clear = $trunc & 127;
 switch ($trunc$clear<<24>>24) {
 case 64:  {
  $$sink = 111;
  break;
 }
 case 8:  {
  $15 = $3 >>> 9;
  $16 = $15 & 32;
  $17 = $16&255;
  $18 = $17 ^ 120;
  $$sink = $18;
  break;
 }
 default: {
  $$14 = $2 ? 100 : 117;
  $$sink = $$14;
 }
 }
 HEAP8[$$2>>0] = $$sink;
 return;
}
function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i76 = 0, $$07$i$i = 0, $$07$i$i75 = 0, $$070 = 0, $$071 = 0, $$073 = 0, $$1 = 0, $$172 = 0, $$174 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0;
 var $spec$select = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36724)|0);
 $9 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36740)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 1023]($7,$9);
 $13 = ((($7)) + 11|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)<(0);
 $16 = ((($7)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $14&255;
 $19 = $15 ? $17 : $18;
 $20 = ($19|0)==(0);
 if ($20) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($21)) + 32|0);
  $23 = HEAP32[$22>>2]|0;
  (FUNCTION_TABLE_iiiii[$23 & 511]($8,$0,$2,$3)|0);
  $24 = $2;
  $25 = $0;
  $26 = (($24) - ($25))|0;
  $27 = (($3) + ($26)|0);
  HEAP32[$5>>2] = $27;
  $$pre$phiZ2D = $25;$112 = $27;
 } else {
  HEAP32[$5>>2] = $3;
  $28 = HEAP8[$0>>0]|0;
  switch ($28<<24>>24) {
  case 43: case 45:  {
   $29 = ((($0)) + 1|0);
   $30 = HEAP32[$8>>2]|0;
   $31 = ((($30)) + 28|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (FUNCTION_TABLE_iii[$32 & 1023]($8,$28)|0);
   $34 = HEAP32[$5>>2]|0;
   $35 = ((($34)) + 1|0);
   HEAP32[$5>>2] = $35;
   HEAP8[$34>>0] = $33;
   $$073 = $29;
   break;
  }
  default: {
   $$073 = $0;
  }
  }
  $36 = $2;
  $37 = $$073;
  $38 = (($36) - ($37))|0;
  $39 = ($38|0)>(1);
  L7: do {
   if ($39) {
    $40 = HEAP8[$$073>>0]|0;
    $41 = ($40<<24>>24)==(48);
    if ($41) {
     $42 = ((($$073)) + 1|0);
     $43 = HEAP8[$42>>0]|0;
     switch ($43<<24>>24) {
     case 88: case 120:  {
      break;
     }
     default: {
      $$174 = $$073;
      break L7;
     }
     }
     $44 = HEAP32[$8>>2]|0;
     $45 = ((($44)) + 28|0);
     $46 = HEAP32[$45>>2]|0;
     $47 = (FUNCTION_TABLE_iii[$46 & 1023]($8,48)|0);
     $48 = HEAP32[$5>>2]|0;
     $49 = ((($48)) + 1|0);
     HEAP32[$5>>2] = $49;
     HEAP8[$48>>0] = $47;
     $50 = ((($$073)) + 2|0);
     $51 = HEAP8[$42>>0]|0;
     $52 = HEAP32[$8>>2]|0;
     $53 = ((($52)) + 28|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_iii[$54 & 1023]($8,$51)|0);
     $56 = HEAP32[$5>>2]|0;
     $57 = ((($56)) + 1|0);
     HEAP32[$5>>2] = $57;
     HEAP8[$56>>0] = $55;
     $$174 = $50;
    } else {
     $$174 = $$073;
    }
   } else {
    $$174 = $$073;
   }
  } while(0);
  $58 = ($$174|0)==($2|0);
  L12: do {
   if (!($58)) {
    $$0$i$i = $2;$$07$i$i = $$174;
    while(1) {
     $59 = ((($$0$i$i)) + -1|0);
     $60 = ($$07$i$i>>>0)<($59>>>0);
     if (!($60)) {
      break L12;
     }
     $61 = HEAP8[$$07$i$i>>0]|0;
     $62 = HEAP8[$59>>0]|0;
     HEAP8[$$07$i$i>>0] = $62;
     HEAP8[$59>>0] = $61;
     $63 = ((($$07$i$i)) + 1|0);
     $$0$i$i = $59;$$07$i$i = $63;
    }
   }
  } while(0);
  $64 = HEAP32[$9>>2]|0;
  $65 = ((($64)) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (FUNCTION_TABLE_ii[$66 & 1023]($9)|0);
  $$0 = $$174;$$070 = 0;$$071 = 0;
  while(1) {
   $68 = ($$0>>>0)<($2>>>0);
   if (!($68)) {
    break;
   }
   $80 = HEAP8[$13>>0]|0;
   $81 = ($80<<24>>24)<(0);
   $82 = HEAP32[$7>>2]|0;
   $83 = $81 ? $82 : $7;
   $84 = (($83) + ($$070)|0);
   $85 = HEAP8[$84>>0]|0;
   $86 = ($85<<24>>24)!=(0);
   $87 = $85 << 24 >> 24;
   $88 = ($$071|0)==($87|0);
   $or$cond = $86 & $88;
   if ($or$cond) {
    $89 = HEAP32[$5>>2]|0;
    $90 = ((($89)) + 1|0);
    HEAP32[$5>>2] = $90;
    HEAP8[$89>>0] = $67;
    $91 = HEAP8[$13>>0]|0;
    $92 = ($91<<24>>24)<(0);
    $93 = HEAP32[$16>>2]|0;
    $94 = $91&255;
    $95 = $92 ? $93 : $94;
    $96 = (($95) + -1)|0;
    $97 = ($$070>>>0)<($96>>>0);
    $98 = $97&1;
    $spec$select = (($$070) + ($98))|0;
    $$1 = $spec$select;$$172 = 0;
   } else {
    $$1 = $$070;$$172 = $$071;
   }
   $99 = HEAP8[$$0>>0]|0;
   $100 = HEAP32[$8>>2]|0;
   $101 = ((($100)) + 28|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (FUNCTION_TABLE_iii[$102 & 1023]($8,$99)|0);
   $104 = HEAP32[$5>>2]|0;
   $105 = ((($104)) + 1|0);
   HEAP32[$5>>2] = $105;
   HEAP8[$104>>0] = $103;
   $106 = (($$172) + 1)|0;
   $107 = ((($$0)) + 1|0);
   $$0 = $107;$$070 = $$1;$$071 = $106;
  }
  $69 = $$174;
  $70 = $0;
  $71 = (($69) - ($70))|0;
  $72 = (($3) + ($71)|0);
  $73 = HEAP32[$5>>2]|0;
  $74 = ($72|0)==($73|0);
  if ($74) {
   $$pre$phiZ2D = $70;$112 = $72;
  } else {
   $$0$i$i76 = $73;$$07$i$i75 = $72;
   while(1) {
    $75 = ((($$0$i$i76)) + -1|0);
    $76 = ($$07$i$i75>>>0)<($75>>>0);
    if (!($76)) {
     break;
    }
    $77 = HEAP8[$$07$i$i75>>0]|0;
    $78 = HEAP8[$75>>0]|0;
    HEAP8[$$07$i$i75>>0] = $78;
    HEAP8[$75>>0] = $77;
    $79 = ((($$07$i$i75)) + 1|0);
    $$0$i$i76 = $75;$$07$i$i75 = $79;
   }
   $$pre = HEAP32[$5>>2]|0;
   $$pre$phiZ2D = $70;$112 = $$pre;
  }
 }
 $108 = ($1|0)==($2|0);
 $109 = $1;
 $110 = (($109) - ($$pre$phiZ2D))|0;
 $111 = (($3) + ($110)|0);
 $storemerge = $108 ? $112 : $111;
 HEAP32[$4>>2] = $storemerge;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;return;
}
function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$pre = 0, $$pre13 = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 20|0;
 $5 = sp + 16|0;
 $6 = sp + 12|0;
 $7 = sp;
 $8 = ((($2)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 1;
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $13 = ((($12)) + 24|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$1>>2]|0;
  HEAP32[$5>>2] = $15;
  $16 = $4&1;
  ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;
  $17 = (FUNCTION_TABLE_iiiiii[$14 & 511]($0,$$byval_copy,$2,$3,$16)|0);
  $$sroa$0$0 = $17;
 } else {
  __ZNKSt3__28ios_base6getlocEv($6,$2);
  $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36764)|0);
  __ZNSt3__26localeD2Ev($6);
  $19 = HEAP32[$18>>2]|0;
  if ($4) {
   $20 = ((($19)) + 24|0);
   $21 = HEAP32[$20>>2]|0;
   FUNCTION_TABLE_vii[$21 & 1023]($7,$18);
  } else {
   $22 = ((($19)) + 28|0);
   $23 = HEAP32[$22>>2]|0;
   FUNCTION_TABLE_vii[$23 & 1023]($7,$18);
  }
  $24 = ((($7)) + 8|0);
  $25 = ((($24)) + 3|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)<(0);
  $28 = HEAP32[$7>>2]|0;
  $29 = $27 ? $28 : $7;
  $30 = ((($7)) + 4|0);
  $$sroa$09$0 = $29;$31 = $26;$35 = $28;
  while(1) {
   $32 = ($31<<24>>24)<(0);
   $33 = HEAP32[$30>>2]|0;
   $34 = $31&255;
   $36 = $32 ? $35 : $7;
   $37 = $32 ? $33 : $34;
   $38 = (($36) + ($37<<2)|0);
   $39 = ($$sroa$09$0|0)==($38|0);
   if ($39) {
    break;
   }
   $40 = HEAP32[$$sroa$09$0>>2]|0;
   $41 = HEAP32[$1>>2]|0;
   $42 = ($41|0)==(0|0);
   if (!($42)) {
    $43 = ((($41)) + 24|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = ((($41)) + 28|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = ($44|0)==($46|0);
    if ($47) {
     $48 = HEAP32[$41>>2]|0;
     $49 = ((($48)) + 52|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($40)|0);
     $52 = (FUNCTION_TABLE_iii[$50 & 1023]($41,$51)|0);
     $$0$i$i = $52;
    } else {
     $53 = ((($44)) + 4|0);
     HEAP32[$43>>2] = $53;
     HEAP32[$44>>2] = $40;
     $54 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($40)|0);
     $$0$i$i = $54;
    }
    $55 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $56 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i,$55)|0);
    if ($56) {
     HEAP32[$1>>2] = 0;
    }
   }
   $57 = ((($$sroa$09$0)) + 4|0);
   $$pre = HEAP8[$25>>0]|0;
   $$pre13 = HEAP32[$7>>2]|0;
   $$sroa$09$0 = $57;$31 = $$pre;$35 = $$pre13;
  }
  $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;return ($$sroa$0$0|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 12|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 ;HEAP8[$5>>0]=HEAP8[23434>>0]|0;HEAP8[$5+1>>0]=HEAP8[23434+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[23434+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[23434+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[23434+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[23434+5>>0]|0;
 $10 = ((($5)) + 1|0);
 $11 = ((($2)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($10,26678,1,$12);
 $13 = HEAP32[$11>>2]|0;
 $14 = $13 >>> 9;
 $$lobit = $14 & 1;
 $15 = (($$lobit) + 13)|0;
 $16 = (_llvm_stacksave()|0);
 $$alloca_mul = $15;
 $17 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $18 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $4;
 $19 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($17,$15,$18,$5,$vararg_buffer)|0);
 $20 = (($17) + ($19)|0);
 $21 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($17,$20,$2)|0);
 $22 = $$lobit << 1;
 $23 = $22 | 24;
 $24 = (($23) + -1)|0;
 $$alloca_mul6 = $24<<2;
 $25 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($8,$2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($17,$21,$20,$25,$6,$7,$8);
 __ZNSt3__26localeD2Ev($8);
 $26 = HEAP32[$1>>2]|0;
 HEAP32[$9>>2] = $26;
 $27 = HEAP32[$6>>2]|0;
 $28 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
 $29 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$25,$27,$28,$2,$3)|0);
 _llvm_stackrestore(($16|0));
 STACKTOP = sp;return ($29|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $6 = sp;
 $7 = sp + 28|0;
 $8 = sp + 24|0;
 $9 = sp + 20|0;
 $10 = sp + 16|0;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = 37;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 0;
 $15 = ((($6)) + 1|0);
 $16 = ((($2)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($15,26683,1,$17);
 $18 = HEAP32[$16>>2]|0;
 $19 = $18 >>> 9;
 $$lobit = $19 & 1;
 $20 = (($$lobit) + 23)|0;
 $21 = (_llvm_stacksave()|0);
 $$alloca_mul = $20;
 $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $23 = (__ZNSt3__26__clocEv()|0);
 $24 = $vararg_buffer;
 $25 = $24;
 HEAP32[$25>>2] = $4;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $5;
 $28 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($22,$20,$23,$6,$vararg_buffer)|0);
 $29 = (($22) + ($28)|0);
 $30 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($22,$29,$2)|0);
 $31 = $$lobit << 1;
 $32 = $31 | 44;
 $33 = (($32) + -1)|0;
 $$alloca_mul6 = $33<<2;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($9,$2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($22,$30,$29,$34,$7,$8,$9);
 __ZNSt3__26localeD2Ev($9);
 $35 = HEAP32[$1>>2]|0;
 HEAP32[$10>>2] = $35;
 $36 = HEAP32[$7>>2]|0;
 $37 = HEAP32[$8>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$10>>2]|0;
 $38 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$34,$36,$37,$2,$3)|0);
 _llvm_stackrestore(($21|0));
 STACKTOP = sp;return ($38|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 20|0;
 $vararg_buffer = sp;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 12|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 ;HEAP8[$5>>0]=HEAP8[23434>>0]|0;HEAP8[$5+1>>0]=HEAP8[23434+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[23434+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[23434+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[23434+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[23434+5>>0]|0;
 $10 = ((($5)) + 1|0);
 $11 = ((($2)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($10,26678,0,$12);
 $13 = HEAP32[$11>>2]|0;
 $14 = $13 >>> 9;
 $$lobit = $14 & 1;
 $15 = $$lobit | 12;
 $16 = (_llvm_stacksave()|0);
 $$alloca_mul = $15;
 $17 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $18 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $4;
 $19 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($17,$15,$18,$5,$vararg_buffer)|0);
 $20 = (($17) + ($19)|0);
 $21 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($17,$20,$2)|0);
 $22 = $$lobit << 1;
 $23 = $22 | 21;
 $$alloca_mul6 = $23<<2;
 $24 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($8,$2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($17,$21,$20,$24,$6,$7,$8);
 __ZNSt3__26localeD2Ev($8);
 $25 = HEAP32[$1>>2]|0;
 HEAP32[$9>>2] = $25;
 $26 = HEAP32[$6>>2]|0;
 $27 = HEAP32[$7>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
 $28 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$24,$26,$27,$2,$3)|0);
 _llvm_stackrestore(($16|0));
 STACKTOP = sp;return ($28|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 32|0;
 $vararg_buffer = sp + 8|0;
 $6 = sp;
 $7 = sp + 28|0;
 $8 = sp + 24|0;
 $9 = sp + 20|0;
 $10 = sp + 16|0;
 $11 = $6;
 $12 = $11;
 HEAP32[$12>>2] = 37;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 0;
 $15 = ((($6)) + 1|0);
 $16 = ((($2)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($15,26683,0,$17);
 $18 = HEAP32[$16>>2]|0;
 $19 = $18 >>> 9;
 $$lobit = $19 & 1;
 $20 = $$lobit | 22;
 $21 = (($20) + 1)|0;
 $22 = (_llvm_stacksave()|0);
 $$alloca_mul = $21;
 $23 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $24 = (__ZNSt3__26__clocEv()|0);
 $25 = $vararg_buffer;
 $26 = $25;
 HEAP32[$26>>2] = $4;
 $27 = (($25) + 4)|0;
 $28 = $27;
 HEAP32[$28>>2] = $5;
 $29 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($23,$21,$24,$6,$vararg_buffer)|0);
 $30 = (($23) + ($29)|0);
 $31 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($23,$30,$2)|0);
 $32 = $20 << 1;
 $33 = (($32) + -1)|0;
 $$alloca_mul6 = $33<<2;
 $34 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 __ZNKSt3__28ios_base6getlocEv($9,$2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($23,$31,$30,$34,$7,$8,$9);
 __ZNSt3__26localeD2Ev($9);
 $35 = HEAP32[$1>>2]|0;
 HEAP32[$10>>2] = $35;
 $36 = HEAP32[$7>>2]|0;
 $37 = HEAP32[$8>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$10>>2]|0;
 $38 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$34,$36,$37,$2,$3)|0);
 _llvm_stackrestore(($22|0));
 STACKTOP = sp;return ($38|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $$byval_copy = sp + 348|0;
 $vararg_buffer9 = sp + 320|0;
 $vararg_buffer5 = sp + 304|0;
 $vararg_buffer2 = sp + 296|0;
 $vararg_buffer = sp + 280|0;
 $5 = sp + 272|0;
 $6 = sp + 240|0;
 $7 = sp + 344|0;
 $8 = sp;
 $9 = sp + 340|0;
 $10 = sp + 336|0;
 $11 = sp + 332|0;
 $12 = sp + 328|0;
 $13 = $5;
 $14 = $13;
 HEAP32[$14>>2] = 37;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = ((($5)) + 1|0);
 $18 = ((($2)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (__ZNSt3__214__num_put_base14__format_floatEPcPKcj($17,37670,$19)|0);
 HEAP32[$7>>2] = $6;
 $21 = (__ZNSt3__26__clocEv()|0);
 if ($20) {
  $22 = ((($2)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$vararg_buffer>>2] = $23;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $4;
  $24 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer)|0);
  $$0 = $24;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $4;
  $25 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer2)|0);
  $$0 = $25;
 }
 $26 = ($$0|0)>(29);
 if ($26) {
  $27 = (__ZNSt3__26__clocEv()|0);
  if ($20) {
   $28 = ((($2)) + 8|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $29;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $4;
   $30 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer5)|0);
   $$1 = $30;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $4;
   $31 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer9)|0);
   $$1 = $31;
  }
  $32 = HEAP32[$7>>2]|0;
  $33 = ($32|0)==(0|0);
  if ($33) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$2 = $$1;$$sroa$046$0 = $32;$35 = $32;
  }
 } else {
  $$pre = HEAP32[$7>>2]|0;
  $$2 = $$0;$$sroa$046$0 = 0;$35 = $$pre;
 }
 $34 = (($35) + ($$2)|0);
 $36 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($35,$34,$2)|0);
 $37 = ($35|0)==($6|0);
 do {
  if ($37) {
   $$037 = $8;$$sroa$039$0 = 1;$45 = 0;
  } else {
   $38 = $$2 << 3;
   $39 = (_malloc($38)|0);
   $40 = ($39|0)==(0|0);
   if ($40) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $$037 = $39;$$sroa$039$0 = 0;$45 = $39;
    break;
   }
  }
 } while(0);
 __ZNKSt3__28ios_base6getlocEv($11,$2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($35,$36,$34,$$037,$9,$10,$11);
 __ZNSt3__26localeD2Ev($11);
 $41 = HEAP32[$1>>2]|0;
 HEAP32[$12>>2] = $41;
 $42 = HEAP32[$9>>2]|0;
 $43 = HEAP32[$10>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$12>>2]|0;
 $44 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$037,$42,$43,$2,$3)|0);
 HEAP32[$1>>2] = $44;
 if (!($$sroa$039$0)) {
  _free($45);
 }
 _free($$sroa$046$0);
 STACKTOP = sp;return ($44|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $$byval_copy = sp + 348|0;
 $vararg_buffer9 = sp + 320|0;
 $vararg_buffer5 = sp + 304|0;
 $vararg_buffer2 = sp + 296|0;
 $vararg_buffer = sp + 280|0;
 $5 = sp + 272|0;
 $6 = sp + 240|0;
 $7 = sp + 344|0;
 $8 = sp;
 $9 = sp + 340|0;
 $10 = sp + 336|0;
 $11 = sp + 332|0;
 $12 = sp + 328|0;
 $13 = $5;
 $14 = $13;
 HEAP32[$14>>2] = 37;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = ((($5)) + 1|0);
 $18 = ((($2)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (__ZNSt3__214__num_put_base14__format_floatEPcPKcj($17,23432,$19)|0);
 HEAP32[$7>>2] = $6;
 $21 = (__ZNSt3__26__clocEv()|0);
 if ($20) {
  $22 = ((($2)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$vararg_buffer>>2] = $23;
  $vararg_ptr1 = ((($vararg_buffer)) + 8|0);
  HEAPF64[$vararg_ptr1>>3] = $4;
  $24 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer)|0);
  $$0 = $24;
 } else {
  HEAPF64[$vararg_buffer2>>3] = $4;
  $25 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,30,$21,$5,$vararg_buffer2)|0);
  $$0 = $25;
 }
 $26 = ($$0|0)>(29);
 if ($26) {
  $27 = (__ZNSt3__26__clocEv()|0);
  if ($20) {
   $28 = ((($2)) + 8|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$vararg_buffer5>>2] = $29;
   $vararg_ptr8 = ((($vararg_buffer5)) + 8|0);
   HEAPF64[$vararg_ptr8>>3] = $4;
   $30 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer5)|0);
   $$1 = $30;
  } else {
   HEAPF64[$vararg_buffer9>>3] = $4;
   $31 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$27,$5,$vararg_buffer9)|0);
   $$1 = $31;
  }
  $32 = HEAP32[$7>>2]|0;
  $33 = ($32|0)==(0|0);
  if ($33) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$2 = $$1;$$sroa$046$0 = $32;$35 = $32;
  }
 } else {
  $$pre = HEAP32[$7>>2]|0;
  $$2 = $$0;$$sroa$046$0 = 0;$35 = $$pre;
 }
 $34 = (($35) + ($$2)|0);
 $36 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($35,$34,$2)|0);
 $37 = ($35|0)==($6|0);
 do {
  if ($37) {
   $$037 = $8;$$sroa$039$0 = 1;$45 = 0;
  } else {
   $38 = $$2 << 3;
   $39 = (_malloc($38)|0);
   $40 = ($39|0)==(0|0);
   if ($40) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $$037 = $39;$$sroa$039$0 = 0;$45 = $39;
    break;
   }
  }
 } while(0);
 __ZNKSt3__28ios_base6getlocEv($11,$2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($35,$36,$34,$$037,$9,$10,$11);
 __ZNSt3__26localeD2Ev($11);
 $41 = HEAP32[$1>>2]|0;
 HEAP32[$12>>2] = $41;
 $42 = HEAP32[$9>>2]|0;
 $43 = HEAP32[$10>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$12>>2]|0;
 $44 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$037,$42,$43,$2,$3)|0);
 HEAP32[$1>>2] = $44;
 if (!($$sroa$039$0)) {
  _free($45);
 }
 _free($$sroa$046$0);
 STACKTOP = sp;return ($44|0);
}
function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $$byval_copy = sp + 196|0;
 $vararg_buffer = sp + 184|0;
 $5 = sp + 200|0;
 $6 = sp + 160|0;
 $7 = sp;
 $8 = sp + 192|0;
 $9 = sp + 188|0;
 ;HEAP8[$5>>0]=HEAP8[23426>>0]|0;HEAP8[$5+1>>0]=HEAP8[23426+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[23426+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[23426+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[23426+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[23426+5>>0]|0;
 $10 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $4;
 $11 = (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6,20,$10,$5,$vararg_buffer)|0);
 $12 = (($6) + ($11)|0);
 $13 = (__ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6,$12,$2)|0);
 __ZNKSt3__28ios_base6getlocEv($8,$2);
 $14 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36756)|0);
 __ZNSt3__26localeD2Ev($8);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 48|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iiiii[$17 & 511]($14,$6,$12,$7)|0);
 $18 = (($7) + ($11<<2)|0);
 $19 = ($13|0)==($12|0);
 $20 = $6;
 $21 = $13;
 $22 = (($21) - ($20))|0;
 $23 = (($7) + ($22<<2)|0);
 $$0 = $19 ? $18 : $23;
 $24 = HEAP32[$1>>2]|0;
 HEAP32[$9>>2] = $24;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
 $25 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$7,$$0,$18,$2,$3)|0);
 STACKTOP = sp;return ($25|0);
}
function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$038 = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 $7 = HEAP32[$0>>2]|0;
 $8 = ($7|0)==(0|0);
 L1: do {
  if ($8) {
   $$sroa$0$2 = 0;
  } else {
   $9 = $3;
   $10 = $1;
   $11 = (($9) - ($10))|0;
   $12 = $11 >> 2;
   $13 = ((($4)) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)>($12|0);
   $16 = (($14) - ($12))|0;
   $$038 = $15 ? $16 : 0;
   $17 = $2;
   $18 = (($17) - ($10))|0;
   $19 = $18 >> 2;
   $20 = ($18|0)>(0);
   if ($20) {
    $21 = HEAP32[$7>>2]|0;
    $22 = ((($21)) + 48|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_iiii[$23 & 1023]($7,$1,$19)|0);
    $25 = ($24|0)==($19|0);
    if (!($25)) {
     HEAP32[$0>>2] = 0;
     $$sroa$0$2 = 0;
     break;
    }
   }
   $26 = ($$038|0)>(0);
   do {
    if ($26) {
     ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($6,$$038,$5);
     $27 = ((($6)) + 8|0);
     $28 = ((($27)) + 3|0);
     $29 = HEAP8[$28>>0]|0;
     $30 = ($29<<24>>24)<(0);
     $31 = HEAP32[$6>>2]|0;
     $32 = $30 ? $31 : $6;
     $33 = HEAP32[$7>>2]|0;
     $34 = ((($33)) + 48|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = (FUNCTION_TABLE_iiii[$35 & 1023]($7,$32,$$038)|0);
     $37 = ($36|0)==($$038|0);
     if ($37) {
      __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
      break;
     } else {
      HEAP32[$0>>2] = 0;
      __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
      $$sroa$0$2 = 0;
      break L1;
     }
    }
   } while(0);
   $38 = (($9) - ($17))|0;
   $39 = $38 >> 2;
   $40 = ($38|0)>(0);
   if ($40) {
    $41 = HEAP32[$7>>2]|0;
    $42 = ((($41)) + 48|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = (FUNCTION_TABLE_iiii[$43 & 1023]($7,$2,$39)|0);
    $45 = ($44|0)==($39|0);
    if (!($45)) {
     HEAP32[$0>>2] = 0;
     $$sroa$0$2 = 0;
     break;
    }
   }
   HEAP32[$13>>2] = 0;
   $$sroa$0$2 = $7;
  }
 } while(0);
 STACKTOP = sp;return ($$sroa$0$2|0);
}
function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i110 = 0, $$0101 = 0, $$0102 = 0, $$0104 = 0, $$0106 = 0, $$07$i$i = 0, $$07$i$i109 = 0, $$1 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$2 = 0, $$2108 = 0, $$3 = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36756)|0);
 $9 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36764)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 1023]($7,$9);
 HEAP32[$5>>2] = $3;
 $13 = HEAP8[$0>>0]|0;
 switch ($13<<24>>24) {
 case 43: case 45:  {
  $14 = ((($0)) + 1|0);
  $15 = HEAP32[$8>>2]|0;
  $16 = ((($15)) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (FUNCTION_TABLE_iii[$17 & 1023]($8,$13)|0);
  $19 = HEAP32[$5>>2]|0;
  $20 = ((($19)) + 4|0);
  HEAP32[$5>>2] = $20;
  HEAP32[$19>>2] = $18;
  $$0104 = $14;
  break;
 }
 default: {
  $$0104 = $0;
 }
 }
 $21 = $2;
 $22 = $$0104;
 $23 = (($21) - ($22))|0;
 $24 = ($23|0)>(1);
 L4: do {
  if ($24) {
   $25 = HEAP8[$$0104>>0]|0;
   $26 = ($25<<24>>24)==(48);
   if ($26) {
    $27 = ((($$0104)) + 1|0);
    $28 = HEAP8[$27>>0]|0;
    switch ($28<<24>>24) {
    case 88: case 120:  {
     break;
    }
    default: {
     label = 4;
     break L4;
    }
    }
    $29 = HEAP32[$8>>2]|0;
    $30 = ((($29)) + 44|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (FUNCTION_TABLE_iii[$31 & 1023]($8,48)|0);
    $33 = HEAP32[$5>>2]|0;
    $34 = ((($33)) + 4|0);
    HEAP32[$5>>2] = $34;
    HEAP32[$33>>2] = $32;
    $35 = ((($$0104)) + 2|0);
    $36 = HEAP8[$27>>0]|0;
    $37 = HEAP32[$8>>2]|0;
    $38 = ((($37)) + 44|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iii[$39 & 1023]($8,$36)|0);
    $41 = HEAP32[$5>>2]|0;
    $42 = ((($41)) + 4|0);
    HEAP32[$5>>2] = $42;
    HEAP32[$41>>2] = $40;
    $$0106 = $35;
    while(1) {
     $43 = ($$0106>>>0)<($2>>>0);
     if (!($43)) {
      $$1105 = $35;$$2108 = $$0106;
      break L4;
     }
     $44 = HEAP8[$$0106>>0]|0;
     $45 = $44 << 24 >> 24;
     $46 = (__ZNSt3__26__clocEv()|0);
     $47 = (_isxdigit_l($45,$46)|0);
     $48 = ($47|0)==(0);
     if ($48) {
      $$1105 = $35;$$2108 = $$0106;
      break L4;
     }
     $49 = ((($$0106)) + 1|0);
     $$0106 = $49;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L12: do {
  if ((label|0) == 4) {
   $$1107 = $$0104;
   while(1) {
    $50 = ($$1107>>>0)<($2>>>0);
    if (!($50)) {
     $$1105 = $$0104;$$2108 = $$1107;
     break L12;
    }
    $51 = HEAP8[$$1107>>0]|0;
    $52 = $51 << 24 >> 24;
    $53 = (__ZNSt3__26__clocEv()|0);
    $54 = (_isdigit_l($52,$53)|0);
    $55 = ($54|0)==(0);
    if ($55) {
     $$1105 = $$0104;$$2108 = $$1107;
     break L12;
    }
    $56 = ((($$1107)) + 1|0);
    $$1107 = $56;
   }
  }
 } while(0);
 $57 = ((($7)) + 11|0);
 $58 = HEAP8[$57>>0]|0;
 $59 = ($58<<24>>24)<(0);
 $60 = ((($7)) + 4|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = $58&255;
 $63 = $59 ? $61 : $62;
 $64 = ($63|0)==(0);
 L19: do {
  if ($64) {
   $65 = HEAP32[$5>>2]|0;
   $66 = HEAP32[$8>>2]|0;
   $67 = ((($66)) + 48|0);
   $68 = HEAP32[$67>>2]|0;
   (FUNCTION_TABLE_iiiii[$68 & 511]($8,$$1105,$$2108,$65)|0);
   $69 = $$2108;
   $70 = $$1105;
   $71 = (($69) - ($70))|0;
   $72 = HEAP32[$5>>2]|0;
   $73 = (($72) + ($71<<2)|0);
   HEAP32[$5>>2] = $73;
   $$pre$phiZ2D = $8;$154 = $73;
  } else {
   $74 = ($$1105|0)==($$2108|0);
   L22: do {
    if (!($74)) {
     $$0$i$i = $$2108;$$07$i$i = $$1105;
     while(1) {
      $75 = ((($$0$i$i)) + -1|0);
      $76 = ($$07$i$i>>>0)<($75>>>0);
      if (!($76)) {
       break L22;
      }
      $77 = HEAP8[$$07$i$i>>0]|0;
      $78 = HEAP8[$75>>0]|0;
      HEAP8[$$07$i$i>>0] = $78;
      HEAP8[$75>>0] = $77;
      $79 = ((($$07$i$i)) + 1|0);
      $$0$i$i = $75;$$07$i$i = $79;
     }
    }
   } while(0);
   $80 = HEAP32[$9>>2]|0;
   $81 = ((($80)) + 16|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (FUNCTION_TABLE_ii[$82 & 1023]($9)|0);
   $$0 = $$1105;$$0101 = 0;$$0102 = 0;
   while(1) {
    $84 = ($$0>>>0)<($$2108>>>0);
    if (!($84)) {
     break;
    }
    $96 = HEAP8[$57>>0]|0;
    $97 = ($96<<24>>24)<(0);
    $98 = HEAP32[$7>>2]|0;
    $99 = $97 ? $98 : $7;
    $100 = (($99) + ($$0101)|0);
    $101 = HEAP8[$100>>0]|0;
    $102 = ($101<<24>>24)>(0);
    $103 = $101 << 24 >> 24;
    $104 = ($$0102|0)==($103|0);
    $or$cond = $102 & $104;
    if ($or$cond) {
     $105 = HEAP32[$5>>2]|0;
     $106 = ((($105)) + 4|0);
     HEAP32[$5>>2] = $106;
     HEAP32[$105>>2] = $83;
     $107 = HEAP8[$57>>0]|0;
     $108 = ($107<<24>>24)<(0);
     $109 = HEAP32[$60>>2]|0;
     $110 = $107&255;
     $111 = $108 ? $109 : $110;
     $112 = (($111) + -1)|0;
     $113 = ($$0101>>>0)<($112>>>0);
     $114 = $113&1;
     $spec$select = (($$0101) + ($114))|0;
     $$1 = $spec$select;$$1103 = 0;
    } else {
     $$1 = $$0101;$$1103 = $$0102;
    }
    $115 = HEAP8[$$0>>0]|0;
    $116 = HEAP32[$8>>2]|0;
    $117 = ((($116)) + 44|0);
    $118 = HEAP32[$117>>2]|0;
    $119 = (FUNCTION_TABLE_iii[$118 & 1023]($8,$115)|0);
    $120 = HEAP32[$5>>2]|0;
    $121 = ((($120)) + 4|0);
    HEAP32[$5>>2] = $121;
    HEAP32[$120>>2] = $119;
    $122 = (($$1103) + 1)|0;
    $123 = ((($$0)) + 1|0);
    $$0 = $123;$$0101 = $$1;$$0102 = $122;
   }
   $85 = $$1105;
   $86 = $0;
   $87 = (($85) - ($86))|0;
   $88 = (($3) + ($87<<2)|0);
   $89 = HEAP32[$5>>2]|0;
   $90 = ($88|0)==($89|0);
   if ($90) {
    $$pre$phiZ2D = $8;$154 = $88;
   } else {
    $$0$i$i110 = $89;$$07$i$i109 = $88;
    while(1) {
     $91 = ((($$0$i$i110)) + -4|0);
     $92 = ($$07$i$i109>>>0)<($91>>>0);
     if (!($92)) {
      $$pre$phiZ2D = $8;$154 = $89;
      break L19;
     }
     $93 = HEAP32[$$07$i$i109>>2]|0;
     $94 = HEAP32[$91>>2]|0;
     HEAP32[$$07$i$i109>>2] = $94;
     HEAP32[$91>>2] = $93;
     $95 = ((($$07$i$i109)) + 4|0);
     $$0$i$i110 = $91;$$07$i$i109 = $95;
    }
   }
  }
 } while(0);
 $$2 = $$2108;$155 = $154;
 while(1) {
  $124 = ($$2>>>0)<($2>>>0);
  if (!($124)) {
   $$3 = $$2;$144 = $155;
   break;
  }
  $125 = HEAP8[$$2>>0]|0;
  $126 = ($125<<24>>24)==(46);
  if ($126) {
   label = 32;
   break;
  }
  $134 = HEAP32[$$pre$phiZ2D>>2]|0;
  $135 = ((($134)) + 44|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = (FUNCTION_TABLE_iii[$136 & 1023]($8,$125)|0);
  $138 = HEAP32[$5>>2]|0;
  $139 = ((($138)) + 4|0);
  HEAP32[$5>>2] = $139;
  HEAP32[$138>>2] = $137;
  $140 = ((($$2)) + 1|0);
  $$2 = $140;$155 = $139;
 }
 if ((label|0) == 32) {
  $127 = HEAP32[$9>>2]|0;
  $128 = ((($127)) + 12|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = (FUNCTION_TABLE_ii[$129 & 1023]($9)|0);
  $131 = HEAP32[$5>>2]|0;
  $132 = ((($131)) + 4|0);
  HEAP32[$5>>2] = $132;
  HEAP32[$131>>2] = $130;
  $133 = ((($$2)) + 1|0);
  $$3 = $133;$144 = $132;
 }
 $141 = HEAP32[$8>>2]|0;
 $142 = ((($141)) + 48|0);
 $143 = HEAP32[$142>>2]|0;
 (FUNCTION_TABLE_iiiii[$143 & 511]($8,$$3,$2,$144)|0);
 $145 = $$3;
 $146 = (($21) - ($145))|0;
 $147 = HEAP32[$5>>2]|0;
 $148 = (($147) + ($146<<2)|0);
 HEAP32[$5>>2] = $148;
 $149 = ($1|0)==($2|0);
 $150 = $1;
 $151 = $0;
 $152 = (($150) - ($151))|0;
 $153 = (($3) + ($152<<2)|0);
 $storemerge = $149 ? $148 : $153;
 HEAP32[$4>>2] = $storemerge;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;return;
}
function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i78 = 0, $$07$i$i = 0, $$07$i$i77 = 0, $$072 = 0, $$073 = 0, $$075 = 0, $$1 = 0, $$174 = 0, $$176 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0;
 var $spec$select = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36756)|0);
 $9 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36764)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vii[$12 & 1023]($7,$9);
 $13 = ((($7)) + 11|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)<(0);
 $16 = ((($7)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $14&255;
 $19 = $15 ? $17 : $18;
 $20 = ($19|0)==(0);
 if ($20) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($21)) + 48|0);
  $23 = HEAP32[$22>>2]|0;
  (FUNCTION_TABLE_iiiii[$23 & 511]($8,$0,$2,$3)|0);
  $24 = $2;
  $25 = $0;
  $26 = (($24) - ($25))|0;
  $27 = (($3) + ($26<<2)|0);
  HEAP32[$5>>2] = $27;
  $$pre$phiZ2D = $25;$112 = $27;
 } else {
  HEAP32[$5>>2] = $3;
  $28 = HEAP8[$0>>0]|0;
  switch ($28<<24>>24) {
  case 43: case 45:  {
   $29 = ((($0)) + 1|0);
   $30 = HEAP32[$8>>2]|0;
   $31 = ((($30)) + 44|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (FUNCTION_TABLE_iii[$32 & 1023]($8,$28)|0);
   $34 = HEAP32[$5>>2]|0;
   $35 = ((($34)) + 4|0);
   HEAP32[$5>>2] = $35;
   HEAP32[$34>>2] = $33;
   $$075 = $29;
   break;
  }
  default: {
   $$075 = $0;
  }
  }
  $36 = $2;
  $37 = $$075;
  $38 = (($36) - ($37))|0;
  $39 = ($38|0)>(1);
  L7: do {
   if ($39) {
    $40 = HEAP8[$$075>>0]|0;
    $41 = ($40<<24>>24)==(48);
    if ($41) {
     $42 = ((($$075)) + 1|0);
     $43 = HEAP8[$42>>0]|0;
     switch ($43<<24>>24) {
     case 88: case 120:  {
      break;
     }
     default: {
      $$176 = $$075;
      break L7;
     }
     }
     $44 = HEAP32[$8>>2]|0;
     $45 = ((($44)) + 44|0);
     $46 = HEAP32[$45>>2]|0;
     $47 = (FUNCTION_TABLE_iii[$46 & 1023]($8,48)|0);
     $48 = HEAP32[$5>>2]|0;
     $49 = ((($48)) + 4|0);
     HEAP32[$5>>2] = $49;
     HEAP32[$48>>2] = $47;
     $50 = ((($$075)) + 2|0);
     $51 = HEAP8[$42>>0]|0;
     $52 = HEAP32[$8>>2]|0;
     $53 = ((($52)) + 44|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = (FUNCTION_TABLE_iii[$54 & 1023]($8,$51)|0);
     $56 = HEAP32[$5>>2]|0;
     $57 = ((($56)) + 4|0);
     HEAP32[$5>>2] = $57;
     HEAP32[$56>>2] = $55;
     $$176 = $50;
    } else {
     $$176 = $$075;
    }
   } else {
    $$176 = $$075;
   }
  } while(0);
  $58 = ($$176|0)==($2|0);
  L12: do {
   if (!($58)) {
    $$0$i$i = $2;$$07$i$i = $$176;
    while(1) {
     $59 = ((($$0$i$i)) + -1|0);
     $60 = ($$07$i$i>>>0)<($59>>>0);
     if (!($60)) {
      break L12;
     }
     $61 = HEAP8[$$07$i$i>>0]|0;
     $62 = HEAP8[$59>>0]|0;
     HEAP8[$$07$i$i>>0] = $62;
     HEAP8[$59>>0] = $61;
     $63 = ((($$07$i$i)) + 1|0);
     $$0$i$i = $59;$$07$i$i = $63;
    }
   }
  } while(0);
  $64 = HEAP32[$9>>2]|0;
  $65 = ((($64)) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (FUNCTION_TABLE_ii[$66 & 1023]($9)|0);
  $$0 = $$176;$$072 = 0;$$073 = 0;
  while(1) {
   $68 = ($$0>>>0)<($2>>>0);
   if (!($68)) {
    break;
   }
   $80 = HEAP8[$13>>0]|0;
   $81 = ($80<<24>>24)<(0);
   $82 = HEAP32[$7>>2]|0;
   $83 = $81 ? $82 : $7;
   $84 = (($83) + ($$072)|0);
   $85 = HEAP8[$84>>0]|0;
   $86 = ($85<<24>>24)!=(0);
   $87 = $85 << 24 >> 24;
   $88 = ($$073|0)==($87|0);
   $or$cond = $86 & $88;
   if ($or$cond) {
    $89 = HEAP32[$5>>2]|0;
    $90 = ((($89)) + 4|0);
    HEAP32[$5>>2] = $90;
    HEAP32[$89>>2] = $67;
    $91 = HEAP8[$13>>0]|0;
    $92 = ($91<<24>>24)<(0);
    $93 = HEAP32[$16>>2]|0;
    $94 = $91&255;
    $95 = $92 ? $93 : $94;
    $96 = (($95) + -1)|0;
    $97 = ($$072>>>0)<($96>>>0);
    $98 = $97&1;
    $spec$select = (($$072) + ($98))|0;
    $$1 = $spec$select;$$174 = 0;
   } else {
    $$1 = $$072;$$174 = $$073;
   }
   $99 = HEAP8[$$0>>0]|0;
   $100 = HEAP32[$8>>2]|0;
   $101 = ((($100)) + 44|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (FUNCTION_TABLE_iii[$102 & 1023]($8,$99)|0);
   $104 = HEAP32[$5>>2]|0;
   $105 = ((($104)) + 4|0);
   HEAP32[$5>>2] = $105;
   HEAP32[$104>>2] = $103;
   $106 = (($$174) + 1)|0;
   $107 = ((($$0)) + 1|0);
   $$0 = $107;$$072 = $$1;$$073 = $106;
  }
  $69 = $$176;
  $70 = $0;
  $71 = (($69) - ($70))|0;
  $72 = (($3) + ($71<<2)|0);
  $73 = HEAP32[$5>>2]|0;
  $74 = ($72|0)==($73|0);
  if ($74) {
   $$pre$phiZ2D = $70;$112 = $72;
  } else {
   $$0$i$i78 = $73;$$07$i$i77 = $72;
   while(1) {
    $75 = ((($$0$i$i78)) + -4|0);
    $76 = ($$07$i$i77>>>0)<($75>>>0);
    if (!($76)) {
     break;
    }
    $77 = HEAP32[$$07$i$i77>>2]|0;
    $78 = HEAP32[$75>>2]|0;
    HEAP32[$$07$i$i77>>2] = $78;
    HEAP32[$75>>2] = $77;
    $79 = ((($$07$i$i77)) + 4|0);
    $$0$i$i78 = $75;$$07$i$i77 = $79;
   }
   $$pre = HEAP32[$5>>2]|0;
   $$pre$phiZ2D = $70;$112 = $$pre;
  }
 }
 $108 = ($1|0)==($2|0);
 $109 = $1;
 $110 = (($109) - ($$pre$phiZ2D))|0;
 $111 = (($3) + ($110<<2)|0);
 $storemerge = $108 ? $112 : $111;
 HEAP32[$4>>2] = $storemerge;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;return;
}
function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy,$$byval_copy1,$3,$4,$5,23957,(23965))|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 1023]($8)|0);
 $13 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $13;
 $14 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $14;
 $15 = ((($12)) + 11|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)<(0);
 $18 = HEAP32[$12>>2]|0;
 $19 = ((($12)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $16&255;
 $22 = $17 ? $18 : $12;
 $23 = $17 ? $20 : $21;
 $24 = (($22) + ($23)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $25 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy,$$byval_copy1,$3,$4,$5,$22,$24)|0);
 STACKTOP = sp;return ($25|0);
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36724)|0);
 __ZNSt3__26localeD2Ev($6);
 $9 = ((($5)) + 24|0);
 $10 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $10;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0,$9,$1,$$byval_copy,$4,$8);
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36724)|0);
 __ZNSt3__26localeD2Ev($6);
 $9 = ((($5)) + 16|0);
 $10 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $10;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0,$9,$1,$$byval_copy,$4,$8);
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36724)|0);
 __ZNSt3__26localeD2Ev($6);
 $9 = ((($5)) + 20|0);
 $10 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $10;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0,$9,$1,$$byval_copy,$4,$8);
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$095$0 = 0, $$sroa$095$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$4>>2] = 0;
 __ZNKSt3__28ios_base6getlocEv($8,$3);
 $40 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36724)|0);
 __ZNSt3__26localeD2Ev($8);
 $41 = $6 << 24 >> 24;
 do {
  switch ($41|0) {
  case 65: case 97:  {
   $42 = ((($5)) + 24|0);
   $43 = HEAP32[$2>>2]|0;
   HEAP32[$9>>2] = $43;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0,$42,$1,$$byval_copy,$4,$40);
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $44 = ((($5)) + 16|0);
   $45 = HEAP32[$2>>2]|0;
   HEAP32[$10>>2] = $45;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$10>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0,$44,$1,$$byval_copy1,$4,$40);
   label = 26;
   break;
  }
  case 99:  {
   $46 = ((($0)) + 8|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ((($47)) + 12|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (FUNCTION_TABLE_ii[$49 & 1023]($46)|0);
   $51 = HEAP32[$1>>2]|0;
   HEAP32[$11>>2] = $51;
   $52 = HEAP32[$2>>2]|0;
   HEAP32[$12>>2] = $52;
   $53 = ((($50)) + 11|0);
   $54 = HEAP8[$53>>0]|0;
   $55 = ($54<<24>>24)<(0);
   $56 = HEAP32[$50>>2]|0;
   $57 = ((($50)) + 4|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = $54&255;
   $60 = $55 ? $56 : $50;
   $61 = $55 ? $58 : $59;
   $62 = (($60) + ($61)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$11>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$12>>2]|0;
   $63 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy2,$$byval_copy3,$3,$4,$5,$60,$62)|0);
   HEAP32[$1>>2] = $63;
   label = 26;
   break;
  }
  case 101: case 100:  {
   $64 = ((($5)) + 12|0);
   $65 = HEAP32[$2>>2]|0;
   HEAP32[$13>>2] = $65;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0,$64,$1,$$byval_copy4,$4,$40);
   label = 26;
   break;
  }
  case 68:  {
   $66 = HEAP32[$1>>2]|0;
   HEAP32[$14>>2] = $66;
   $67 = HEAP32[$2>>2]|0;
   HEAP32[$15>>2] = $67;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$14>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$15>>2]|0;
   $68 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy5,$$byval_copy6,$3,$4,$5,23917,(23925))|0);
   HEAP32[$1>>2] = $68;
   label = 26;
   break;
  }
  case 70:  {
   $69 = HEAP32[$1>>2]|0;
   HEAP32[$16>>2] = $69;
   $70 = HEAP32[$2>>2]|0;
   HEAP32[$17>>2] = $70;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$16>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$17>>2]|0;
   $71 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy7,$$byval_copy8,$3,$4,$5,23925,(23933))|0);
   HEAP32[$1>>2] = $71;
   label = 26;
   break;
  }
  case 72:  {
   $72 = ((($5)) + 8|0);
   $73 = HEAP32[$2>>2]|0;
   HEAP32[$18>>2] = $73;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$18>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0,$72,$1,$$byval_copy9,$4,$40);
   label = 26;
   break;
  }
  case 73:  {
   $74 = ((($5)) + 8|0);
   $75 = HEAP32[$2>>2]|0;
   HEAP32[$19>>2] = $75;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$19>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0,$74,$1,$$byval_copy10,$4,$40);
   label = 26;
   break;
  }
  case 106:  {
   $76 = ((($5)) + 28|0);
   $77 = HEAP32[$2>>2]|0;
   HEAP32[$20>>2] = $77;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$20>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0,$76,$1,$$byval_copy11,$4,$40);
   label = 26;
   break;
  }
  case 109:  {
   $78 = ((($5)) + 16|0);
   $79 = HEAP32[$2>>2]|0;
   HEAP32[$21>>2] = $79;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$21>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0,$78,$1,$$byval_copy12,$4,$40);
   label = 26;
   break;
  }
  case 77:  {
   $80 = ((($5)) + 4|0);
   $81 = HEAP32[$2>>2]|0;
   HEAP32[$22>>2] = $81;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0,$80,$1,$$byval_copy13,$4,$40);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $82 = HEAP32[$2>>2]|0;
   HEAP32[$23>>2] = $82;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$23>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0,$1,$$byval_copy14,$4,$40);
   label = 26;
   break;
  }
  case 112:  {
   $83 = ((($5)) + 8|0);
   $84 = HEAP32[$2>>2]|0;
   HEAP32[$24>>2] = $84;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$24>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0,$83,$1,$$byval_copy15,$4,$40);
   label = 26;
   break;
  }
  case 114:  {
   $85 = HEAP32[$1>>2]|0;
   HEAP32[$25>>2] = $85;
   $86 = HEAP32[$2>>2]|0;
   HEAP32[$26>>2] = $86;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$25>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$26>>2]|0;
   $87 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy16,$$byval_copy17,$3,$4,$5,23933,(23944))|0);
   HEAP32[$1>>2] = $87;
   label = 26;
   break;
  }
  case 82:  {
   $88 = HEAP32[$1>>2]|0;
   HEAP32[$27>>2] = $88;
   $89 = HEAP32[$2>>2]|0;
   HEAP32[$28>>2] = $89;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$27>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$28>>2]|0;
   $90 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy18,$$byval_copy19,$3,$4,$5,23944,(23949))|0);
   HEAP32[$1>>2] = $90;
   label = 26;
   break;
  }
  case 83:  {
   $91 = HEAP32[$2>>2]|0;
   HEAP32[$29>>2] = $91;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$29>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0,$5,$1,$$byval_copy20,$4,$40);
   label = 26;
   break;
  }
  case 84:  {
   $92 = HEAP32[$1>>2]|0;
   HEAP32[$30>>2] = $92;
   $93 = HEAP32[$2>>2]|0;
   HEAP32[$31>>2] = $93;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$30>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$31>>2]|0;
   $94 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy21,$$byval_copy22,$3,$4,$5,23949,(23957))|0);
   HEAP32[$1>>2] = $94;
   label = 26;
   break;
  }
  case 119:  {
   $95 = ((($5)) + 24|0);
   $96 = HEAP32[$2>>2]|0;
   HEAP32[$32>>2] = $96;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0,$95,$1,$$byval_copy23,$4,$40);
   label = 26;
   break;
  }
  case 120:  {
   $97 = HEAP32[$0>>2]|0;
   $98 = ((($97)) + 20|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = HEAP32[$1>>2]|0;
   HEAP32[$33>>2] = $100;
   $101 = HEAP32[$2>>2]|0;
   HEAP32[$34>>2] = $101;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$33>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$34>>2]|0;
   $102 = (FUNCTION_TABLE_iiiiiii[$99 & 511]($0,$$byval_copy24,$$byval_copy25,$3,$4,$5)|0);
   $$sroa$095$0 = $102;
   break;
  }
  case 88:  {
   $103 = ((($0)) + 8|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ((($104)) + 24|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = (FUNCTION_TABLE_ii[$106 & 1023]($103)|0);
   $108 = HEAP32[$1>>2]|0;
   HEAP32[$35>>2] = $108;
   $109 = HEAP32[$2>>2]|0;
   HEAP32[$36>>2] = $109;
   $110 = ((($107)) + 11|0);
   $111 = HEAP8[$110>>0]|0;
   $112 = ($111<<24>>24)<(0);
   $113 = HEAP32[$107>>2]|0;
   $114 = ((($107)) + 4|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = $111&255;
   $117 = $112 ? $113 : $107;
   $118 = $112 ? $115 : $116;
   $119 = (($117) + ($118)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$35>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$36>>2]|0;
   $120 = (__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$$byval_copy26,$$byval_copy27,$3,$4,$5,$117,$119)|0);
   HEAP32[$1>>2] = $120;
   label = 26;
   break;
  }
  case 121:  {
   $121 = ((($5)) + 20|0);
   $122 = HEAP32[$2>>2]|0;
   HEAP32[$37>>2] = $122;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$37>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0,$121,$1,$$byval_copy28,$4,$40);
   label = 26;
   break;
  }
  case 89:  {
   $123 = ((($5)) + 20|0);
   $124 = HEAP32[$2>>2]|0;
   HEAP32[$38>>2] = $124;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$38>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0,$123,$1,$$byval_copy29,$4,$40);
   label = 26;
   break;
  }
  case 37:  {
   $125 = HEAP32[$2>>2]|0;
   HEAP32[$39>>2] = $125;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$39>>2]|0;
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0,$1,$$byval_copy30,$4,$40);
   label = 26;
   break;
  }
  default: {
   $126 = HEAP32[$4>>2]|0;
   $127 = $126 | 4;
   HEAP32[$4>>2] = $127;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $$sroa$095$0$copyload = HEAP32[$1>>2]|0;
  $$sroa$095$0 = $$sroa$095$0$copyload;
 }
 STACKTOP = sp;return ($$sroa$095$0|0);
}
function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34968]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34968)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   __ZNSt3__2L10init_weeksEv();
   HEAP32[9213] = 34224;
   ___cxa_guard_release(34968);
  }
 }
 $5 = HEAP32[9213]|0;
 return ($5|0);
}
function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34952]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34952)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   __ZNSt3__2L11init_monthsEv();
   HEAP32[9212] = 33936;
   ___cxa_guard_release(34952);
  }
 }
 $5 = HEAP32[9212]|0;
 return ($5|0);
}
function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34936]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34936)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   __ZNSt3__2L10init_am_pmEv();
   HEAP32[9211] = 33904;
   ___cxa_guard_release(34936);
  }
 }
 $5 = HEAP32[9211]|0;
 return ($5|0);
}
function __ZNKSt3__220__time_get_c_storageIcE3__cEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34928]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34928)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36832>>2]=0|0;HEAP32[36832+4>>2]=0|0;HEAP32[36832+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIcE6lengthEPKc(23675)|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(36832,23675,$5);
   ___cxa_guard_release(34928);
  }
 }
 return (36832|0);
}
function __ZNKSt3__220__time_get_c_storageIcE3__rEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34920]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34920)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36820>>2]=0|0;HEAP32[36820+4>>2]=0|0;HEAP32[36820+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIcE6lengthEPKc(23663)|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(36820,23663,$5);
   ___cxa_guard_release(34920);
  }
 }
 return (36820|0);
}
function __ZNKSt3__220__time_get_c_storageIcE3__xEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34912]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34912)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36808>>2]=0|0;HEAP32[36808+4>>2]=0|0;HEAP32[36808+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIcE6lengthEPKc(23654)|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(36808,23654,$5);
   ___cxa_guard_release(34912);
  }
 }
 return (36808|0);
}
function __ZNKSt3__220__time_get_c_storageIcE3__XEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34904]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34904)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36796>>2]=0|0;HEAP32[36796+4>>2]=0|0;HEAP32[36796+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIcE6lengthEPKc(23645)|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(36796,23645,$5);
   ___cxa_guard_release(34904);
  }
 }
 return (36796|0);
}
function __ZNSt3__2L10init_am_pmEv() {
 var $$0$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[34944]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(34944)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = 33904;
   while(1) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $$0$i$i = 0;
    while(1) {
     $exitcond$i$i = ($$0$i$i|0)==(3);
     if ($exitcond$i$i) {
      break;
     }
     $5 = (($4) + ($$0$i$i<<2)|0);
     HEAP32[$5>>2] = 0;
     $6 = (($$0$i$i) + 1)|0;
     $$0$i$i = $6;
    }
    $7 = ((($4)) + 12|0);
    $8 = ($7|0)==((33928)|0);
    if ($8) {
     break;
    } else {
     $4 = $7;
    }
   }
   ___cxa_guard_release(34944);
  }
 }
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(33904,23696)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((33916),23699)|0);
 return;
}
function __ZNSt3__2L11init_monthsEv() {
 var $$0$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[34960]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(34960)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = 33936;
   while(1) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $$0$i$i = 0;
    while(1) {
     $exitcond$i$i = ($$0$i$i|0)==(3);
     if ($exitcond$i$i) {
      break;
     }
     $5 = (($4) + ($$0$i$i<<2)|0);
     HEAP32[$5>>2] = 0;
     $6 = (($$0$i$i) + 1)|0;
     $$0$i$i = $6;
    }
    $7 = ((($4)) + 12|0);
    $8 = ($7|0)==((34224)|0);
    if ($8) {
     break;
    } else {
     $4 = $7;
    }
   }
   ___cxa_guard_release(34960);
  }
 }
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(33936,23702)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((33948),23710)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((33960),23719)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((33972),23725)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((33984),23731)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((33996),23735)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34008),23740)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34020),23745)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34032),23752)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34044),23762)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34056),23770)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34068),23779)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34080),23788)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34092),23792)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34104),23796)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34116),23800)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34128),23731)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34140),23804)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34152),23808)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34164),23812)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34176),23816)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34188),23820)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34200),23824)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34212),23828)|0);
 return;
}
function __ZNSt3__2L10init_weeksEv() {
 var $$0$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[34976]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(34976)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = 34224;
   while(1) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $$0$i$i = 0;
    while(1) {
     $exitcond$i$i = ($$0$i$i|0)==(3);
     if ($exitcond$i$i) {
      break;
     }
     $5 = (($4) + ($$0$i$i<<2)|0);
     HEAP32[$5>>2] = 0;
     $6 = (($$0$i$i) + 1)|0;
     $$0$i$i = $6;
    }
    $7 = ((($4)) + 12|0);
    $8 = ($7|0)==((34392)|0);
    if ($8) {
     break;
    } else {
     $4 = $7;
    }
   }
   ___cxa_guard_release(34976);
  }
 }
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(34224,23832)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34236),23839)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34248),23846)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34260),23854)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34272),23864)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34284),23873)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34296),23880)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34308),23889)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34320),23893)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34332),23897)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34344),23901)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34356),23905)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34368),23909)|0);
 (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc((34380),23913)|0);
 return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 1023]($7)|0);
 $11 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $11;
 $12 = ((($10)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $13 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2,$$byval_copy,$10,$12,$5,$4,0)|0);
 $14 = $13;
 $15 = $10;
 $16 = (($14) - ($15))|0;
 $17 = ($16|0)<(168);
 if ($17) {
  $18 = (($16|0) / 12)&-1;
  $19 = (($18|0) % 7)&-1;
  HEAP32[$1>>2] = $19;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $12;
 $13 = ((($11)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $14 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2,$$byval_copy,$11,$13,$5,$4,0)|0);
 $15 = $14;
 $16 = $11;
 $17 = (($15) - ($16))|0;
 $18 = ($17|0)<(288);
 if ($18) {
  $19 = (($17|0) / 12)&-1;
  $20 = (($19|0) % 12)&-1;
  HEAP32[$1>>2] = $20;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i53 = 0, $$0$i$i$i$i68 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i59 = 0, $$0$i$i2$i$i74 = 0, $$0$i$i65 = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$pre = 0, $$sroa$047$0$copyload = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $10 = sp;
 __ZNKSt3__28ios_base6getlocEv($8,$3);
 $11 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36724)|0);
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$4>>2] = 0;
 $12 = ((($11)) + 8|0);
 $$0 = $6;$14 = 0;
 L1: while(1) {
  $13 = ($$0|0)!=($7|0);
  $15 = ($14|0)==(0);
  $or$cond = $13 & $15;
  $16 = HEAP32[$1>>2]|0;
  if (!($or$cond)) {
   $182 = $16;
   break;
  }
  $17 = ($16|0)==(0|0);
  $18 = $16;
  if ($17) {
   $151 = 0;$214 = 1;$71 = $18;
  } else {
   $19 = ((($16)) + 12|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($16)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$16>>2]|0;
    $25 = ((($24)) + 36|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_ii[$26 & 1023]($16)|0);
    $$0$i$i$i$i = $27;
   } else {
    $28 = HEAP8[$20>>0]|0;
    $29 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($28)|0);
    $$0$i$i$i$i = $29;
   }
   $30 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $31 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$30)|0);
   if ($31) {
    HEAP32[$1>>2] = 0;
    $151 = 0;$214 = 1;$71 = 0;
   } else {
    $151 = $16;$214 = 0;$71 = $18;
   }
  }
  $32 = HEAP32[$2>>2]|0;
  $33 = ($32|0)==(0|0);
  $34 = $32;
  do {
   if ($33) {
    $$ph = $34;
    label = 15;
   } else {
    $35 = ((($32)) + 12|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ((($32)) + 16|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = ($36|0)==($38|0);
    if ($39) {
     $40 = HEAP32[$32>>2]|0;
     $41 = ((($40)) + 36|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = (FUNCTION_TABLE_ii[$42 & 1023]($32)|0);
     $$0$i$i2$i$i = $43;
    } else {
     $44 = HEAP8[$36>>0]|0;
     $45 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($44)|0);
     $$0$i$i2$i$i = $45;
    }
    $46 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $47 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$46)|0);
    if ($47) {
     HEAP32[$2>>2] = 0;
     $$ph = 0;
     label = 15;
     break;
    } else {
     if ($214) {
      $215 = $32;$72 = $34;
      break;
     } else {
      label = 63;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($214) {
    label = 63;
    break;
   } else {
    $215 = 0;$72 = $$ph;
   }
  }
  $48 = HEAP8[$$0>>0]|0;
  $49 = HEAP32[$11>>2]|0;
  $50 = ((($49)) + 36|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($11,$48,0)|0);
  $53 = ($52<<24>>24)==(37);
  L24: do {
   if ($53) {
    $54 = ((($$0)) + 1|0);
    $55 = ($54|0)==($7|0);
    if ($55) {
     label = 63;
     break L1;
    }
    $56 = HEAP8[$54>>0]|0;
    $57 = HEAP32[$11>>2]|0;
    $58 = ((($57)) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_iiii[$59 & 1023]($11,$56,0)|0);
    switch ($60<<24>>24) {
    case 48: case 69:  {
     $61 = ((($$0)) + 2|0);
     $62 = ($61|0)==($7|0);
     if ($62) {
      label = 63;
      break L1;
     }
     $63 = HEAP8[$61>>0]|0;
     $64 = HEAP32[$11>>2]|0;
     $65 = ((($64)) + 36|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = (FUNCTION_TABLE_iiii[$66 & 1023]($11,$63,0)|0);
     $$049 = $60;$$050 = $67;$75 = $54;
     break;
    }
    default: {
     $$049 = 0;$$050 = $60;$75 = $$0;
    }
    }
    $68 = HEAP32[$0>>2]|0;
    $69 = ((($68)) + 36|0);
    $70 = HEAP32[$69>>2]|0;
    HEAP32[$9>>2] = $71;
    HEAP32[$10>>2] = $72;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$10>>2]|0;
    $73 = (FUNCTION_TABLE_iiiiiiiii[$70 & 511]($0,$$byval_copy,$$byval_copy1,$3,$4,$5,$$050,$$049)|0);
    HEAP32[$1>>2] = $73;
    $74 = ((($75)) + 2|0);
    $$4 = $74;
   } else {
    $76 = HEAP8[$$0>>0]|0;
    $77 = ($76<<24>>24)>(-1);
    if ($77) {
     $78 = $76 << 24 >> 24;
     $79 = HEAP32[$12>>2]|0;
     $80 = (($79) + ($78<<1)|0);
     $81 = HEAP16[$80>>1]|0;
     $82 = $81 & 8192;
     $83 = ($82<<16>>16)==(0);
     if (!($83)) {
      $$0$pn = $$0;
      while(1) {
       $$3 = ((($$0$pn)) + 1|0);
       $84 = ($$3|0)==($7|0);
       if ($84) {
        $$3$lcssa = $7;
        break;
       }
       $85 = HEAP8[$$3>>0]|0;
       $86 = ($85<<24>>24)>(-1);
       if (!($86)) {
        $$3$lcssa = $$3;
        break;
       }
       $87 = $85 << 24 >> 24;
       $88 = (($79) + ($87<<1)|0);
       $89 = HEAP16[$88>>1]|0;
       $90 = $89 & 8192;
       $91 = ($90<<16>>16)==(0);
       if ($91) {
        $$3$lcssa = $$3;
        break;
       } else {
        $$0$pn = $$3;
       }
      }
      $107 = $215;$92 = $151;
      while(1) {
       $93 = ($92|0)==(0|0);
       if ($93) {
        $123 = 0;$216 = 1;
       } else {
        $94 = ((($92)) + 12|0);
        $95 = HEAP32[$94>>2]|0;
        $96 = ((($92)) + 16|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = ($95|0)==($97|0);
        if ($98) {
         $99 = HEAP32[$92>>2]|0;
         $100 = ((($99)) + 36|0);
         $101 = HEAP32[$100>>2]|0;
         $102 = (FUNCTION_TABLE_ii[$101 & 1023]($92)|0);
         $$0$i$i$i$i53 = $102;
        } else {
         $103 = HEAP8[$95>>0]|0;
         $104 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($103)|0);
         $$0$i$i$i$i53 = $104;
        }
        $105 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
        $106 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i53,$105)|0);
        if ($106) {
         HEAP32[$1>>2] = 0;
         $123 = 0;$216 = 1;
        } else {
         $123 = $92;$216 = 0;
        }
       }
       $108 = ($107|0)==(0|0);
       do {
        if ($108) {
         label = 42;
        } else {
         $109 = ((($107)) + 12|0);
         $110 = HEAP32[$109>>2]|0;
         $111 = ((($107)) + 16|0);
         $112 = HEAP32[$111>>2]|0;
         $113 = ($110|0)==($112|0);
         if ($113) {
          $114 = HEAP32[$107>>2]|0;
          $115 = ((($114)) + 36|0);
          $116 = HEAP32[$115>>2]|0;
          $117 = (FUNCTION_TABLE_ii[$116 & 1023]($107)|0);
          $$0$i$i2$i$i59 = $117;
         } else {
          $118 = HEAP8[$110>>0]|0;
          $119 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($118)|0);
          $$0$i$i2$i$i59 = $119;
         }
         $120 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
         $121 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i59,$120)|0);
         if ($121) {
          HEAP32[$2>>2] = 0;
          label = 42;
          break;
         } else {
          if ($216) {
           $217 = $107;
           break;
          } else {
           $$4 = $$3$lcssa;
           break L24;
          }
         }
        }
       } while(0);
       if ((label|0) == 42) {
        label = 0;
        if ($216) {
         $$4 = $$3$lcssa;
         break L24;
        } else {
         $217 = 0;
        }
       }
       $122 = ((($123)) + 12|0);
       $124 = HEAP32[$122>>2]|0;
       $125 = ((($123)) + 16|0);
       $126 = HEAP32[$125>>2]|0;
       $127 = ($124|0)==($126|0);
       if ($127) {
        $128 = HEAP32[$123>>2]|0;
        $129 = ((($128)) + 36|0);
        $130 = HEAP32[$129>>2]|0;
        $131 = (FUNCTION_TABLE_ii[$130 & 1023]($123)|0);
        $$0$i$i = $131;
       } else {
        $132 = HEAP8[$124>>0]|0;
        $133 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($132)|0);
        $$0$i$i = $133;
       }
       $134 = $$0$i$i&255;
       $135 = ($134<<24>>24)>(-1);
       if (!($135)) {
        $$4 = $$3$lcssa;
        break L24;
       }
       $sext = $$0$i$i << 24;
       $136 = $sext >> 24;
       $137 = HEAP32[$12>>2]|0;
       $138 = (($137) + ($136<<1)|0);
       $139 = HEAP16[$138>>1]|0;
       $140 = $139 & 8192;
       $141 = ($140<<16>>16)==(0);
       if ($141) {
        $$4 = $$3$lcssa;
        break L24;
       }
       $142 = HEAP32[$122>>2]|0;
       $143 = HEAP32[$125>>2]|0;
       $144 = ($142|0)==($143|0);
       if ($144) {
        $145 = HEAP32[$123>>2]|0;
        $146 = ((($145)) + 40|0);
        $147 = HEAP32[$146>>2]|0;
        (FUNCTION_TABLE_ii[$147 & 1023]($123)|0);
       } else {
        $148 = ((($142)) + 1|0);
        HEAP32[$122>>2] = $148;
        $149 = HEAP8[$142>>0]|0;
        (__ZNSt3__211char_traitsIcE11to_int_typeEc($149)|0);
       }
       $107 = $217;$92 = $123;
      }
     }
    }
    $150 = ((($151)) + 12|0);
    $152 = HEAP32[$150>>2]|0;
    $153 = ((($151)) + 16|0);
    $154 = HEAP32[$153>>2]|0;
    $155 = ($152|0)==($154|0);
    if ($155) {
     $156 = HEAP32[$151>>2]|0;
     $157 = ((($156)) + 36|0);
     $158 = HEAP32[$157>>2]|0;
     $159 = (FUNCTION_TABLE_ii[$158 & 1023]($151)|0);
     $$0$i$i65 = $159;
    } else {
     $160 = HEAP8[$152>>0]|0;
     $161 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($160)|0);
     $$0$i$i65 = $161;
    }
    $162 = $$0$i$i65&255;
    $163 = HEAP32[$11>>2]|0;
    $164 = ((($163)) + 12|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = (FUNCTION_TABLE_iii[$165 & 1023]($11,$162)|0);
    $167 = HEAP8[$$0>>0]|0;
    $168 = HEAP32[$11>>2]|0;
    $169 = ((($168)) + 12|0);
    $170 = HEAP32[$169>>2]|0;
    $171 = (FUNCTION_TABLE_iii[$170 & 1023]($11,$167)|0);
    $172 = ($166<<24>>24)==($171<<24>>24);
    if (!($172)) {
     HEAP32[$4>>2] = 4;
     $$4 = $$0;
     break;
    }
    $173 = HEAP32[$150>>2]|0;
    $174 = HEAP32[$153>>2]|0;
    $175 = ($173|0)==($174|0);
    if ($175) {
     $176 = HEAP32[$151>>2]|0;
     $177 = ((($176)) + 40|0);
     $178 = HEAP32[$177>>2]|0;
     (FUNCTION_TABLE_ii[$178 & 1023]($151)|0);
    } else {
     $179 = ((($173)) + 1|0);
     HEAP32[$150>>2] = $179;
     $180 = HEAP8[$173>>0]|0;
     (__ZNSt3__211char_traitsIcE11to_int_typeEc($180)|0);
    }
    $181 = ((($$0)) + 1|0);
    $$4 = $181;
   }
  } while(0);
  $$pre = HEAP32[$4>>2]|0;
  $$0 = $$4;$14 = $$pre;
 }
 if ((label|0) == 63) {
  HEAP32[$4>>2] = 4;
  $182 = $151;
 }
 $183 = ($182|0)==(0|0);
 if ($183) {
  $$sroa$047$0$copyload = 0;$218 = 1;
 } else {
  $184 = ((($182)) + 12|0);
  $185 = HEAP32[$184>>2]|0;
  $186 = ((($182)) + 16|0);
  $187 = HEAP32[$186>>2]|0;
  $188 = ($185|0)==($187|0);
  if ($188) {
   $189 = HEAP32[$182>>2]|0;
   $190 = ((($189)) + 36|0);
   $191 = HEAP32[$190>>2]|0;
   $192 = (FUNCTION_TABLE_ii[$191 & 1023]($182)|0);
   $$0$i$i$i$i68 = $192;
  } else {
   $193 = HEAP8[$185>>0]|0;
   $194 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($193)|0);
   $$0$i$i$i$i68 = $194;
  }
  $195 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
  $196 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i68,$195)|0);
  if ($196) {
   HEAP32[$1>>2] = 0;
   $$sroa$047$0$copyload = 0;$218 = 1;
  } else {
   $$sroa$047$0$copyload = $182;$218 = 0;
  }
 }
 $197 = HEAP32[$2>>2]|0;
 $198 = ($197|0)==(0|0);
 do {
  if ($198) {
   label = 76;
  } else {
   $199 = ((($197)) + 12|0);
   $200 = HEAP32[$199>>2]|0;
   $201 = ((($197)) + 16|0);
   $202 = HEAP32[$201>>2]|0;
   $203 = ($200|0)==($202|0);
   if ($203) {
    $204 = HEAP32[$197>>2]|0;
    $205 = ((($204)) + 36|0);
    $206 = HEAP32[$205>>2]|0;
    $207 = (FUNCTION_TABLE_ii[$206 & 1023]($197)|0);
    $$0$i$i2$i$i74 = $207;
   } else {
    $208 = HEAP8[$200>>0]|0;
    $209 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($208)|0);
    $$0$i$i2$i$i74 = $209;
   }
   $210 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $211 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i74,$210)|0);
   if ($211) {
    HEAP32[$2>>2] = 0;
    label = 76;
    break;
   } else {
    if ($218) {
     break;
    } else {
     label = 78;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 76) {
  if ($218) {
   label = 78;
  }
 }
 if ((label|0) == 78) {
  $212 = HEAP32[$4>>2]|0;
  $213 = $212 | 2;
  HEAP32[$4>>2] = $213;
 }
 STACKTOP = sp;return ($$sroa$047$0$copyload|0);
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $$off = (($8) + -1)|0;
 $12 = ($$off>>>0)<(31);
 $13 = $12 & $11;
 if ($13) {
  HEAP32[$1>>2] = $8;
 } else {
  $14 = $9 | 4;
  HEAP32[$4>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(24);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $$off = (($8) + -1)|0;
 $12 = ($$off>>>0)<(12);
 $13 = $12 & $11;
 if ($13) {
  HEAP32[$1>>2] = $8;
 } else {
  $14 = $9 | 4;
  HEAP32[$4>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,3)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(366);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(13);
 $or$cond = $12 & $11;
 if ($or$cond) {
  $13 = (($8) + -1)|0;
  HEAP32[$1>>2] = $13;
 } else {
  $14 = $9 | 4;
  HEAP32[$4>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(60);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $$pre$i$i$i = 0, $$pre$i$i$i9 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i10 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($4)) + 8|0);
 L1: while(1) {
  $6 = HEAP32[$1>>2]|0;
  $7 = ($6|0)==(0|0);
  do {
   if ($7) {
    $99 = 1;
   } else {
    $8 = ((($6)) + 12|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = ((($6)) + 16|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($9|0)==($11|0);
    if ($12) {
     $13 = HEAP32[$6>>2]|0;
     $14 = ((($13)) + 36|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = (FUNCTION_TABLE_ii[$15 & 1023]($6)|0);
     $$0$i$i$i$i = $16;
    } else {
     $17 = HEAP8[$9>>0]|0;
     $18 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($17)|0);
     $$0$i$i$i$i = $18;
    }
    $19 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $20 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$19)|0);
    if ($20) {
     HEAP32[$1>>2] = 0;
     $99 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$1>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $99 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $21 = HEAP32[$2>>2]|0;
  $22 = ($21|0)==(0|0);
  do {
   if ($22) {
    label = 15;
   } else {
    $23 = ((($21)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($21)) + 16|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ($24|0)==($26|0);
    if ($27) {
     $28 = HEAP32[$21>>2]|0;
     $29 = ((($28)) + 36|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = (FUNCTION_TABLE_ii[$30 & 1023]($21)|0);
     $$0$i$i2$i$i = $31;
    } else {
     $32 = HEAP8[$24>>0]|0;
     $33 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($32)|0);
     $$0$i$i2$i$i = $33;
    }
    $34 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $35 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$34)|0);
    if ($35) {
     HEAP32[$2>>2] = 0;
     label = 15;
     break;
    } else {
     if ($99) {
      $100 = $21;
      break;
     } else {
      $82 = $21;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($99) {
    $82 = 0;
    break;
   } else {
    $100 = 0;
   }
  }
  $36 = HEAP32[$1>>2]|0;
  $37 = ((($36)) + 12|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($36)) + 16|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($38|0)==($40|0);
  if ($41) {
   $42 = HEAP32[$36>>2]|0;
   $43 = ((($42)) + 36|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (FUNCTION_TABLE_ii[$44 & 1023]($36)|0);
   $$0$i$i = $45;
  } else {
   $46 = HEAP8[$38>>0]|0;
   $47 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($46)|0);
   $$0$i$i = $47;
  }
  $48 = $$0$i$i&255;
  $49 = ($48<<24>>24)>(-1);
  if (!($49)) {
   $82 = $100;
   break;
  }
  $sext = $$0$i$i << 24;
  $50 = $sext >> 24;
  $51 = HEAP32[$5>>2]|0;
  $52 = (($51) + ($50<<1)|0);
  $53 = HEAP16[$52>>1]|0;
  $54 = $53 & 8192;
  $55 = ($54<<16>>16)==(0);
  if ($55) {
   $82 = $100;
   break;
  }
  $56 = HEAP32[$1>>2]|0;
  $57 = ((($56)) + 12|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ((($56)) + 16|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = ($58|0)==($60|0);
  if ($61) {
   $62 = HEAP32[$56>>2]|0;
   $63 = ((($62)) + 40|0);
   $64 = HEAP32[$63>>2]|0;
   (FUNCTION_TABLE_ii[$64 & 1023]($56)|0);
  } else {
   $65 = ((($58)) + 1|0);
   HEAP32[$57>>2] = $65;
   $66 = HEAP8[$58>>0]|0;
   (__ZNSt3__211char_traitsIcE11to_int_typeEc($66)|0);
  }
 }
 $67 = HEAP32[$1>>2]|0;
 $68 = ($67|0)==(0|0);
 do {
  if ($68) {
   $101 = 1;
  } else {
   $69 = ((($67)) + 12|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($67)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ($70|0)==($72|0);
   if ($73) {
    $74 = HEAP32[$67>>2]|0;
    $75 = ((($74)) + 36|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (FUNCTION_TABLE_ii[$76 & 1023]($67)|0);
    $$0$i$i$i$i7 = $77;
   } else {
    $78 = HEAP8[$70>>0]|0;
    $79 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($78)|0);
    $$0$i$i$i$i7 = $79;
   }
   $80 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $81 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i7,$80)|0);
   if ($81) {
    HEAP32[$1>>2] = 0;
    $101 = 1;
    break;
   } else {
    $$pre$i$i$i9 = HEAP32[$1>>2]|0;
    $phitmp$i$i$i10 = ($$pre$i$i$i9|0)==(0|0);
    $101 = $phitmp$i$i$i10;
    break;
   }
  }
 } while(0);
 $83 = ($82|0)==(0|0);
 do {
  if ($83) {
   label = 39;
  } else {
   $84 = ((($82)) + 12|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($82)) + 16|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($85|0)==($87|0);
   if ($88) {
    $89 = HEAP32[$82>>2]|0;
    $90 = ((($89)) + 36|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = (FUNCTION_TABLE_ii[$91 & 1023]($82)|0);
    $$0$i$i2$i$i13 = $92;
   } else {
    $93 = HEAP8[$85>>0]|0;
    $94 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($93)|0);
    $$0$i$i2$i$i13 = $94;
   }
   $95 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $96 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i13,$95)|0);
   if ($96) {
    HEAP32[$2>>2] = 0;
    label = 39;
    break;
   } else {
    if ($101) {
     break;
    } else {
     label = 41;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 39) {
  if ($101) {
   label = 41;
  }
 }
 if ((label|0) == 41) {
  $97 = HEAP32[$3>>2]|0;
  $98 = $97 | 2;
  HEAP32[$3>>2] = $98;
 }
 return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond20 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = ((($11)) + 11|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)<(0);
 if ($14) {
  $15 = ((($11)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $27 = $16;
 } else {
  $17 = $13&255;
  $27 = $17;
 }
 $18 = ((($11)) + 12|0);
 $19 = ((($18)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 if ($21) {
  $22 = ((($11)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  $26 = $23;
 } else {
  $24 = $20&255;
  $26 = $24;
 }
 $25 = (0 - ($26))|0;
 $28 = ($27|0)==($25|0);
 do {
  if ($28) {
   $29 = HEAP32[$4>>2]|0;
   $30 = $29 | 4;
   HEAP32[$4>>2] = $30;
  } else {
   $31 = HEAP32[$3>>2]|0;
   HEAP32[$6>>2] = $31;
   $32 = ((($11)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
   $33 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2,$$byval_copy,$11,$32,$5,$4,0)|0);
   $34 = $33;
   $35 = $11;
   $36 = (($34) - ($35))|0;
   $37 = ($36|0)==(0);
   $38 = HEAP32[$1>>2]|0;
   $39 = ($38|0)==(12);
   $or$cond = $39 & $37;
   if ($or$cond) {
    HEAP32[$1>>2] = 0;
    break;
   }
   $40 = ($36|0)==(12);
   $41 = ($38|0)<(12);
   $or$cond20 = $41 & $40;
   if ($or$cond20) {
    $42 = (($38) + 12)|0;
    HEAP32[$1>>2] = $42;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(61);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,1)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(7);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,4)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = ($8|0)<(69);
  if ($12) {
   $13 = (($8) + 2000)|0;
   $$0 = $13;
  } else {
   $14 = ($8|0)<(100);
   $15 = (($8) + 1900)|0;
   $spec$select = $14 ? $15 : $8;
   $$0 = $spec$select;
  }
  $16 = (($$0) + -1900)|0;
  HEAP32[$1>>2] = $16;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,4)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = (($8) + -1900)|0;
  HEAP32[$1>>2] = $12;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $$pre$i$i$i = 0, $$pre$i$i$i10 = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $100 = 1;
  } else {
   $7 = ((($5)) + 12|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ((($5)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)==($10|0);
   if ($11) {
    $12 = HEAP32[$5>>2]|0;
    $13 = ((($12)) + 36|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (FUNCTION_TABLE_ii[$14 & 1023]($5)|0);
    $$0$i$i$i$i = $15;
   } else {
    $16 = HEAP8[$8>>0]|0;
    $17 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($16)|0);
    $$0$i$i$i$i = $17;
   }
   $18 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $19 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$18)|0);
   if ($19) {
    HEAP32[$1>>2] = 0;
    $100 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$1>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $100 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $20 = HEAP32[$2>>2]|0;
 $21 = ($20|0)==(0|0);
 do {
  if ($21) {
   label = 14;
  } else {
   $22 = ((($20)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($20)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($23|0)==($25|0);
   if ($26) {
    $27 = HEAP32[$20>>2]|0;
    $28 = ((($27)) + 36|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (FUNCTION_TABLE_ii[$29 & 1023]($20)|0);
    $$0$i$i2$i$i = $30;
   } else {
    $31 = HEAP8[$23>>0]|0;
    $32 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($31)|0);
    $$0$i$i2$i$i = $32;
   }
   $33 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $34 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$33)|0);
   if ($34) {
    HEAP32[$2>>2] = 0;
    label = 14;
    break;
   } else {
    if ($100) {
     $83 = $20;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($100) {
   label = 16;
  } else {
   $83 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $35 = HEAP32[$3>>2]|0;
   $36 = $35 | 6;
   HEAP32[$3>>2] = $36;
  }
  else if ((label|0) == 17) {
   $37 = HEAP32[$1>>2]|0;
   $38 = ((($37)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$37>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 1023]($37)|0);
    $$0$i$i = $46;
   } else {
    $47 = HEAP8[$39>>0]|0;
    $48 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($47)|0);
    $$0$i$i = $48;
   }
   $49 = $$0$i$i&255;
   $50 = HEAP32[$4>>2]|0;
   $51 = ((($50)) + 36|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (FUNCTION_TABLE_iiii[$52 & 1023]($4,$49,0)|0);
   $54 = ($53<<24>>24)==(37);
   if (!($54)) {
    $55 = HEAP32[$3>>2]|0;
    $56 = $55 | 4;
    HEAP32[$3>>2] = $56;
    break;
   }
   $57 = HEAP32[$1>>2]|0;
   $58 = ((($57)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($57)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($59|0)==($61|0);
   if ($62) {
    $63 = HEAP32[$57>>2]|0;
    $64 = ((($63)) + 40|0);
    $65 = HEAP32[$64>>2]|0;
    (FUNCTION_TABLE_ii[$65 & 1023]($57)|0);
   } else {
    $66 = ((($59)) + 1|0);
    HEAP32[$58>>2] = $66;
    $67 = HEAP8[$59>>0]|0;
    (__ZNSt3__211char_traitsIcE11to_int_typeEc($67)|0);
   }
   $68 = HEAP32[$1>>2]|0;
   $69 = ($68|0)==(0|0);
   do {
    if ($69) {
     $101 = 1;
    } else {
     $70 = ((($68)) + 12|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($68)) + 16|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($71|0)==($73|0);
     if ($74) {
      $75 = HEAP32[$68>>2]|0;
      $76 = ((($75)) + 36|0);
      $77 = HEAP32[$76>>2]|0;
      $78 = (FUNCTION_TABLE_ii[$77 & 1023]($68)|0);
      $$0$i$i$i$i8 = $78;
     } else {
      $79 = HEAP8[$71>>0]|0;
      $80 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($79)|0);
      $$0$i$i$i$i8 = $80;
     }
     $81 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
     $82 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i8,$81)|0);
     if ($82) {
      HEAP32[$1>>2] = 0;
      $101 = 1;
      break;
     } else {
      $$pre$i$i$i10 = HEAP32[$1>>2]|0;
      $phitmp$i$i$i11 = ($$pre$i$i$i10|0)==(0|0);
      $101 = $phitmp$i$i$i11;
      break;
     }
    }
   } while(0);
   $84 = ($83|0)==(0|0);
   do {
    if ($84) {
     label = 38;
    } else {
     $85 = ((($83)) + 12|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ((($83)) + 16|0);
     $88 = HEAP32[$87>>2]|0;
     $89 = ($86|0)==($88|0);
     if ($89) {
      $90 = HEAP32[$83>>2]|0;
      $91 = ((($90)) + 36|0);
      $92 = HEAP32[$91>>2]|0;
      $93 = (FUNCTION_TABLE_ii[$92 & 1023]($83)|0);
      $$0$i$i2$i$i14 = $93;
     } else {
      $94 = HEAP8[$86>>0]|0;
      $95 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($94)|0);
      $$0$i$i2$i$i14 = $95;
     }
     $96 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
     $97 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i14,$96)|0);
     if ($97) {
      HEAP32[$2>>2] = 0;
      label = 38;
      break;
     } else {
      if ($101) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 38) {
    if (!($101)) {
     break;
    }
   }
   $98 = HEAP32[$3>>2]|0;
   $99 = $98 | 2;
   HEAP32[$3>>2] = $99;
  }
 } while(0);
 return;
}
function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i$i$i40 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i2$i$i46 = 0, $$0$i$i36 = 0, $$0$in = 0, $$023 = 0, $$023$in = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i27 = 0, $$pre$i$i$i42 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i28 = 0, $phitmp$i$i$i43 = 0, $sext = 0;
 var $sext52 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $180 = 1;
  } else {
   $7 = ((($5)) + 12|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ((($5)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)==($10|0);
   if ($11) {
    $12 = HEAP32[$5>>2]|0;
    $13 = ((($12)) + 36|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (FUNCTION_TABLE_ii[$14 & 1023]($5)|0);
    $$0$i$i$i$i = $15;
   } else {
    $16 = HEAP8[$8>>0]|0;
    $17 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($16)|0);
    $$0$i$i$i$i = $17;
   }
   $18 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $19 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$18)|0);
   if ($19) {
    HEAP32[$0>>2] = 0;
    $180 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$0>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $180 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $20 = HEAP32[$1>>2]|0;
 $21 = ($20|0)==(0|0);
 do {
  if ($21) {
   label = 14;
  } else {
   $22 = ((($20)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($20)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($23|0)==($25|0);
   if ($26) {
    $27 = HEAP32[$20>>2]|0;
    $28 = ((($27)) + 36|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (FUNCTION_TABLE_ii[$29 & 1023]($20)|0);
    $$0$i$i2$i$i = $30;
   } else {
    $31 = HEAP8[$23>>0]|0;
    $32 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($31)|0);
    $$0$i$i2$i$i = $32;
   }
   $33 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $34 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$33)|0);
   if ($34) {
    HEAP32[$1>>2] = 0;
    label = 14;
    break;
   } else {
    if ($180) {
     $181 = $20;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($180) {
   label = 16;
  } else {
   $181 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $35 = HEAP32[$2>>2]|0;
   $36 = $35 | 6;
   HEAP32[$2>>2] = $36;
   $$2 = 0;
  }
  else if ((label|0) == 17) {
   $37 = HEAP32[$0>>2]|0;
   $38 = ((($37)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$37>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 1023]($37)|0);
    $$0$i$i = $46;
   } else {
    $47 = HEAP8[$39>>0]|0;
    $48 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($47)|0);
    $$0$i$i = $48;
   }
   $49 = $$0$i$i&255;
   $50 = ($49<<24>>24)>(-1);
   if ($50) {
    $sext = $$0$i$i << 24;
    $51 = $sext >> 24;
    $52 = ((($3)) + 8|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = (($53) + ($51<<1)|0);
    $55 = HEAP16[$54>>1]|0;
    $56 = $55 & 2048;
    $57 = ($56<<16>>16)==(0);
    if (!($57)) {
     $60 = HEAP32[$3>>2]|0;
     $61 = ((($60)) + 36|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = (FUNCTION_TABLE_iiii[$62 & 1023]($3,$49,0)|0);
     $64 = $63 << 24 >> 24;
     $65 = HEAP32[$0>>2]|0;
     $66 = ((($65)) + 12|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($65)) + 16|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($67|0)==($69|0);
     if ($70) {
      $71 = HEAP32[$65>>2]|0;
      $72 = ((($71)) + 40|0);
      $73 = HEAP32[$72>>2]|0;
      (FUNCTION_TABLE_ii[$73 & 1023]($65)|0);
     } else {
      $74 = ((($67)) + 1|0);
      HEAP32[$66>>2] = $74;
      $75 = HEAP8[$67>>0]|0;
      (__ZNSt3__211char_traitsIcE11to_int_typeEc($75)|0);
     }
     $$0$in = $64;$$023$in = $4;$182 = $181;$91 = $181;
     while(1) {
      $$0 = (($$0$in) + -48)|0;
      $$023 = (($$023$in) + -1)|0;
      $76 = HEAP32[$0>>2]|0;
      $77 = ($76|0)==(0|0);
      do {
       if ($77) {
        $108 = 1;
       } else {
        $78 = ((($76)) + 12|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = ((($76)) + 16|0);
        $81 = HEAP32[$80>>2]|0;
        $82 = ($79|0)==($81|0);
        if ($82) {
         $83 = HEAP32[$76>>2]|0;
         $84 = ((($83)) + 36|0);
         $85 = HEAP32[$84>>2]|0;
         $86 = (FUNCTION_TABLE_ii[$85 & 1023]($76)|0);
         $$0$i$i$i$i25 = $86;
        } else {
         $87 = HEAP8[$79>>0]|0;
         $88 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($87)|0);
         $$0$i$i$i$i25 = $88;
        }
        $89 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
        $90 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25,$89)|0);
        if ($90) {
         HEAP32[$0>>2] = 0;
         $108 = 1;
         break;
        } else {
         $$pre$i$i$i27 = HEAP32[$0>>2]|0;
         $phitmp$i$i$i28 = ($$pre$i$i$i27|0)==(0|0);
         $108 = $phitmp$i$i$i28;
         break;
        }
       }
      } while(0);
      $92 = ($91|0)==(0|0);
      if ($92) {
       $107 = 1;$163 = $182;$183 = 0;
      } else {
       $93 = ((($91)) + 12|0);
       $94 = HEAP32[$93>>2]|0;
       $95 = ((($91)) + 16|0);
       $96 = HEAP32[$95>>2]|0;
       $97 = ($94|0)==($96|0);
       if ($97) {
        $98 = HEAP32[$91>>2]|0;
        $99 = ((($98)) + 36|0);
        $100 = HEAP32[$99>>2]|0;
        $101 = (FUNCTION_TABLE_ii[$100 & 1023]($91)|0);
        $$0$i$i2$i$i31 = $101;
       } else {
        $102 = HEAP8[$94>>0]|0;
        $103 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($102)|0);
        $$0$i$i2$i$i31 = $103;
       }
       $104 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $105 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31,$104)|0);
       if ($105) {
        HEAP32[$1>>2] = 0;
        $107 = 1;$163 = 0;$183 = 0;
       } else {
        $107 = 0;$163 = $182;$183 = $91;
       }
      }
      $106 = $108 ^ $107;
      $109 = ($$023$in|0)>(1);
      $110 = $109 & $106;
      $111 = HEAP32[$0>>2]|0;
      if (!($110)) {
       break;
      }
      $112 = ((($111)) + 12|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ((($111)) + 16|0);
      $115 = HEAP32[$114>>2]|0;
      $116 = ($113|0)==($115|0);
      if ($116) {
       $117 = HEAP32[$111>>2]|0;
       $118 = ((($117)) + 36|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = (FUNCTION_TABLE_ii[$119 & 1023]($111)|0);
       $$0$i$i36 = $120;
      } else {
       $121 = HEAP8[$113>>0]|0;
       $122 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($121)|0);
       $$0$i$i36 = $122;
      }
      $123 = $$0$i$i36&255;
      $124 = ($123<<24>>24)>(-1);
      if (!($124)) {
       $$2 = $$0;
       break L22;
      }
      $sext52 = $$0$i$i36 << 24;
      $125 = $sext52 >> 24;
      $126 = HEAP32[$52>>2]|0;
      $127 = (($126) + ($125<<1)|0);
      $128 = HEAP16[$127>>1]|0;
      $129 = $128 & 2048;
      $130 = ($129<<16>>16)==(0);
      if ($130) {
       $$2 = $$0;
       break L22;
      }
      $131 = ($$0*10)|0;
      $132 = HEAP32[$3>>2]|0;
      $133 = ((($132)) + 36|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = (FUNCTION_TABLE_iiii[$134 & 1023]($3,$123,0)|0);
      $136 = $135 << 24 >> 24;
      $137 = (($131) + ($136))|0;
      $138 = HEAP32[$0>>2]|0;
      $139 = ((($138)) + 12|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($138)) + 16|0);
      $142 = HEAP32[$141>>2]|0;
      $143 = ($140|0)==($142|0);
      if ($143) {
       $144 = HEAP32[$138>>2]|0;
       $145 = ((($144)) + 40|0);
       $146 = HEAP32[$145>>2]|0;
       (FUNCTION_TABLE_ii[$146 & 1023]($138)|0);
      } else {
       $147 = ((($140)) + 1|0);
       HEAP32[$139>>2] = $147;
       $148 = HEAP8[$140>>0]|0;
       (__ZNSt3__211char_traitsIcE11to_int_typeEc($148)|0);
      }
      $$0$in = $137;$$023$in = $$023;$182 = $163;$91 = $183;
     }
     $149 = ($111|0)==(0|0);
     do {
      if ($149) {
       $184 = 1;
      } else {
       $150 = ((($111)) + 12|0);
       $151 = HEAP32[$150>>2]|0;
       $152 = ((($111)) + 16|0);
       $153 = HEAP32[$152>>2]|0;
       $154 = ($151|0)==($153|0);
       if ($154) {
        $155 = HEAP32[$111>>2]|0;
        $156 = ((($155)) + 36|0);
        $157 = HEAP32[$156>>2]|0;
        $158 = (FUNCTION_TABLE_ii[$157 & 1023]($111)|0);
        $$0$i$i$i$i40 = $158;
       } else {
        $159 = HEAP8[$151>>0]|0;
        $160 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($159)|0);
        $$0$i$i$i$i40 = $160;
       }
       $161 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $162 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i40,$161)|0);
       if ($162) {
        HEAP32[$0>>2] = 0;
        $184 = 1;
        break;
       } else {
        $$pre$i$i$i42 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i43 = ($$pre$i$i$i42|0)==(0|0);
        $184 = $phitmp$i$i$i43;
        break;
       }
      }
     } while(0);
     $164 = ($163|0)==(0|0);
     do {
      if ($164) {
       label = 63;
      } else {
       $165 = ((($163)) + 12|0);
       $166 = HEAP32[$165>>2]|0;
       $167 = ((($163)) + 16|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($166|0)==($168|0);
       if ($169) {
        $170 = HEAP32[$163>>2]|0;
        $171 = ((($170)) + 36|0);
        $172 = HEAP32[$171>>2]|0;
        $173 = (FUNCTION_TABLE_ii[$172 & 1023]($163)|0);
        $$0$i$i2$i$i46 = $173;
       } else {
        $174 = HEAP8[$166>>0]|0;
        $175 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($174)|0);
        $$0$i$i2$i$i46 = $175;
       }
       $176 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $177 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i46,$176)|0);
       if ($177) {
        HEAP32[$1>>2] = 0;
        label = 63;
        break;
       } else {
        if ($184) {
         $$2 = $$0;
         break L22;
        } else {
         break;
        }
       }
      }
     } while(0);
     if ((label|0) == 63) {
      if (!($184)) {
       $$2 = $$0;
       break;
      }
     }
     $178 = HEAP32[$2>>2]|0;
     $179 = $178 | 2;
     HEAP32[$2>>2] = $179;
     $$2 = $$0;
     break;
    }
   }
   $58 = HEAP32[$2>>2]|0;
   $59 = $58 | 4;
   HEAP32[$2>>2] = $59;
   $$2 = 0;
  }
 } while(0);
 return ($$2|0);
}
function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $9;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $10 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy,$$byval_copy1,$3,$4,$5,5872,(5904))|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (FUNCTION_TABLE_ii[$11 & 1023]($8)|0);
 $13 = HEAP32[$1>>2]|0;
 HEAP32[$6>>2] = $13;
 $14 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $14;
 $15 = ((($12)) + 8|0);
 $16 = ((($15)) + 3|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ($17<<24>>24)<(0);
 $19 = HEAP32[$12>>2]|0;
 $20 = ((($12)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $17&255;
 $23 = $18 ? $19 : $12;
 $24 = $18 ? $21 : $22;
 $25 = (($23) + ($24<<2)|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;
 $26 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy,$$byval_copy1,$3,$4,$5,$23,$25)|0);
 STACKTOP = sp;return ($26|0);
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36756)|0);
 __ZNSt3__26localeD2Ev($6);
 $9 = ((($5)) + 24|0);
 $10 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $10;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0,$9,$1,$$byval_copy,$4,$8);
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36756)|0);
 __ZNSt3__26localeD2Ev($6);
 $9 = ((($5)) + 16|0);
 $10 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $10;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0,$9,$1,$$byval_copy,$4,$8);
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $8 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36756)|0);
 __ZNSt3__26localeD2Ev($6);
 $9 = ((($5)) + 20|0);
 $10 = HEAP32[$2>>2]|0;
 HEAP32[$7>>2] = $10;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$7>>2]|0;
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0,$9,$1,$$byval_copy,$4,$8);
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0;
 var $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $$sroa$095$0 = 0, $$sroa$095$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $$byval_copy30 = sp + 248|0;
 $$byval_copy29 = sp + 244|0;
 $$byval_copy28 = sp + 240|0;
 $$byval_copy27 = sp + 236|0;
 $$byval_copy26 = sp + 232|0;
 $$byval_copy25 = sp + 228|0;
 $$byval_copy24 = sp + 224|0;
 $$byval_copy23 = sp + 220|0;
 $$byval_copy22 = sp + 216|0;
 $$byval_copy21 = sp + 212|0;
 $$byval_copy20 = sp + 208|0;
 $$byval_copy19 = sp + 204|0;
 $$byval_copy18 = sp + 200|0;
 $$byval_copy17 = sp + 196|0;
 $$byval_copy16 = sp + 192|0;
 $$byval_copy15 = sp + 188|0;
 $$byval_copy14 = sp + 184|0;
 $$byval_copy13 = sp + 180|0;
 $$byval_copy12 = sp + 176|0;
 $$byval_copy11 = sp + 172|0;
 $$byval_copy10 = sp + 168|0;
 $$byval_copy9 = sp + 164|0;
 $$byval_copy8 = sp + 160|0;
 $$byval_copy7 = sp + 156|0;
 $$byval_copy6 = sp + 152|0;
 $$byval_copy5 = sp + 148|0;
 $$byval_copy4 = sp + 144|0;
 $$byval_copy3 = sp + 140|0;
 $$byval_copy2 = sp + 136|0;
 $$byval_copy1 = sp + 132|0;
 $$byval_copy = sp + 128|0;
 $8 = sp + 124|0;
 $9 = sp + 120|0;
 $10 = sp + 116|0;
 $11 = sp + 112|0;
 $12 = sp + 108|0;
 $13 = sp + 104|0;
 $14 = sp + 100|0;
 $15 = sp + 96|0;
 $16 = sp + 92|0;
 $17 = sp + 88|0;
 $18 = sp + 84|0;
 $19 = sp + 80|0;
 $20 = sp + 76|0;
 $21 = sp + 72|0;
 $22 = sp + 68|0;
 $23 = sp + 64|0;
 $24 = sp + 60|0;
 $25 = sp + 56|0;
 $26 = sp + 52|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $30 = sp + 36|0;
 $31 = sp + 32|0;
 $32 = sp + 28|0;
 $33 = sp + 24|0;
 $34 = sp + 20|0;
 $35 = sp + 16|0;
 $36 = sp + 12|0;
 $37 = sp + 8|0;
 $38 = sp + 4|0;
 $39 = sp;
 HEAP32[$4>>2] = 0;
 __ZNKSt3__28ios_base6getlocEv($8,$3);
 $40 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36756)|0);
 __ZNSt3__26localeD2Ev($8);
 $41 = $6 << 24 >> 24;
 do {
  switch ($41|0) {
  case 65: case 97:  {
   $42 = ((($5)) + 24|0);
   $43 = HEAP32[$2>>2]|0;
   HEAP32[$9>>2] = $43;
   ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0,$42,$1,$$byval_copy,$4,$40);
   label = 26;
   break;
  }
  case 104: case 66: case 98:  {
   $44 = ((($5)) + 16|0);
   $45 = HEAP32[$2>>2]|0;
   HEAP32[$10>>2] = $45;
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$10>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0,$44,$1,$$byval_copy1,$4,$40);
   label = 26;
   break;
  }
  case 99:  {
   $46 = ((($0)) + 8|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ((($47)) + 12|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (FUNCTION_TABLE_ii[$49 & 1023]($46)|0);
   $51 = HEAP32[$1>>2]|0;
   HEAP32[$11>>2] = $51;
   $52 = HEAP32[$2>>2]|0;
   HEAP32[$12>>2] = $52;
   $53 = ((($50)) + 8|0);
   $54 = ((($53)) + 3|0);
   $55 = HEAP8[$54>>0]|0;
   $56 = ($55<<24>>24)<(0);
   $57 = HEAP32[$50>>2]|0;
   $58 = ((($50)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = $55&255;
   $61 = $56 ? $57 : $50;
   $62 = $56 ? $59 : $60;
   $63 = (($61) + ($62<<2)|0);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$11>>2]|0;
   ;HEAP32[$$byval_copy3>>2]=HEAP32[$12>>2]|0;
   $64 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy2,$$byval_copy3,$3,$4,$5,$61,$63)|0);
   HEAP32[$1>>2] = $64;
   label = 26;
   break;
  }
  case 101: case 100:  {
   $65 = ((($5)) + 12|0);
   $66 = HEAP32[$2>>2]|0;
   HEAP32[$13>>2] = $66;
   ;HEAP32[$$byval_copy4>>2]=HEAP32[$13>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0,$65,$1,$$byval_copy4,$4,$40);
   label = 26;
   break;
  }
  case 68:  {
   $67 = HEAP32[$1>>2]|0;
   HEAP32[$14>>2] = $67;
   $68 = HEAP32[$2>>2]|0;
   HEAP32[$15>>2] = $68;
   ;HEAP32[$$byval_copy5>>2]=HEAP32[$14>>2]|0;
   ;HEAP32[$$byval_copy6>>2]=HEAP32[$15>>2]|0;
   $69 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy5,$$byval_copy6,$3,$4,$5,5696,(5728))|0);
   HEAP32[$1>>2] = $69;
   label = 26;
   break;
  }
  case 70:  {
   $70 = HEAP32[$1>>2]|0;
   HEAP32[$16>>2] = $70;
   $71 = HEAP32[$2>>2]|0;
   HEAP32[$17>>2] = $71;
   ;HEAP32[$$byval_copy7>>2]=HEAP32[$16>>2]|0;
   ;HEAP32[$$byval_copy8>>2]=HEAP32[$17>>2]|0;
   $72 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy7,$$byval_copy8,$3,$4,$5,5728,(5760))|0);
   HEAP32[$1>>2] = $72;
   label = 26;
   break;
  }
  case 72:  {
   $73 = ((($5)) + 8|0);
   $74 = HEAP32[$2>>2]|0;
   HEAP32[$18>>2] = $74;
   ;HEAP32[$$byval_copy9>>2]=HEAP32[$18>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0,$73,$1,$$byval_copy9,$4,$40);
   label = 26;
   break;
  }
  case 73:  {
   $75 = ((($5)) + 8|0);
   $76 = HEAP32[$2>>2]|0;
   HEAP32[$19>>2] = $76;
   ;HEAP32[$$byval_copy10>>2]=HEAP32[$19>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0,$75,$1,$$byval_copy10,$4,$40);
   label = 26;
   break;
  }
  case 106:  {
   $77 = ((($5)) + 28|0);
   $78 = HEAP32[$2>>2]|0;
   HEAP32[$20>>2] = $78;
   ;HEAP32[$$byval_copy11>>2]=HEAP32[$20>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0,$77,$1,$$byval_copy11,$4,$40);
   label = 26;
   break;
  }
  case 109:  {
   $79 = ((($5)) + 16|0);
   $80 = HEAP32[$2>>2]|0;
   HEAP32[$21>>2] = $80;
   ;HEAP32[$$byval_copy12>>2]=HEAP32[$21>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0,$79,$1,$$byval_copy12,$4,$40);
   label = 26;
   break;
  }
  case 77:  {
   $81 = ((($5)) + 4|0);
   $82 = HEAP32[$2>>2]|0;
   HEAP32[$22>>2] = $82;
   ;HEAP32[$$byval_copy13>>2]=HEAP32[$22>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0,$81,$1,$$byval_copy13,$4,$40);
   label = 26;
   break;
  }
  case 116: case 110:  {
   $83 = HEAP32[$2>>2]|0;
   HEAP32[$23>>2] = $83;
   ;HEAP32[$$byval_copy14>>2]=HEAP32[$23>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0,$1,$$byval_copy14,$4,$40);
   label = 26;
   break;
  }
  case 112:  {
   $84 = ((($5)) + 8|0);
   $85 = HEAP32[$2>>2]|0;
   HEAP32[$24>>2] = $85;
   ;HEAP32[$$byval_copy15>>2]=HEAP32[$24>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0,$84,$1,$$byval_copy15,$4,$40);
   label = 26;
   break;
  }
  case 114:  {
   $86 = HEAP32[$1>>2]|0;
   HEAP32[$25>>2] = $86;
   $87 = HEAP32[$2>>2]|0;
   HEAP32[$26>>2] = $87;
   ;HEAP32[$$byval_copy16>>2]=HEAP32[$25>>2]|0;
   ;HEAP32[$$byval_copy17>>2]=HEAP32[$26>>2]|0;
   $88 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy16,$$byval_copy17,$3,$4,$5,5760,(5804))|0);
   HEAP32[$1>>2] = $88;
   label = 26;
   break;
  }
  case 82:  {
   $89 = HEAP32[$1>>2]|0;
   HEAP32[$27>>2] = $89;
   $90 = HEAP32[$2>>2]|0;
   HEAP32[$28>>2] = $90;
   ;HEAP32[$$byval_copy18>>2]=HEAP32[$27>>2]|0;
   ;HEAP32[$$byval_copy19>>2]=HEAP32[$28>>2]|0;
   $91 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy18,$$byval_copy19,$3,$4,$5,5808,(5828))|0);
   HEAP32[$1>>2] = $91;
   label = 26;
   break;
  }
  case 83:  {
   $92 = HEAP32[$2>>2]|0;
   HEAP32[$29>>2] = $92;
   ;HEAP32[$$byval_copy20>>2]=HEAP32[$29>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0,$5,$1,$$byval_copy20,$4,$40);
   label = 26;
   break;
  }
  case 84:  {
   $93 = HEAP32[$1>>2]|0;
   HEAP32[$30>>2] = $93;
   $94 = HEAP32[$2>>2]|0;
   HEAP32[$31>>2] = $94;
   ;HEAP32[$$byval_copy21>>2]=HEAP32[$30>>2]|0;
   ;HEAP32[$$byval_copy22>>2]=HEAP32[$31>>2]|0;
   $95 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy21,$$byval_copy22,$3,$4,$5,5840,(5872))|0);
   HEAP32[$1>>2] = $95;
   label = 26;
   break;
  }
  case 119:  {
   $96 = ((($5)) + 24|0);
   $97 = HEAP32[$2>>2]|0;
   HEAP32[$32>>2] = $97;
   ;HEAP32[$$byval_copy23>>2]=HEAP32[$32>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0,$96,$1,$$byval_copy23,$4,$40);
   label = 26;
   break;
  }
  case 120:  {
   $98 = HEAP32[$0>>2]|0;
   $99 = ((($98)) + 20|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = HEAP32[$1>>2]|0;
   HEAP32[$33>>2] = $101;
   $102 = HEAP32[$2>>2]|0;
   HEAP32[$34>>2] = $102;
   ;HEAP32[$$byval_copy24>>2]=HEAP32[$33>>2]|0;
   ;HEAP32[$$byval_copy25>>2]=HEAP32[$34>>2]|0;
   $103 = (FUNCTION_TABLE_iiiiiii[$100 & 511]($0,$$byval_copy24,$$byval_copy25,$3,$4,$5)|0);
   $$sroa$095$0 = $103;
   break;
  }
  case 88:  {
   $104 = ((($0)) + 8|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ((($105)) + 24|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (FUNCTION_TABLE_ii[$107 & 1023]($104)|0);
   $109 = HEAP32[$1>>2]|0;
   HEAP32[$35>>2] = $109;
   $110 = HEAP32[$2>>2]|0;
   HEAP32[$36>>2] = $110;
   $111 = ((($108)) + 8|0);
   $112 = ((($111)) + 3|0);
   $113 = HEAP8[$112>>0]|0;
   $114 = ($113<<24>>24)<(0);
   $115 = HEAP32[$108>>2]|0;
   $116 = ((($108)) + 4|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = $113&255;
   $119 = $114 ? $115 : $108;
   $120 = $114 ? $117 : $118;
   $121 = (($119) + ($120<<2)|0);
   ;HEAP32[$$byval_copy26>>2]=HEAP32[$35>>2]|0;
   ;HEAP32[$$byval_copy27>>2]=HEAP32[$36>>2]|0;
   $122 = (__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$$byval_copy26,$$byval_copy27,$3,$4,$5,$119,$121)|0);
   HEAP32[$1>>2] = $122;
   label = 26;
   break;
  }
  case 121:  {
   $123 = ((($5)) + 20|0);
   $124 = HEAP32[$2>>2]|0;
   HEAP32[$37>>2] = $124;
   ;HEAP32[$$byval_copy28>>2]=HEAP32[$37>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0,$123,$1,$$byval_copy28,$4,$40);
   label = 26;
   break;
  }
  case 89:  {
   $125 = ((($5)) + 20|0);
   $126 = HEAP32[$2>>2]|0;
   HEAP32[$38>>2] = $126;
   ;HEAP32[$$byval_copy29>>2]=HEAP32[$38>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0,$125,$1,$$byval_copy29,$4,$40);
   label = 26;
   break;
  }
  case 37:  {
   $127 = HEAP32[$2>>2]|0;
   HEAP32[$39>>2] = $127;
   ;HEAP32[$$byval_copy30>>2]=HEAP32[$39>>2]|0;
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0,$1,$$byval_copy30,$4,$40);
   label = 26;
   break;
  }
  default: {
   $128 = HEAP32[$4>>2]|0;
   $129 = $128 | 4;
   HEAP32[$4>>2] = $129;
   label = 26;
  }
  }
 } while(0);
 if ((label|0) == 26) {
  $$sroa$095$0$copyload = HEAP32[$1>>2]|0;
  $$sroa$095$0 = $$sroa$095$0$copyload;
 }
 STACKTOP = sp;return ($$sroa$095$0|0);
}
function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[35048]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(35048)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   __ZNSt3__2L11init_wweeksEv();
   HEAP32[9230] = 34720;
   ___cxa_guard_release(35048);
  }
 }
 $5 = HEAP32[9230]|0;
 return ($5|0);
}
function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[35032]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(35032)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   __ZNSt3__2L12init_wmonthsEv();
   HEAP32[9229] = 34432;
   ___cxa_guard_release(35032);
  }
 }
 $5 = HEAP32[9229]|0;
 return ($5|0);
}
function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[35016]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(35016)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   __ZNSt3__2L11init_wam_pmEv();
   HEAP32[9228] = 34400;
   ___cxa_guard_release(35016);
  }
 }
 $5 = HEAP32[9228]|0;
 return ($5|0);
}
function __ZNKSt3__220__time_get_c_storageIwE3__cEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[35008]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(35008)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36900>>2]=0|0;HEAP32[36900+4>>2]=0|0;HEAP32[36900+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIwE6lengthEPKw(12340)|0);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(36900,12340,$5);
   ___cxa_guard_release(35008);
  }
 }
 return (36900|0);
}
function __ZNKSt3__220__time_get_c_storageIwE3__rEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[35000]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(35000)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36888>>2]=0|0;HEAP32[36888+4>>2]=0|0;HEAP32[36888+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIwE6lengthEPKw(12292)|0);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(36888,12292,$5);
   ___cxa_guard_release(35000);
  }
 }
 return (36888|0);
}
function __ZNKSt3__220__time_get_c_storageIwE3__xEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34992]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34992)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36876>>2]=0|0;HEAP32[36876+4>>2]=0|0;HEAP32[36876+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIwE6lengthEPKw(12256)|0);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(36876,12256,$5);
   ___cxa_guard_release(34992);
  }
 }
 return (36876|0);
}
function __ZNKSt3__220__time_get_c_storageIwE3__XEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[34984]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $3 = (___cxa_guard_acquire(34984)|0);
  $4 = ($3|0)==(0);
  if (!($4)) {
   ;HEAP32[36864>>2]=0|0;HEAP32[36864+4>>2]=0|0;HEAP32[36864+8>>2]=0|0;
   $5 = (__ZNSt3__211char_traitsIwE6lengthEPKw(12220)|0);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(36864,12220,$5);
   ___cxa_guard_release(34984);
  }
 }
 return (36864|0);
}
function __ZNSt3__211char_traitsIwE6lengthEPKw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_wcslen($0)|0);
 return ($1|0);
}
function __ZNSt3__2L11init_wam_pmEv() {
 var $$0$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[35024]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(35024)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = 34400;
   while(1) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $$0$i$i = 0;
    while(1) {
     $exitcond$i$i = ($$0$i$i|0)==(3);
     if ($exitcond$i$i) {
      break;
     }
     $5 = (($4) + ($$0$i$i<<2)|0);
     HEAP32[$5>>2] = 0;
     $6 = (($$0$i$i) + 1)|0;
     $$0$i$i = $6;
    }
    $7 = ((($4)) + 12|0);
    $8 = ($7|0)==((34424)|0);
    if ($8) {
     break;
    } else {
     $4 = $7;
    }
   }
   ___cxa_guard_release(35024);
  }
 }
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(34400,12424)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34412),12436)|0);
 return;
}
function __ZNSt3__2L12init_wmonthsEv() {
 var $$0$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[35040]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(35040)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = 34432;
   while(1) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $$0$i$i = 0;
    while(1) {
     $exitcond$i$i = ($$0$i$i|0)==(3);
     if ($exitcond$i$i) {
      break;
     }
     $5 = (($4) + ($$0$i$i<<2)|0);
     HEAP32[$5>>2] = 0;
     $6 = (($$0$i$i) + 1)|0;
     $$0$i$i = $6;
    }
    $7 = ((($4)) + 12|0);
    $8 = ($7|0)==((34720)|0);
    if ($8) {
     break;
    } else {
     $4 = $7;
    }
   }
   ___cxa_guard_release(35040);
  }
 }
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(34432,12448)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34444),12480)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34456),12516)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34468),12540)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34480),12564)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34492),12580)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34504),12600)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34516),12620)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34528),12648)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34540),12688)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34552),12720)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34564),12756)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34576),12792)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34588),12808)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34600),12824)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34612),12840)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34624),12564)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34636),12856)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34648),12872)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34660),12888)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34672),12904)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34684),12920)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34696),12936)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34708),12952)|0);
 return;
}
function __ZNSt3__2L11init_wweeksEv() {
 var $$0$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[35056]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(35056)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = 34720;
   while(1) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $$0$i$i = 0;
    while(1) {
     $exitcond$i$i = ($$0$i$i|0)==(3);
     if ($exitcond$i$i) {
      break;
     }
     $5 = (($4) + ($$0$i$i<<2)|0);
     HEAP32[$5>>2] = 0;
     $6 = (($$0$i$i) + 1)|0;
     $$0$i$i = $6;
    }
    $7 = ((($4)) + 12|0);
    $8 = ($7|0)==((34888)|0);
    if ($8) {
     break;
    } else {
     $4 = $7;
    }
   }
   ___cxa_guard_release(35056);
  }
 }
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(34720,12968)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34732),12996)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34744),13024)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34756),13056)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34768),13096)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34780),13132)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34792),13160)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34804),13196)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34816),13212)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34828),13228)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34840),13244)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34852),13260)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34864),13276)|0);
 (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw((34876),13292)|0);
 return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 1023]($7)|0);
 $11 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $11;
 $12 = ((($10)) + 168|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $13 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2,$$byval_copy,$10,$12,$5,$4,0)|0);
 $14 = $13;
 $15 = $10;
 $16 = (($14) - ($15))|0;
 $17 = ($16|0)<(168);
 if ($17) {
  $18 = (($16|0) / 12)&-1;
  $19 = (($18|0) % 7)&-1;
  HEAP32[$1>>2] = $19;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $12;
 $13 = ((($11)) + 288|0);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $14 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2,$$byval_copy,$11,$13,$5,$4,0)|0);
 $15 = $14;
 $16 = $11;
 $17 = (($15) - ($16))|0;
 $18 = ($17|0)<(288);
 if ($18) {
  $19 = (($17|0) / 12)&-1;
  $20 = (($19|0) % 12)&-1;
  HEAP32[$1>>2] = $20;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i52 = 0, $$0$i$i$i$i66 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i58 = 0, $$0$i$i2$i$i72 = 0, $$0$i$i63 = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$pre = 0, $$sroa$047$0$copyload = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $10 = sp;
 __ZNKSt3__28ios_base6getlocEv($8,$3);
 $11 = (__ZNKSt3__26locale9use_facetERNS0_2idE($8,36756)|0);
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$4>>2] = 0;
 $$0 = $6;$13 = 0;
 L1: while(1) {
  $12 = ($$0|0)!=($7|0);
  $14 = ($13|0)==(0);
  $or$cond = $12 & $14;
  $15 = HEAP32[$1>>2]|0;
  if (!($or$cond)) {
   $171 = $15;
   break;
  }
  $16 = ($15|0)==(0|0);
  $17 = $15;
  if ($16) {
   $141 = 0;$203 = 1;$70 = $17;
  } else {
   $18 = ((($15)) + 12|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($15)) + 16|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($19|0)==($21|0);
   if ($22) {
    $23 = HEAP32[$15>>2]|0;
    $24 = ((($23)) + 36|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = (FUNCTION_TABLE_ii[$25 & 1023]($15)|0);
    $$0$i$i$i$i = $26;
   } else {
    $27 = HEAP32[$19>>2]|0;
    $28 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($27)|0);
    $$0$i$i$i$i = $28;
   }
   $29 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $30 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$29)|0);
   if ($30) {
    HEAP32[$1>>2] = 0;
    $141 = 0;$203 = 1;$70 = 0;
   } else {
    $141 = $15;$203 = 0;$70 = $17;
   }
  }
  $31 = HEAP32[$2>>2]|0;
  $32 = ($31|0)==(0|0);
  $33 = $31;
  do {
   if ($32) {
    $$ph = $33;
    label = 15;
   } else {
    $34 = ((($31)) + 12|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ((($31)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($35|0)==($37|0);
    if ($38) {
     $39 = HEAP32[$31>>2]|0;
     $40 = ((($39)) + 36|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = (FUNCTION_TABLE_ii[$41 & 1023]($31)|0);
     $$0$i$i2$i$i = $42;
    } else {
     $43 = HEAP32[$35>>2]|0;
     $44 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($43)|0);
     $$0$i$i2$i$i = $44;
    }
    $45 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $46 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$45)|0);
    if ($46) {
     HEAP32[$2>>2] = 0;
     $$ph = 0;
     label = 15;
     break;
    } else {
     if ($203) {
      $204 = $31;$71 = $33;
      break;
     } else {
      label = 60;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($203) {
    label = 60;
    break;
   } else {
    $204 = 0;$71 = $$ph;
   }
  }
  $47 = HEAP32[$$0>>2]|0;
  $48 = HEAP32[$11>>2]|0;
  $49 = ((($48)) + 52|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (FUNCTION_TABLE_iiii[$50 & 1023]($11,$47,0)|0);
  $52 = ($51<<24>>24)==(37);
  L24: do {
   if ($52) {
    $53 = ((($$0)) + 4|0);
    $54 = ($53|0)==($7|0);
    if ($54) {
     label = 60;
     break L1;
    }
    $55 = HEAP32[$53>>2]|0;
    $56 = HEAP32[$11>>2]|0;
    $57 = ((($56)) + 52|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (FUNCTION_TABLE_iiii[$58 & 1023]($11,$55,0)|0);
    switch ($59<<24>>24) {
    case 48: case 69:  {
     $60 = ((($$0)) + 8|0);
     $61 = ($60|0)==($7|0);
     if ($61) {
      label = 60;
      break L1;
     }
     $62 = HEAP32[$60>>2]|0;
     $63 = HEAP32[$11>>2]|0;
     $64 = ((($63)) + 52|0);
     $65 = HEAP32[$64>>2]|0;
     $66 = (FUNCTION_TABLE_iiii[$65 & 1023]($11,$62,0)|0);
     $$049 = $59;$$050 = $66;$74 = $53;
     break;
    }
    default: {
     $$049 = 0;$$050 = $59;$74 = $$0;
    }
    }
    $67 = HEAP32[$0>>2]|0;
    $68 = ((($67)) + 36|0);
    $69 = HEAP32[$68>>2]|0;
    HEAP32[$9>>2] = $70;
    HEAP32[$10>>2] = $71;
    ;HEAP32[$$byval_copy>>2]=HEAP32[$9>>2]|0;
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$10>>2]|0;
    $72 = (FUNCTION_TABLE_iiiiiiiii[$69 & 511]($0,$$byval_copy,$$byval_copy1,$3,$4,$5,$$050,$$049)|0);
    HEAP32[$1>>2] = $72;
    $73 = ((($74)) + 8|0);
    $$4 = $73;
   } else {
    $75 = HEAP32[$$0>>2]|0;
    $76 = HEAP32[$11>>2]|0;
    $77 = ((($76)) + 12|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = (FUNCTION_TABLE_iiii[$78 & 1023]($11,8192,$75)|0);
    if (!($79)) {
     $140 = ((($141)) + 12|0);
     $142 = HEAP32[$140>>2]|0;
     $143 = ((($141)) + 16|0);
     $144 = HEAP32[$143>>2]|0;
     $145 = ($142|0)==($144|0);
     if ($145) {
      $146 = HEAP32[$141>>2]|0;
      $147 = ((($146)) + 36|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (FUNCTION_TABLE_ii[$148 & 1023]($141)|0);
      $$0$i$i63 = $149;
     } else {
      $150 = HEAP32[$142>>2]|0;
      $151 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($150)|0);
      $$0$i$i63 = $151;
     }
     $152 = HEAP32[$11>>2]|0;
     $153 = ((($152)) + 28|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (FUNCTION_TABLE_iii[$154 & 1023]($11,$$0$i$i63)|0);
     $156 = HEAP32[$$0>>2]|0;
     $157 = HEAP32[$11>>2]|0;
     $158 = ((($157)) + 28|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = (FUNCTION_TABLE_iii[$159 & 1023]($11,$156)|0);
     $161 = ($155|0)==($160|0);
     if (!($161)) {
      HEAP32[$4>>2] = 4;
      $$4 = $$0;
      break;
     }
     $162 = HEAP32[$140>>2]|0;
     $163 = HEAP32[$143>>2]|0;
     $164 = ($162|0)==($163|0);
     if ($164) {
      $165 = HEAP32[$141>>2]|0;
      $166 = ((($165)) + 40|0);
      $167 = HEAP32[$166>>2]|0;
      (FUNCTION_TABLE_ii[$167 & 1023]($141)|0);
     } else {
      $168 = ((($162)) + 4|0);
      HEAP32[$140>>2] = $168;
      $169 = HEAP32[$162>>2]|0;
      (__ZNSt3__211char_traitsIwE11to_int_typeEw($169)|0);
     }
     $170 = ((($$0)) + 4|0);
     $$4 = $170;
     break;
    }
    $$0$pn = $$0;
    while(1) {
     $$3 = ((($$0$pn)) + 4|0);
     $80 = ($$3|0)==($7|0);
     if ($80) {
      $$3$lcssa = $7;
      break;
     }
     $81 = HEAP32[$$3>>2]|0;
     $82 = HEAP32[$11>>2]|0;
     $83 = ((($82)) + 12|0);
     $84 = HEAP32[$83>>2]|0;
     $85 = (FUNCTION_TABLE_iiii[$84 & 1023]($11,8192,$81)|0);
     if ($85) {
      $$0$pn = $$3;
     } else {
      $$3$lcssa = $$3;
      break;
     }
    }
    $101 = $204;$86 = $141;
    while(1) {
     $87 = ($86|0)==(0|0);
     if ($87) {
      $117 = 0;$205 = 1;
     } else {
      $88 = ((($86)) + 12|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = ((($86)) + 16|0);
      $91 = HEAP32[$90>>2]|0;
      $92 = ($89|0)==($91|0);
      if ($92) {
       $93 = HEAP32[$86>>2]|0;
       $94 = ((($93)) + 36|0);
       $95 = HEAP32[$94>>2]|0;
       $96 = (FUNCTION_TABLE_ii[$95 & 1023]($86)|0);
       $$0$i$i$i$i52 = $96;
      } else {
       $97 = HEAP32[$89>>2]|0;
       $98 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($97)|0);
       $$0$i$i$i$i52 = $98;
      }
      $99 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
      $100 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i52,$99)|0);
      if ($100) {
       HEAP32[$1>>2] = 0;
       $117 = 0;$205 = 1;
      } else {
       $117 = $86;$205 = 0;
      }
     }
     $102 = ($101|0)==(0|0);
     do {
      if ($102) {
       label = 40;
      } else {
       $103 = ((($101)) + 12|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = ((($101)) + 16|0);
       $106 = HEAP32[$105>>2]|0;
       $107 = ($104|0)==($106|0);
       if ($107) {
        $108 = HEAP32[$101>>2]|0;
        $109 = ((($108)) + 36|0);
        $110 = HEAP32[$109>>2]|0;
        $111 = (FUNCTION_TABLE_ii[$110 & 1023]($101)|0);
        $$0$i$i2$i$i58 = $111;
       } else {
        $112 = HEAP32[$104>>2]|0;
        $113 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($112)|0);
        $$0$i$i2$i$i58 = $113;
       }
       $114 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $115 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i58,$114)|0);
       if ($115) {
        HEAP32[$2>>2] = 0;
        label = 40;
        break;
       } else {
        if ($205) {
         $206 = $101;
         break;
        } else {
         $$4 = $$3$lcssa;
         break L24;
        }
       }
      }
     } while(0);
     if ((label|0) == 40) {
      label = 0;
      if ($205) {
       $$4 = $$3$lcssa;
       break L24;
      } else {
       $206 = 0;
      }
     }
     $116 = ((($117)) + 12|0);
     $118 = HEAP32[$116>>2]|0;
     $119 = ((($117)) + 16|0);
     $120 = HEAP32[$119>>2]|0;
     $121 = ($118|0)==($120|0);
     if ($121) {
      $122 = HEAP32[$117>>2]|0;
      $123 = ((($122)) + 36|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = (FUNCTION_TABLE_ii[$124 & 1023]($117)|0);
      $$0$i$i = $125;
     } else {
      $126 = HEAP32[$118>>2]|0;
      $127 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($126)|0);
      $$0$i$i = $127;
     }
     $128 = HEAP32[$11>>2]|0;
     $129 = ((($128)) + 12|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = (FUNCTION_TABLE_iiii[$130 & 1023]($11,8192,$$0$i$i)|0);
     if (!($131)) {
      $$4 = $$3$lcssa;
      break L24;
     }
     $132 = HEAP32[$116>>2]|0;
     $133 = HEAP32[$119>>2]|0;
     $134 = ($132|0)==($133|0);
     if ($134) {
      $135 = HEAP32[$117>>2]|0;
      $136 = ((($135)) + 40|0);
      $137 = HEAP32[$136>>2]|0;
      (FUNCTION_TABLE_ii[$137 & 1023]($117)|0);
     } else {
      $138 = ((($132)) + 4|0);
      HEAP32[$116>>2] = $138;
      $139 = HEAP32[$132>>2]|0;
      (__ZNSt3__211char_traitsIwE11to_int_typeEw($139)|0);
     }
     $101 = $206;$86 = $117;
    }
   }
  } while(0);
  $$pre = HEAP32[$4>>2]|0;
  $$0 = $$4;$13 = $$pre;
 }
 if ((label|0) == 60) {
  HEAP32[$4>>2] = 4;
  $171 = $141;
 }
 $172 = ($171|0)==(0|0);
 if ($172) {
  $$sroa$047$0$copyload = 0;$207 = 1;
 } else {
  $173 = ((($171)) + 12|0);
  $174 = HEAP32[$173>>2]|0;
  $175 = ((($171)) + 16|0);
  $176 = HEAP32[$175>>2]|0;
  $177 = ($174|0)==($176|0);
  if ($177) {
   $178 = HEAP32[$171>>2]|0;
   $179 = ((($178)) + 36|0);
   $180 = HEAP32[$179>>2]|0;
   $181 = (FUNCTION_TABLE_ii[$180 & 1023]($171)|0);
   $$0$i$i$i$i66 = $181;
  } else {
   $182 = HEAP32[$174>>2]|0;
   $183 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($182)|0);
   $$0$i$i$i$i66 = $183;
  }
  $184 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
  $185 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i66,$184)|0);
  if ($185) {
   HEAP32[$1>>2] = 0;
   $$sroa$047$0$copyload = 0;$207 = 1;
  } else {
   $$sroa$047$0$copyload = $171;$207 = 0;
  }
 }
 $186 = HEAP32[$2>>2]|0;
 $187 = ($186|0)==(0|0);
 do {
  if ($187) {
   label = 73;
  } else {
   $188 = ((($186)) + 12|0);
   $189 = HEAP32[$188>>2]|0;
   $190 = ((($186)) + 16|0);
   $191 = HEAP32[$190>>2]|0;
   $192 = ($189|0)==($191|0);
   if ($192) {
    $193 = HEAP32[$186>>2]|0;
    $194 = ((($193)) + 36|0);
    $195 = HEAP32[$194>>2]|0;
    $196 = (FUNCTION_TABLE_ii[$195 & 1023]($186)|0);
    $$0$i$i2$i$i72 = $196;
   } else {
    $197 = HEAP32[$189>>2]|0;
    $198 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($197)|0);
    $$0$i$i2$i$i72 = $198;
   }
   $199 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $200 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i72,$199)|0);
   if ($200) {
    HEAP32[$2>>2] = 0;
    label = 73;
    break;
   } else {
    if ($207) {
     break;
    } else {
     label = 75;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 73) {
  if ($207) {
   label = 75;
  }
 }
 if ((label|0) == 75) {
  $201 = HEAP32[$4>>2]|0;
  $202 = $201 | 2;
  HEAP32[$4>>2] = $202;
 }
 STACKTOP = sp;return ($$sroa$047$0$copyload|0);
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $$off = (($8) + -1)|0;
 $12 = ($$off>>>0)<(31);
 $13 = $12 & $11;
 if ($13) {
  HEAP32[$1>>2] = $8;
 } else {
  $14 = $9 | 4;
  HEAP32[$4>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(24);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $$off = (($8) + -1)|0;
 $12 = ($$off>>>0)<(12);
 $13 = $12 & $11;
 if ($13) {
  HEAP32[$1>>2] = $8;
 } else {
  $14 = $9 | 4;
  HEAP32[$4>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,3)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(366);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(13);
 $or$cond = $12 & $11;
 if ($or$cond) {
  $13 = (($8) + -1)|0;
  HEAP32[$1>>2] = $13;
 } else {
  $14 = $9 | 4;
  HEAP32[$4>>2] = $14;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(60);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $$pre$i$i$i = 0, $$pre$i$i$i9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $phitmp$i$i$i = 0;
 var $phitmp$i$i$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 L1: while(1) {
  $5 = HEAP32[$1>>2]|0;
  $6 = ($5|0)==(0|0);
  do {
   if ($6) {
    $94 = 1;
   } else {
    $7 = ((($5)) + 12|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = ((($5)) + 16|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ($8|0)==($10|0);
    if ($11) {
     $12 = HEAP32[$5>>2]|0;
     $13 = ((($12)) + 36|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = (FUNCTION_TABLE_ii[$14 & 1023]($5)|0);
     $$0$i$i$i$i = $15;
    } else {
     $16 = HEAP32[$8>>2]|0;
     $17 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($16)|0);
     $$0$i$i$i$i = $17;
    }
    $18 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $19 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$18)|0);
    if ($19) {
     HEAP32[$1>>2] = 0;
     $94 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$1>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $94 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $20 = HEAP32[$2>>2]|0;
  $21 = ($20|0)==(0|0);
  do {
   if ($21) {
    label = 15;
   } else {
    $22 = ((($20)) + 12|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($20)) + 16|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($23|0)==($25|0);
    if ($26) {
     $27 = HEAP32[$20>>2]|0;
     $28 = ((($27)) + 36|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (FUNCTION_TABLE_ii[$29 & 1023]($20)|0);
     $$0$i$i2$i$i = $30;
    } else {
     $31 = HEAP32[$23>>2]|0;
     $32 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($31)|0);
     $$0$i$i2$i$i = $32;
    }
    $33 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $34 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$33)|0);
    if ($34) {
     HEAP32[$2>>2] = 0;
     label = 15;
     break;
    } else {
     if ($94) {
      $95 = $20;
      break;
     } else {
      $77 = $20;
      break L1;
     }
    }
   }
  } while(0);
  if ((label|0) == 15) {
   label = 0;
   if ($94) {
    $77 = 0;
    break;
   } else {
    $95 = 0;
   }
  }
  $35 = HEAP32[$1>>2]|0;
  $36 = ((($35)) + 12|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($35)) + 16|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ($37|0)==($39|0);
  if ($40) {
   $41 = HEAP32[$35>>2]|0;
   $42 = ((($41)) + 36|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (FUNCTION_TABLE_ii[$43 & 1023]($35)|0);
   $$0$i$i = $44;
  } else {
   $45 = HEAP32[$37>>2]|0;
   $46 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($45)|0);
   $$0$i$i = $46;
  }
  $47 = HEAP32[$4>>2]|0;
  $48 = ((($47)) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (FUNCTION_TABLE_iiii[$49 & 1023]($4,8192,$$0$i$i)|0);
  if (!($50)) {
   $77 = $95;
   break;
  }
  $51 = HEAP32[$1>>2]|0;
  $52 = ((($51)) + 12|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($51)) + 16|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ($53|0)==($55|0);
  if ($56) {
   $57 = HEAP32[$51>>2]|0;
   $58 = ((($57)) + 40|0);
   $59 = HEAP32[$58>>2]|0;
   (FUNCTION_TABLE_ii[$59 & 1023]($51)|0);
  } else {
   $60 = ((($53)) + 4|0);
   HEAP32[$52>>2] = $60;
   $61 = HEAP32[$53>>2]|0;
   (__ZNSt3__211char_traitsIwE11to_int_typeEw($61)|0);
  }
 }
 $62 = HEAP32[$1>>2]|0;
 $63 = ($62|0)==(0|0);
 do {
  if ($63) {
   $96 = 1;
  } else {
   $64 = ((($62)) + 12|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ((($62)) + 16|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ($65|0)==($67|0);
   if ($68) {
    $69 = HEAP32[$62>>2]|0;
    $70 = ((($69)) + 36|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = (FUNCTION_TABLE_ii[$71 & 1023]($62)|0);
    $$0$i$i$i$i7 = $72;
   } else {
    $73 = HEAP32[$65>>2]|0;
    $74 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($73)|0);
    $$0$i$i$i$i7 = $74;
   }
   $75 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $76 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i7,$75)|0);
   if ($76) {
    HEAP32[$1>>2] = 0;
    $96 = 1;
    break;
   } else {
    $$pre$i$i$i9 = HEAP32[$1>>2]|0;
    $phitmp$i$i$i10 = ($$pre$i$i$i9|0)==(0|0);
    $96 = $phitmp$i$i$i10;
    break;
   }
  }
 } while(0);
 $78 = ($77|0)==(0|0);
 do {
  if ($78) {
   label = 38;
  } else {
   $79 = ((($77)) + 12|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = ((($77)) + 16|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = ($80|0)==($82|0);
   if ($83) {
    $84 = HEAP32[$77>>2]|0;
    $85 = ((($84)) + 36|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 1023]($77)|0);
    $$0$i$i2$i$i13 = $87;
   } else {
    $88 = HEAP32[$80>>2]|0;
    $89 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($88)|0);
    $$0$i$i2$i$i13 = $89;
   }
   $90 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $91 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i13,$90)|0);
   if ($91) {
    HEAP32[$2>>2] = 0;
    label = 38;
    break;
   } else {
    if ($96) {
     break;
    } else {
     label = 40;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 38) {
  if ($96) {
   label = 40;
  }
 }
 if ((label|0) == 40) {
  $92 = HEAP32[$3>>2]|0;
  $93 = $92 | 2;
  HEAP32[$3>>2] = $93;
 }
 return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_ii[$10 & 1023]($7)|0);
 $12 = ((($11)) + 8|0);
 $13 = ((($12)) + 3|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)<(0);
 if ($15) {
  $16 = ((($11)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $28 = $17;
 } else {
  $18 = $14&255;
  $28 = $18;
 }
 $19 = ((($11)) + 20|0);
 $20 = ((($19)) + 3|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = ($21<<24>>24)<(0);
 if ($22) {
  $23 = ((($11)) + 16|0);
  $24 = HEAP32[$23>>2]|0;
  $27 = $24;
 } else {
  $25 = $21&255;
  $27 = $25;
 }
 $26 = (0 - ($27))|0;
 $29 = ($28|0)==($26|0);
 do {
  if ($29) {
   $30 = HEAP32[$4>>2]|0;
   $31 = $30 | 4;
   HEAP32[$4>>2] = $31;
  } else {
   $32 = HEAP32[$3>>2]|0;
   HEAP32[$6>>2] = $32;
   $33 = ((($11)) + 24|0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
   $34 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2,$$byval_copy,$11,$33,$5,$4,0)|0);
   $35 = $34;
   $36 = $11;
   $37 = (($35) - ($36))|0;
   $38 = ($37|0)==(0);
   $39 = HEAP32[$1>>2]|0;
   $40 = ($39|0)==(12);
   $or$cond = $40 & $38;
   if ($or$cond) {
    HEAP32[$1>>2] = 0;
    break;
   }
   $41 = ($37|0)==(12);
   $42 = ($39|0)<(12);
   $or$cond20 = $42 & $41;
   if ($or$cond20) {
    $43 = (($39) + 12)|0;
    HEAP32[$1>>2] = $43;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,2)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(61);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,1)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 $12 = ($8|0)<(7);
 $or$cond = $12 & $11;
 if ($or$cond) {
  HEAP32[$1>>2] = $8;
 } else {
  $13 = $9 | 4;
  HEAP32[$4>>2] = $13;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,4)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = ($8|0)<(69);
  if ($12) {
   $13 = (($8) + 2000)|0;
   $$0 = $13;
  } else {
   $14 = ($8|0)<(100);
   $15 = (($8) + 1900)|0;
   $spec$select = $14 ? $15 : $8;
   $$0 = $spec$select;
  }
  $16 = (($$0) + -1900)|0;
  HEAP32[$1>>2] = $16;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 4|0;
 $6 = sp;
 $7 = HEAP32[$3>>2]|0;
 HEAP32[$6>>2] = $7;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$6>>2]|0;
 $8 = (__ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2,$$byval_copy,$4,$5,4)|0);
 $9 = HEAP32[$4>>2]|0;
 $10 = $9 & 4;
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = (($8) + -1900)|0;
  HEAP32[$1>>2] = $12;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $$pre$i$i$i = 0, $$pre$i$i$i10 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $99 = 1;
  } else {
   $7 = ((($5)) + 12|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ((($5)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)==($10|0);
   if ($11) {
    $12 = HEAP32[$5>>2]|0;
    $13 = ((($12)) + 36|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (FUNCTION_TABLE_ii[$14 & 1023]($5)|0);
    $$0$i$i$i$i = $15;
   } else {
    $16 = HEAP32[$8>>2]|0;
    $17 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($16)|0);
    $$0$i$i$i$i = $17;
   }
   $18 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $19 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$18)|0);
   if ($19) {
    HEAP32[$1>>2] = 0;
    $99 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$1>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $99 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $20 = HEAP32[$2>>2]|0;
 $21 = ($20|0)==(0|0);
 do {
  if ($21) {
   label = 14;
  } else {
   $22 = ((($20)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($20)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($23|0)==($25|0);
   if ($26) {
    $27 = HEAP32[$20>>2]|0;
    $28 = ((($27)) + 36|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (FUNCTION_TABLE_ii[$29 & 1023]($20)|0);
    $$0$i$i2$i$i = $30;
   } else {
    $31 = HEAP32[$23>>2]|0;
    $32 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($31)|0);
    $$0$i$i2$i$i = $32;
   }
   $33 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $34 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$33)|0);
   if ($34) {
    HEAP32[$2>>2] = 0;
    label = 14;
    break;
   } else {
    if ($99) {
     $82 = $20;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($99) {
   label = 16;
  } else {
   $82 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $35 = HEAP32[$3>>2]|0;
   $36 = $35 | 6;
   HEAP32[$3>>2] = $36;
  }
  else if ((label|0) == 17) {
   $37 = HEAP32[$1>>2]|0;
   $38 = ((($37)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$37>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 1023]($37)|0);
    $$0$i$i = $46;
   } else {
    $47 = HEAP32[$39>>2]|0;
    $48 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($47)|0);
    $$0$i$i = $48;
   }
   $49 = HEAP32[$4>>2]|0;
   $50 = ((($49)) + 52|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($4,$$0$i$i,0)|0);
   $53 = ($52<<24>>24)==(37);
   if (!($53)) {
    $54 = HEAP32[$3>>2]|0;
    $55 = $54 | 4;
    HEAP32[$3>>2] = $55;
    break;
   }
   $56 = HEAP32[$1>>2]|0;
   $57 = ((($56)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($56)) + 16|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = ($58|0)==($60|0);
   if ($61) {
    $62 = HEAP32[$56>>2]|0;
    $63 = ((($62)) + 40|0);
    $64 = HEAP32[$63>>2]|0;
    (FUNCTION_TABLE_ii[$64 & 1023]($56)|0);
   } else {
    $65 = ((($58)) + 4|0);
    HEAP32[$57>>2] = $65;
    $66 = HEAP32[$58>>2]|0;
    (__ZNSt3__211char_traitsIwE11to_int_typeEw($66)|0);
   }
   $67 = HEAP32[$1>>2]|0;
   $68 = ($67|0)==(0|0);
   do {
    if ($68) {
     $100 = 1;
    } else {
     $69 = ((($67)) + 12|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ((($67)) + 16|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = ($70|0)==($72|0);
     if ($73) {
      $74 = HEAP32[$67>>2]|0;
      $75 = ((($74)) + 36|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = (FUNCTION_TABLE_ii[$76 & 1023]($67)|0);
      $$0$i$i$i$i8 = $77;
     } else {
      $78 = HEAP32[$70>>2]|0;
      $79 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($78)|0);
      $$0$i$i$i$i8 = $79;
     }
     $80 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
     $81 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i8,$80)|0);
     if ($81) {
      HEAP32[$1>>2] = 0;
      $100 = 1;
      break;
     } else {
      $$pre$i$i$i10 = HEAP32[$1>>2]|0;
      $phitmp$i$i$i11 = ($$pre$i$i$i10|0)==(0|0);
      $100 = $phitmp$i$i$i11;
      break;
     }
    }
   } while(0);
   $83 = ($82|0)==(0|0);
   do {
    if ($83) {
     label = 38;
    } else {
     $84 = ((($82)) + 12|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ((($82)) + 16|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($85|0)==($87|0);
     if ($88) {
      $89 = HEAP32[$82>>2]|0;
      $90 = ((($89)) + 36|0);
      $91 = HEAP32[$90>>2]|0;
      $92 = (FUNCTION_TABLE_ii[$91 & 1023]($82)|0);
      $$0$i$i2$i$i14 = $92;
     } else {
      $93 = HEAP32[$85>>2]|0;
      $94 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($93)|0);
      $$0$i$i2$i$i14 = $94;
     }
     $95 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
     $96 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i14,$95)|0);
     if ($96) {
      HEAP32[$2>>2] = 0;
      label = 38;
      break;
     } else {
      if ($100) {
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 38) {
    if (!($100)) {
     break;
    }
   }
   $97 = HEAP32[$3>>2]|0;
   $98 = $97 | 2;
   HEAP32[$3>>2] = $98;
  }
 } while(0);
 return;
}
function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i27 = 0, $$0$i$i$i$i41 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i33 = 0, $$0$i$i2$i$i47 = 0, $$0$i$i38 = 0, $$0$in = 0, $$025 = 0, $$025$in = 0, $$2 = 0, $$pre$i$i$i = 0, $$pre$i$i$i29 = 0, $$pre$i$i$i43 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i30 = 0, $phitmp$i$i$i44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $171 = 1;
  } else {
   $7 = ((($5)) + 12|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ((($5)) + 16|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($8|0)==($10|0);
   if ($11) {
    $12 = HEAP32[$5>>2]|0;
    $13 = ((($12)) + 36|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (FUNCTION_TABLE_ii[$14 & 1023]($5)|0);
    $$0$i$i$i$i = $15;
   } else {
    $16 = HEAP32[$8>>2]|0;
    $17 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($16)|0);
    $$0$i$i$i$i = $17;
   }
   $18 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $19 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$18)|0);
   if ($19) {
    HEAP32[$0>>2] = 0;
    $171 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$0>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $171 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $20 = HEAP32[$1>>2]|0;
 $21 = ($20|0)==(0|0);
 do {
  if ($21) {
   label = 14;
  } else {
   $22 = ((($20)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($20)) + 16|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($23|0)==($25|0);
   if ($26) {
    $27 = HEAP32[$20>>2]|0;
    $28 = ((($27)) + 36|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (FUNCTION_TABLE_ii[$29 & 1023]($20)|0);
    $$0$i$i2$i$i = $30;
   } else {
    $31 = HEAP32[$23>>2]|0;
    $32 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($31)|0);
    $$0$i$i2$i$i = $32;
   }
   $33 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $34 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$33)|0);
   if ($34) {
    HEAP32[$1>>2] = 0;
    label = 14;
    break;
   } else {
    if ($171) {
     $172 = $20;
     label = 17;
     break;
    } else {
     label = 16;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 14) {
  if ($171) {
   label = 16;
  } else {
   $172 = 0;
   label = 17;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $35 = HEAP32[$2>>2]|0;
   $36 = $35 | 6;
   HEAP32[$2>>2] = $36;
   $$2 = 0;
  }
  else if ((label|0) == 17) {
   $37 = HEAP32[$0>>2]|0;
   $38 = ((($37)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ($39|0)==($41|0);
   if ($42) {
    $43 = HEAP32[$37>>2]|0;
    $44 = ((($43)) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 1023]($37)|0);
    $$0$i$i = $46;
   } else {
    $47 = HEAP32[$39>>2]|0;
    $48 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($47)|0);
    $$0$i$i = $48;
   }
   $49 = HEAP32[$3>>2]|0;
   $50 = ((($49)) + 12|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_iiii[$51 & 1023]($3,2048,$$0$i$i)|0);
   if (!($52)) {
    $53 = HEAP32[$2>>2]|0;
    $54 = $53 | 4;
    HEAP32[$2>>2] = $54;
    $$2 = 0;
    break;
   }
   $55 = HEAP32[$3>>2]|0;
   $56 = ((($55)) + 52|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = (FUNCTION_TABLE_iiii[$57 & 1023]($3,$$0$i$i,0)|0);
   $59 = $58 << 24 >> 24;
   $60 = HEAP32[$0>>2]|0;
   $61 = ((($60)) + 12|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($60)) + 16|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ($62|0)==($64|0);
   if ($65) {
    $66 = HEAP32[$60>>2]|0;
    $67 = ((($66)) + 40|0);
    $68 = HEAP32[$67>>2]|0;
    (FUNCTION_TABLE_ii[$68 & 1023]($60)|0);
   } else {
    $69 = ((($62)) + 4|0);
    HEAP32[$61>>2] = $69;
    $70 = HEAP32[$62>>2]|0;
    (__ZNSt3__211char_traitsIwE11to_int_typeEw($70)|0);
   }
   $$0$in = $59;$$025$in = $4;$173 = $172;$86 = $172;
   while(1) {
    $$0 = (($$0$in) + -48)|0;
    $$025 = (($$025$in) + -1)|0;
    $71 = HEAP32[$0>>2]|0;
    $72 = ($71|0)==(0|0);
    do {
     if ($72) {
      $103 = 1;
     } else {
      $73 = ((($71)) + 12|0);
      $74 = HEAP32[$73>>2]|0;
      $75 = ((($71)) + 16|0);
      $76 = HEAP32[$75>>2]|0;
      $77 = ($74|0)==($76|0);
      if ($77) {
       $78 = HEAP32[$71>>2]|0;
       $79 = ((($78)) + 36|0);
       $80 = HEAP32[$79>>2]|0;
       $81 = (FUNCTION_TABLE_ii[$80 & 1023]($71)|0);
       $$0$i$i$i$i27 = $81;
      } else {
       $82 = HEAP32[$74>>2]|0;
       $83 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($82)|0);
       $$0$i$i$i$i27 = $83;
      }
      $84 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
      $85 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i27,$84)|0);
      if ($85) {
       HEAP32[$0>>2] = 0;
       $103 = 1;
       break;
      } else {
       $$pre$i$i$i29 = HEAP32[$0>>2]|0;
       $phitmp$i$i$i30 = ($$pre$i$i$i29|0)==(0|0);
       $103 = $phitmp$i$i$i30;
       break;
      }
     }
    } while(0);
    $87 = ($86|0)==(0|0);
    if ($87) {
     $102 = 1;$154 = $173;$174 = 0;
    } else {
     $88 = ((($86)) + 12|0);
     $89 = HEAP32[$88>>2]|0;
     $90 = ((($86)) + 16|0);
     $91 = HEAP32[$90>>2]|0;
     $92 = ($89|0)==($91|0);
     if ($92) {
      $93 = HEAP32[$86>>2]|0;
      $94 = ((($93)) + 36|0);
      $95 = HEAP32[$94>>2]|0;
      $96 = (FUNCTION_TABLE_ii[$95 & 1023]($86)|0);
      $$0$i$i2$i$i33 = $96;
     } else {
      $97 = HEAP32[$89>>2]|0;
      $98 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($97)|0);
      $$0$i$i2$i$i33 = $98;
     }
     $99 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
     $100 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i33,$99)|0);
     if ($100) {
      HEAP32[$1>>2] = 0;
      $102 = 1;$154 = 0;$174 = 0;
     } else {
      $102 = 0;$154 = $173;$174 = $86;
     }
    }
    $101 = $103 ^ $102;
    $104 = ($$025$in|0)>(1);
    $105 = $104 & $101;
    $106 = HEAP32[$0>>2]|0;
    if (!($105)) {
     break;
    }
    $107 = ((($106)) + 12|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ((($106)) + 16|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = ($108|0)==($110|0);
    if ($111) {
     $112 = HEAP32[$106>>2]|0;
     $113 = ((($112)) + 36|0);
     $114 = HEAP32[$113>>2]|0;
     $115 = (FUNCTION_TABLE_ii[$114 & 1023]($106)|0);
     $$0$i$i38 = $115;
    } else {
     $116 = HEAP32[$108>>2]|0;
     $117 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($116)|0);
     $$0$i$i38 = $117;
    }
    $118 = HEAP32[$3>>2]|0;
    $119 = ((($118)) + 12|0);
    $120 = HEAP32[$119>>2]|0;
    $121 = (FUNCTION_TABLE_iiii[$120 & 1023]($3,2048,$$0$i$i38)|0);
    if (!($121)) {
     $$2 = $$0;
     break L22;
    }
    $122 = ($$0*10)|0;
    $123 = HEAP32[$3>>2]|0;
    $124 = ((($123)) + 52|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (FUNCTION_TABLE_iiii[$125 & 1023]($3,$$0$i$i38,0)|0);
    $127 = $126 << 24 >> 24;
    $128 = (($122) + ($127))|0;
    $129 = HEAP32[$0>>2]|0;
    $130 = ((($129)) + 12|0);
    $131 = HEAP32[$130>>2]|0;
    $132 = ((($129)) + 16|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = ($131|0)==($133|0);
    if ($134) {
     $135 = HEAP32[$129>>2]|0;
     $136 = ((($135)) + 40|0);
     $137 = HEAP32[$136>>2]|0;
     (FUNCTION_TABLE_ii[$137 & 1023]($129)|0);
    } else {
     $138 = ((($131)) + 4|0);
     HEAP32[$130>>2] = $138;
     $139 = HEAP32[$131>>2]|0;
     (__ZNSt3__211char_traitsIwE11to_int_typeEw($139)|0);
    }
    $$0$in = $128;$$025$in = $$025;$173 = $154;$86 = $174;
   }
   $140 = ($106|0)==(0|0);
   do {
    if ($140) {
     $175 = 1;
    } else {
     $141 = ((($106)) + 12|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ((($106)) + 16|0);
     $144 = HEAP32[$143>>2]|0;
     $145 = ($142|0)==($144|0);
     if ($145) {
      $146 = HEAP32[$106>>2]|0;
      $147 = ((($146)) + 36|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = (FUNCTION_TABLE_ii[$148 & 1023]($106)|0);
      $$0$i$i$i$i41 = $149;
     } else {
      $150 = HEAP32[$142>>2]|0;
      $151 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($150)|0);
      $$0$i$i$i$i41 = $151;
     }
     $152 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
     $153 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i41,$152)|0);
     if ($153) {
      HEAP32[$0>>2] = 0;
      $175 = 1;
      break;
     } else {
      $$pre$i$i$i43 = HEAP32[$0>>2]|0;
      $phitmp$i$i$i44 = ($$pre$i$i$i43|0)==(0|0);
      $175 = $phitmp$i$i$i44;
      break;
     }
    }
   } while(0);
   $155 = ($154|0)==(0|0);
   do {
    if ($155) {
     label = 61;
    } else {
     $156 = ((($154)) + 12|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ((($154)) + 16|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($157|0)==($159|0);
     if ($160) {
      $161 = HEAP32[$154>>2]|0;
      $162 = ((($161)) + 36|0);
      $163 = HEAP32[$162>>2]|0;
      $164 = (FUNCTION_TABLE_ii[$163 & 1023]($154)|0);
      $$0$i$i2$i$i47 = $164;
     } else {
      $165 = HEAP32[$157>>2]|0;
      $166 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($165)|0);
      $$0$i$i2$i$i47 = $166;
     }
     $167 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
     $168 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i47,$167)|0);
     if ($168) {
      HEAP32[$1>>2] = 0;
      label = 61;
      break;
     } else {
      if ($175) {
       $$2 = $$0;
       break L22;
      } else {
       break;
      }
     }
    }
   } while(0);
   if ((label|0) == 61) {
    if (!($175)) {
     $$2 = $$0;
     break;
    }
   }
   $169 = HEAP32[$2>>2]|0;
   $170 = $169 | 2;
   HEAP32[$2>>2] = $170;
   $$2 = $$0;
  }
 } while(0);
 return ($$2|0);
}
function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 __ZNSt3__210__time_putD2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 __ZNSt3__210__time_putD2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp;
 $8 = sp + 100|0;
 $9 = ((($7)) + 100|0);
 HEAP32[$8>>2] = $9;
 $10 = ((($0)) + 8|0);
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($10,$7,$8,$4,$5,$6);
 $11 = HEAP32[$8>>2]|0;
 $12 = HEAP32[$1>>2]|0;
 $$0$i$i = $7;$$sroa$04$0$i = $12;
 while(1) {
  $13 = ($$0$i$i|0)==($11|0);
  if ($13) {
   break;
  }
  $14 = HEAP8[$$0$i$i>>0]|0;
  $15 = ($$sroa$04$0$i|0)==(0|0);
  if ($15) {
   $$sroa$04$1$i = 0;
  } else {
   $16 = ((($$sroa$04$0$i)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($$sroa$04$0$i)) + 28|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$$sroa$04$0$i>>2]|0;
    $22 = ((($21)) + 52|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($14)|0);
    $25 = (FUNCTION_TABLE_iii[$23 & 1023]($$sroa$04$0$i,$24)|0);
    $$0$i$i$i$i = $25;
   } else {
    $26 = ((($17)) + 1|0);
    HEAP32[$16>>2] = $26;
    HEAP8[$17>>0] = $14;
    $27 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($14)|0);
    $$0$i$i$i$i = $27;
   }
   $28 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $29 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$28)|0);
   $spec$select$i = $29 ? 0 : $$sroa$04$0$i;
   $$sroa$04$1$i = $spec$select$i;
  }
  $30 = ((($$0$i$i)) + 1|0);
  $$0$i$i = $30;$$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;return ($$sroa$04$0$i|0);
}
function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 HEAP8[$6>>0] = 37;
 $7 = ((($6)) + 1|0);
 HEAP8[$7>>0] = $4;
 $8 = ((($6)) + 2|0);
 HEAP8[$8>>0] = $5;
 $9 = ((($6)) + 3|0);
 HEAP8[$9>>0] = 0;
 $10 = ($5<<24>>24)==(0);
 if (!($10)) {
  HEAP8[$7>>0] = $5;
  HEAP8[$8>>0] = $4;
 }
 $11 = HEAP32[$2>>2]|0;
 $12 = (__ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_($1,$11)|0);
 $13 = HEAP32[$0>>2]|0;
 $14 = (_strftime_l(($1|0),($12|0),($6|0),($3|0),($13|0))|0);
 $15 = (($1) + ($14)|0);
 HEAP32[$2>>2] = $15;
 STACKTOP = sp;return;
}
function __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = (($2) - ($3))|0;
 return ($4|0);
}
function __ZNSt3__210__time_putD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__26__clocEv()|0);
 $3 = ($1|0)==($2|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  _freelocale($4);
 }
 return;
}
function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 __ZNSt3__210__time_putD2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 __ZNSt3__210__time_putD2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $7 = sp;
 $8 = sp + 400|0;
 $9 = ((($7)) + 400|0);
 HEAP32[$8>>2] = $9;
 $10 = ((($0)) + 8|0);
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($10,$7,$8,$4,$5,$6);
 $11 = HEAP32[$8>>2]|0;
 $12 = HEAP32[$1>>2]|0;
 $$0$i$i = $7;$$sroa$04$0$i = $12;
 while(1) {
  $13 = ($$0$i$i|0)==($11|0);
  if ($13) {
   break;
  }
  $14 = HEAP32[$$0$i$i>>2]|0;
  $15 = ($$sroa$04$0$i|0)==(0|0);
  if ($15) {
   $$sroa$04$1$i = 0;
  } else {
   $16 = ((($$sroa$04$0$i)) + 24|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ((($$sroa$04$0$i)) + 28|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ($17|0)==($19|0);
   if ($20) {
    $21 = HEAP32[$$sroa$04$0$i>>2]|0;
    $22 = ((($21)) + 52|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($14)|0);
    $25 = (FUNCTION_TABLE_iii[$23 & 1023]($$sroa$04$0$i,$24)|0);
    $$0$i$i$i$i = $25;
   } else {
    $26 = ((($17)) + 4|0);
    HEAP32[$16>>2] = $26;
    HEAP32[$17>>2] = $14;
    $27 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($14)|0);
    $$0$i$i$i$i = $27;
   }
   $28 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $29 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$28)|0);
   $spec$select$i = $29 ? 0 : $$sroa$04$0$i;
   $$sroa$04$1$i = $spec$select$i;
  }
  $30 = ((($$0$i$i)) + 4|0);
  $$0$i$i = $30;$$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;return ($$sroa$04$0$i|0);
}
function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $6 = sp;
 $7 = sp + 116|0;
 $8 = sp + 104|0;
 $9 = sp + 112|0;
 $10 = ((($6)) + 100|0);
 HEAP32[$7>>2] = $10;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0,$6,$7,$3,$4,$5);
 $11 = $8;
 $12 = $11;
 HEAP32[$12>>2] = 0;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 0;
 HEAP32[$9>>2] = $6;
 $15 = HEAP32[$2>>2]|0;
 $16 = (__ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_($1,$15)|0);
 $17 = HEAP32[$0>>2]|0;
 $18 = (___uselocale($17)|0);
 $19 = (_mbsrtowcs($1,$9,$16,$8)|0);
 $20 = ($18|0)==(0|0);
 if (!($20)) {
  (___uselocale($18)|0);
 }
 $21 = ($19|0)==(-1);
 if ($21) {
  __ZNSt3__221__throw_runtime_errorEPKc(0);
  // unreachable;
 } else {
  $22 = (($1) + ($19<<2)|0);
  HEAP32[$2>>2] = $22;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = (($2) - ($3))|0;
 $5 = $4 >> 2;
 return ($5|0);
}
function __ZNSt3__221__throw_runtime_errorEPKc($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _abort();
 // unreachable;
}
function __ZNSt3__210moneypunctIcLb0EED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__210moneypunctIcLb0EED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($0,1,45);
 return;
}
function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__210moneypunctIcLb1EED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__210moneypunctIcLb1EED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 127;
}
function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($0,1,45);
 return;
}
function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__210moneypunctIwLb0EED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__210moneypunctIwLb0EED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($0,1,45);
 return;
}
function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__210moneypunctIwLb1EED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__210moneypunctIwLb1EED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $2 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$2>>2] = 0;
  $3 = (($$0$i$i) + 1)|0;
  $$0$i$i = $3;
 }
 return;
}
function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($0,1,45);
 return;
}
function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0]=67109634&255;HEAP8[$0+1>>0]=(67109634>>8)&255;HEAP8[$0+2>>0]=(67109634>>16)&255;HEAP8[$0+3>>0]=67109634>>24;
 return;
}
function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$sroa$0$0$copyload = 0, $$sroa$028$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $$byval_copy = sp + 240|0;
 $vararg_buffer = sp + 216|0;
 $7 = sp + 112|0;
 $8 = sp + 232|0;
 $9 = sp + 228|0;
 $10 = sp + 224|0;
 $11 = sp + 254|0;
 $12 = sp + 220|0;
 $13 = sp + 244|0;
 $14 = sp;
 $15 = $7;
 HEAP32[$8>>2] = $15;
 $16 = ((($8)) + 4|0);
 HEAP32[$16>>2] = (661);
 $17 = ((($7)) + 100|0);
 __ZNKSt3__28ios_base6getlocEv($10,$4);
 $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($10,36724)|0);
 HEAP8[$11>>0] = 0;
 $19 = HEAP32[$2>>2]|0;
 HEAP32[$12>>2] = $19;
 $20 = ((($4)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$12>>2]|0;
 $22 = (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1,$$byval_copy,$3,$10,$21,$5,$11,$18,$8,$9,$17)|0);
 if ($22) {
  $23 = HEAP32[$18>>2]|0;
  $24 = ((($23)) + 32|0);
  $25 = HEAP32[$24>>2]|0;
  (FUNCTION_TABLE_iiiii[$25 & 511]($18,24482,(24492),$13)|0);
  $26 = HEAP32[$9>>2]|0;
  $27 = HEAP32[$8>>2]|0;
  $28 = (($26) - ($27))|0;
  $29 = ($28|0)>(98);
  $30 = $27;
  $31 = $26;
  if ($29) {
   $32 = (($28) + 2)|0;
   $33 = (_malloc($32)|0);
   $34 = $33;
   $35 = ($33|0)==(0|0);
   if ($35) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $$025 = $33;$$sroa$028$0 = $34;
   }
  } else {
   $$025 = $14;$$sroa$028$0 = 0;
  }
  $36 = HEAP8[$11>>0]|0;
  $37 = ($36<<24>>24)==(0);
  if ($37) {
   $$1 = $$025;
  } else {
   $38 = ((($$025)) + 1|0);
   HEAP8[$$025>>0] = 45;
   $$1 = $38;
  }
  $39 = ((($13)) + 10|0);
  $40 = $13;
  $$0 = $30;$$2 = $$1;$42 = $31;
  while(1) {
   $41 = ($$0>>>0)<($42>>>0);
   if (!($41)) {
    break;
   }
   $45 = HEAP8[$$0>>0]|0;
   $$0$i = $13;
   while(1) {
    $46 = ($$0$i|0)==($39|0);
    if ($46) {
     $$0$lcssa$i = $39;
     break;
    }
    $47 = HEAP8[$$0$i>>0]|0;
    $48 = ($47<<24>>24)==($45<<24>>24);
    if ($48) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $49 = ((($$0$i)) + 1|0);
    $$0$i = $49;
   }
   $50 = $$0$lcssa$i;
   $51 = (($50) - ($40))|0;
   $52 = (24482 + ($51)|0);
   $53 = HEAP8[$52>>0]|0;
   HEAP8[$$2>>0] = $53;
   $54 = ((($$0)) + 1|0);
   $55 = ((($$2)) + 1|0);
   $$pre = HEAP32[$9>>2]|0;
   $$0 = $54;$$2 = $55;$42 = $$pre;
  }
  HEAP8[$$2>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $6;
  $43 = (_sscanf($14,24493,$vararg_buffer)|0);
  $44 = ($43|0)==(1);
  if (!($44)) {
   __ZNSt3__221__throw_runtime_errorEPKc(0);
   // unreachable;
  }
  $56 = ($$sroa$028$0|0)==(0);
  if (!($56)) {
   $57 = $$sroa$028$0;
   _free($57);
  }
 }
 $58 = HEAP32[$1>>2]|0;
 $59 = ($58|0)==(0|0);
 do {
  if ($59) {
   $94 = 1;
  } else {
   $60 = ((($58)) + 12|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ((($58)) + 16|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = ($61|0)==($63|0);
   if ($64) {
    $65 = HEAP32[$58>>2]|0;
    $66 = ((($65)) + 36|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = (FUNCTION_TABLE_ii[$67 & 1023]($58)|0);
    $$0$i$i$i$i = $68;
   } else {
    $69 = HEAP8[$61>>0]|0;
    $70 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($69)|0);
    $$0$i$i$i$i = $70;
   }
   $71 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $72 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$71)|0);
   if ($72) {
    HEAP32[$1>>2] = 0;
    $94 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$1>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $94 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $73 = HEAP32[$2>>2]|0;
 $74 = ($73|0)==(0|0);
 do {
  if ($74) {
   label = 32;
  } else {
   $75 = ((($73)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ((($73)) + 16|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = ($76|0)==($78|0);
   if ($79) {
    $80 = HEAP32[$73>>2]|0;
    $81 = ((($80)) + 36|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
    $$0$i$i2$i$i = $83;
   } else {
    $84 = HEAP8[$76>>0]|0;
    $85 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($84)|0);
    $$0$i$i2$i$i = $85;
   }
   $86 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $87 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$86)|0);
   if ($87) {
    HEAP32[$2>>2] = 0;
    label = 32;
    break;
   } else {
    if ($94) {
     break;
    } else {
     label = 34;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($94) {
   label = 34;
  }
 }
 if ((label|0) == 34) {
  $88 = HEAP32[$5>>2]|0;
  $89 = $88 | 2;
  HEAP32[$5>>2] = $89;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__26localeD2Ev($10);
 $90 = HEAP32[$8>>2]|0;
 HEAP32[$8>>2] = 0;
 $91 = ($90|0)==(0|0);
 if (!($91)) {
  $92 = ((($8)) + 4|0);
  $93 = HEAP32[$92>>2]|0;
  FUNCTION_TABLE_vi[$93 & 1023]($90);
 }
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$pre$i$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $9 = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $$byval_copy = sp + 120|0;
 $7 = sp + 126|0;
 $8 = sp + 125|0;
 $9 = sp;
 $10 = sp + 112|0;
 $11 = sp + 108|0;
 $12 = sp + 104|0;
 $13 = sp + 124|0;
 $14 = sp + 100|0;
 $15 = $9;
 HEAP32[$10>>2] = $15;
 $16 = ((($10)) + 4|0);
 HEAP32[$16>>2] = (661);
 $17 = ((($9)) + 100|0);
 __ZNKSt3__28ios_base6getlocEv($12,$4);
 $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($12,36724)|0);
 HEAP8[$13>>0] = 0;
 $19 = HEAP32[$2>>2]|0;
 HEAP32[$14>>2] = $19;
 $20 = ((($4)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$14>>2]|0;
 $22 = (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1,$$byval_copy,$3,$12,$21,$5,$13,$18,$10,$11,$17)|0);
 $23 = $19;
 if ($22) {
  $24 = ((($6)) + 11|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = ($25<<24>>24)<(0);
  if ($26) {
   $27 = HEAP32[$6>>2]|0;
   HEAP8[$7>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($27,$7);
   $28 = ((($6)) + 4|0);
   HEAP32[$28>>2] = 0;
  } else {
   HEAP8[$8>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$8);
   HEAP8[$24>>0] = 0;
  }
  $29 = HEAP8[$13>>0]|0;
  $30 = ($29<<24>>24)==(0);
  if (!($30)) {
   $31 = HEAP32[$18>>2]|0;
   $32 = ((($31)) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (FUNCTION_TABLE_iii[$33 & 1023]($18,45)|0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6,$34);
  }
  $35 = HEAP32[$18>>2]|0;
  $36 = ((($35)) + 28|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (FUNCTION_TABLE_iii[$37 & 1023]($18,48)|0);
  $39 = HEAP32[$10>>2]|0;
  $40 = HEAP32[$11>>2]|0;
  $41 = ((($40)) + -1|0);
  $$0 = $39;
  while(1) {
   $42 = ($$0>>>0)<($41>>>0);
   if (!($42)) {
    break;
   }
   $43 = HEAP8[$$0>>0]|0;
   $44 = ($43<<24>>24)==($38<<24>>24);
   if (!($44)) {
    break;
   }
   $45 = ((($$0)) + 1|0);
   $$0 = $45;
  }
  (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($6,$$0,$40)|0);
 }
 $46 = HEAP32[$1>>2]|0;
 $47 = ($46|0)==(0|0);
 do {
  if ($47) {
   $82 = 1;
  } else {
   $48 = ((($46)) + 12|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = ((($46)) + 16|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ($49|0)==($51|0);
   if ($52) {
    $53 = HEAP32[$46>>2]|0;
    $54 = ((($53)) + 36|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (FUNCTION_TABLE_ii[$55 & 1023]($46)|0);
    $$0$i$i$i$i = $56;
   } else {
    $57 = HEAP8[$49>>0]|0;
    $58 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($57)|0);
    $$0$i$i$i$i = $58;
   }
   $59 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $60 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$59)|0);
   if ($60) {
    HEAP32[$1>>2] = 0;
    $82 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$1>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $82 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $61 = ($19|0)==(0);
 do {
  if ($61) {
   label = 25;
  } else {
   $62 = ((($23)) + 12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = ((($23)) + 16|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($63|0)==($65|0);
   if ($66) {
    $67 = $19;
    $68 = HEAP32[$67>>2]|0;
    $69 = ((($68)) + 36|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (FUNCTION_TABLE_ii[$70 & 1023]($23)|0);
    $$0$i$i2$i$i = $71;
   } else {
    $72 = HEAP8[$63>>0]|0;
    $73 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($72)|0);
    $$0$i$i2$i$i = $73;
   }
   $74 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
   $75 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$74)|0);
   if ($75) {
    HEAP32[$2>>2] = 0;
    label = 25;
    break;
   } else {
    if ($82) {
     break;
    } else {
     label = 27;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 25) {
  if ($82) {
   label = 27;
  }
 }
 if ((label|0) == 27) {
  $76 = HEAP32[$5>>2]|0;
  $77 = $76 | 2;
  HEAP32[$5>>2] = $77;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__26localeD2Ev($12);
 $78 = HEAP32[$10>>2]|0;
 HEAP32[$10>>2] = 0;
 $79 = ($78|0)==(0|0);
 if (!($79)) {
  $80 = ((($10)) + 4|0);
  $81 = HEAP32[$80>>2]|0;
  FUNCTION_TABLE_vi[$81 & 1023]($78);
 }
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__212__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i161 = 0, $$0$i$i$i$i205 = 0, $$0$i$i$i$i221 = 0, $$0$i$i$i$i237 = 0, $$0$i$i$i$i254 = 0, $$0$i$i$i$i269 = 0, $$0$i$i147 = 0, $$0$i$i150 = 0, $$0$i$i153 = 0, $$0$i$i156 = 0, $$0$i$i159 = 0, $$0$i$i160 = 0, $$0$i$i173 = 0, $$0$i$i176 = 0, $$0$i$i182 = 0, $$0$i$i189 = 0, $$0$i$i194 = 0;
 var $$0$i$i2$i$i = 0, $$0$i$i2$i$i167 = 0, $$0$i$i2$i$i211 = 0, $$0$i$i2$i$i227 = 0, $$0$i$i2$i$i243 = 0, $$0$i$i2$i$i260 = 0, $$0$i$i2$i$i275 = 0, $$0$i$i202 = 0, $$0$i$i233 = 0, $$0$i$i249 = 0, $$0$i$i266 = 0, $$0$i$i281 = 0, $$0$i$i284 = 0, $$0124 = 0, $$0129 = 0, $$0131 = 0, $$10 = 0, $$1130 = 0, $$2126$ph = 0, $$pre = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i163 = 0, $$pre$i$i$i207 = 0, $$pre$i$i$i223 = 0, $$pre$i$i$i239 = 0, $$pre$i$i$i256 = 0, $$pre$i$i$i271 = 0, $$pre$phiZ2D = 0, $$pre361 = 0, $$pre362 = 0, $$pre363 = 0, $$pre364 = 0, $$sroa$0293$0$ptr = 0, $$sroa$0313$0 = 0, $$sroa$0313$1 = 0, $$sroa$0313$1$ptr = 0, $$sroa$08$0$ptr$i = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;
 var $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0;
 var $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0;
 var $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0;
 var $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0;
 var $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0;
 var $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0;
 var $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0;
 var $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0;
 var $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0;
 var $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0;
 var $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0;
 var $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $cond146 = 0, $exitcond$i$i = 0, $exitcond$i$i148 = 0, $exitcond$i$i151 = 0, $exitcond$i$i154 = 0, $exitcond$i$i157 = 0, $or$cond = 0;
 var $or$cond13 = 0, $or$cond143 = 0, $or$cond15 = 0, $or$cond371 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i164 = 0, $phitmp$i$i$i208 = 0, $phitmp$i$i$i224 = 0, $phitmp$i$i$i240 = 0, $phitmp$i$i$i257 = 0, $phitmp$i$i$i272 = 0, $sext = 0, $sext345 = 0, $sext346 = 0, $sext347 = 0, $spec$select = 0, $spec$select139 = 0, $spec$select140 = 0, $spec$select141 = 0, $switch = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $11 = sp + 488|0;
 $12 = sp;
 $13 = sp + 480|0;
 $14 = sp + 472|0;
 $15 = sp + 468|0;
 $16 = sp + 496|0;
 $17 = sp + 493|0;
 $18 = sp + 492|0;
 $19 = sp + 456|0;
 $20 = sp + 444|0;
 $21 = sp + 432|0;
 $22 = sp + 420|0;
 $23 = sp + 408|0;
 $24 = sp + 404|0;
 $25 = sp + 400|0;
 HEAP32[$11>>2] = $10;
 $26 = $12;
 HEAP32[$13>>2] = $26;
 $27 = ((($13)) + 4|0);
 HEAP32[$27>>2] = (661);
 HEAP32[$14>>2] = $12;
 $28 = ((($12)) + 400|0);
 HEAP32[$15>>2] = $28;
 ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $29 = (($19) + ($$0$i$i<<2)|0);
  HEAP32[$29>>2] = 0;
  $30 = (($$0$i$i) + 1)|0;
  $$0$i$i = $30;
 }
 ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
 $$0$i$i147 = 0;
 while(1) {
  $exitcond$i$i148 = ($$0$i$i147|0)==(3);
  if ($exitcond$i$i148) {
   break;
  }
  $31 = (($20) + ($$0$i$i147<<2)|0);
  HEAP32[$31>>2] = 0;
  $32 = (($$0$i$i147) + 1)|0;
  $$0$i$i147 = $32;
 }
 ;HEAP32[$21>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
 $$0$i$i150 = 0;
 while(1) {
  $exitcond$i$i151 = ($$0$i$i150|0)==(3);
  if ($exitcond$i$i151) {
   break;
  }
  $33 = (($21) + ($$0$i$i150<<2)|0);
  HEAP32[$33>>2] = 0;
  $34 = (($$0$i$i150) + 1)|0;
  $$0$i$i150 = $34;
 }
 ;HEAP32[$22>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
 $$0$i$i153 = 0;
 while(1) {
  $exitcond$i$i154 = ($$0$i$i153|0)==(3);
  if ($exitcond$i$i154) {
   break;
  }
  $35 = (($22) + ($$0$i$i153<<2)|0);
  HEAP32[$35>>2] = 0;
  $36 = (($$0$i$i153) + 1)|0;
  $$0$i$i153 = $36;
 }
 ;HEAP32[$23>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
 $$0$i$i156 = 0;
 while(1) {
  $exitcond$i$i157 = ($$0$i$i156|0)==(3);
  if ($exitcond$i$i157) {
   break;
  }
  $37 = (($23) + ($$0$i$i156<<2)|0);
  HEAP32[$37>>2] = 0;
  $38 = (($$0$i$i156) + 1)|0;
  $$0$i$i156 = $38;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($2,$3,$16,$17,$18,$19,$20,$21,$22,$24);
 $39 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $39;
 $40 = ((($7)) + 8|0);
 $41 = ((($21)) + 11|0);
 $42 = ((($21)) + 4|0);
 $43 = ((($22)) + 11|0);
 $44 = ((($22)) + 4|0);
 $45 = ((($19)) + 11|0);
 $46 = ((($19)) + 4|0);
 $47 = $4 & 512;
 $48 = ($47|0)!=(0);
 $49 = ((($20)) + 11|0);
 $50 = ((($16)) + 3|0);
 $51 = ((($20)) + 4|0);
 $52 = ((($23)) + 11|0);
 $53 = ((($23)) + 4|0);
 $$0129 = 0;$$0131 = 0;
 L21: while(1) {
  $54 = ($$0131>>>0)<(4);
  if (!($54)) {
   label = 243;
   break;
  }
  $55 = HEAP32[$0>>2]|0;
  $56 = ($55|0)==(0|0);
  do {
   if ($56) {
    $787 = 1;
   } else {
    $57 = ((($55)) + 12|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ((($55)) + 16|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = ($58|0)==($60|0);
    if ($61) {
     $62 = HEAP32[$55>>2]|0;
     $63 = ((($62)) + 36|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = (FUNCTION_TABLE_ii[$64 & 1023]($55)|0);
     $$0$i$i$i$i = $65;
    } else {
     $66 = HEAP8[$58>>0]|0;
     $67 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($66)|0);
     $$0$i$i$i$i = $67;
    }
    $68 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $69 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i,$68)|0);
    if ($69) {
     HEAP32[$0>>2] = 0;
     $787 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$0>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $787 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $70 = HEAP32[$1>>2]|0;
  $71 = ($70|0)==(0|0);
  do {
   if ($71) {
    label = 31;
   } else {
    $72 = ((($70)) + 12|0);
    $73 = HEAP32[$72>>2]|0;
    $74 = ((($70)) + 16|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($73|0)==($75|0);
    if ($76) {
     $77 = HEAP32[$70>>2]|0;
     $78 = ((($77)) + 36|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = (FUNCTION_TABLE_ii[$79 & 1023]($70)|0);
     $$0$i$i2$i$i = $80;
    } else {
     $81 = HEAP8[$73>>0]|0;
     $82 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($81)|0);
     $$0$i$i2$i$i = $82;
    }
    $83 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
    $84 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i,$83)|0);
    if ($84) {
     HEAP32[$1>>2] = 0;
     label = 31;
     break;
    } else {
     if ($787) {
      $788 = $70;
      break;
     } else {
      label = 243;
      break L21;
     }
    }
   }
  } while(0);
  if ((label|0) == 31) {
   label = 0;
   if ($787) {
    label = 243;
    break;
   } else {
    $788 = 0;
   }
  }
  $85 = (($16) + ($$0131)|0);
  $86 = HEAP8[$85>>0]|0;
  $87 = $86 << 24 >> 24;
  L46: do {
   switch ($87|0) {
   case 1:  {
    $cond146 = ($$0131|0)==(3);
    if ($cond146) {
     $$1130 = $$0129;
    } else {
     $88 = HEAP32[$0>>2]|0;
     $89 = ((($88)) + 12|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($88)) + 16|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = ($90|0)==($92|0);
     if ($93) {
      $94 = HEAP32[$88>>2]|0;
      $95 = ((($94)) + 36|0);
      $96 = HEAP32[$95>>2]|0;
      $97 = (FUNCTION_TABLE_ii[$96 & 1023]($88)|0);
      $$0$i$i159 = $97;
     } else {
      $98 = HEAP8[$90>>0]|0;
      $99 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($98)|0);
      $$0$i$i159 = $99;
     }
     $100 = $$0$i$i159&255;
     $101 = ($100<<24>>24)>(-1);
     if (!($101)) {
      label = 45;
      break L21;
     }
     $sext347 = $$0$i$i159 << 24;
     $102 = $sext347 >> 24;
     $103 = HEAP32[$40>>2]|0;
     $104 = (($103) + ($102<<1)|0);
     $105 = HEAP16[$104>>1]|0;
     $106 = $105 & 8192;
     $107 = ($106<<16>>16)==(0);
     if ($107) {
      label = 45;
      break L21;
     }
     $108 = HEAP32[$0>>2]|0;
     $109 = ((($108)) + 12|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ((($108)) + 16|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = ($110|0)==($112|0);
     if ($113) {
      $114 = HEAP32[$108>>2]|0;
      $115 = ((($114)) + 40|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = (FUNCTION_TABLE_ii[$116 & 1023]($108)|0);
      $$0$i$i160 = $117;
     } else {
      $118 = ((($110)) + 1|0);
      HEAP32[$109>>2] = $118;
      $119 = HEAP8[$110>>0]|0;
      $120 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($119)|0);
      $$0$i$i160 = $120;
     }
     $121 = $$0$i$i160&255;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23,$121);
     label = 47;
    }
    break;
   }
   case 0:  {
    $124 = ($$0131|0)==(3);
    if ($124) {
     $$1130 = $$0129;
    } else {
     label = 47;
    }
    break;
   }
   case 3:  {
    $189 = HEAP8[$41>>0]|0;
    $190 = ($189<<24>>24)<(0);
    $191 = HEAP32[$42>>2]|0;
    $192 = $189&255;
    $193 = $190 ? $191 : $192;
    $194 = HEAP8[$43>>0]|0;
    $195 = ($194<<24>>24)<(0);
    $196 = HEAP32[$44>>2]|0;
    $197 = $194&255;
    $198 = $195 ? $196 : $197;
    $199 = (0 - ($198))|0;
    $200 = ($193|0)==($199|0);
    if ($200) {
     $$1130 = $$0129;
    } else {
     $201 = ($193|0)==(0);
     $202 = ($198|0)==(0);
     $or$cond371 = $201 | $202;
     $203 = HEAP32[$0>>2]|0;
     $204 = ((($203)) + 12|0);
     $205 = HEAP32[$204>>2]|0;
     $206 = ((($203)) + 16|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($205|0)==($207|0);
     if ($or$cond371) {
      if ($208) {
       $209 = HEAP32[$203>>2]|0;
       $210 = ((($209)) + 36|0);
       $211 = HEAP32[$210>>2]|0;
       $212 = (FUNCTION_TABLE_ii[$211 & 1023]($203)|0);
       $$0$i$i182 = $212;
      } else {
       $213 = HEAP8[$205>>0]|0;
       $214 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($213)|0);
       $$0$i$i182 = $214;
      }
      $215 = $$0$i$i182&255;
      if ($201) {
       $239 = HEAP8[$43>>0]|0;
       $240 = ($239<<24>>24)<(0);
       $241 = HEAP32[$22>>2]|0;
       $242 = $240 ? $241 : $22;
       $243 = HEAP8[$242>>0]|0;
       $244 = ($243<<24>>24)==($215<<24>>24);
       if (!($244)) {
        $$1130 = $$0129;
        break L46;
       }
       $245 = HEAP32[$0>>2]|0;
       $246 = ((($245)) + 12|0);
       $247 = HEAP32[$246>>2]|0;
       $248 = ((($245)) + 16|0);
       $249 = HEAP32[$248>>2]|0;
       $250 = ($247|0)==($249|0);
       if ($250) {
        $251 = HEAP32[$245>>2]|0;
        $252 = ((($251)) + 40|0);
        $253 = HEAP32[$252>>2]|0;
        (FUNCTION_TABLE_ii[$253 & 1023]($245)|0);
       } else {
        $254 = ((($247)) + 1|0);
        HEAP32[$246>>2] = $254;
        $255 = HEAP8[$247>>0]|0;
        (__ZNSt3__211char_traitsIcE11to_int_typeEc($255)|0);
       }
       HEAP8[$6>>0] = 1;
       $256 = HEAP8[$43>>0]|0;
       $257 = ($256<<24>>24)<(0);
       $258 = HEAP32[$44>>2]|0;
       $259 = $256&255;
       $260 = $257 ? $258 : $259;
       $261 = ($260>>>0)>(1);
       $spec$select139 = $261 ? $22 : $$0129;
       $$1130 = $spec$select139;
       break L46;
      }
      $216 = HEAP8[$41>>0]|0;
      $217 = ($216<<24>>24)<(0);
      $218 = HEAP32[$21>>2]|0;
      $219 = $217 ? $218 : $21;
      $220 = HEAP8[$219>>0]|0;
      $221 = ($220<<24>>24)==($215<<24>>24);
      if (!($221)) {
       HEAP8[$6>>0] = 1;
       $$1130 = $$0129;
       break L46;
      }
      $222 = HEAP32[$0>>2]|0;
      $223 = ((($222)) + 12|0);
      $224 = HEAP32[$223>>2]|0;
      $225 = ((($222)) + 16|0);
      $226 = HEAP32[$225>>2]|0;
      $227 = ($224|0)==($226|0);
      if ($227) {
       $228 = HEAP32[$222>>2]|0;
       $229 = ((($228)) + 40|0);
       $230 = HEAP32[$229>>2]|0;
       (FUNCTION_TABLE_ii[$230 & 1023]($222)|0);
      } else {
       $231 = ((($224)) + 1|0);
       HEAP32[$223>>2] = $231;
       $232 = HEAP8[$224>>0]|0;
       (__ZNSt3__211char_traitsIcE11to_int_typeEc($232)|0);
      }
      $233 = HEAP8[$41>>0]|0;
      $234 = ($233<<24>>24)<(0);
      $235 = HEAP32[$42>>2]|0;
      $236 = $233&255;
      $237 = $234 ? $235 : $236;
      $238 = ($237>>>0)>(1);
      $spec$select = $238 ? $21 : $$0129;
      $$1130 = $spec$select;
      break L46;
     }
     if ($208) {
      $262 = HEAP32[$203>>2]|0;
      $263 = ((($262)) + 36|0);
      $264 = HEAP32[$263>>2]|0;
      $265 = (FUNCTION_TABLE_ii[$264 & 1023]($203)|0);
      $$0$i$i189 = $265;
     } else {
      $266 = HEAP8[$205>>0]|0;
      $267 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($266)|0);
      $$0$i$i189 = $267;
     }
     $268 = $$0$i$i189&255;
     $269 = HEAP8[$41>>0]|0;
     $270 = ($269<<24>>24)<(0);
     $271 = HEAP32[$21>>2]|0;
     $272 = $270 ? $271 : $21;
     $273 = HEAP8[$272>>0]|0;
     $274 = ($273<<24>>24)==($268<<24>>24);
     $275 = HEAP32[$0>>2]|0;
     $276 = ((($275)) + 12|0);
     $277 = HEAP32[$276>>2]|0;
     $278 = ((($275)) + 16|0);
     $279 = HEAP32[$278>>2]|0;
     $280 = ($277|0)==($279|0);
     if ($274) {
      if ($280) {
       $281 = HEAP32[$275>>2]|0;
       $282 = ((($281)) + 40|0);
       $283 = HEAP32[$282>>2]|0;
       (FUNCTION_TABLE_ii[$283 & 1023]($275)|0);
      } else {
       $284 = ((($277)) + 1|0);
       HEAP32[$276>>2] = $284;
       $285 = HEAP8[$277>>0]|0;
       (__ZNSt3__211char_traitsIcE11to_int_typeEc($285)|0);
      }
      $286 = HEAP8[$41>>0]|0;
      $287 = ($286<<24>>24)<(0);
      $288 = HEAP32[$42>>2]|0;
      $289 = $286&255;
      $290 = $287 ? $288 : $289;
      $291 = ($290>>>0)>(1);
      $spec$select140 = $291 ? $21 : $$0129;
      $$1130 = $spec$select140;
      break L46;
     }
     if ($280) {
      $292 = HEAP32[$275>>2]|0;
      $293 = ((($292)) + 36|0);
      $294 = HEAP32[$293>>2]|0;
      $295 = (FUNCTION_TABLE_ii[$294 & 1023]($275)|0);
      $$0$i$i194 = $295;
     } else {
      $296 = HEAP8[$277>>0]|0;
      $297 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($296)|0);
      $$0$i$i194 = $297;
     }
     $298 = $$0$i$i194&255;
     $299 = HEAP8[$43>>0]|0;
     $300 = ($299<<24>>24)<(0);
     $301 = HEAP32[$22>>2]|0;
     $302 = $300 ? $301 : $22;
     $303 = HEAP8[$302>>0]|0;
     $304 = ($303<<24>>24)==($298<<24>>24);
     if (!($304)) {
      label = 105;
      break L21;
     }
     $305 = HEAP32[$0>>2]|0;
     $306 = ((($305)) + 12|0);
     $307 = HEAP32[$306>>2]|0;
     $308 = ((($305)) + 16|0);
     $309 = HEAP32[$308>>2]|0;
     $310 = ($307|0)==($309|0);
     if ($310) {
      $311 = HEAP32[$305>>2]|0;
      $312 = ((($311)) + 40|0);
      $313 = HEAP32[$312>>2]|0;
      (FUNCTION_TABLE_ii[$313 & 1023]($305)|0);
     } else {
      $314 = ((($307)) + 1|0);
      HEAP32[$306>>2] = $314;
      $315 = HEAP8[$307>>0]|0;
      (__ZNSt3__211char_traitsIcE11to_int_typeEc($315)|0);
     }
     HEAP8[$6>>0] = 1;
     $316 = HEAP8[$43>>0]|0;
     $317 = ($316<<24>>24)<(0);
     $318 = HEAP32[$44>>2]|0;
     $319 = $316&255;
     $320 = $317 ? $318 : $319;
     $321 = ($320>>>0)>(1);
     $spec$select141 = $321 ? $22 : $$0129;
     $$1130 = $spec$select141;
    }
    break;
   }
   case 2:  {
    $324 = ($$0129|0)!=(0|0);
    $325 = ($$0131>>>0)<(2);
    $or$cond = $325 | $324;
    if ($or$cond) {
     $335 = HEAP8[$49>>0]|0;
     $336 = ($335<<24>>24)<(0);
     $337 = HEAP32[$20>>2]|0;
     $338 = $336 ? $337 : $20;
     $339 = $338;
     $340 = ($$0131|0)==(0);
     if ($340) {
      $$sroa$0313$1 = $339;$793 = $337;$794 = $335;
     } else {
      $346 = $335;$347 = $336;$350 = $338;$364 = $339;$792 = $337;
      label = 110;
     }
    } else {
     $326 = ($$0131|0)==(2);
     $327 = HEAP8[$50>>0]|0;
     $328 = ($327<<24>>24)!=(0);
     $329 = $326 & $328;
     $brmerge = $48 | $329;
     if (!($brmerge)) {
      $$1130 = 0;
      break L46;
     }
     $330 = HEAP8[$49>>0]|0;
     $331 = ($330<<24>>24)<(0);
     $332 = HEAP32[$20>>2]|0;
     $333 = $331 ? $332 : $20;
     $334 = $333;
     $346 = $330;$347 = $331;$350 = $333;$364 = $334;$792 = $332;
     label = 110;
    }
    L109: do {
     if ((label|0) == 110) {
      label = 0;
      $341 = (($$0131) + -1)|0;
      $342 = (($16) + ($341)|0);
      $343 = HEAP8[$342>>0]|0;
      $switch = ($343&255)<(2);
      if ($switch) {
       $344 = HEAP32[$51>>2]|0;
       $345 = $346&255;
       $348 = $347 ? $344 : $345;
       $349 = (($350) + ($348)|0);
       $$sroa$0313$0 = $364;
       while(1) {
        $351 = $$sroa$0313$0;
        $352 = ($349|0)==($351|0);
        if ($352) {
         break;
        }
        $353 = HEAP8[$351>>0]|0;
        $354 = ($353<<24>>24)>(-1);
        if (!($354)) {
         break;
        }
        $355 = $353 << 24 >> 24;
        $356 = HEAP32[$40>>2]|0;
        $357 = (($356) + ($355<<1)|0);
        $358 = HEAP16[$357>>1]|0;
        $359 = $358 & 8192;
        $360 = ($359<<16>>16)==(0);
        if ($360) {
         break;
        }
        $361 = ((($351)) + 1|0);
        $362 = $361;
        $$sroa$0313$0 = $362;
       }
       $363 = (($$sroa$0313$0) - ($364))|0;
       $365 = HEAP8[$52>>0]|0;
       $366 = ($365<<24>>24)<(0);
       $367 = HEAP32[$53>>2]|0;
       $368 = $365&255;
       $369 = $366 ? $367 : $368;
       $370 = ($363>>>0)>($369>>>0);
       if ($370) {
        $$sroa$0313$1 = $364;$793 = $792;$794 = $346;
       } else {
        $371 = HEAP32[$23>>2]|0;
        $372 = (($371) + ($367)|0);
        $373 = (0 - ($363))|0;
        $374 = (($372) + ($373)|0);
        $375 = (($23) + ($368)|0);
        $376 = (0 - ($363))|0;
        $377 = (($375) + ($376)|0);
        $$pre$phiZ2D = $366 ? $372 : $375;
        $378 = $366 ? $374 : $377;
        $$sroa$08$0$ptr$i = $350;$379 = $378;
        while(1) {
         $380 = ($379|0)==($$pre$phiZ2D|0);
         if ($380) {
          $$sroa$0313$1 = $$sroa$0313$0;$793 = $792;$794 = $346;
          break L109;
         }
         $381 = HEAP8[$379>>0]|0;
         $382 = HEAP8[$$sroa$08$0$ptr$i>>0]|0;
         $383 = ($381<<24>>24)==($382<<24>>24);
         if (!($383)) {
          $$sroa$0313$1 = $364;$793 = $792;$794 = $346;
          break L109;
         }
         $384 = ((($379)) + 1|0);
         $385 = ((($$sroa$08$0$ptr$i)) + 1|0);
         $$sroa$08$0$ptr$i = $385;$379 = $384;
        }
       }
      } else {
       $$sroa$0313$1 = $364;$793 = $792;$794 = $346;
      }
     }
    } while(0);
    $$sroa$0313$1$ptr = $$sroa$0313$1;
    $$sroa$0293$0$ptr = $$sroa$0313$1$ptr;$386 = $794;$390 = $793;$410 = $788;
    L124: while(1) {
     $387 = ($386<<24>>24)<(0);
     $388 = HEAP32[$51>>2]|0;
     $389 = $386&255;
     $391 = $387 ? $390 : $20;
     $392 = $387 ? $388 : $389;
     $393 = (($391) + ($392)|0);
     $394 = ($$sroa$0293$0$ptr|0)==($393|0);
     if ($394) {
      break;
     }
     $395 = HEAP32[$0>>2]|0;
     $396 = ($395|0)==(0|0);
     do {
      if ($396) {
       $795 = 1;
      } else {
       $397 = ((($395)) + 12|0);
       $398 = HEAP32[$397>>2]|0;
       $399 = ((($395)) + 16|0);
       $400 = HEAP32[$399>>2]|0;
       $401 = ($398|0)==($400|0);
       if ($401) {
        $402 = HEAP32[$395>>2]|0;
        $403 = ((($402)) + 36|0);
        $404 = HEAP32[$403>>2]|0;
        $405 = (FUNCTION_TABLE_ii[$404 & 1023]($395)|0);
        $$0$i$i$i$i221 = $405;
       } else {
        $406 = HEAP8[$398>>0]|0;
        $407 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($406)|0);
        $$0$i$i$i$i221 = $407;
       }
       $408 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $409 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i221,$408)|0);
       if ($409) {
        HEAP32[$0>>2] = 0;
        $795 = 1;
        break;
       } else {
        $$pre$i$i$i223 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i224 = ($$pre$i$i$i223|0)==(0|0);
        $795 = $phitmp$i$i$i224;
        break;
       }
      }
     } while(0);
     $411 = ($410|0)==(0|0);
     do {
      if ($411) {
       label = 136;
      } else {
       $412 = ((($410)) + 12|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = ((($410)) + 16|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = ($413|0)==($415|0);
       if ($416) {
        $417 = HEAP32[$410>>2]|0;
        $418 = ((($417)) + 36|0);
        $419 = HEAP32[$418>>2]|0;
        $420 = (FUNCTION_TABLE_ii[$419 & 1023]($410)|0);
        $$0$i$i2$i$i227 = $420;
       } else {
        $421 = HEAP8[$413>>0]|0;
        $422 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($421)|0);
        $$0$i$i2$i$i227 = $422;
       }
       $423 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $424 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i227,$423)|0);
       if ($424) {
        HEAP32[$1>>2] = 0;
        label = 136;
        break;
       } else {
        if ($795) {
         $796 = $410;
         break;
        } else {
         break L124;
        }
       }
      }
     } while(0);
     if ((label|0) == 136) {
      label = 0;
      if ($795) {
       break;
      } else {
       $796 = 0;
      }
     }
     $425 = HEAP32[$0>>2]|0;
     $426 = ((($425)) + 12|0);
     $427 = HEAP32[$426>>2]|0;
     $428 = ((($425)) + 16|0);
     $429 = HEAP32[$428>>2]|0;
     $430 = ($427|0)==($429|0);
     if ($430) {
      $431 = HEAP32[$425>>2]|0;
      $432 = ((($431)) + 36|0);
      $433 = HEAP32[$432>>2]|0;
      $434 = (FUNCTION_TABLE_ii[$433 & 1023]($425)|0);
      $$0$i$i233 = $434;
     } else {
      $435 = HEAP8[$427>>0]|0;
      $436 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($435)|0);
      $$0$i$i233 = $436;
     }
     $437 = $$0$i$i233&255;
     $438 = HEAP8[$$sroa$0293$0$ptr>>0]|0;
     $439 = ($438<<24>>24)==($437<<24>>24);
     if (!($439)) {
      break;
     }
     $440 = HEAP32[$0>>2]|0;
     $441 = ((($440)) + 12|0);
     $442 = HEAP32[$441>>2]|0;
     $443 = ((($440)) + 16|0);
     $444 = HEAP32[$443>>2]|0;
     $445 = ($442|0)==($444|0);
     if ($445) {
      $446 = HEAP32[$440>>2]|0;
      $447 = ((($446)) + 40|0);
      $448 = HEAP32[$447>>2]|0;
      (FUNCTION_TABLE_ii[$448 & 1023]($440)|0);
     } else {
      $449 = ((($442)) + 1|0);
      HEAP32[$441>>2] = $449;
      $450 = HEAP8[$442>>0]|0;
      (__ZNSt3__211char_traitsIcE11to_int_typeEc($450)|0);
     }
     $451 = ((($$sroa$0293$0$ptr)) + 1|0);
     $$pre363 = HEAP8[$49>>0]|0;
     $$pre364 = HEAP32[$20>>2]|0;
     $$sroa$0293$0$ptr = $451;$386 = $$pre363;$390 = $$pre364;$410 = $796;
    }
    if ($48) {
     $452 = HEAP8[$49>>0]|0;
     $453 = ($452<<24>>24)<(0);
     $454 = HEAP32[$20>>2]|0;
     $455 = HEAP32[$51>>2]|0;
     $456 = $452&255;
     $457 = $453 ? $454 : $20;
     $458 = $453 ? $455 : $456;
     $459 = (($457) + ($458)|0);
     $460 = ($$sroa$0293$0$ptr|0)==($459|0);
     if ($460) {
      $$1130 = $$0129;
     } else {
      label = 148;
      break L21;
     }
    } else {
     $$1130 = $$0129;
    }
    break;
   }
   case 4:  {
    $$0124 = 0;$478 = $788;$789 = $788;
    L161: while(1) {
     $463 = HEAP32[$0>>2]|0;
     $464 = ($463|0)==(0|0);
     do {
      if ($464) {
       $797 = 1;
      } else {
       $465 = ((($463)) + 12|0);
       $466 = HEAP32[$465>>2]|0;
       $467 = ((($463)) + 16|0);
       $468 = HEAP32[$467>>2]|0;
       $469 = ($466|0)==($468|0);
       if ($469) {
        $470 = HEAP32[$463>>2]|0;
        $471 = ((($470)) + 36|0);
        $472 = HEAP32[$471>>2]|0;
        $473 = (FUNCTION_TABLE_ii[$472 & 1023]($463)|0);
        $$0$i$i$i$i237 = $473;
       } else {
        $474 = HEAP8[$466>>0]|0;
        $475 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($474)|0);
        $$0$i$i$i$i237 = $475;
       }
       $476 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $477 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i237,$476)|0);
       if ($477) {
        HEAP32[$0>>2] = 0;
        $797 = 1;
        break;
       } else {
        $$pre$i$i$i239 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i240 = ($$pre$i$i$i239|0)==(0|0);
        $797 = $phitmp$i$i$i240;
        break;
       }
      }
     } while(0);
     $479 = ($478|0)==(0|0);
     do {
      if ($479) {
       $798 = $789;
       label = 162;
      } else {
       $480 = ((($478)) + 12|0);
       $481 = HEAP32[$480>>2]|0;
       $482 = ((($478)) + 16|0);
       $483 = HEAP32[$482>>2]|0;
       $484 = ($481|0)==($483|0);
       if ($484) {
        $485 = HEAP32[$478>>2]|0;
        $486 = ((($485)) + 36|0);
        $487 = HEAP32[$486>>2]|0;
        $488 = (FUNCTION_TABLE_ii[$487 & 1023]($478)|0);
        $$0$i$i2$i$i243 = $488;
       } else {
        $489 = HEAP8[$481>>0]|0;
        $490 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($489)|0);
        $$0$i$i2$i$i243 = $490;
       }
       $491 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $492 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i243,$491)|0);
       if ($492) {
        HEAP32[$1>>2] = 0;
        $798 = 0;
        label = 162;
        break;
       } else {
        if ($797) {
         $799 = $789;$800 = $478;
         break;
        } else {
         $569 = $789;
         break L161;
        }
       }
      }
     } while(0);
     if ((label|0) == 162) {
      label = 0;
      if ($797) {
       $569 = $798;
       break;
      } else {
       $799 = $798;$800 = 0;
      }
     }
     $493 = HEAP32[$0>>2]|0;
     $494 = ((($493)) + 12|0);
     $495 = HEAP32[$494>>2]|0;
     $496 = ((($493)) + 16|0);
     $497 = HEAP32[$496>>2]|0;
     $498 = ($495|0)==($497|0);
     if ($498) {
      $499 = HEAP32[$493>>2]|0;
      $500 = ((($499)) + 36|0);
      $501 = HEAP32[$500>>2]|0;
      $502 = (FUNCTION_TABLE_ii[$501 & 1023]($493)|0);
      $$0$i$i249 = $502;
     } else {
      $503 = HEAP8[$495>>0]|0;
      $504 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($503)|0);
      $$0$i$i249 = $504;
     }
     $505 = $$0$i$i249&255;
     $506 = ($505<<24>>24)>(-1);
     if ($506) {
      $sext345 = $$0$i$i249 << 24;
      $507 = $sext345 >> 24;
      $508 = HEAP32[$40>>2]|0;
      $509 = (($508) + ($507<<1)|0);
      $510 = HEAP16[$509>>1]|0;
      $511 = $510 & 2048;
      $512 = ($511<<16>>16)==(0);
      if ($512) {
       label = 172;
      } else {
       $513 = HEAP32[$9>>2]|0;
       $514 = HEAP32[$11>>2]|0;
       $515 = ($513|0)==($514|0);
       if ($515) {
        __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8,$9,$11);
        $$pre = HEAP32[$9>>2]|0;
        $517 = $$pre;
       } else {
        $517 = $513;
       }
       $516 = ((($517)) + 1|0);
       HEAP32[$9>>2] = $516;
       HEAP8[$517>>0] = $505;
       $518 = (($$0124) + 1)|0;
       $$2126$ph = $518;
      }
     } else {
      label = 172;
     }
     if ((label|0) == 172) {
      label = 0;
      $519 = HEAP8[$45>>0]|0;
      $520 = ($519<<24>>24)<(0);
      $521 = HEAP32[$46>>2]|0;
      $522 = $519&255;
      $523 = $520 ? $521 : $522;
      $524 = ($523|0)!=(0);
      $525 = ($$0124|0)!=(0);
      $or$cond13 = $525 & $524;
      $526 = HEAP8[$18>>0]|0;
      $527 = ($526<<24>>24)==($505<<24>>24);
      $or$cond143 = $527 & $or$cond13;
      if (!($or$cond143)) {
       $569 = $799;
       break;
      }
      $528 = HEAP32[$14>>2]|0;
      $529 = HEAP32[$15>>2]|0;
      $530 = ($528|0)==($529|0);
      if ($530) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13,$14,$15);
       $$pre361 = HEAP32[$14>>2]|0;
       $532 = $$pre361;
      } else {
       $532 = $528;
      }
      $531 = ((($532)) + 4|0);
      HEAP32[$14>>2] = $531;
      HEAP32[$532>>2] = $$0124;
      $$2126$ph = 0;
     }
     $533 = HEAP32[$0>>2]|0;
     $534 = ((($533)) + 12|0);
     $535 = HEAP32[$534>>2]|0;
     $536 = ((($533)) + 16|0);
     $537 = HEAP32[$536>>2]|0;
     $538 = ($535|0)==($537|0);
     if ($538) {
      $539 = HEAP32[$533>>2]|0;
      $540 = ((($539)) + 40|0);
      $541 = HEAP32[$540>>2]|0;
      (FUNCTION_TABLE_ii[$541 & 1023]($533)|0);
     } else {
      $542 = ((($535)) + 1|0);
      HEAP32[$534>>2] = $542;
      $543 = HEAP8[$535>>0]|0;
      (__ZNSt3__211char_traitsIcE11to_int_typeEc($543)|0);
     }
     $$0124 = $$2126$ph;$478 = $800;$789 = $799;
    }
    $544 = HEAP32[$13>>2]|0;
    $545 = HEAP32[$14>>2]|0;
    $546 = ($544|0)!=($545|0);
    $547 = ($$0124|0)!=(0);
    $or$cond15 = $547 & $546;
    if ($or$cond15) {
     $548 = HEAP32[$15>>2]|0;
     $549 = ($545|0)==($548|0);
     if ($549) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13,$14,$15);
      $$pre362 = HEAP32[$14>>2]|0;
      $551 = $$pre362;
     } else {
      $551 = $545;
     }
     $550 = ((($551)) + 4|0);
     HEAP32[$14>>2] = $550;
     HEAP32[$551>>2] = $$0124;
    }
    $552 = HEAP32[$24>>2]|0;
    $553 = ($552|0)>(0);
    L213: do {
     if ($553) {
      $554 = HEAP32[$0>>2]|0;
      $555 = ($554|0)==(0|0);
      do {
       if ($555) {
        $801 = 1;
       } else {
        $556 = ((($554)) + 12|0);
        $557 = HEAP32[$556>>2]|0;
        $558 = ((($554)) + 16|0);
        $559 = HEAP32[$558>>2]|0;
        $560 = ($557|0)==($559|0);
        if ($560) {
         $561 = HEAP32[$554>>2]|0;
         $562 = ((($561)) + 36|0);
         $563 = HEAP32[$562>>2]|0;
         $564 = (FUNCTION_TABLE_ii[$563 & 1023]($554)|0);
         $$0$i$i$i$i254 = $564;
        } else {
         $565 = HEAP8[$557>>0]|0;
         $566 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($565)|0);
         $$0$i$i$i$i254 = $566;
        }
        $567 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
        $568 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i254,$567)|0);
        if ($568) {
         HEAP32[$0>>2] = 0;
         $801 = 1;
         break;
        } else {
         $$pre$i$i$i256 = HEAP32[$0>>2]|0;
         $phitmp$i$i$i257 = ($$pre$i$i$i256|0)==(0|0);
         $801 = $phitmp$i$i$i257;
         break;
        }
       }
      } while(0);
      $570 = ($569|0)==(0|0);
      do {
       if ($570) {
        label = 198;
       } else {
        $571 = ((($569)) + 12|0);
        $572 = HEAP32[$571>>2]|0;
        $573 = ((($569)) + 16|0);
        $574 = HEAP32[$573>>2]|0;
        $575 = ($572|0)==($574|0);
        if ($575) {
         $576 = HEAP32[$569>>2]|0;
         $577 = ((($576)) + 36|0);
         $578 = HEAP32[$577>>2]|0;
         $579 = (FUNCTION_TABLE_ii[$578 & 1023]($569)|0);
         $$0$i$i2$i$i260 = $579;
        } else {
         $580 = HEAP8[$572>>0]|0;
         $581 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($580)|0);
         $$0$i$i2$i$i260 = $581;
        }
        $582 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
        $583 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i260,$582)|0);
        if ($583) {
         HEAP32[$1>>2] = 0;
         label = 198;
         break;
        } else {
         if ($801) {
          $802 = $569;
          break;
         } else {
          label = 204;
          break L21;
         }
        }
       }
      } while(0);
      if ((label|0) == 198) {
       label = 0;
       if ($801) {
        label = 204;
        break L21;
       } else {
        $802 = 0;
       }
      }
      $584 = HEAP32[$0>>2]|0;
      $585 = ((($584)) + 12|0);
      $586 = HEAP32[$585>>2]|0;
      $587 = ((($584)) + 16|0);
      $588 = HEAP32[$587>>2]|0;
      $589 = ($586|0)==($588|0);
      if ($589) {
       $590 = HEAP32[$584>>2]|0;
       $591 = ((($590)) + 36|0);
       $592 = HEAP32[$591>>2]|0;
       $593 = (FUNCTION_TABLE_ii[$592 & 1023]($584)|0);
       $$0$i$i266 = $593;
      } else {
       $594 = HEAP8[$586>>0]|0;
       $595 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($594)|0);
       $$0$i$i266 = $595;
      }
      $596 = $$0$i$i266&255;
      $597 = HEAP8[$17>>0]|0;
      $598 = ($597<<24>>24)==($596<<24>>24);
      if (!($598)) {
       label = 204;
       break L21;
      }
      $601 = HEAP32[$0>>2]|0;
      $602 = ((($601)) + 12|0);
      $603 = HEAP32[$602>>2]|0;
      $604 = ((($601)) + 16|0);
      $605 = HEAP32[$604>>2]|0;
      $606 = ($603|0)==($605|0);
      if ($606) {
       $607 = HEAP32[$601>>2]|0;
       $608 = ((($607)) + 40|0);
       $609 = HEAP32[$608>>2]|0;
       (FUNCTION_TABLE_ii[$609 & 1023]($601)|0);
      } else {
       $610 = ((($603)) + 1|0);
       HEAP32[$602>>2] = $610;
       $611 = HEAP8[$603>>0]|0;
       (__ZNSt3__211char_traitsIcE11to_int_typeEc($611)|0);
      }
      $629 = $802;
      while(1) {
       $612 = HEAP32[$24>>2]|0;
       $613 = ($612|0)>(0);
       if (!($613)) {
        break L213;
       }
       $614 = HEAP32[$0>>2]|0;
       $615 = ($614|0)==(0|0);
       do {
        if ($615) {
         $803 = 1;
        } else {
         $616 = ((($614)) + 12|0);
         $617 = HEAP32[$616>>2]|0;
         $618 = ((($614)) + 16|0);
         $619 = HEAP32[$618>>2]|0;
         $620 = ($617|0)==($619|0);
         if ($620) {
          $621 = HEAP32[$614>>2]|0;
          $622 = ((($621)) + 36|0);
          $623 = HEAP32[$622>>2]|0;
          $624 = (FUNCTION_TABLE_ii[$623 & 1023]($614)|0);
          $$0$i$i$i$i269 = $624;
         } else {
          $625 = HEAP8[$617>>0]|0;
          $626 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($625)|0);
          $$0$i$i$i$i269 = $626;
         }
         $627 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
         $628 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i269,$627)|0);
         if ($628) {
          HEAP32[$0>>2] = 0;
          $803 = 1;
          break;
         } else {
          $$pre$i$i$i271 = HEAP32[$0>>2]|0;
          $phitmp$i$i$i272 = ($$pre$i$i$i271|0)==(0|0);
          $803 = $phitmp$i$i$i272;
          break;
         }
        }
       } while(0);
       $630 = ($629|0)==(0|0);
       do {
        if ($630) {
         label = 223;
        } else {
         $631 = ((($629)) + 12|0);
         $632 = HEAP32[$631>>2]|0;
         $633 = ((($629)) + 16|0);
         $634 = HEAP32[$633>>2]|0;
         $635 = ($632|0)==($634|0);
         if ($635) {
          $636 = HEAP32[$629>>2]|0;
          $637 = ((($636)) + 36|0);
          $638 = HEAP32[$637>>2]|0;
          $639 = (FUNCTION_TABLE_ii[$638 & 1023]($629)|0);
          $$0$i$i2$i$i275 = $639;
         } else {
          $640 = HEAP8[$632>>0]|0;
          $641 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($640)|0);
          $$0$i$i2$i$i275 = $641;
         }
         $642 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
         $643 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i275,$642)|0);
         if ($643) {
          HEAP32[$1>>2] = 0;
          label = 223;
          break;
         } else {
          if ($803) {
           $804 = $629;
           break;
          } else {
           label = 230;
           break L21;
          }
         }
        }
       } while(0);
       if ((label|0) == 223) {
        label = 0;
        if ($803) {
         label = 230;
         break L21;
        } else {
         $804 = 0;
        }
       }
       $644 = HEAP32[$0>>2]|0;
       $645 = ((($644)) + 12|0);
       $646 = HEAP32[$645>>2]|0;
       $647 = ((($644)) + 16|0);
       $648 = HEAP32[$647>>2]|0;
       $649 = ($646|0)==($648|0);
       if ($649) {
        $650 = HEAP32[$644>>2]|0;
        $651 = ((($650)) + 36|0);
        $652 = HEAP32[$651>>2]|0;
        $653 = (FUNCTION_TABLE_ii[$652 & 1023]($644)|0);
        $$0$i$i281 = $653;
       } else {
        $654 = HEAP8[$646>>0]|0;
        $655 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($654)|0);
        $$0$i$i281 = $655;
       }
       $656 = $$0$i$i281&255;
       $657 = ($656<<24>>24)>(-1);
       if (!($657)) {
        label = 230;
        break L21;
       }
       $sext = $$0$i$i281 << 24;
       $658 = $sext >> 24;
       $659 = HEAP32[$40>>2]|0;
       $660 = (($659) + ($658<<1)|0);
       $661 = HEAP16[$660>>1]|0;
       $662 = $661 & 2048;
       $663 = ($662<<16>>16)==(0);
       if ($663) {
        label = 230;
        break L21;
       }
       $666 = HEAP32[$9>>2]|0;
       $667 = HEAP32[$11>>2]|0;
       $668 = ($666|0)==($667|0);
       if ($668) {
        __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8,$9,$11);
       }
       $669 = HEAP32[$0>>2]|0;
       $670 = ((($669)) + 12|0);
       $671 = HEAP32[$670>>2]|0;
       $672 = ((($669)) + 16|0);
       $673 = HEAP32[$672>>2]|0;
       $674 = ($671|0)==($673|0);
       if ($674) {
        $675 = HEAP32[$669>>2]|0;
        $676 = ((($675)) + 36|0);
        $677 = HEAP32[$676>>2]|0;
        $678 = (FUNCTION_TABLE_ii[$677 & 1023]($669)|0);
        $$0$i$i284 = $678;
       } else {
        $679 = HEAP8[$671>>0]|0;
        $680 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($679)|0);
        $$0$i$i284 = $680;
       }
       $681 = $$0$i$i284&255;
       $682 = HEAP32[$9>>2]|0;
       $683 = ((($682)) + 1|0);
       HEAP32[$9>>2] = $683;
       HEAP8[$682>>0] = $681;
       $684 = HEAP32[$24>>2]|0;
       $685 = (($684) + -1)|0;
       HEAP32[$24>>2] = $685;
       $686 = HEAP32[$0>>2]|0;
       $687 = ((($686)) + 12|0);
       $688 = HEAP32[$687>>2]|0;
       $689 = ((($686)) + 16|0);
       $690 = HEAP32[$689>>2]|0;
       $691 = ($688|0)==($690|0);
       if ($691) {
        $692 = HEAP32[$686>>2]|0;
        $693 = ((($692)) + 40|0);
        $694 = HEAP32[$693>>2]|0;
        (FUNCTION_TABLE_ii[$694 & 1023]($686)|0);
       } else {
        $695 = ((($688)) + 1|0);
        HEAP32[$687>>2] = $695;
        $696 = HEAP8[$688>>0]|0;
        (__ZNSt3__211char_traitsIcE11to_int_typeEc($696)|0);
       }
       $629 = $804;
      }
     }
    } while(0);
    $697 = HEAP32[$9>>2]|0;
    $698 = HEAP32[$8>>2]|0;
    $699 = ($697|0)==($698|0);
    if ($699) {
     label = 241;
     break L21;
    } else {
     $$1130 = $$0129;
    }
    break;
   }
   default: {
    $$1130 = $$0129;
   }
   }
  } while(0);
  L289: do {
   if ((label|0) == 47) {
    label = 0;
    $140 = $788;
    while(1) {
     $125 = HEAP32[$0>>2]|0;
     $126 = ($125|0)==(0|0);
     do {
      if ($126) {
       $790 = 1;
      } else {
       $127 = ((($125)) + 12|0);
       $128 = HEAP32[$127>>2]|0;
       $129 = ((($125)) + 16|0);
       $130 = HEAP32[$129>>2]|0;
       $131 = ($128|0)==($130|0);
       if ($131) {
        $132 = HEAP32[$125>>2]|0;
        $133 = ((($132)) + 36|0);
        $134 = HEAP32[$133>>2]|0;
        $135 = (FUNCTION_TABLE_ii[$134 & 1023]($125)|0);
        $$0$i$i$i$i161 = $135;
       } else {
        $136 = HEAP8[$128>>0]|0;
        $137 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($136)|0);
        $$0$i$i$i$i161 = $137;
       }
       $138 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $139 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i161,$138)|0);
       if ($139) {
        HEAP32[$0>>2] = 0;
        $790 = 1;
        break;
       } else {
        $$pre$i$i$i163 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i164 = ($$pre$i$i$i163|0)==(0|0);
        $790 = $phitmp$i$i$i164;
        break;
       }
      }
     } while(0);
     $141 = ($140|0)==(0|0);
     do {
      if ($141) {
       label = 61;
      } else {
       $142 = ((($140)) + 12|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ((($140)) + 16|0);
       $145 = HEAP32[$144>>2]|0;
       $146 = ($143|0)==($145|0);
       if ($146) {
        $147 = HEAP32[$140>>2]|0;
        $148 = ((($147)) + 36|0);
        $149 = HEAP32[$148>>2]|0;
        $150 = (FUNCTION_TABLE_ii[$149 & 1023]($140)|0);
        $$0$i$i2$i$i167 = $150;
       } else {
        $151 = HEAP8[$143>>0]|0;
        $152 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($151)|0);
        $$0$i$i2$i$i167 = $152;
       }
       $153 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
       $154 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i167,$153)|0);
       if ($154) {
        HEAP32[$1>>2] = 0;
        label = 61;
        break;
       } else {
        if ($790) {
         $791 = $140;
         break;
        } else {
         $$1130 = $$0129;
         break L289;
        }
       }
      }
     } while(0);
     if ((label|0) == 61) {
      label = 0;
      if ($790) {
       $$1130 = $$0129;
       break L289;
      } else {
       $791 = 0;
      }
     }
     $155 = HEAP32[$0>>2]|0;
     $156 = ((($155)) + 12|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ((($155)) + 16|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($157|0)==($159|0);
     if ($160) {
      $161 = HEAP32[$155>>2]|0;
      $162 = ((($161)) + 36|0);
      $163 = HEAP32[$162>>2]|0;
      $164 = (FUNCTION_TABLE_ii[$163 & 1023]($155)|0);
      $$0$i$i173 = $164;
     } else {
      $165 = HEAP8[$157>>0]|0;
      $166 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($165)|0);
      $$0$i$i173 = $166;
     }
     $167 = $$0$i$i173&255;
     $168 = ($167<<24>>24)>(-1);
     if (!($168)) {
      $$1130 = $$0129;
      break L289;
     }
     $sext346 = $$0$i$i173 << 24;
     $169 = $sext346 >> 24;
     $170 = HEAP32[$40>>2]|0;
     $171 = (($170) + ($169<<1)|0);
     $172 = HEAP16[$171>>1]|0;
     $173 = $172 & 8192;
     $174 = ($173<<16>>16)==(0);
     if ($174) {
      $$1130 = $$0129;
      break L289;
     }
     $175 = HEAP32[$0>>2]|0;
     $176 = ((($175)) + 12|0);
     $177 = HEAP32[$176>>2]|0;
     $178 = ((($175)) + 16|0);
     $179 = HEAP32[$178>>2]|0;
     $180 = ($177|0)==($179|0);
     if ($180) {
      $181 = HEAP32[$175>>2]|0;
      $182 = ((($181)) + 40|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = (FUNCTION_TABLE_ii[$183 & 1023]($175)|0);
      $$0$i$i176 = $184;
     } else {
      $185 = ((($177)) + 1|0);
      HEAP32[$176>>2] = $185;
      $186 = HEAP8[$177>>0]|0;
      $187 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($186)|0);
      $$0$i$i176 = $187;
     }
     $188 = $$0$i$i176&255;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23,$188);
     $140 = $791;
    }
   }
  } while(0);
  $702 = (($$0131) + 1)|0;
  $$0129 = $$1130;$$0131 = $702;
 }
 L326: do {
  if ((label|0) == 45) {
   $122 = HEAP32[$5>>2]|0;
   $123 = $122 | 4;
   HEAP32[$5>>2] = $123;
   $$10 = 0;
  }
  else if ((label|0) == 105) {
   $322 = HEAP32[$5>>2]|0;
   $323 = $322 | 4;
   HEAP32[$5>>2] = $323;
   $$10 = 0;
  }
  else if ((label|0) == 148) {
   $461 = HEAP32[$5>>2]|0;
   $462 = $461 | 4;
   HEAP32[$5>>2] = $462;
   $$10 = 0;
  }
  else if ((label|0) == 204) {
   $599 = HEAP32[$5>>2]|0;
   $600 = $599 | 4;
   HEAP32[$5>>2] = $600;
   $$10 = 0;
  }
  else if ((label|0) == 230) {
   $664 = HEAP32[$5>>2]|0;
   $665 = $664 | 4;
   HEAP32[$5>>2] = $665;
   $$10 = 0;
  }
  else if ((label|0) == 241) {
   $700 = HEAP32[$5>>2]|0;
   $701 = $700 | 4;
   HEAP32[$5>>2] = $701;
   $$10 = 0;
  }
  else if ((label|0) == 243) {
   $703 = ($$0129|0)==(0|0);
   L328: do {
    if (!($703)) {
     $704 = ((($$0129)) + 11|0);
     $705 = ((($$0129)) + 4|0);
     $$0 = 1;
     L330: while(1) {
      $706 = HEAP8[$704>>0]|0;
      $707 = ($706<<24>>24)<(0);
      if ($707) {
       $708 = HEAP32[$705>>2]|0;
       $711 = $708;
      } else {
       $709 = $706&255;
       $711 = $709;
      }
      $710 = ($$0>>>0)<($711>>>0);
      if (!($710)) {
       break L328;
      }
      $712 = HEAP32[$0>>2]|0;
      $713 = ($712|0)==(0|0);
      do {
       if ($713) {
        $805 = 1;
       } else {
        $714 = ((($712)) + 12|0);
        $715 = HEAP32[$714>>2]|0;
        $716 = ((($712)) + 16|0);
        $717 = HEAP32[$716>>2]|0;
        $718 = ($715|0)==($717|0);
        if ($718) {
         $719 = HEAP32[$712>>2]|0;
         $720 = ((($719)) + 36|0);
         $721 = HEAP32[$720>>2]|0;
         $722 = (FUNCTION_TABLE_ii[$721 & 1023]($712)|0);
         $$0$i$i$i$i205 = $722;
        } else {
         $723 = HEAP8[$715>>0]|0;
         $724 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($723)|0);
         $$0$i$i$i$i205 = $724;
        }
        $725 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
        $726 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i205,$725)|0);
        if ($726) {
         HEAP32[$0>>2] = 0;
         $805 = 1;
         break;
        } else {
         $$pre$i$i$i207 = HEAP32[$0>>2]|0;
         $phitmp$i$i$i208 = ($$pre$i$i$i207|0)==(0|0);
         $805 = $phitmp$i$i$i208;
         break;
        }
       }
      } while(0);
      $727 = HEAP32[$1>>2]|0;
      $728 = ($727|0)==(0|0);
      do {
       if ($728) {
        label = 262;
       } else {
        $729 = ((($727)) + 12|0);
        $730 = HEAP32[$729>>2]|0;
        $731 = ((($727)) + 16|0);
        $732 = HEAP32[$731>>2]|0;
        $733 = ($730|0)==($732|0);
        if ($733) {
         $734 = HEAP32[$727>>2]|0;
         $735 = ((($734)) + 36|0);
         $736 = HEAP32[$735>>2]|0;
         $737 = (FUNCTION_TABLE_ii[$736 & 1023]($727)|0);
         $$0$i$i2$i$i211 = $737;
        } else {
         $738 = HEAP8[$730>>0]|0;
         $739 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($738)|0);
         $$0$i$i2$i$i211 = $739;
        }
        $740 = (__ZNSt3__211char_traitsIcE3eofEv()|0);
        $741 = (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i211,$740)|0);
        if ($741) {
         HEAP32[$1>>2] = 0;
         label = 262;
         break;
        } else {
         if ($805) {
          break;
         } else {
          break L330;
         }
        }
       }
      } while(0);
      if ((label|0) == 262) {
       label = 0;
       if ($805) {
        break;
       }
      }
      $742 = HEAP32[$0>>2]|0;
      $743 = ((($742)) + 12|0);
      $744 = HEAP32[$743>>2]|0;
      $745 = ((($742)) + 16|0);
      $746 = HEAP32[$745>>2]|0;
      $747 = ($744|0)==($746|0);
      if ($747) {
       $748 = HEAP32[$742>>2]|0;
       $749 = ((($748)) + 36|0);
       $750 = HEAP32[$749>>2]|0;
       $751 = (FUNCTION_TABLE_ii[$750 & 1023]($742)|0);
       $$0$i$i202 = $751;
      } else {
       $752 = HEAP8[$744>>0]|0;
       $753 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($752)|0);
       $$0$i$i202 = $753;
      }
      $754 = $$0$i$i202&255;
      $755 = HEAP8[$704>>0]|0;
      $756 = ($755<<24>>24)<(0);
      if ($756) {
       $757 = HEAP32[$$0129>>2]|0;
       $759 = $757;
      } else {
       $759 = $$0129;
      }
      $758 = (($759) + ($$0)|0);
      $760 = HEAP8[$758>>0]|0;
      $761 = ($760<<24>>24)==($754<<24>>24);
      if (!($761)) {
       break;
      }
      $764 = (($$0) + 1)|0;
      $765 = HEAP32[$0>>2]|0;
      $766 = ((($765)) + 12|0);
      $767 = HEAP32[$766>>2]|0;
      $768 = ((($765)) + 16|0);
      $769 = HEAP32[$768>>2]|0;
      $770 = ($767|0)==($769|0);
      if ($770) {
       $771 = HEAP32[$765>>2]|0;
       $772 = ((($771)) + 40|0);
       $773 = HEAP32[$772>>2]|0;
       (FUNCTION_TABLE_ii[$773 & 1023]($765)|0);
      } else {
       $774 = ((($767)) + 1|0);
       HEAP32[$766>>2] = $774;
       $775 = HEAP8[$767>>0]|0;
       (__ZNSt3__211char_traitsIcE11to_int_typeEc($775)|0);
      }
      $$0 = $764;
     }
     $762 = HEAP32[$5>>2]|0;
     $763 = $762 | 4;
     HEAP32[$5>>2] = $763;
     $$10 = 0;
     break L326;
    }
   } while(0);
   $776 = HEAP32[$13>>2]|0;
   $777 = HEAP32[$14>>2]|0;
   $778 = ($776|0)==($777|0);
   if ($778) {
    $$10 = 1;
   } else {
    HEAP32[$25>>2] = 0;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19,$776,$777,$25);
    $779 = HEAP32[$25>>2]|0;
    $780 = ($779|0)==(0);
    if ($780) {
     $$10 = 1;
     break;
    } else {
     $781 = HEAP32[$5>>2]|0;
     $782 = $781 | 4;
     HEAP32[$5>>2] = $782;
     $$10 = 0;
     break;
    }
   }
  }
 } while(0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $783 = HEAP32[$13>>2]|0;
 HEAP32[$13>>2] = 0;
 $784 = ($783|0)==(0|0);
 if (!($784)) {
  $785 = ((($13)) + 4|0);
  $786 = HEAP32[$785>>2]|0;
  FUNCTION_TABLE_vi[$786 & 1023]($783);
 }
 STACKTOP = sp;return ($$10|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$034 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep38 = 0, $scevgep39 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = sp;
 $5 = sp + 12|0;
 $6 = ((($0)) + 11|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ($7<<24>>24)<(0);
 if ($8) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $13 & 2147483647;
  $phitmp$i = (($14) + -1)|0;
  $36 = $11;$37 = $phitmp$i;
 } else {
  $9 = $7&255;
  $36 = $9;$37 = 10;
 }
 $15 = $2;
 $16 = (($15) - ($3))|0;
 $17 = ($16|0)==(0);
 do {
  if (!($17)) {
   if ($8) {
    $18 = HEAP32[$0>>2]|0;
    $19 = ((($0)) + 4|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $18;$24 = $20;
   } else {
    $21 = $7&255;
    $23 = $0;$24 = $21;
   }
   $22 = (($23) + ($24)|0);
   $25 = (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($1,$23,$22)|0);
   if ($25) {
    ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($4,$1,$2);
    $26 = ((($4)) + 11|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = ($27<<24>>24)<(0);
    $29 = HEAP32[$4>>2]|0;
    $30 = ((($4)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $27&255;
    $33 = $28 ? $29 : $4;
    $34 = $28 ? $31 : $32;
    (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($0,$33,$34)|0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    break;
   }
   $35 = (($37) - ($36))|0;
   $38 = ($35>>>0)<($16>>>0);
   if ($38) {
    $39 = (($36) + ($16))|0;
    $40 = (($39) - ($37))|0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0,$37,$40,$36,$36,0,0);
   }
   $41 = HEAP8[$6>>0]|0;
   $42 = ($41<<24>>24)<(0);
   if ($42) {
    $43 = HEAP32[$0>>2]|0;
    $45 = $43;
   } else {
    $45 = $0;
   }
   $44 = (($45) + ($36)|0);
   $46 = (($36) - ($3))|0;
   $scevgep = (($2) + ($46)|0);
   $scevgep38 = $scevgep;
   $$0 = $44;$$034 = $1;
   while(1) {
    $47 = ($$034|0)==($2|0);
    if ($47) {
     break;
    }
    __ZNSt3__211char_traitsIcE6assignERcRKc($$0,$$034);
    $48 = ((($$0)) + 1|0);
    $49 = ((($$034)) + 1|0);
    $$0 = $48;$$034 = $49;
   }
   $scevgep39 = (($45) + ($scevgep38)|0);
   HEAP8[$5>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($scevgep39,$5);
   $50 = (($36) + ($16))|0;
   $51 = HEAP8[$6>>0]|0;
   $52 = ($51<<24>>24)<(0);
   if ($52) {
    $53 = ((($0)) + 4|0);
    HEAP32[$53>>2] = $50;
    break;
   } else {
    $54 = $50&255;
    HEAP8[$6>>0] = $54;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)<=($0>>>0);
 $4 = ($0>>>0)<($2>>>0);
 $spec$select = $3 & $4;
 return ($spec$select|0);
}
function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0$i$i$i = 0, $$0$i$i$i43 = 0, $$0$i$i$i51 = 0, $$0$i$i$i59 = 0, $$0$i$i$i67 = 0, $$0$i$i$i75 = 0, $$0$i$i$i83 = 0, $$0$i$i$i91 = 0, $$pr$i$i$i = 0, $$pr$i$i$i39 = 0, $$pr$i$i$i47 = 0, $$pr$i$i$i55 = 0, $$pr$i$i$i63 = 0, $$pr$i$i$i71 = 0, $$pr$i$i$i79 = 0, $$pr$i$i$i87 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i44 = 0, $exitcond$i$i$i52 = 0, $exitcond$i$i$i60 = 0;
 var $exitcond$i$i$i68 = 0, $exitcond$i$i$i76 = 0, $exitcond$i$i$i84 = 0, $exitcond$i$i$i92 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $10 = sp + 119|0;
 $11 = sp + 118|0;
 $12 = sp + 117|0;
 $13 = sp + 116|0;
 $14 = sp + 115|0;
 $15 = sp + 114|0;
 $16 = sp + 113|0;
 $17 = sp + 112|0;
 $18 = sp + 111|0;
 $19 = sp + 110|0;
 $20 = sp + 109|0;
 $21 = sp + 108|0;
 $22 = sp + 107|0;
 $23 = sp + 106|0;
 $24 = sp + 105|0;
 $25 = sp + 104|0;
 $26 = sp + 100|0;
 $27 = sp + 88|0;
 $28 = sp + 76|0;
 $29 = sp + 64|0;
 $30 = sp + 52|0;
 $31 = sp + 48|0;
 $32 = sp + 36|0;
 $33 = sp + 24|0;
 $34 = sp + 12|0;
 $35 = sp;
 if ($0) {
  $36 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,36956)|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($37)) + 44|0);
  $39 = HEAP32[$38>>2]|0;
  FUNCTION_TABLE_vii[$39 & 1023]($26,$36);
  $40 = HEAP32[$26>>2]|0;
  HEAP8[$2>>0]=$40&255;HEAP8[$2+1>>0]=($40>>8)&255;HEAP8[$2+2>>0]=($40>>16)&255;HEAP8[$2+3>>0]=$40>>24;
  $41 = HEAP32[$36>>2]|0;
  $42 = ((($41)) + 32|0);
  $43 = HEAP32[$42>>2]|0;
  FUNCTION_TABLE_vii[$43 & 1023]($27,$36);
  $44 = ((($8)) + 11|0);
  $45 = HEAP8[$44>>0]|0;
  $46 = ($45<<24>>24)<(0);
  if ($46) {
   $47 = HEAP32[$8>>2]|0;
   HEAP8[$24>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($47,$24);
   $48 = ((($8)) + 4|0);
   HEAP32[$48>>2] = 0;
   $$pr$i$i$i = HEAP8[$44>>0]|0;
   $49 = ($$pr$i$i$i<<24>>24)<(0);
   if ($49) {
    $50 = HEAP32[$8>>2]|0;
    $51 = ((($8)) + 8|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = $52 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($50,$53);
    HEAP32[$51>>2] = 0;
   }
  } else {
   HEAP8[$25>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8,$25);
   HEAP8[$44>>0] = 0;
  }
  ;HEAP32[$8>>2]=HEAP32[$27>>2]|0;HEAP32[$8+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$27+8>>2]|0;
  $$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $54 = (($27) + ($$0$i$i$i<<2)|0);
   HEAP32[$54>>2] = 0;
   $55 = (($$0$i$i$i) + 1)|0;
   $$0$i$i$i = $55;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
  $56 = HEAP32[$36>>2]|0;
  $57 = ((($56)) + 28|0);
  $58 = HEAP32[$57>>2]|0;
  FUNCTION_TABLE_vii[$58 & 1023]($28,$36);
  $59 = ((($7)) + 11|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = ($60<<24>>24)<(0);
  if ($61) {
   $62 = HEAP32[$7>>2]|0;
   HEAP8[$22>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($62,$22);
   $63 = ((($7)) + 4|0);
   HEAP32[$63>>2] = 0;
   $$pr$i$i$i39 = HEAP8[$59>>0]|0;
   $64 = ($$pr$i$i$i39<<24>>24)<(0);
   if ($64) {
    $65 = HEAP32[$7>>2]|0;
    $66 = ((($7)) + 8|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = $67 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($65,$68);
    HEAP32[$66>>2] = 0;
   }
  } else {
   HEAP8[$23>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7,$23);
   HEAP8[$59>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$28>>2]|0;HEAP32[$7+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$28+8>>2]|0;
  $$0$i$i$i43 = 0;
  while(1) {
   $exitcond$i$i$i44 = ($$0$i$i$i43|0)==(3);
   if ($exitcond$i$i$i44) {
    break;
   }
   $69 = (($28) + ($$0$i$i$i43<<2)|0);
   HEAP32[$69>>2] = 0;
   $70 = (($$0$i$i$i43) + 1)|0;
   $$0$i$i$i43 = $70;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
  $71 = HEAP32[$36>>2]|0;
  $72 = ((($71)) + 12|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (FUNCTION_TABLE_ii[$73 & 1023]($36)|0);
  HEAP8[$3>>0] = $74;
  $75 = HEAP32[$36>>2]|0;
  $76 = ((($75)) + 16|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = (FUNCTION_TABLE_ii[$77 & 1023]($36)|0);
  HEAP8[$4>>0] = $78;
  $79 = HEAP32[$36>>2]|0;
  $80 = ((($79)) + 20|0);
  $81 = HEAP32[$80>>2]|0;
  FUNCTION_TABLE_vii[$81 & 1023]($29,$36);
  $82 = ((($5)) + 11|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = ($83<<24>>24)<(0);
  if ($84) {
   $85 = HEAP32[$5>>2]|0;
   HEAP8[$20>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($85,$20);
   $86 = ((($5)) + 4|0);
   HEAP32[$86>>2] = 0;
   $$pr$i$i$i47 = HEAP8[$82>>0]|0;
   $87 = ($$pr$i$i$i47<<24>>24)<(0);
   if ($87) {
    $88 = HEAP32[$5>>2]|0;
    $89 = ((($5)) + 8|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = $90 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($88,$91);
    HEAP32[$89>>2] = 0;
   }
  } else {
   HEAP8[$21>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5,$21);
   HEAP8[$82>>0] = 0;
  }
  ;HEAP32[$5>>2]=HEAP32[$29>>2]|0;HEAP32[$5+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$29+8>>2]|0;
  $$0$i$i$i51 = 0;
  while(1) {
   $exitcond$i$i$i52 = ($$0$i$i$i51|0)==(3);
   if ($exitcond$i$i$i52) {
    break;
   }
   $92 = (($29) + ($$0$i$i$i51<<2)|0);
   HEAP32[$92>>2] = 0;
   $93 = (($$0$i$i$i51) + 1)|0;
   $$0$i$i$i51 = $93;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
  $94 = HEAP32[$36>>2]|0;
  $95 = ((($94)) + 24|0);
  $96 = HEAP32[$95>>2]|0;
  FUNCTION_TABLE_vii[$96 & 1023]($30,$36);
  $97 = ((($6)) + 11|0);
  $98 = HEAP8[$97>>0]|0;
  $99 = ($98<<24>>24)<(0);
  if ($99) {
   $100 = HEAP32[$6>>2]|0;
   HEAP8[$18>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($100,$18);
   $101 = ((($6)) + 4|0);
   HEAP32[$101>>2] = 0;
   $$pr$i$i$i55 = HEAP8[$97>>0]|0;
   $102 = ($$pr$i$i$i55<<24>>24)<(0);
   if ($102) {
    $103 = HEAP32[$6>>2]|0;
    $104 = ((($6)) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = $105 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($103,$106);
    HEAP32[$104>>2] = 0;
   }
  } else {
   HEAP8[$19>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$19);
   HEAP8[$97>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$30>>2]|0;HEAP32[$6+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$30+8>>2]|0;
  $$0$i$i$i59 = 0;
  while(1) {
   $exitcond$i$i$i60 = ($$0$i$i$i59|0)==(3);
   if ($exitcond$i$i$i60) {
    break;
   }
   $107 = (($30) + ($$0$i$i$i59<<2)|0);
   HEAP32[$107>>2] = 0;
   $108 = (($$0$i$i$i59) + 1)|0;
   $$0$i$i$i59 = $108;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
  $109 = HEAP32[$36>>2]|0;
  $110 = ((($109)) + 36|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (FUNCTION_TABLE_ii[$111 & 1023]($36)|0);
  $storemerge = $112;
 } else {
  $113 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,36948)|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = ((($114)) + 44|0);
  $116 = HEAP32[$115>>2]|0;
  FUNCTION_TABLE_vii[$116 & 1023]($31,$113);
  $117 = HEAP32[$31>>2]|0;
  HEAP8[$2>>0]=$117&255;HEAP8[$2+1>>0]=($117>>8)&255;HEAP8[$2+2>>0]=($117>>16)&255;HEAP8[$2+3>>0]=$117>>24;
  $118 = HEAP32[$113>>2]|0;
  $119 = ((($118)) + 32|0);
  $120 = HEAP32[$119>>2]|0;
  FUNCTION_TABLE_vii[$120 & 1023]($32,$113);
  $121 = ((($8)) + 11|0);
  $122 = HEAP8[$121>>0]|0;
  $123 = ($122<<24>>24)<(0);
  if ($123) {
   $124 = HEAP32[$8>>2]|0;
   HEAP8[$16>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($124,$16);
   $125 = ((($8)) + 4|0);
   HEAP32[$125>>2] = 0;
   $$pr$i$i$i63 = HEAP8[$121>>0]|0;
   $126 = ($$pr$i$i$i63<<24>>24)<(0);
   if ($126) {
    $127 = HEAP32[$8>>2]|0;
    $128 = ((($8)) + 8|0);
    $129 = HEAP32[$128>>2]|0;
    $130 = $129 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($127,$130);
    HEAP32[$128>>2] = 0;
   }
  } else {
   HEAP8[$17>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8,$17);
   HEAP8[$121>>0] = 0;
  }
  ;HEAP32[$8>>2]=HEAP32[$32>>2]|0;HEAP32[$8+4>>2]=HEAP32[$32+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$32+8>>2]|0;
  $$0$i$i$i67 = 0;
  while(1) {
   $exitcond$i$i$i68 = ($$0$i$i$i67|0)==(3);
   if ($exitcond$i$i$i68) {
    break;
   }
   $131 = (($32) + ($$0$i$i$i67<<2)|0);
   HEAP32[$131>>2] = 0;
   $132 = (($$0$i$i$i67) + 1)|0;
   $$0$i$i$i67 = $132;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
  $133 = HEAP32[$113>>2]|0;
  $134 = ((($133)) + 28|0);
  $135 = HEAP32[$134>>2]|0;
  FUNCTION_TABLE_vii[$135 & 1023]($33,$113);
  $136 = ((($7)) + 11|0);
  $137 = HEAP8[$136>>0]|0;
  $138 = ($137<<24>>24)<(0);
  if ($138) {
   $139 = HEAP32[$7>>2]|0;
   HEAP8[$14>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($139,$14);
   $140 = ((($7)) + 4|0);
   HEAP32[$140>>2] = 0;
   $$pr$i$i$i71 = HEAP8[$136>>0]|0;
   $141 = ($$pr$i$i$i71<<24>>24)<(0);
   if ($141) {
    $142 = HEAP32[$7>>2]|0;
    $143 = ((($7)) + 8|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = $144 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($142,$145);
    HEAP32[$143>>2] = 0;
   }
  } else {
   HEAP8[$15>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7,$15);
   HEAP8[$136>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$33>>2]|0;HEAP32[$7+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$33+8>>2]|0;
  $$0$i$i$i75 = 0;
  while(1) {
   $exitcond$i$i$i76 = ($$0$i$i$i75|0)==(3);
   if ($exitcond$i$i$i76) {
    break;
   }
   $146 = (($33) + ($$0$i$i$i75<<2)|0);
   HEAP32[$146>>2] = 0;
   $147 = (($$0$i$i$i75) + 1)|0;
   $$0$i$i$i75 = $147;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
  $148 = HEAP32[$113>>2]|0;
  $149 = ((($148)) + 12|0);
  $150 = HEAP32[$149>>2]|0;
  $151 = (FUNCTION_TABLE_ii[$150 & 1023]($113)|0);
  HEAP8[$3>>0] = $151;
  $152 = HEAP32[$113>>2]|0;
  $153 = ((($152)) + 16|0);
  $154 = HEAP32[$153>>2]|0;
  $155 = (FUNCTION_TABLE_ii[$154 & 1023]($113)|0);
  HEAP8[$4>>0] = $155;
  $156 = HEAP32[$113>>2]|0;
  $157 = ((($156)) + 20|0);
  $158 = HEAP32[$157>>2]|0;
  FUNCTION_TABLE_vii[$158 & 1023]($34,$113);
  $159 = ((($5)) + 11|0);
  $160 = HEAP8[$159>>0]|0;
  $161 = ($160<<24>>24)<(0);
  if ($161) {
   $162 = HEAP32[$5>>2]|0;
   HEAP8[$12>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($162,$12);
   $163 = ((($5)) + 4|0);
   HEAP32[$163>>2] = 0;
   $$pr$i$i$i79 = HEAP8[$159>>0]|0;
   $164 = ($$pr$i$i$i79<<24>>24)<(0);
   if ($164) {
    $165 = HEAP32[$5>>2]|0;
    $166 = ((($5)) + 8|0);
    $167 = HEAP32[$166>>2]|0;
    $168 = $167 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($165,$168);
    HEAP32[$166>>2] = 0;
   }
  } else {
   HEAP8[$13>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5,$13);
   HEAP8[$159>>0] = 0;
  }
  ;HEAP32[$5>>2]=HEAP32[$34>>2]|0;HEAP32[$5+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$34+8>>2]|0;
  $$0$i$i$i83 = 0;
  while(1) {
   $exitcond$i$i$i84 = ($$0$i$i$i83|0)==(3);
   if ($exitcond$i$i$i84) {
    break;
   }
   $169 = (($34) + ($$0$i$i$i83<<2)|0);
   HEAP32[$169>>2] = 0;
   $170 = (($$0$i$i$i83) + 1)|0;
   $$0$i$i$i83 = $170;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
  $171 = HEAP32[$113>>2]|0;
  $172 = ((($171)) + 24|0);
  $173 = HEAP32[$172>>2]|0;
  FUNCTION_TABLE_vii[$173 & 1023]($35,$113);
  $174 = ((($6)) + 11|0);
  $175 = HEAP8[$174>>0]|0;
  $176 = ($175<<24>>24)<(0);
  if ($176) {
   $177 = HEAP32[$6>>2]|0;
   HEAP8[$10>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($177,$10);
   $178 = ((($6)) + 4|0);
   HEAP32[$178>>2] = 0;
   $$pr$i$i$i87 = HEAP8[$174>>0]|0;
   $179 = ($$pr$i$i$i87<<24>>24)<(0);
   if ($179) {
    $180 = HEAP32[$6>>2]|0;
    $181 = ((($6)) + 8|0);
    $182 = HEAP32[$181>>2]|0;
    $183 = $182 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($180,$183);
    HEAP32[$181>>2] = 0;
   }
  } else {
   HEAP8[$11>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$11);
   HEAP8[$174>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$35>>2]|0;HEAP32[$6+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$35+8>>2]|0;
  $$0$i$i$i91 = 0;
  while(1) {
   $exitcond$i$i$i92 = ($$0$i$i$i91|0)==(3);
   if ($exitcond$i$i$i92) {
    break;
   }
   $184 = (($35) + ($$0$i$i$i91<<2)|0);
   HEAP32[$184>>2] = 0;
   $185 = (($$0$i$i$i91) + 1)|0;
   $$0$i$i$i91 = $185;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
  $186 = HEAP32[$113>>2]|0;
  $187 = ((($186)) + 36|0);
  $188 = HEAP32[$187>>2]|0;
  $189 = (FUNCTION_TABLE_ii[$188 & 1023]($113)|0);
  $storemerge = $189;
 }
 HEAP32[$9>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pr = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select35 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(661|0);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7;
 $9 = (($6) - ($8))|0;
 $10 = ($9>>>0)<(2147483647);
 $11 = $9 << 1;
 $12 = ($11|0)==(0);
 $spec$select = $12 ? 1 : $11;
 $13 = $10 ? $spec$select : -1;
 $14 = HEAP32[$1>>2]|0;
 $15 = (($14) - ($8))|0;
 $spec$select35 = $5 ? $7 : 0;
 $16 = (_realloc($spec$select35,$13)|0);
 $17 = ($16|0)==(0|0);
 if ($17) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($5) {
  $18 = $16;
  HEAP32[$0>>2] = $18;
  $23 = $16;
 } else {
  $$pr = HEAP32[$0>>2]|0;
  $19 = $16;
  HEAP32[$0>>2] = $19;
  $20 = ($$pr|0)==(0|0);
  if ($20) {
   $23 = $16;
  } else {
   $21 = HEAP32[$3>>2]|0;
   FUNCTION_TABLE_vi[$21 & 1023]($$pr);
   $$pre = HEAP32[$0>>2]|0;
   $23 = $$pre;
  }
 }
 HEAP32[$3>>2] = (662);
 $22 = (($23) + ($15)|0);
 HEAP32[$1>>2] = $22;
 $24 = HEAP32[$0>>2]|0;
 $25 = (($24) + ($13)|0);
 HEAP32[$2>>2] = $25;
 return;
}
function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pr = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select35 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(661|0);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7;
 $9 = (($6) - ($8))|0;
 $10 = ($9>>>0)<(2147483647);
 $11 = $9 << 1;
 $12 = ($11|0)==(0);
 $spec$select = $12 ? 4 : $11;
 $13 = $10 ? $spec$select : -1;
 $14 = HEAP32[$1>>2]|0;
 $15 = (($14) - ($8))|0;
 $16 = $15 >> 2;
 $spec$select35 = $5 ? $7 : 0;
 $17 = (_realloc($spec$select35,$13)|0);
 $18 = ($17|0)==(0|0);
 if ($18) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($5) {
  $19 = $17;
  HEAP32[$0>>2] = $19;
  $25 = $17;
 } else {
  $$pr = HEAP32[$0>>2]|0;
  $20 = $17;
  HEAP32[$0>>2] = $20;
  $21 = ($$pr|0)==(0|0);
  if ($21) {
   $25 = $17;
  } else {
   $22 = HEAP32[$3>>2]|0;
   FUNCTION_TABLE_vi[$22 & 1023]($$pr);
   $$pre = HEAP32[$0>>2]|0;
   $25 = $$pre;
  }
 }
 HEAP32[$3>>2] = (662);
 $23 = $13 >>> 2;
 $24 = (($25) + ($16<<2)|0);
 HEAP32[$1>>2] = $24;
 $26 = HEAP32[$0>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$2>>2] = $27;
 return;
}
function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$pre = 0, $$pre$i$i$i = 0, $$sroa$0$0$copyload = 0, $$sroa$027$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(592|0);
 $$byval_copy = sp + 584|0;
 $vararg_buffer = sp + 560|0;
 $7 = sp + 160|0;
 $8 = sp + 576|0;
 $9 = sp + 572|0;
 $10 = sp + 568|0;
 $11 = sp + 588|0;
 $12 = sp + 564|0;
 $13 = sp + 112|0;
 $14 = sp;
 $15 = $7;
 HEAP32[$8>>2] = $15;
 $16 = ((($8)) + 4|0);
 HEAP32[$16>>2] = (661);
 $17 = ((($7)) + 400|0);
 __ZNKSt3__28ios_base6getlocEv($10,$4);
 $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($10,36756)|0);
 HEAP8[$11>>0] = 0;
 $19 = HEAP32[$2>>2]|0;
 HEAP32[$12>>2] = $19;
 $20 = ((($4)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$12>>2]|0;
 $22 = (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1,$$byval_copy,$3,$10,$21,$5,$11,$18,$8,$9,$17)|0);
 if ($22) {
  $23 = HEAP32[$18>>2]|0;
  $24 = ((($23)) + 48|0);
  $25 = HEAP32[$24>>2]|0;
  (FUNCTION_TABLE_iiiii[$25 & 511]($18,24592,(24602),$13)|0);
  $26 = HEAP32[$9>>2]|0;
  $27 = HEAP32[$8>>2]|0;
  $28 = (($26) - ($27))|0;
  $29 = ($28|0)>(392);
  $30 = $27;
  $31 = $26;
  if ($29) {
   $32 = $28 >>> 2;
   $33 = (($32) + 2)|0;
   $34 = (_malloc($33)|0);
   $35 = $34;
   $36 = ($34|0)==(0|0);
   if ($36) {
    __ZSt17__throw_bad_allocv();
    // unreachable;
   } else {
    $$025 = $34;$$sroa$027$0 = $35;
   }
  } else {
   $$025 = $14;$$sroa$027$0 = 0;
  }
  $37 = HEAP8[$11>>0]|0;
  $38 = ($37<<24>>24)==(0);
  if ($38) {
   $$1 = $$025;
  } else {
   $39 = ((($$025)) + 1|0);
   HEAP8[$$025>>0] = 45;
   $$1 = $39;
  }
  $40 = ((($13)) + 40|0);
  $41 = $13;
  $$0 = $30;$$2 = $$1;$43 = $31;
  while(1) {
   $42 = ($$0>>>0)<($43>>>0);
   if (!($42)) {
    break;
   }
   $46 = HEAP32[$$0>>2]|0;
   $$0$i = $13;
   while(1) {
    $47 = ($$0$i|0)==($40|0);
    if ($47) {
     $$0$lcssa$i = $40;
     break;
    }
    $48 = HEAP32[$$0$i>>2]|0;
    $49 = ($48|0)==($46|0);
    if ($49) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $50 = ((($$0$i)) + 4|0);
    $$0$i = $50;
   }
   $51 = $$0$lcssa$i;
   $52 = (($51) - ($41))|0;
   $53 = $52 >> 2;
   $54 = (24592 + ($53)|0);
   $55 = HEAP8[$54>>0]|0;
   HEAP8[$$2>>0] = $55;
   $56 = ((($$0)) + 4|0);
   $57 = ((($$2)) + 1|0);
   $$pre = HEAP32[$9>>2]|0;
   $$0 = $56;$$2 = $57;$43 = $$pre;
  }
  HEAP8[$$2>>0] = 0;
  HEAP32[$vararg_buffer>>2] = $6;
  $44 = (_sscanf($14,24493,$vararg_buffer)|0);
  $45 = ($44|0)==(1);
  if (!($45)) {
   __ZNSt3__221__throw_runtime_errorEPKc(0);
   // unreachable;
  }
  $58 = ($$sroa$027$0|0)==(0);
  if (!($58)) {
   $59 = $$sroa$027$0;
   _free($59);
  }
 }
 $60 = HEAP32[$1>>2]|0;
 $61 = ($60|0)==(0|0);
 do {
  if ($61) {
   $96 = 1;
  } else {
   $62 = ((($60)) + 12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = ((($60)) + 16|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($63|0)==($65|0);
   if ($66) {
    $67 = HEAP32[$60>>2]|0;
    $68 = ((($67)) + 36|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = (FUNCTION_TABLE_ii[$69 & 1023]($60)|0);
    $$0$i$i$i$i = $70;
   } else {
    $71 = HEAP32[$63>>2]|0;
    $72 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($71)|0);
    $$0$i$i$i$i = $72;
   }
   $73 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $74 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$73)|0);
   if ($74) {
    HEAP32[$1>>2] = 0;
    $96 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$1>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $96 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $75 = HEAP32[$2>>2]|0;
 $76 = ($75|0)==(0|0);
 do {
  if ($76) {
   label = 32;
  } else {
   $77 = ((($75)) + 12|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = ((($75)) + 16|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = ($78|0)==($80|0);
   if ($81) {
    $82 = HEAP32[$75>>2]|0;
    $83 = ((($82)) + 36|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = (FUNCTION_TABLE_ii[$84 & 1023]($75)|0);
    $$0$i$i2$i$i = $85;
   } else {
    $86 = HEAP32[$78>>2]|0;
    $87 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($86)|0);
    $$0$i$i2$i$i = $87;
   }
   $88 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $89 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$88)|0);
   if ($89) {
    HEAP32[$2>>2] = 0;
    label = 32;
    break;
   } else {
    if ($96) {
     break;
    } else {
     label = 34;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 32) {
  if ($96) {
   label = 34;
  }
 }
 if ((label|0) == 34) {
  $90 = HEAP32[$5>>2]|0;
  $91 = $90 | 2;
  HEAP32[$5>>2] = $91;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__26localeD2Ev($10);
 $92 = HEAP32[$8>>2]|0;
 HEAP32[$8>>2] = 0;
 $93 = ($92|0)==(0|0);
 if (!($93)) {
  $94 = ((($8)) + 4|0);
  $95 = HEAP32[$94>>2]|0;
  FUNCTION_TABLE_vi[$95 & 1023]($92);
 }
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$pre$i$i$i = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $9 = 0, $phitmp$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(448|0);
 $$byval_copy = sp + 432|0;
 $7 = sp + 428|0;
 $8 = sp + 424|0;
 $9 = sp;
 $10 = sp + 416|0;
 $11 = sp + 408|0;
 $12 = sp + 404|0;
 $13 = sp + 436|0;
 $14 = sp + 400|0;
 $15 = $9;
 HEAP32[$10>>2] = $15;
 $16 = ((($10)) + 4|0);
 HEAP32[$16>>2] = (661);
 $17 = ((($9)) + 400|0);
 __ZNKSt3__28ios_base6getlocEv($12,$4);
 $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($12,36756)|0);
 HEAP8[$13>>0] = 0;
 $19 = HEAP32[$2>>2]|0;
 HEAP32[$14>>2] = $19;
 $20 = ((($4)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$14>>2]|0;
 $22 = (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1,$$byval_copy,$3,$12,$21,$5,$13,$18,$10,$11,$17)|0);
 $23 = $19;
 if ($22) {
  $24 = ((($6)) + 8|0);
  $25 = ((($24)) + 3|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)<(0);
  if ($27) {
   $28 = HEAP32[$6>>2]|0;
   HEAP32[$7>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($28,$7);
   $29 = ((($6)) + 4|0);
   HEAP32[$29>>2] = 0;
  } else {
   HEAP32[$8>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6,$8);
   HEAP8[$25>>0] = 0;
  }
  $30 = HEAP8[$13>>0]|0;
  $31 = ($30<<24>>24)==(0);
  if (!($31)) {
   $32 = HEAP32[$18>>2]|0;
   $33 = ((($32)) + 44|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (FUNCTION_TABLE_iii[$34 & 1023]($18,45)|0);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($6,$35);
  }
  $36 = HEAP32[$18>>2]|0;
  $37 = ((($36)) + 44|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (FUNCTION_TABLE_iii[$38 & 1023]($18,48)|0);
  $40 = HEAP32[$10>>2]|0;
  $41 = HEAP32[$11>>2]|0;
  $42 = ((($41)) + -4|0);
  $$0 = $40;
  while(1) {
   $43 = ($$0>>>0)<($42>>>0);
   if (!($43)) {
    break;
   }
   $44 = HEAP32[$$0>>2]|0;
   $45 = ($44|0)==($39|0);
   if (!($45)) {
    break;
   }
   $46 = ((($$0)) + 4|0);
   $$0 = $46;
  }
  (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($6,$$0,$41)|0);
 }
 $47 = HEAP32[$1>>2]|0;
 $48 = ($47|0)==(0|0);
 do {
  if ($48) {
   $83 = 1;
  } else {
   $49 = ((($47)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($47)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $54 = HEAP32[$47>>2]|0;
    $55 = ((($54)) + 36|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = (FUNCTION_TABLE_ii[$56 & 1023]($47)|0);
    $$0$i$i$i$i = $57;
   } else {
    $58 = HEAP32[$50>>2]|0;
    $59 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($58)|0);
    $$0$i$i$i$i = $59;
   }
   $60 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $61 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$60)|0);
   if ($61) {
    HEAP32[$1>>2] = 0;
    $83 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$1>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $83 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $62 = ($19|0)==(0);
 do {
  if ($62) {
   label = 25;
  } else {
   $63 = ((($23)) + 12|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ((($23)) + 16|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ($64|0)==($66|0);
   if ($67) {
    $68 = $19;
    $69 = HEAP32[$68>>2]|0;
    $70 = ((($69)) + 36|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = (FUNCTION_TABLE_ii[$71 & 1023]($23)|0);
    $$0$i$i2$i$i = $72;
   } else {
    $73 = HEAP32[$64>>2]|0;
    $74 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($73)|0);
    $$0$i$i2$i$i = $74;
   }
   $75 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
   $76 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$75)|0);
   if ($76) {
    HEAP32[$2>>2] = 0;
    label = 25;
    break;
   } else {
    if ($83) {
     break;
    } else {
     label = 27;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 25) {
  if ($83) {
   label = 27;
  }
 }
 if ((label|0) == 27) {
  $77 = HEAP32[$5>>2]|0;
  $78 = $77 | 2;
  HEAP32[$5>>2] = $78;
 }
 $$sroa$0$0$copyload = HEAP32[$1>>2]|0;
 __ZNSt3__26localeD2Ev($12);
 $79 = HEAP32[$10>>2]|0;
 HEAP32[$10>>2] = 0;
 $80 = ($79|0)==(0|0);
 if (!($80)) {
  $81 = ((($10)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  FUNCTION_TABLE_vi[$82 & 1023]($79);
 }
 STACKTOP = sp;return ($$sroa$0$0$copyload|0);
}
function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i162 = 0, $$0$i$i$i$i207 = 0, $$0$i$i$i$i220 = 0, $$0$i$i$i$i236 = 0, $$0$i$i$i$i251 = 0, $$0$i$i$i$i266 = 0, $$0$i$i149 = 0, $$0$i$i151 = 0, $$0$i$i154 = 0, $$0$i$i157 = 0, $$0$i$i160 = 0, $$0$i$i161 = 0, $$0$i$i174 = 0, $$0$i$i176 = 0, $$0$i$i182 = 0, $$0$i$i189 = 0, $$0$i$i194 = 0;
 var $$0$i$i2$i$i = 0, $$0$i$i2$i$i168 = 0, $$0$i$i2$i$i213 = 0, $$0$i$i2$i$i226 = 0, $$0$i$i2$i$i242 = 0, $$0$i$i2$i$i257 = 0, $$0$i$i2$i$i272 = 0, $$0$i$i203 = 0, $$0$i$i232 = 0, $$0$i$i248 = 0, $$0$i$i263 = 0, $$0$i$i278 = 0, $$0$i$i280 = 0, $$0126 = 0, $$0131 = 0, $$0133 = 0, $$10 = 0, $$1132 = 0, $$2128$ph = 0, $$pre = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i164 = 0, $$pre$i$i$i209 = 0, $$pre$i$i$i222 = 0, $$pre$i$i$i238 = 0, $$pre$i$i$i253 = 0, $$pre$i$i$i268 = 0, $$pre$phiZ2D = 0, $$pre354 = 0, $$pre355 = 0, $$pre356 = 0, $$pre357 = 0, $$pre358 = 0, $$pre359 = 0, $$pre360 = 0, $$pre361 = 0, $$sink = 0, $$sroa$0289$0$ptr = 0, $$sroa$0309$0 = 0, $$sroa$0309$1 = 0;
 var $$sroa$0309$1$ptr = 0, $$sroa$08$0$ptr$i = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0;
 var $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0;
 var $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0;
 var $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0;
 var $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $79 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $cond148 = 0;
 var $exitcond$i$i = 0, $exitcond$i$i150 = 0, $exitcond$i$i152 = 0, $exitcond$i$i155 = 0, $exitcond$i$i158 = 0, $or$cond = 0, $or$cond13 = 0, $or$cond145 = 0, $or$cond15 = 0, $or$cond373 = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i165 = 0, $phitmp$i$i$i210 = 0, $phitmp$i$i$i223 = 0, $phitmp$i$i$i239 = 0, $phitmp$i$i$i254 = 0, $phitmp$i$i$i269 = 0, $spec$select = 0, $spec$select141 = 0, $spec$select142 = 0;
 var $spec$select143 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $11 = sp + 496|0;
 $12 = sp;
 $13 = sp + 488|0;
 $14 = sp + 480|0;
 $15 = sp + 476|0;
 $16 = sp + 500|0;
 $17 = sp + 472|0;
 $18 = sp + 468|0;
 $19 = sp + 456|0;
 $20 = sp + 444|0;
 $21 = sp + 432|0;
 $22 = sp + 420|0;
 $23 = sp + 408|0;
 $24 = sp + 404|0;
 $25 = sp + 400|0;
 HEAP32[$11>>2] = $10;
 $26 = $12;
 HEAP32[$13>>2] = $26;
 $27 = ((($13)) + 4|0);
 HEAP32[$27>>2] = (661);
 HEAP32[$14>>2] = $12;
 $28 = ((($12)) + 400|0);
 HEAP32[$15>>2] = $28;
 ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $29 = (($19) + ($$0$i$i<<2)|0);
  HEAP32[$29>>2] = 0;
  $30 = (($$0$i$i) + 1)|0;
  $$0$i$i = $30;
 }
 ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
 $$0$i$i149 = 0;
 while(1) {
  $exitcond$i$i150 = ($$0$i$i149|0)==(3);
  if ($exitcond$i$i150) {
   break;
  }
  $31 = (($20) + ($$0$i$i149<<2)|0);
  HEAP32[$31>>2] = 0;
  $32 = (($$0$i$i149) + 1)|0;
  $$0$i$i149 = $32;
 }
 ;HEAP32[$21>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
 $$0$i$i151 = 0;
 while(1) {
  $exitcond$i$i152 = ($$0$i$i151|0)==(3);
  if ($exitcond$i$i152) {
   break;
  }
  $33 = (($21) + ($$0$i$i151<<2)|0);
  HEAP32[$33>>2] = 0;
  $34 = (($$0$i$i151) + 1)|0;
  $$0$i$i151 = $34;
 }
 ;HEAP32[$22>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
 $$0$i$i154 = 0;
 while(1) {
  $exitcond$i$i155 = ($$0$i$i154|0)==(3);
  if ($exitcond$i$i155) {
   break;
  }
  $35 = (($22) + ($$0$i$i154<<2)|0);
  HEAP32[$35>>2] = 0;
  $36 = (($$0$i$i154) + 1)|0;
  $$0$i$i154 = $36;
 }
 ;HEAP32[$23>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
 $$0$i$i157 = 0;
 while(1) {
  $exitcond$i$i158 = ($$0$i$i157|0)==(3);
  if ($exitcond$i$i158) {
   break;
  }
  $37 = (($23) + ($$0$i$i157<<2)|0);
  HEAP32[$37>>2] = 0;
  $38 = (($$0$i$i157) + 1)|0;
  $$0$i$i157 = $38;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($2,$3,$16,$17,$18,$19,$20,$21,$22,$24);
 $39 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $39;
 $40 = ((($21)) + 8|0);
 $41 = ((($40)) + 3|0);
 $42 = ((($21)) + 4|0);
 $43 = ((($22)) + 8|0);
 $44 = ((($43)) + 3|0);
 $45 = ((($22)) + 4|0);
 $46 = ((($19)) + 11|0);
 $47 = ((($19)) + 4|0);
 $48 = $4 & 512;
 $49 = ($48|0)!=(0);
 $50 = ((($20)) + 8|0);
 $51 = ((($50)) + 3|0);
 $52 = ((($16)) + 3|0);
 $53 = ((($20)) + 4|0);
 $54 = ((($23)) + 8|0);
 $55 = ((($54)) + 3|0);
 $56 = ((($23)) + 4|0);
 $$0131 = 0;$$0133 = 0;
 L21: while(1) {
  $57 = ($$0133>>>0)<(4);
  if (!($57)) {
   label = 239;
   break;
  }
  $58 = HEAP32[$0>>2]|0;
  $59 = ($58|0)==(0|0);
  do {
   if ($59) {
    $766 = 1;
   } else {
    $60 = ((($58)) + 12|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ((($58)) + 16|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = ($61|0)==($63|0);
    if ($64) {
     $65 = HEAP32[$58>>2]|0;
     $66 = ((($65)) + 36|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = (FUNCTION_TABLE_ii[$67 & 1023]($58)|0);
     $$0$i$i$i$i = $68;
    } else {
     $69 = HEAP32[$61>>2]|0;
     $70 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($69)|0);
     $$0$i$i$i$i = $70;
    }
    $71 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $72 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i,$71)|0);
    if ($72) {
     HEAP32[$0>>2] = 0;
     $766 = 1;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$0>>2]|0;
     $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
     $766 = $phitmp$i$i$i;
     break;
    }
   }
  } while(0);
  $73 = HEAP32[$1>>2]|0;
  $74 = ($73|0)==(0|0);
  do {
   if ($74) {
    label = 31;
   } else {
    $75 = ((($73)) + 12|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ((($73)) + 16|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = ($76|0)==($78|0);
    if ($79) {
     $80 = HEAP32[$73>>2]|0;
     $81 = ((($80)) + 36|0);
     $82 = HEAP32[$81>>2]|0;
     $83 = (FUNCTION_TABLE_ii[$82 & 1023]($73)|0);
     $$0$i$i2$i$i = $83;
    } else {
     $84 = HEAP32[$76>>2]|0;
     $85 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($84)|0);
     $$0$i$i2$i$i = $85;
    }
    $86 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
    $87 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i,$86)|0);
    if ($87) {
     HEAP32[$1>>2] = 0;
     label = 31;
     break;
    } else {
     if ($766) {
      $767 = $73;
      break;
     } else {
      label = 239;
      break L21;
     }
    }
   }
  } while(0);
  if ((label|0) == 31) {
   label = 0;
   if ($766) {
    label = 239;
    break;
   } else {
    $767 = 0;
   }
  }
  $88 = (($16) + ($$0133)|0);
  $89 = HEAP8[$88>>0]|0;
  $90 = $89 << 24 >> 24;
  L46: do {
   switch ($90|0) {
   case 1:  {
    $cond148 = ($$0133|0)==(3);
    if ($cond148) {
     $$1132 = $$0131;
    } else {
     $91 = HEAP32[$0>>2]|0;
     $92 = ((($91)) + 12|0);
     $93 = HEAP32[$92>>2]|0;
     $94 = ((($91)) + 16|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($93|0)==($95|0);
     if ($96) {
      $97 = HEAP32[$91>>2]|0;
      $98 = ((($97)) + 36|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = (FUNCTION_TABLE_ii[$99 & 1023]($91)|0);
      $$0$i$i160 = $100;
     } else {
      $101 = HEAP32[$93>>2]|0;
      $102 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($101)|0);
      $$0$i$i160 = $102;
     }
     $103 = HEAP32[$7>>2]|0;
     $104 = ((($103)) + 12|0);
     $105 = HEAP32[$104>>2]|0;
     $106 = (FUNCTION_TABLE_iiii[$105 & 1023]($7,8192,$$0$i$i160)|0);
     if (!($106)) {
      label = 44;
      break L21;
     }
     $107 = HEAP32[$0>>2]|0;
     $108 = ((($107)) + 12|0);
     $109 = HEAP32[$108>>2]|0;
     $110 = ((($107)) + 16|0);
     $111 = HEAP32[$110>>2]|0;
     $112 = ($109|0)==($111|0);
     if ($112) {
      $113 = HEAP32[$107>>2]|0;
      $114 = ((($113)) + 40|0);
      $115 = HEAP32[$114>>2]|0;
      $116 = (FUNCTION_TABLE_ii[$115 & 1023]($107)|0);
      $$0$i$i161 = $116;
     } else {
      $117 = ((($109)) + 4|0);
      HEAP32[$108>>2] = $117;
      $118 = HEAP32[$109>>2]|0;
      $119 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($118)|0);
      $$0$i$i161 = $119;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23,$$0$i$i161);
     label = 46;
    }
    break;
   }
   case 0:  {
    $122 = ($$0133|0)==(3);
    if ($122) {
     $$1132 = $$0131;
    } else {
     label = 46;
    }
    break;
   }
   case 3:  {
    $182 = HEAP8[$41>>0]|0;
    $183 = ($182<<24>>24)<(0);
    $184 = HEAP32[$42>>2]|0;
    $185 = $182&255;
    $186 = $183 ? $184 : $185;
    $187 = HEAP8[$44>>0]|0;
    $188 = ($187<<24>>24)<(0);
    $189 = HEAP32[$45>>2]|0;
    $190 = $187&255;
    $191 = $188 ? $189 : $190;
    $192 = (0 - ($191))|0;
    $193 = ($186|0)==($192|0);
    if ($193) {
     $$1132 = $$0131;
    } else {
     $194 = ($186|0)==(0);
     $195 = ($191|0)==(0);
     $or$cond373 = $194 | $195;
     $196 = HEAP32[$0>>2]|0;
     $197 = ((($196)) + 12|0);
     $198 = HEAP32[$197>>2]|0;
     $199 = ((($196)) + 16|0);
     $200 = HEAP32[$199>>2]|0;
     $201 = ($198|0)==($200|0);
     if ($or$cond373) {
      if ($201) {
       $202 = HEAP32[$196>>2]|0;
       $203 = ((($202)) + 36|0);
       $204 = HEAP32[$203>>2]|0;
       $205 = (FUNCTION_TABLE_ii[$204 & 1023]($196)|0);
       $$0$i$i182 = $205;
      } else {
       $206 = HEAP32[$198>>2]|0;
       $207 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($206)|0);
       $$0$i$i182 = $207;
      }
      if ($194) {
       $231 = HEAP8[$44>>0]|0;
       $232 = ($231<<24>>24)<(0);
       $233 = HEAP32[$22>>2]|0;
       $234 = $232 ? $233 : $22;
       $235 = HEAP32[$234>>2]|0;
       $236 = ($$0$i$i182|0)==($235|0);
       if (!($236)) {
        $$1132 = $$0131;
        break L46;
       }
       $237 = HEAP32[$0>>2]|0;
       $238 = ((($237)) + 12|0);
       $239 = HEAP32[$238>>2]|0;
       $240 = ((($237)) + 16|0);
       $241 = HEAP32[$240>>2]|0;
       $242 = ($239|0)==($241|0);
       if ($242) {
        $243 = HEAP32[$237>>2]|0;
        $244 = ((($243)) + 40|0);
        $245 = HEAP32[$244>>2]|0;
        (FUNCTION_TABLE_ii[$245 & 1023]($237)|0);
       } else {
        $246 = ((($239)) + 4|0);
        HEAP32[$238>>2] = $246;
        $247 = HEAP32[$239>>2]|0;
        (__ZNSt3__211char_traitsIwE11to_int_typeEw($247)|0);
       }
       HEAP8[$6>>0] = 1;
       $248 = HEAP8[$44>>0]|0;
       $249 = ($248<<24>>24)<(0);
       $250 = HEAP32[$45>>2]|0;
       $251 = $248&255;
       $252 = $249 ? $250 : $251;
       $253 = ($252>>>0)>(1);
       $spec$select141 = $253 ? $22 : $$0131;
       $$1132 = $spec$select141;
       break L46;
      }
      $208 = HEAP8[$41>>0]|0;
      $209 = ($208<<24>>24)<(0);
      $210 = HEAP32[$21>>2]|0;
      $211 = $209 ? $210 : $21;
      $212 = HEAP32[$211>>2]|0;
      $213 = ($$0$i$i182|0)==($212|0);
      if (!($213)) {
       HEAP8[$6>>0] = 1;
       $$1132 = $$0131;
       break L46;
      }
      $214 = HEAP32[$0>>2]|0;
      $215 = ((($214)) + 12|0);
      $216 = HEAP32[$215>>2]|0;
      $217 = ((($214)) + 16|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = ($216|0)==($218|0);
      if ($219) {
       $220 = HEAP32[$214>>2]|0;
       $221 = ((($220)) + 40|0);
       $222 = HEAP32[$221>>2]|0;
       (FUNCTION_TABLE_ii[$222 & 1023]($214)|0);
      } else {
       $223 = ((($216)) + 4|0);
       HEAP32[$215>>2] = $223;
       $224 = HEAP32[$216>>2]|0;
       (__ZNSt3__211char_traitsIwE11to_int_typeEw($224)|0);
      }
      $225 = HEAP8[$41>>0]|0;
      $226 = ($225<<24>>24)<(0);
      $227 = HEAP32[$42>>2]|0;
      $228 = $225&255;
      $229 = $226 ? $227 : $228;
      $230 = ($229>>>0)>(1);
      $spec$select = $230 ? $21 : $$0131;
      $$1132 = $spec$select;
      break L46;
     }
     if ($201) {
      $254 = HEAP32[$196>>2]|0;
      $255 = ((($254)) + 36|0);
      $256 = HEAP32[$255>>2]|0;
      $257 = (FUNCTION_TABLE_ii[$256 & 1023]($196)|0);
      $$0$i$i189 = $257;
     } else {
      $258 = HEAP32[$198>>2]|0;
      $259 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($258)|0);
      $$0$i$i189 = $259;
     }
     $260 = HEAP8[$41>>0]|0;
     $261 = ($260<<24>>24)<(0);
     $262 = HEAP32[$21>>2]|0;
     $263 = $261 ? $262 : $21;
     $264 = HEAP32[$263>>2]|0;
     $265 = ($$0$i$i189|0)==($264|0);
     $266 = HEAP32[$0>>2]|0;
     $267 = ((($266)) + 12|0);
     $268 = HEAP32[$267>>2]|0;
     $269 = ((($266)) + 16|0);
     $270 = HEAP32[$269>>2]|0;
     $271 = ($268|0)==($270|0);
     if ($265) {
      if ($271) {
       $272 = HEAP32[$266>>2]|0;
       $273 = ((($272)) + 40|0);
       $274 = HEAP32[$273>>2]|0;
       (FUNCTION_TABLE_ii[$274 & 1023]($266)|0);
      } else {
       $275 = ((($268)) + 4|0);
       HEAP32[$267>>2] = $275;
       $276 = HEAP32[$268>>2]|0;
       (__ZNSt3__211char_traitsIwE11to_int_typeEw($276)|0);
      }
      $277 = HEAP8[$41>>0]|0;
      $278 = ($277<<24>>24)<(0);
      $279 = HEAP32[$42>>2]|0;
      $280 = $277&255;
      $281 = $278 ? $279 : $280;
      $282 = ($281>>>0)>(1);
      $spec$select142 = $282 ? $21 : $$0131;
      $$1132 = $spec$select142;
      break L46;
     }
     if ($271) {
      $283 = HEAP32[$266>>2]|0;
      $284 = ((($283)) + 36|0);
      $285 = HEAP32[$284>>2]|0;
      $286 = (FUNCTION_TABLE_ii[$285 & 1023]($266)|0);
      $$0$i$i194 = $286;
     } else {
      $287 = HEAP32[$268>>2]|0;
      $288 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($287)|0);
      $$0$i$i194 = $288;
     }
     $289 = HEAP8[$44>>0]|0;
     $290 = ($289<<24>>24)<(0);
     $291 = HEAP32[$22>>2]|0;
     $292 = $290 ? $291 : $22;
     $293 = HEAP32[$292>>2]|0;
     $294 = ($$0$i$i194|0)==($293|0);
     if (!($294)) {
      label = 103;
      break L21;
     }
     $295 = HEAP32[$0>>2]|0;
     $296 = ((($295)) + 12|0);
     $297 = HEAP32[$296>>2]|0;
     $298 = ((($295)) + 16|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = ($297|0)==($299|0);
     if ($300) {
      $301 = HEAP32[$295>>2]|0;
      $302 = ((($301)) + 40|0);
      $303 = HEAP32[$302>>2]|0;
      (FUNCTION_TABLE_ii[$303 & 1023]($295)|0);
     } else {
      $304 = ((($297)) + 4|0);
      HEAP32[$296>>2] = $304;
      $305 = HEAP32[$297>>2]|0;
      (__ZNSt3__211char_traitsIwE11to_int_typeEw($305)|0);
     }
     HEAP8[$6>>0] = 1;
     $306 = HEAP8[$44>>0]|0;
     $307 = ($306<<24>>24)<(0);
     $308 = HEAP32[$45>>2]|0;
     $309 = $306&255;
     $310 = $307 ? $308 : $309;
     $311 = ($310>>>0)>(1);
     $spec$select143 = $311 ? $22 : $$0131;
     $$1132 = $spec$select143;
    }
    break;
   }
   case 2:  {
    $314 = ($$0131|0)!=(0|0);
    $315 = ($$0133>>>0)<(2);
    $or$cond = $315 | $314;
    if ($or$cond) {
     $325 = HEAP8[$51>>0]|0;
     $326 = ($325<<24>>24)<(0);
     $327 = HEAP32[$20>>2]|0;
     $328 = $326 ? $327 : $20;
     $329 = $328;
     $330 = ($$0133|0)==(0);
     if ($330) {
      $$sroa$0309$1 = $329;$774 = $327;$775 = $325;
     } else {
      $771 = $329;$772 = $327;$773 = $325;
      label = 108;
     }
    } else {
     $316 = ($$0133|0)==(2);
     $317 = HEAP8[$52>>0]|0;
     $318 = ($317<<24>>24)!=(0);
     $319 = $316 & $318;
     $brmerge = $49 | $319;
     if (!($brmerge)) {
      $$1132 = 0;
      break L46;
     }
     $320 = HEAP8[$51>>0]|0;
     $321 = ($320<<24>>24)<(0);
     $322 = HEAP32[$20>>2]|0;
     $323 = $321 ? $322 : $20;
     $324 = $323;
     $771 = $324;$772 = $322;$773 = $320;
     label = 108;
    }
    L108: do {
     if ((label|0) == 108) {
      label = 0;
      $331 = (($$0133) + -1)|0;
      $332 = (($16) + ($331)|0);
      $333 = HEAP8[$332>>0]|0;
      $switch = ($333&255)<(2);
      if ($switch) {
       $$sroa$0309$0 = $771;$334 = $773;$338 = $772;
       while(1) {
        $335 = ($334<<24>>24)<(0);
        $336 = HEAP32[$53>>2]|0;
        $337 = $334&255;
        $339 = $335 ? $338 : $20;
        $340 = $335 ? $336 : $337;
        $341 = (($339) + ($340<<2)|0);
        $342 = $$sroa$0309$0;
        $343 = ($341|0)==($342|0);
        if ($343) {
         $351 = $334;$353 = $338;
         break;
        }
        $344 = HEAP32[$342>>2]|0;
        $345 = HEAP32[$7>>2]|0;
        $346 = ((($345)) + 12|0);
        $347 = HEAP32[$346>>2]|0;
        $348 = (FUNCTION_TABLE_iiii[$347 & 1023]($7,8192,$344)|0);
        if (!($348)) {
         label = 112;
         break;
        }
        $349 = ((($342)) + 4|0);
        $350 = $349;
        $$pre356 = HEAP8[$51>>0]|0;
        $$pre357 = HEAP32[$20>>2]|0;
        $$sroa$0309$0 = $350;$334 = $$pre356;$338 = $$pre357;
       }
       if ((label|0) == 112) {
        label = 0;
        $$pre358 = HEAP8[$51>>0]|0;
        $$pre359 = HEAP32[$20>>2]|0;
        $351 = $$pre358;$353 = $$pre359;
       }
       $352 = ($351<<24>>24)<(0);
       $354 = $352 ? $353 : $20;
       $355 = $354;
       $356 = (($$sroa$0309$0) - ($355))|0;
       $357 = $356 >> 2;
       $358 = HEAP8[$55>>0]|0;
       $359 = ($358<<24>>24)<(0);
       $360 = HEAP32[$56>>2]|0;
       $361 = $358&255;
       $362 = $359 ? $360 : $361;
       $363 = ($357>>>0)>($362>>>0);
       if ($363) {
        $$sroa$0309$1 = $355;$774 = $353;$775 = $351;
       } else {
        $364 = HEAP32[$23>>2]|0;
        $365 = (($364) + ($360<<2)|0);
        $366 = (($23) + ($361<<2)|0);
        $$sink = $359 ? $365 : $366;
        $$pre$phiZ2D = $359 ? $365 : $366;
        $367 = (0 - ($357))|0;
        $368 = (($$sink) + ($367<<2)|0);
        $$sroa$08$0$ptr$i = $354;$369 = $368;
        while(1) {
         $370 = ($369|0)==($$pre$phiZ2D|0);
         if ($370) {
          $$sroa$0309$1 = $$sroa$0309$0;$774 = $353;$775 = $351;
          break L108;
         }
         $371 = HEAP32[$369>>2]|0;
         $372 = HEAP32[$$sroa$08$0$ptr$i>>2]|0;
         $373 = ($371|0)==($372|0);
         if (!($373)) {
          $$sroa$0309$1 = $355;$774 = $353;$775 = $351;
          break L108;
         }
         $374 = ((($369)) + 4|0);
         $375 = ((($$sroa$08$0$ptr$i)) + 4|0);
         $$sroa$08$0$ptr$i = $375;$369 = $374;
        }
       }
      } else {
       $$sroa$0309$1 = $771;$774 = $772;$775 = $773;
      }
     }
    } while(0);
    $$sroa$0309$1$ptr = $$sroa$0309$1;
    $$sroa$0289$0$ptr = $$sroa$0309$1$ptr;$376 = $775;$380 = $774;$400 = $767;
    L124: while(1) {
     $377 = ($376<<24>>24)<(0);
     $378 = HEAP32[$53>>2]|0;
     $379 = $376&255;
     $381 = $377 ? $380 : $20;
     $382 = $377 ? $378 : $379;
     $383 = (($381) + ($382<<2)|0);
     $384 = ($$sroa$0289$0$ptr|0)==($383|0);
     if ($384) {
      break;
     }
     $385 = HEAP32[$0>>2]|0;
     $386 = ($385|0)==(0|0);
     do {
      if ($386) {
       $776 = 1;
      } else {
       $387 = ((($385)) + 12|0);
       $388 = HEAP32[$387>>2]|0;
       $389 = ((($385)) + 16|0);
       $390 = HEAP32[$389>>2]|0;
       $391 = ($388|0)==($390|0);
       if ($391) {
        $392 = HEAP32[$385>>2]|0;
        $393 = ((($392)) + 36|0);
        $394 = HEAP32[$393>>2]|0;
        $395 = (FUNCTION_TABLE_ii[$394 & 1023]($385)|0);
        $$0$i$i$i$i220 = $395;
       } else {
        $396 = HEAP32[$388>>2]|0;
        $397 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($396)|0);
        $$0$i$i$i$i220 = $397;
       }
       $398 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $399 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i220,$398)|0);
       if ($399) {
        HEAP32[$0>>2] = 0;
        $776 = 1;
        break;
       } else {
        $$pre$i$i$i222 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i223 = ($$pre$i$i$i222|0)==(0|0);
        $776 = $phitmp$i$i$i223;
        break;
       }
      }
     } while(0);
     $401 = ($400|0)==(0|0);
     do {
      if ($401) {
       label = 134;
      } else {
       $402 = ((($400)) + 12|0);
       $403 = HEAP32[$402>>2]|0;
       $404 = ((($400)) + 16|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = ($403|0)==($405|0);
       if ($406) {
        $407 = HEAP32[$400>>2]|0;
        $408 = ((($407)) + 36|0);
        $409 = HEAP32[$408>>2]|0;
        $410 = (FUNCTION_TABLE_ii[$409 & 1023]($400)|0);
        $$0$i$i2$i$i226 = $410;
       } else {
        $411 = HEAP32[$403>>2]|0;
        $412 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($411)|0);
        $$0$i$i2$i$i226 = $412;
       }
       $413 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $414 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i226,$413)|0);
       if ($414) {
        HEAP32[$1>>2] = 0;
        label = 134;
        break;
       } else {
        if ($776) {
         $777 = $400;
         break;
        } else {
         break L124;
        }
       }
      }
     } while(0);
     if ((label|0) == 134) {
      label = 0;
      if ($776) {
       break;
      } else {
       $777 = 0;
      }
     }
     $415 = HEAP32[$0>>2]|0;
     $416 = ((($415)) + 12|0);
     $417 = HEAP32[$416>>2]|0;
     $418 = ((($415)) + 16|0);
     $419 = HEAP32[$418>>2]|0;
     $420 = ($417|0)==($419|0);
     if ($420) {
      $421 = HEAP32[$415>>2]|0;
      $422 = ((($421)) + 36|0);
      $423 = HEAP32[$422>>2]|0;
      $424 = (FUNCTION_TABLE_ii[$423 & 1023]($415)|0);
      $$0$i$i232 = $424;
     } else {
      $425 = HEAP32[$417>>2]|0;
      $426 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($425)|0);
      $$0$i$i232 = $426;
     }
     $427 = HEAP32[$$sroa$0289$0$ptr>>2]|0;
     $428 = ($$0$i$i232|0)==($427|0);
     if (!($428)) {
      break;
     }
     $429 = HEAP32[$0>>2]|0;
     $430 = ((($429)) + 12|0);
     $431 = HEAP32[$430>>2]|0;
     $432 = ((($429)) + 16|0);
     $433 = HEAP32[$432>>2]|0;
     $434 = ($431|0)==($433|0);
     if ($434) {
      $435 = HEAP32[$429>>2]|0;
      $436 = ((($435)) + 40|0);
      $437 = HEAP32[$436>>2]|0;
      (FUNCTION_TABLE_ii[$437 & 1023]($429)|0);
     } else {
      $438 = ((($431)) + 4|0);
      HEAP32[$430>>2] = $438;
      $439 = HEAP32[$431>>2]|0;
      (__ZNSt3__211char_traitsIwE11to_int_typeEw($439)|0);
     }
     $440 = ((($$sroa$0289$0$ptr)) + 4|0);
     $$pre360 = HEAP8[$51>>0]|0;
     $$pre361 = HEAP32[$20>>2]|0;
     $$sroa$0289$0$ptr = $440;$376 = $$pre360;$380 = $$pre361;$400 = $777;
    }
    if ($49) {
     $441 = HEAP8[$51>>0]|0;
     $442 = ($441<<24>>24)<(0);
     $443 = HEAP32[$20>>2]|0;
     $444 = HEAP32[$53>>2]|0;
     $445 = $441&255;
     $446 = $442 ? $443 : $20;
     $447 = $442 ? $444 : $445;
     $448 = (($446) + ($447<<2)|0);
     $449 = ($$sroa$0289$0$ptr|0)==($448|0);
     if ($449) {
      $$1132 = $$0131;
     } else {
      label = 146;
      break L21;
     }
    } else {
     $$1132 = $$0131;
    }
    break;
   }
   case 4:  {
    $$0126 = 0;$467 = $767;$768 = $767;
    L161: while(1) {
     $452 = HEAP32[$0>>2]|0;
     $453 = ($452|0)==(0|0);
     do {
      if ($453) {
       $778 = 1;
      } else {
       $454 = ((($452)) + 12|0);
       $455 = HEAP32[$454>>2]|0;
       $456 = ((($452)) + 16|0);
       $457 = HEAP32[$456>>2]|0;
       $458 = ($455|0)==($457|0);
       if ($458) {
        $459 = HEAP32[$452>>2]|0;
        $460 = ((($459)) + 36|0);
        $461 = HEAP32[$460>>2]|0;
        $462 = (FUNCTION_TABLE_ii[$461 & 1023]($452)|0);
        $$0$i$i$i$i236 = $462;
       } else {
        $463 = HEAP32[$455>>2]|0;
        $464 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($463)|0);
        $$0$i$i$i$i236 = $464;
       }
       $465 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $466 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i236,$465)|0);
       if ($466) {
        HEAP32[$0>>2] = 0;
        $778 = 1;
        break;
       } else {
        $$pre$i$i$i238 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i239 = ($$pre$i$i$i238|0)==(0|0);
        $778 = $phitmp$i$i$i239;
        break;
       }
      }
     } while(0);
     $468 = ($467|0)==(0|0);
     do {
      if ($468) {
       $779 = $768;
       label = 160;
      } else {
       $469 = ((($467)) + 12|0);
       $470 = HEAP32[$469>>2]|0;
       $471 = ((($467)) + 16|0);
       $472 = HEAP32[$471>>2]|0;
       $473 = ($470|0)==($472|0);
       if ($473) {
        $474 = HEAP32[$467>>2]|0;
        $475 = ((($474)) + 36|0);
        $476 = HEAP32[$475>>2]|0;
        $477 = (FUNCTION_TABLE_ii[$476 & 1023]($467)|0);
        $$0$i$i2$i$i242 = $477;
       } else {
        $478 = HEAP32[$470>>2]|0;
        $479 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($478)|0);
        $$0$i$i2$i$i242 = $479;
       }
       $480 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $481 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i242,$480)|0);
       if ($481) {
        HEAP32[$1>>2] = 0;
        $779 = 0;
        label = 160;
        break;
       } else {
        if ($778) {
         $780 = $768;$781 = $467;
         break;
        } else {
         $554 = $768;
         break L161;
        }
       }
      }
     } while(0);
     if ((label|0) == 160) {
      label = 0;
      if ($778) {
       $554 = $779;
       break;
      } else {
       $780 = $779;$781 = 0;
      }
     }
     $482 = HEAP32[$0>>2]|0;
     $483 = ((($482)) + 12|0);
     $484 = HEAP32[$483>>2]|0;
     $485 = ((($482)) + 16|0);
     $486 = HEAP32[$485>>2]|0;
     $487 = ($484|0)==($486|0);
     if ($487) {
      $488 = HEAP32[$482>>2]|0;
      $489 = ((($488)) + 36|0);
      $490 = HEAP32[$489>>2]|0;
      $491 = (FUNCTION_TABLE_ii[$490 & 1023]($482)|0);
      $$0$i$i248 = $491;
     } else {
      $492 = HEAP32[$484>>2]|0;
      $493 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($492)|0);
      $$0$i$i248 = $493;
     }
     $494 = HEAP32[$7>>2]|0;
     $495 = ((($494)) + 12|0);
     $496 = HEAP32[$495>>2]|0;
     $497 = (FUNCTION_TABLE_iiii[$496 & 1023]($7,2048,$$0$i$i248)|0);
     if ($497) {
      $498 = HEAP32[$9>>2]|0;
      $499 = HEAP32[$11>>2]|0;
      $500 = ($498|0)==($499|0);
      if ($500) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8,$9,$11);
       $$pre354 = HEAP32[$9>>2]|0;
       $502 = $$pre354;
      } else {
       $502 = $498;
      }
      $501 = ((($502)) + 4|0);
      HEAP32[$9>>2] = $501;
      HEAP32[$502>>2] = $$0$i$i248;
      $503 = (($$0126) + 1)|0;
      $$2128$ph = $503;
     } else {
      $504 = HEAP8[$46>>0]|0;
      $505 = ($504<<24>>24)<(0);
      $506 = HEAP32[$47>>2]|0;
      $507 = $504&255;
      $508 = $505 ? $506 : $507;
      $509 = ($508|0)!=(0);
      $510 = ($$0126|0)!=(0);
      $or$cond13 = $510 & $509;
      $511 = HEAP32[$18>>2]|0;
      $512 = ($$0$i$i248|0)==($511|0);
      $or$cond145 = $512 & $or$cond13;
      if (!($or$cond145)) {
       $554 = $780;
       break;
      }
      $513 = HEAP32[$14>>2]|0;
      $514 = HEAP32[$15>>2]|0;
      $515 = ($513|0)==($514|0);
      if ($515) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13,$14,$15);
       $$pre = HEAP32[$14>>2]|0;
       $517 = $$pre;
      } else {
       $517 = $513;
      }
      $516 = ((($517)) + 4|0);
      HEAP32[$14>>2] = $516;
      HEAP32[$517>>2] = $$0126;
      $$2128$ph = 0;
     }
     $518 = HEAP32[$0>>2]|0;
     $519 = ((($518)) + 12|0);
     $520 = HEAP32[$519>>2]|0;
     $521 = ((($518)) + 16|0);
     $522 = HEAP32[$521>>2]|0;
     $523 = ($520|0)==($522|0);
     if ($523) {
      $524 = HEAP32[$518>>2]|0;
      $525 = ((($524)) + 40|0);
      $526 = HEAP32[$525>>2]|0;
      (FUNCTION_TABLE_ii[$526 & 1023]($518)|0);
     } else {
      $527 = ((($520)) + 4|0);
      HEAP32[$519>>2] = $527;
      $528 = HEAP32[$520>>2]|0;
      (__ZNSt3__211char_traitsIwE11to_int_typeEw($528)|0);
     }
     $$0126 = $$2128$ph;$467 = $781;$768 = $780;
    }
    $529 = HEAP32[$13>>2]|0;
    $530 = HEAP32[$14>>2]|0;
    $531 = ($529|0)!=($530|0);
    $532 = ($$0126|0)!=(0);
    $or$cond15 = $532 & $531;
    if ($or$cond15) {
     $533 = HEAP32[$15>>2]|0;
     $534 = ($530|0)==($533|0);
     if ($534) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13,$14,$15);
      $$pre355 = HEAP32[$14>>2]|0;
      $536 = $$pre355;
     } else {
      $536 = $530;
     }
     $535 = ((($536)) + 4|0);
     HEAP32[$14>>2] = $535;
     HEAP32[$536>>2] = $$0126;
    }
    $537 = HEAP32[$24>>2]|0;
    $538 = ($537|0)>(0);
    L211: do {
     if ($538) {
      $539 = HEAP32[$0>>2]|0;
      $540 = ($539|0)==(0|0);
      do {
       if ($540) {
        $782 = 1;
       } else {
        $541 = ((($539)) + 12|0);
        $542 = HEAP32[$541>>2]|0;
        $543 = ((($539)) + 16|0);
        $544 = HEAP32[$543>>2]|0;
        $545 = ($542|0)==($544|0);
        if ($545) {
         $546 = HEAP32[$539>>2]|0;
         $547 = ((($546)) + 36|0);
         $548 = HEAP32[$547>>2]|0;
         $549 = (FUNCTION_TABLE_ii[$548 & 1023]($539)|0);
         $$0$i$i$i$i251 = $549;
        } else {
         $550 = HEAP32[$542>>2]|0;
         $551 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($550)|0);
         $$0$i$i$i$i251 = $551;
        }
        $552 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
        $553 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i251,$552)|0);
        if ($553) {
         HEAP32[$0>>2] = 0;
         $782 = 1;
         break;
        } else {
         $$pre$i$i$i253 = HEAP32[$0>>2]|0;
         $phitmp$i$i$i254 = ($$pre$i$i$i253|0)==(0|0);
         $782 = $phitmp$i$i$i254;
         break;
        }
       }
      } while(0);
      $555 = ($554|0)==(0|0);
      do {
       if ($555) {
        label = 195;
       } else {
        $556 = ((($554)) + 12|0);
        $557 = HEAP32[$556>>2]|0;
        $558 = ((($554)) + 16|0);
        $559 = HEAP32[$558>>2]|0;
        $560 = ($557|0)==($559|0);
        if ($560) {
         $561 = HEAP32[$554>>2]|0;
         $562 = ((($561)) + 36|0);
         $563 = HEAP32[$562>>2]|0;
         $564 = (FUNCTION_TABLE_ii[$563 & 1023]($554)|0);
         $$0$i$i2$i$i257 = $564;
        } else {
         $565 = HEAP32[$557>>2]|0;
         $566 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($565)|0);
         $$0$i$i2$i$i257 = $566;
        }
        $567 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
        $568 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i257,$567)|0);
        if ($568) {
         HEAP32[$1>>2] = 0;
         label = 195;
         break;
        } else {
         if ($782) {
          $783 = $554;
          break;
         } else {
          label = 201;
          break L21;
         }
        }
       }
      } while(0);
      if ((label|0) == 195) {
       label = 0;
       if ($782) {
        label = 201;
        break L21;
       } else {
        $783 = 0;
       }
      }
      $569 = HEAP32[$0>>2]|0;
      $570 = ((($569)) + 12|0);
      $571 = HEAP32[$570>>2]|0;
      $572 = ((($569)) + 16|0);
      $573 = HEAP32[$572>>2]|0;
      $574 = ($571|0)==($573|0);
      if ($574) {
       $575 = HEAP32[$569>>2]|0;
       $576 = ((($575)) + 36|0);
       $577 = HEAP32[$576>>2]|0;
       $578 = (FUNCTION_TABLE_ii[$577 & 1023]($569)|0);
       $$0$i$i263 = $578;
      } else {
       $579 = HEAP32[$571>>2]|0;
       $580 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($579)|0);
       $$0$i$i263 = $580;
      }
      $581 = HEAP32[$17>>2]|0;
      $582 = ($$0$i$i263|0)==($581|0);
      if (!($582)) {
       label = 201;
       break L21;
      }
      $585 = HEAP32[$0>>2]|0;
      $586 = ((($585)) + 12|0);
      $587 = HEAP32[$586>>2]|0;
      $588 = ((($585)) + 16|0);
      $589 = HEAP32[$588>>2]|0;
      $590 = ($587|0)==($589|0);
      if ($590) {
       $591 = HEAP32[$585>>2]|0;
       $592 = ((($591)) + 40|0);
       $593 = HEAP32[$592>>2]|0;
       (FUNCTION_TABLE_ii[$593 & 1023]($585)|0);
      } else {
       $594 = ((($587)) + 4|0);
       HEAP32[$586>>2] = $594;
       $595 = HEAP32[$587>>2]|0;
       (__ZNSt3__211char_traitsIwE11to_int_typeEw($595)|0);
      }
      $613 = $783;
      while(1) {
       $596 = HEAP32[$24>>2]|0;
       $597 = ($596|0)>(0);
       if (!($597)) {
        break L211;
       }
       $598 = HEAP32[$0>>2]|0;
       $599 = ($598|0)==(0|0);
       do {
        if ($599) {
         $784 = 1;
        } else {
         $600 = ((($598)) + 12|0);
         $601 = HEAP32[$600>>2]|0;
         $602 = ((($598)) + 16|0);
         $603 = HEAP32[$602>>2]|0;
         $604 = ($601|0)==($603|0);
         if ($604) {
          $605 = HEAP32[$598>>2]|0;
          $606 = ((($605)) + 36|0);
          $607 = HEAP32[$606>>2]|0;
          $608 = (FUNCTION_TABLE_ii[$607 & 1023]($598)|0);
          $$0$i$i$i$i266 = $608;
         } else {
          $609 = HEAP32[$601>>2]|0;
          $610 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($609)|0);
          $$0$i$i$i$i266 = $610;
         }
         $611 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
         $612 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i266,$611)|0);
         if ($612) {
          HEAP32[$0>>2] = 0;
          $784 = 1;
          break;
         } else {
          $$pre$i$i$i268 = HEAP32[$0>>2]|0;
          $phitmp$i$i$i269 = ($$pre$i$i$i268|0)==(0|0);
          $784 = $phitmp$i$i$i269;
          break;
         }
        }
       } while(0);
       $614 = ($613|0)==(0|0);
       do {
        if ($614) {
         label = 220;
        } else {
         $615 = ((($613)) + 12|0);
         $616 = HEAP32[$615>>2]|0;
         $617 = ((($613)) + 16|0);
         $618 = HEAP32[$617>>2]|0;
         $619 = ($616|0)==($618|0);
         if ($619) {
          $620 = HEAP32[$613>>2]|0;
          $621 = ((($620)) + 36|0);
          $622 = HEAP32[$621>>2]|0;
          $623 = (FUNCTION_TABLE_ii[$622 & 1023]($613)|0);
          $$0$i$i2$i$i272 = $623;
         } else {
          $624 = HEAP32[$616>>2]|0;
          $625 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($624)|0);
          $$0$i$i2$i$i272 = $625;
         }
         $626 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
         $627 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i272,$626)|0);
         if ($627) {
          HEAP32[$1>>2] = 0;
          label = 220;
          break;
         } else {
          if ($784) {
           $785 = $613;
           break;
          } else {
           label = 226;
           break L21;
          }
         }
        }
       } while(0);
       if ((label|0) == 220) {
        label = 0;
        if ($784) {
         label = 226;
         break L21;
        } else {
         $785 = 0;
        }
       }
       $628 = HEAP32[$0>>2]|0;
       $629 = ((($628)) + 12|0);
       $630 = HEAP32[$629>>2]|0;
       $631 = ((($628)) + 16|0);
       $632 = HEAP32[$631>>2]|0;
       $633 = ($630|0)==($632|0);
       if ($633) {
        $634 = HEAP32[$628>>2]|0;
        $635 = ((($634)) + 36|0);
        $636 = HEAP32[$635>>2]|0;
        $637 = (FUNCTION_TABLE_ii[$636 & 1023]($628)|0);
        $$0$i$i278 = $637;
       } else {
        $638 = HEAP32[$630>>2]|0;
        $639 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($638)|0);
        $$0$i$i278 = $639;
       }
       $640 = HEAP32[$7>>2]|0;
       $641 = ((($640)) + 12|0);
       $642 = HEAP32[$641>>2]|0;
       $643 = (FUNCTION_TABLE_iiii[$642 & 1023]($7,2048,$$0$i$i278)|0);
       if (!($643)) {
        label = 226;
        break L21;
       }
       $646 = HEAP32[$9>>2]|0;
       $647 = HEAP32[$11>>2]|0;
       $648 = ($646|0)==($647|0);
       if ($648) {
        __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8,$9,$11);
       }
       $649 = HEAP32[$0>>2]|0;
       $650 = ((($649)) + 12|0);
       $651 = HEAP32[$650>>2]|0;
       $652 = ((($649)) + 16|0);
       $653 = HEAP32[$652>>2]|0;
       $654 = ($651|0)==($653|0);
       if ($654) {
        $655 = HEAP32[$649>>2]|0;
        $656 = ((($655)) + 36|0);
        $657 = HEAP32[$656>>2]|0;
        $658 = (FUNCTION_TABLE_ii[$657 & 1023]($649)|0);
        $$0$i$i280 = $658;
       } else {
        $659 = HEAP32[$651>>2]|0;
        $660 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($659)|0);
        $$0$i$i280 = $660;
       }
       $661 = HEAP32[$9>>2]|0;
       $662 = ((($661)) + 4|0);
       HEAP32[$9>>2] = $662;
       HEAP32[$661>>2] = $$0$i$i280;
       $663 = HEAP32[$24>>2]|0;
       $664 = (($663) + -1)|0;
       HEAP32[$24>>2] = $664;
       $665 = HEAP32[$0>>2]|0;
       $666 = ((($665)) + 12|0);
       $667 = HEAP32[$666>>2]|0;
       $668 = ((($665)) + 16|0);
       $669 = HEAP32[$668>>2]|0;
       $670 = ($667|0)==($669|0);
       if ($670) {
        $671 = HEAP32[$665>>2]|0;
        $672 = ((($671)) + 40|0);
        $673 = HEAP32[$672>>2]|0;
        (FUNCTION_TABLE_ii[$673 & 1023]($665)|0);
       } else {
        $674 = ((($667)) + 4|0);
        HEAP32[$666>>2] = $674;
        $675 = HEAP32[$667>>2]|0;
        (__ZNSt3__211char_traitsIwE11to_int_typeEw($675)|0);
       }
       $613 = $785;
      }
     }
    } while(0);
    $676 = HEAP32[$9>>2]|0;
    $677 = HEAP32[$8>>2]|0;
    $678 = ($676|0)==($677|0);
    if ($678) {
     label = 237;
     break L21;
    } else {
     $$1132 = $$0131;
    }
    break;
   }
   default: {
    $$1132 = $$0131;
   }
   }
  } while(0);
  L286: do {
   if ((label|0) == 46) {
    label = 0;
    $138 = $767;
    while(1) {
     $123 = HEAP32[$0>>2]|0;
     $124 = ($123|0)==(0|0);
     do {
      if ($124) {
       $769 = 1;
      } else {
       $125 = ((($123)) + 12|0);
       $126 = HEAP32[$125>>2]|0;
       $127 = ((($123)) + 16|0);
       $128 = HEAP32[$127>>2]|0;
       $129 = ($126|0)==($128|0);
       if ($129) {
        $130 = HEAP32[$123>>2]|0;
        $131 = ((($130)) + 36|0);
        $132 = HEAP32[$131>>2]|0;
        $133 = (FUNCTION_TABLE_ii[$132 & 1023]($123)|0);
        $$0$i$i$i$i162 = $133;
       } else {
        $134 = HEAP32[$126>>2]|0;
        $135 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($134)|0);
        $$0$i$i$i$i162 = $135;
       }
       $136 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $137 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i162,$136)|0);
       if ($137) {
        HEAP32[$0>>2] = 0;
        $769 = 1;
        break;
       } else {
        $$pre$i$i$i164 = HEAP32[$0>>2]|0;
        $phitmp$i$i$i165 = ($$pre$i$i$i164|0)==(0|0);
        $769 = $phitmp$i$i$i165;
        break;
       }
      }
     } while(0);
     $139 = ($138|0)==(0|0);
     do {
      if ($139) {
       label = 60;
      } else {
       $140 = ((($138)) + 12|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ((($138)) + 16|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ($141|0)==($143|0);
       if ($144) {
        $145 = HEAP32[$138>>2]|0;
        $146 = ((($145)) + 36|0);
        $147 = HEAP32[$146>>2]|0;
        $148 = (FUNCTION_TABLE_ii[$147 & 1023]($138)|0);
        $$0$i$i2$i$i168 = $148;
       } else {
        $149 = HEAP32[$141>>2]|0;
        $150 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($149)|0);
        $$0$i$i2$i$i168 = $150;
       }
       $151 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
       $152 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i168,$151)|0);
       if ($152) {
        HEAP32[$1>>2] = 0;
        label = 60;
        break;
       } else {
        if ($769) {
         $770 = $138;
         break;
        } else {
         $$1132 = $$0131;
         break L286;
        }
       }
      }
     } while(0);
     if ((label|0) == 60) {
      label = 0;
      if ($769) {
       $$1132 = $$0131;
       break L286;
      } else {
       $770 = 0;
      }
     }
     $153 = HEAP32[$0>>2]|0;
     $154 = ((($153)) + 12|0);
     $155 = HEAP32[$154>>2]|0;
     $156 = ((($153)) + 16|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($155|0)==($157|0);
     if ($158) {
      $159 = HEAP32[$153>>2]|0;
      $160 = ((($159)) + 36|0);
      $161 = HEAP32[$160>>2]|0;
      $162 = (FUNCTION_TABLE_ii[$161 & 1023]($153)|0);
      $$0$i$i174 = $162;
     } else {
      $163 = HEAP32[$155>>2]|0;
      $164 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($163)|0);
      $$0$i$i174 = $164;
     }
     $165 = HEAP32[$7>>2]|0;
     $166 = ((($165)) + 12|0);
     $167 = HEAP32[$166>>2]|0;
     $168 = (FUNCTION_TABLE_iiii[$167 & 1023]($7,8192,$$0$i$i174)|0);
     if (!($168)) {
      $$1132 = $$0131;
      break L286;
     }
     $169 = HEAP32[$0>>2]|0;
     $170 = ((($169)) + 12|0);
     $171 = HEAP32[$170>>2]|0;
     $172 = ((($169)) + 16|0);
     $173 = HEAP32[$172>>2]|0;
     $174 = ($171|0)==($173|0);
     if ($174) {
      $175 = HEAP32[$169>>2]|0;
      $176 = ((($175)) + 40|0);
      $177 = HEAP32[$176>>2]|0;
      $178 = (FUNCTION_TABLE_ii[$177 & 1023]($169)|0);
      $$0$i$i176 = $178;
     } else {
      $179 = ((($171)) + 4|0);
      HEAP32[$170>>2] = $179;
      $180 = HEAP32[$171>>2]|0;
      $181 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($180)|0);
      $$0$i$i176 = $181;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23,$$0$i$i176);
     $138 = $770;
    }
   }
  } while(0);
  $681 = (($$0133) + 1)|0;
  $$0131 = $$1132;$$0133 = $681;
 }
 L322: do {
  if ((label|0) == 44) {
   $120 = HEAP32[$5>>2]|0;
   $121 = $120 | 4;
   HEAP32[$5>>2] = $121;
   $$10 = 0;
  }
  else if ((label|0) == 103) {
   $312 = HEAP32[$5>>2]|0;
   $313 = $312 | 4;
   HEAP32[$5>>2] = $313;
   $$10 = 0;
  }
  else if ((label|0) == 146) {
   $450 = HEAP32[$5>>2]|0;
   $451 = $450 | 4;
   HEAP32[$5>>2] = $451;
   $$10 = 0;
  }
  else if ((label|0) == 201) {
   $583 = HEAP32[$5>>2]|0;
   $584 = $583 | 4;
   HEAP32[$5>>2] = $584;
   $$10 = 0;
  }
  else if ((label|0) == 226) {
   $644 = HEAP32[$5>>2]|0;
   $645 = $644 | 4;
   HEAP32[$5>>2] = $645;
   $$10 = 0;
  }
  else if ((label|0) == 237) {
   $679 = HEAP32[$5>>2]|0;
   $680 = $679 | 4;
   HEAP32[$5>>2] = $680;
   $$10 = 0;
  }
  else if ((label|0) == 239) {
   $682 = ($$0131|0)==(0|0);
   L324: do {
    if (!($682)) {
     $683 = ((($$0131)) + 8|0);
     $684 = ((($683)) + 3|0);
     $685 = ((($$0131)) + 4|0);
     $$0 = 1;
     L326: while(1) {
      $686 = HEAP8[$684>>0]|0;
      $687 = ($686<<24>>24)<(0);
      if ($687) {
       $688 = HEAP32[$685>>2]|0;
       $691 = $688;
      } else {
       $689 = $686&255;
       $691 = $689;
      }
      $690 = ($$0>>>0)<($691>>>0);
      if (!($690)) {
       break L324;
      }
      $692 = HEAP32[$0>>2]|0;
      $693 = ($692|0)==(0|0);
      do {
       if ($693) {
        $786 = 1;
       } else {
        $694 = ((($692)) + 12|0);
        $695 = HEAP32[$694>>2]|0;
        $696 = ((($692)) + 16|0);
        $697 = HEAP32[$696>>2]|0;
        $698 = ($695|0)==($697|0);
        if ($698) {
         $699 = HEAP32[$692>>2]|0;
         $700 = ((($699)) + 36|0);
         $701 = HEAP32[$700>>2]|0;
         $702 = (FUNCTION_TABLE_ii[$701 & 1023]($692)|0);
         $$0$i$i$i$i207 = $702;
        } else {
         $703 = HEAP32[$695>>2]|0;
         $704 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($703)|0);
         $$0$i$i$i$i207 = $704;
        }
        $705 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
        $706 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i207,$705)|0);
        if ($706) {
         HEAP32[$0>>2] = 0;
         $786 = 1;
         break;
        } else {
         $$pre$i$i$i209 = HEAP32[$0>>2]|0;
         $phitmp$i$i$i210 = ($$pre$i$i$i209|0)==(0|0);
         $786 = $phitmp$i$i$i210;
         break;
        }
       }
      } while(0);
      $707 = HEAP32[$1>>2]|0;
      $708 = ($707|0)==(0|0);
      do {
       if ($708) {
        label = 258;
       } else {
        $709 = ((($707)) + 12|0);
        $710 = HEAP32[$709>>2]|0;
        $711 = ((($707)) + 16|0);
        $712 = HEAP32[$711>>2]|0;
        $713 = ($710|0)==($712|0);
        if ($713) {
         $714 = HEAP32[$707>>2]|0;
         $715 = ((($714)) + 36|0);
         $716 = HEAP32[$715>>2]|0;
         $717 = (FUNCTION_TABLE_ii[$716 & 1023]($707)|0);
         $$0$i$i2$i$i213 = $717;
        } else {
         $718 = HEAP32[$710>>2]|0;
         $719 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($718)|0);
         $$0$i$i2$i$i213 = $719;
        }
        $720 = (__ZNSt3__211char_traitsIwE3eofEv()|0);
        $721 = (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i213,$720)|0);
        if ($721) {
         HEAP32[$1>>2] = 0;
         label = 258;
         break;
        } else {
         if ($786) {
          break;
         } else {
          break L326;
         }
        }
       }
      } while(0);
      if ((label|0) == 258) {
       label = 0;
       if ($786) {
        break;
       }
      }
      $722 = HEAP32[$0>>2]|0;
      $723 = ((($722)) + 12|0);
      $724 = HEAP32[$723>>2]|0;
      $725 = ((($722)) + 16|0);
      $726 = HEAP32[$725>>2]|0;
      $727 = ($724|0)==($726|0);
      if ($727) {
       $728 = HEAP32[$722>>2]|0;
       $729 = ((($728)) + 36|0);
       $730 = HEAP32[$729>>2]|0;
       $731 = (FUNCTION_TABLE_ii[$730 & 1023]($722)|0);
       $$0$i$i203 = $731;
      } else {
       $732 = HEAP32[$724>>2]|0;
       $733 = (__ZNSt3__211char_traitsIwE11to_int_typeEw($732)|0);
       $$0$i$i203 = $733;
      }
      $734 = HEAP8[$684>>0]|0;
      $735 = ($734<<24>>24)<(0);
      if ($735) {
       $736 = HEAP32[$$0131>>2]|0;
       $738 = $736;
      } else {
       $738 = $$0131;
      }
      $737 = (($738) + ($$0<<2)|0);
      $739 = HEAP32[$737>>2]|0;
      $740 = ($$0$i$i203|0)==($739|0);
      if (!($740)) {
       break;
      }
      $743 = (($$0) + 1)|0;
      $744 = HEAP32[$0>>2]|0;
      $745 = ((($744)) + 12|0);
      $746 = HEAP32[$745>>2]|0;
      $747 = ((($744)) + 16|0);
      $748 = HEAP32[$747>>2]|0;
      $749 = ($746|0)==($748|0);
      if ($749) {
       $750 = HEAP32[$744>>2]|0;
       $751 = ((($750)) + 40|0);
       $752 = HEAP32[$751>>2]|0;
       (FUNCTION_TABLE_ii[$752 & 1023]($744)|0);
      } else {
       $753 = ((($746)) + 4|0);
       HEAP32[$745>>2] = $753;
       $754 = HEAP32[$746>>2]|0;
       (__ZNSt3__211char_traitsIwE11to_int_typeEw($754)|0);
      }
      $$0 = $743;
     }
     $741 = HEAP32[$5>>2]|0;
     $742 = $741 | 4;
     HEAP32[$5>>2] = $742;
     $$10 = 0;
     break L322;
    }
   } while(0);
   $755 = HEAP32[$13>>2]|0;
   $756 = HEAP32[$14>>2]|0;
   $757 = ($755|0)==($756|0);
   if ($757) {
    $$10 = 1;
   } else {
    HEAP32[$25>>2] = 0;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19,$755,$756,$25);
    $758 = HEAP32[$25>>2]|0;
    $759 = ($758|0)==(0);
    if ($759) {
     $$10 = 1;
     break;
    } else {
     $760 = HEAP32[$5>>2]|0;
     $761 = $760 | 4;
     HEAP32[$5>>2] = $761;
     $$10 = 0;
     break;
    }
   }
  }
 } while(0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($23);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($22);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($21);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $762 = HEAP32[$13>>2]|0;
 HEAP32[$13>>2] = 0;
 $763 = ($762|0)==(0|0);
 if (!($763)) {
  $764 = ((($13)) + 4|0);
  $765 = HEAP32[$764>>2]|0;
  FUNCTION_TABLE_vi[$765 & 1023]($762);
 }
 STACKTOP = sp;return ($$10|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$034 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $4 = sp;
 $5 = ((($0)) + 8|0);
 $6 = ((($5)) + 3|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = ($7<<24>>24)<(0);
 if ($8) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = HEAP32[$5>>2]|0;
  $13 = $12 & 2147483647;
  $phitmp$i = (($13) + -1)|0;
  $38 = $11;$39 = $phitmp$i;
 } else {
  $9 = $7&255;
  $38 = $9;$39 = 1;
 }
 $14 = $2;
 $15 = $1;
 $16 = (($14) - ($15))|0;
 $17 = $16 >> 2;
 $18 = ($16|0)==(0);
 do {
  if (!($18)) {
   if ($8) {
    $19 = HEAP32[$0>>2]|0;
    $20 = ((($0)) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $24 = $19;$25 = $21;
   } else {
    $22 = $7&255;
    $24 = $0;$25 = $22;
   }
   $23 = (($24) + ($25<<2)|0);
   $26 = (__ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($1,$24,$23)|0);
   if ($26) {
    ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($3,$1,$2);
    $27 = ((($3)) + 8|0);
    $28 = ((($27)) + 3|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = ($29<<24>>24)<(0);
    $31 = HEAP32[$3>>2]|0;
    $32 = ((($3)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = $29&255;
    $35 = $30 ? $31 : $3;
    $36 = $30 ? $33 : $34;
    (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm($0,$35,$36)|0);
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
    break;
   }
   $37 = (($39) - ($38))|0;
   $40 = ($37>>>0)<($17>>>0);
   if ($40) {
    $41 = (($38) + ($17))|0;
    $42 = (($41) - ($39))|0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0,$39,$42,$38,$38,0,0);
   }
   $43 = HEAP8[$6>>0]|0;
   $44 = ($43<<24>>24)<(0);
   if ($44) {
    $45 = HEAP32[$0>>2]|0;
    $47 = $45;
   } else {
    $47 = $0;
   }
   $46 = (($47) + ($38<<2)|0);
   $$0 = $46;$$034 = $1;
   while(1) {
    $48 = ($$034|0)==($2|0);
    if ($48) {
     break;
    }
    __ZNSt3__211char_traitsIwE6assignERwRKw($$0,$$034);
    $49 = ((($$0)) + 4|0);
    $50 = ((($$034)) + 4|0);
    $$0 = $49;$$034 = $50;
   }
   HEAP32[$4>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($$0,$4);
   $51 = (($38) + ($17))|0;
   $52 = HEAP8[$6>>0]|0;
   $53 = ($52<<24>>24)<(0);
   if ($53) {
    $54 = ((($0)) + 4|0);
    HEAP32[$54>>2] = $51;
    break;
   } else {
    $55 = $51&255;
    HEAP8[$6>>0] = $55;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)<=($0>>>0);
 $4 = ($0>>>0)<($2>>>0);
 $spec$select = $3 & $4;
 return ($spec$select|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1 = 0, $$1$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = $2;
 $5 = $1;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ($7>>>0)>(1073741807);
 if ($8) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $9 = ($7>>>0)<(2);
 do {
  if ($9) {
   $10 = $7&255;
   $11 = ((($0)) + 8|0);
   $12 = ((($11)) + 3|0);
   HEAP8[$12>>0] = $10;
   $$1$ph = $0;
  } else {
   $13 = (($7) + 4)|0;
   $14 = $13 & -4;
   $15 = ($14>>>0)>(1073741823);
   if ($15) {
    _abort();
    // unreachable;
   } else {
    $16 = $14 << 2;
    $17 = (__Znwm($16)|0);
    HEAP32[$0>>2] = $17;
    $18 = $14 | -2147483648;
    $19 = ((($0)) + 8|0);
    HEAP32[$19>>2] = $18;
    $20 = ((($0)) + 4|0);
    HEAP32[$20>>2] = $7;
    $$1$ph = $17;
    break;
   }
  }
 } while(0);
 $$0 = $1;$$1 = $$1$ph;
 while(1) {
  $21 = ($$0|0)==($2|0);
  if ($21) {
   break;
  }
  __ZNSt3__211char_traitsIwE6assignERwRKw($$1,$$0);
  $22 = ((($$0)) + 4|0);
  $23 = ((($$1)) + 4|0);
  $$0 = $22;$$1 = $23;
 }
 HEAP32[$3>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$1,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0$i$i$i = 0, $$0$i$i$i43 = 0, $$0$i$i$i47 = 0, $$0$i$i$i54 = 0, $$0$i$i$i62 = 0, $$0$i$i$i70 = 0, $$0$i$i$i78 = 0, $$0$i$i$i86 = 0, $$pr$i$i$i = 0, $$pr$i$i$i39 = 0, $$pr$i$i$i46 = 0, $$pr$i$i$i50 = 0, $$pr$i$i$i58 = 0, $$pr$i$i$i66 = 0, $$pr$i$i$i74 = 0, $$pr$i$i$i82 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i44 = 0, $exitcond$i$i$i48 = 0, $exitcond$i$i$i55 = 0;
 var $exitcond$i$i$i63 = 0, $exitcond$i$i$i71 = 0, $exitcond$i$i$i79 = 0, $exitcond$i$i$i87 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $10 = sp + 148|0;
 $11 = sp + 144|0;
 $12 = sp + 155|0;
 $13 = sp + 154|0;
 $14 = sp + 140|0;
 $15 = sp + 136|0;
 $16 = sp + 132|0;
 $17 = sp + 128|0;
 $18 = sp + 124|0;
 $19 = sp + 120|0;
 $20 = sp + 153|0;
 $21 = sp + 152|0;
 $22 = sp + 116|0;
 $23 = sp + 112|0;
 $24 = sp + 108|0;
 $25 = sp + 104|0;
 $26 = sp + 100|0;
 $27 = sp + 88|0;
 $28 = sp + 76|0;
 $29 = sp + 64|0;
 $30 = sp + 52|0;
 $31 = sp + 48|0;
 $32 = sp + 36|0;
 $33 = sp + 24|0;
 $34 = sp + 12|0;
 $35 = sp;
 if ($0) {
  $36 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,36972)|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($37)) + 44|0);
  $39 = HEAP32[$38>>2]|0;
  FUNCTION_TABLE_vii[$39 & 1023]($26,$36);
  $40 = HEAP32[$26>>2]|0;
  HEAP8[$2>>0]=$40&255;HEAP8[$2+1>>0]=($40>>8)&255;HEAP8[$2+2>>0]=($40>>16)&255;HEAP8[$2+3>>0]=$40>>24;
  $41 = HEAP32[$36>>2]|0;
  $42 = ((($41)) + 32|0);
  $43 = HEAP32[$42>>2]|0;
  FUNCTION_TABLE_vii[$43 & 1023]($27,$36);
  $44 = ((($8)) + 8|0);
  $45 = ((($44)) + 3|0);
  $46 = HEAP8[$45>>0]|0;
  $47 = ($46<<24>>24)<(0);
  if ($47) {
   $48 = HEAP32[$8>>2]|0;
   HEAP32[$24>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($48,$24);
   $49 = ((($8)) + 4|0);
   HEAP32[$49>>2] = 0;
   $$pr$i$i$i = HEAP8[$45>>0]|0;
   $50 = ($$pr$i$i$i<<24>>24)<(0);
   if ($50) {
    $51 = HEAP32[$8>>2]|0;
    $52 = HEAP32[$44>>2]|0;
    $53 = $52 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($51,$53);
    HEAP32[$44>>2] = 0;
   }
  } else {
   HEAP32[$25>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8,$25);
   HEAP8[$45>>0] = 0;
  }
  ;HEAP32[$8>>2]=HEAP32[$27>>2]|0;HEAP32[$8+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$27+8>>2]|0;
  $$0$i$i$i = 0;
  while(1) {
   $exitcond$i$i$i = ($$0$i$i$i|0)==(3);
   if ($exitcond$i$i$i) {
    break;
   }
   $54 = (($27) + ($$0$i$i$i<<2)|0);
   HEAP32[$54>>2] = 0;
   $55 = (($$0$i$i$i) + 1)|0;
   $$0$i$i$i = $55;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($27);
  $56 = HEAP32[$36>>2]|0;
  $57 = ((($56)) + 28|0);
  $58 = HEAP32[$57>>2]|0;
  FUNCTION_TABLE_vii[$58 & 1023]($28,$36);
  $59 = ((($7)) + 8|0);
  $60 = ((($59)) + 3|0);
  $61 = HEAP8[$60>>0]|0;
  $62 = ($61<<24>>24)<(0);
  if ($62) {
   $63 = HEAP32[$7>>2]|0;
   HEAP32[$22>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($63,$22);
   $64 = ((($7)) + 4|0);
   HEAP32[$64>>2] = 0;
   $$pr$i$i$i39 = HEAP8[$60>>0]|0;
   $65 = ($$pr$i$i$i39<<24>>24)<(0);
   if ($65) {
    $66 = HEAP32[$7>>2]|0;
    $67 = HEAP32[$59>>2]|0;
    $68 = $67 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($66,$68);
    HEAP32[$59>>2] = 0;
   }
  } else {
   HEAP32[$23>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7,$23);
   HEAP8[$60>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$28>>2]|0;HEAP32[$7+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$28+8>>2]|0;
  $$0$i$i$i43 = 0;
  while(1) {
   $exitcond$i$i$i44 = ($$0$i$i$i43|0)==(3);
   if ($exitcond$i$i$i44) {
    break;
   }
   $69 = (($28) + ($$0$i$i$i43<<2)|0);
   HEAP32[$69>>2] = 0;
   $70 = (($$0$i$i$i43) + 1)|0;
   $$0$i$i$i43 = $70;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($28);
  $71 = HEAP32[$36>>2]|0;
  $72 = ((($71)) + 12|0);
  $73 = HEAP32[$72>>2]|0;
  $74 = (FUNCTION_TABLE_ii[$73 & 1023]($36)|0);
  HEAP32[$3>>2] = $74;
  $75 = HEAP32[$36>>2]|0;
  $76 = ((($75)) + 16|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = (FUNCTION_TABLE_ii[$77 & 1023]($36)|0);
  HEAP32[$4>>2] = $78;
  $79 = HEAP32[$36>>2]|0;
  $80 = ((($79)) + 20|0);
  $81 = HEAP32[$80>>2]|0;
  FUNCTION_TABLE_vii[$81 & 1023]($29,$36);
  $82 = ((($5)) + 11|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = ($83<<24>>24)<(0);
  if ($84) {
   $85 = HEAP32[$5>>2]|0;
   HEAP8[$20>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($85,$20);
   $86 = ((($5)) + 4|0);
   HEAP32[$86>>2] = 0;
   $$pr$i$i$i46 = HEAP8[$82>>0]|0;
   $87 = ($$pr$i$i$i46<<24>>24)<(0);
   if ($87) {
    $88 = HEAP32[$5>>2]|0;
    $89 = ((($5)) + 8|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = $90 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($88,$91);
    HEAP32[$89>>2] = 0;
   }
  } else {
   HEAP8[$21>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5,$21);
   HEAP8[$82>>0] = 0;
  }
  ;HEAP32[$5>>2]=HEAP32[$29>>2]|0;HEAP32[$5+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$29+8>>2]|0;
  $$0$i$i$i47 = 0;
  while(1) {
   $exitcond$i$i$i48 = ($$0$i$i$i47|0)==(3);
   if ($exitcond$i$i$i48) {
    break;
   }
   $92 = (($29) + ($$0$i$i$i47<<2)|0);
   HEAP32[$92>>2] = 0;
   $93 = (($$0$i$i$i47) + 1)|0;
   $$0$i$i$i47 = $93;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
  $94 = HEAP32[$36>>2]|0;
  $95 = ((($94)) + 24|0);
  $96 = HEAP32[$95>>2]|0;
  FUNCTION_TABLE_vii[$96 & 1023]($30,$36);
  $97 = ((($6)) + 8|0);
  $98 = ((($97)) + 3|0);
  $99 = HEAP8[$98>>0]|0;
  $100 = ($99<<24>>24)<(0);
  if ($100) {
   $101 = HEAP32[$6>>2]|0;
   HEAP32[$18>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($101,$18);
   $102 = ((($6)) + 4|0);
   HEAP32[$102>>2] = 0;
   $$pr$i$i$i50 = HEAP8[$98>>0]|0;
   $103 = ($$pr$i$i$i50<<24>>24)<(0);
   if ($103) {
    $104 = HEAP32[$6>>2]|0;
    $105 = HEAP32[$97>>2]|0;
    $106 = $105 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($104,$106);
    HEAP32[$97>>2] = 0;
   }
  } else {
   HEAP32[$19>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6,$19);
   HEAP8[$98>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$30>>2]|0;HEAP32[$6+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$30+8>>2]|0;
  $$0$i$i$i54 = 0;
  while(1) {
   $exitcond$i$i$i55 = ($$0$i$i$i54|0)==(3);
   if ($exitcond$i$i$i55) {
    break;
   }
   $107 = (($30) + ($$0$i$i$i54<<2)|0);
   HEAP32[$107>>2] = 0;
   $108 = (($$0$i$i$i54) + 1)|0;
   $$0$i$i$i54 = $108;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($30);
  $109 = HEAP32[$36>>2]|0;
  $110 = ((($109)) + 36|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (FUNCTION_TABLE_ii[$111 & 1023]($36)|0);
  $storemerge = $112;
 } else {
  $113 = (__ZNKSt3__26locale9use_facetERNS0_2idE($1,36964)|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = ((($114)) + 44|0);
  $116 = HEAP32[$115>>2]|0;
  FUNCTION_TABLE_vii[$116 & 1023]($31,$113);
  $117 = HEAP32[$31>>2]|0;
  HEAP8[$2>>0]=$117&255;HEAP8[$2+1>>0]=($117>>8)&255;HEAP8[$2+2>>0]=($117>>16)&255;HEAP8[$2+3>>0]=$117>>24;
  $118 = HEAP32[$113>>2]|0;
  $119 = ((($118)) + 32|0);
  $120 = HEAP32[$119>>2]|0;
  FUNCTION_TABLE_vii[$120 & 1023]($32,$113);
  $121 = ((($8)) + 8|0);
  $122 = ((($121)) + 3|0);
  $123 = HEAP8[$122>>0]|0;
  $124 = ($123<<24>>24)<(0);
  if ($124) {
   $125 = HEAP32[$8>>2]|0;
   HEAP32[$16>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($125,$16);
   $126 = ((($8)) + 4|0);
   HEAP32[$126>>2] = 0;
   $$pr$i$i$i58 = HEAP8[$122>>0]|0;
   $127 = ($$pr$i$i$i58<<24>>24)<(0);
   if ($127) {
    $128 = HEAP32[$8>>2]|0;
    $129 = HEAP32[$121>>2]|0;
    $130 = $129 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($128,$130);
    HEAP32[$121>>2] = 0;
   }
  } else {
   HEAP32[$17>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8,$17);
   HEAP8[$122>>0] = 0;
  }
  ;HEAP32[$8>>2]=HEAP32[$32>>2]|0;HEAP32[$8+4>>2]=HEAP32[$32+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$32+8>>2]|0;
  $$0$i$i$i62 = 0;
  while(1) {
   $exitcond$i$i$i63 = ($$0$i$i$i62|0)==(3);
   if ($exitcond$i$i$i63) {
    break;
   }
   $131 = (($32) + ($$0$i$i$i62<<2)|0);
   HEAP32[$131>>2] = 0;
   $132 = (($$0$i$i$i62) + 1)|0;
   $$0$i$i$i62 = $132;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($32);
  $133 = HEAP32[$113>>2]|0;
  $134 = ((($133)) + 28|0);
  $135 = HEAP32[$134>>2]|0;
  FUNCTION_TABLE_vii[$135 & 1023]($33,$113);
  $136 = ((($7)) + 8|0);
  $137 = ((($136)) + 3|0);
  $138 = HEAP8[$137>>0]|0;
  $139 = ($138<<24>>24)<(0);
  if ($139) {
   $140 = HEAP32[$7>>2]|0;
   HEAP32[$14>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($140,$14);
   $141 = ((($7)) + 4|0);
   HEAP32[$141>>2] = 0;
   $$pr$i$i$i66 = HEAP8[$137>>0]|0;
   $142 = ($$pr$i$i$i66<<24>>24)<(0);
   if ($142) {
    $143 = HEAP32[$7>>2]|0;
    $144 = HEAP32[$136>>2]|0;
    $145 = $144 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($143,$145);
    HEAP32[$136>>2] = 0;
   }
  } else {
   HEAP32[$15>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7,$15);
   HEAP8[$137>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$33>>2]|0;HEAP32[$7+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$33+8>>2]|0;
  $$0$i$i$i70 = 0;
  while(1) {
   $exitcond$i$i$i71 = ($$0$i$i$i70|0)==(3);
   if ($exitcond$i$i$i71) {
    break;
   }
   $146 = (($33) + ($$0$i$i$i70<<2)|0);
   HEAP32[$146>>2] = 0;
   $147 = (($$0$i$i$i70) + 1)|0;
   $$0$i$i$i70 = $147;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($33);
  $148 = HEAP32[$113>>2]|0;
  $149 = ((($148)) + 12|0);
  $150 = HEAP32[$149>>2]|0;
  $151 = (FUNCTION_TABLE_ii[$150 & 1023]($113)|0);
  HEAP32[$3>>2] = $151;
  $152 = HEAP32[$113>>2]|0;
  $153 = ((($152)) + 16|0);
  $154 = HEAP32[$153>>2]|0;
  $155 = (FUNCTION_TABLE_ii[$154 & 1023]($113)|0);
  HEAP32[$4>>2] = $155;
  $156 = HEAP32[$113>>2]|0;
  $157 = ((($156)) + 20|0);
  $158 = HEAP32[$157>>2]|0;
  FUNCTION_TABLE_vii[$158 & 1023]($34,$113);
  $159 = ((($5)) + 11|0);
  $160 = HEAP8[$159>>0]|0;
  $161 = ($160<<24>>24)<(0);
  if ($161) {
   $162 = HEAP32[$5>>2]|0;
   HEAP8[$12>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($162,$12);
   $163 = ((($5)) + 4|0);
   HEAP32[$163>>2] = 0;
   $$pr$i$i$i74 = HEAP8[$159>>0]|0;
   $164 = ($$pr$i$i$i74<<24>>24)<(0);
   if ($164) {
    $165 = HEAP32[$5>>2]|0;
    $166 = ((($5)) + 8|0);
    $167 = HEAP32[$166>>2]|0;
    $168 = $167 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($165,$168);
    HEAP32[$166>>2] = 0;
   }
  } else {
   HEAP8[$13>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5,$13);
   HEAP8[$159>>0] = 0;
  }
  ;HEAP32[$5>>2]=HEAP32[$34>>2]|0;HEAP32[$5+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$34+8>>2]|0;
  $$0$i$i$i78 = 0;
  while(1) {
   $exitcond$i$i$i79 = ($$0$i$i$i78|0)==(3);
   if ($exitcond$i$i$i79) {
    break;
   }
   $169 = (($34) + ($$0$i$i$i78<<2)|0);
   HEAP32[$169>>2] = 0;
   $170 = (($$0$i$i$i78) + 1)|0;
   $$0$i$i$i78 = $170;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
  $171 = HEAP32[$113>>2]|0;
  $172 = ((($171)) + 24|0);
  $173 = HEAP32[$172>>2]|0;
  FUNCTION_TABLE_vii[$173 & 1023]($35,$113);
  $174 = ((($6)) + 8|0);
  $175 = ((($174)) + 3|0);
  $176 = HEAP8[$175>>0]|0;
  $177 = ($176<<24>>24)<(0);
  if ($177) {
   $178 = HEAP32[$6>>2]|0;
   HEAP32[$10>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($178,$10);
   $179 = ((($6)) + 4|0);
   HEAP32[$179>>2] = 0;
   $$pr$i$i$i82 = HEAP8[$175>>0]|0;
   $180 = ($$pr$i$i$i82<<24>>24)<(0);
   if ($180) {
    $181 = HEAP32[$6>>2]|0;
    $182 = HEAP32[$174>>2]|0;
    $183 = $182 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($181,$183);
    HEAP32[$174>>2] = 0;
   }
  } else {
   HEAP32[$11>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6,$11);
   HEAP8[$175>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$35>>2]|0;HEAP32[$6+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$35+8>>2]|0;
  $$0$i$i$i86 = 0;
  while(1) {
   $exitcond$i$i$i87 = ($$0$i$i$i86|0)==(3);
   if ($exitcond$i$i$i87) {
    break;
   }
   $184 = (($35) + ($$0$i$i$i86<<2)|0);
   HEAP32[$184>>2] = 0;
   $185 = (($$0$i$i$i86) + 1)|0;
   $$0$i$i$i86 = $185;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($35);
  $186 = HEAP32[$113>>2]|0;
  $187 = ((($186)) + 36|0);
  $188 = HEAP32[$187>>2]|0;
  $189 = (FUNCTION_TABLE_ii[$188 & 1023]($113)|0);
  $storemerge = $189;
 }
 HEAP32[$9>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pr = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select35 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(661|0);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7;
 $9 = (($6) - ($8))|0;
 $10 = ($9>>>0)<(2147483647);
 $11 = $9 << 1;
 $12 = ($11|0)==(0);
 $spec$select = $12 ? 4 : $11;
 $13 = $10 ? $spec$select : -1;
 $14 = HEAP32[$1>>2]|0;
 $15 = (($14) - ($8))|0;
 $16 = $15 >> 2;
 $spec$select35 = $5 ? $7 : 0;
 $17 = (_realloc($spec$select35,$13)|0);
 $18 = ($17|0)==(0|0);
 if ($18) {
  __ZSt17__throw_bad_allocv();
  // unreachable;
 }
 if ($5) {
  $19 = $17;
  HEAP32[$0>>2] = $19;
  $25 = $17;
 } else {
  $$pr = HEAP32[$0>>2]|0;
  $20 = $17;
  HEAP32[$0>>2] = $20;
  $21 = ($$pr|0)==(0|0);
  if ($21) {
   $25 = $17;
  } else {
   $22 = HEAP32[$3>>2]|0;
   FUNCTION_TABLE_vi[$22 & 1023]($$pr);
   $$pre = HEAP32[$0>>2]|0;
   $25 = $$pre;
  }
 }
 HEAP32[$3>>2] = (662);
 $23 = $13 >>> 2;
 $24 = (($25) + ($16<<2)|0);
 HEAP32[$1>>2] = $24;
 $26 = HEAP32[$0>>2]|0;
 $27 = (($26) + ($23<<2)|0);
 HEAP32[$2>>2] = $27;
 return;
}
function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i41 = 0, $$0$i$i44 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$sink75 = 0, $$sink76 = 0, $$sink77 = 0, $$sroa$053$0 = 0, $$sroa$061$0 = 0, $$sroa$070$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i42 = 0, $exitcond$i$i45 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $$byval_copy = sp + 404|0;
 $vararg_buffer1 = sp + 336|0;
 $vararg_buffer = sp + 328|0;
 $6 = sp + 224|0;
 $7 = sp + 400|0;
 $8 = sp + 112|0;
 $9 = sp + 396|0;
 $10 = sp + 412|0;
 $11 = sp + 409|0;
 $12 = sp + 408|0;
 $13 = sp + 384|0;
 $14 = sp + 372|0;
 $15 = sp + 360|0;
 $16 = sp + 356|0;
 $17 = sp;
 $18 = sp + 352|0;
 $19 = sp + 348|0;
 $20 = sp + 344|0;
 HEAP32[$7>>2] = $6;
 HEAPF64[$vararg_buffer>>3] = $5;
 $21 = (_snprintf($6,100,24698,$vararg_buffer)|0);
 $22 = ($21>>>0)>(99);
 if ($22) {
  $23 = (__ZNSt3__26__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $5;
  $24 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$23,24698,$vararg_buffer1)|0);
  $25 = HEAP32[$7>>2]|0;
  $26 = ($25|0)==(0|0);
  if ($26) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $27 = $25;
  $28 = (_malloc($24)|0);
  $29 = $28;
  $30 = ($28|0)==(0|0);
  if ($30) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$0 = $28;$$038 = $24;$$sroa$061$0 = $29;$$sroa$070$0 = $27;
  }
 } else {
  $$0 = $8;$$038 = $21;$$sroa$061$0 = 0;$$sroa$070$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9,$3);
 $31 = (__ZNKSt3__26locale9use_facetERNS0_2idE($9,36724)|0);
 $32 = HEAP32[$7>>2]|0;
 $33 = (($32) + ($$038)|0);
 $34 = HEAP32[$31>>2]|0;
 $35 = ((($34)) + 32|0);
 $36 = HEAP32[$35>>2]|0;
 (FUNCTION_TABLE_iiiii[$36 & 511]($31,$32,$33,$$0)|0);
 $37 = ($$038|0)==(0);
 if ($37) {
  $47 = 0;
 } else {
  $38 = HEAP32[$7>>2]|0;
  $39 = HEAP8[$38>>0]|0;
  $40 = ($39<<24>>24)==(45);
  $47 = $40;
 }
 ;HEAP32[$13>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $41 = (($13) + ($$0$i$i<<2)|0);
  HEAP32[$41>>2] = 0;
  $42 = (($$0$i$i) + 1)|0;
  $$0$i$i = $42;
 }
 ;HEAP32[$14>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
 $$0$i$i41 = 0;
 while(1) {
  $exitcond$i$i42 = ($$0$i$i41|0)==(3);
  if ($exitcond$i$i42) {
   break;
  }
  $43 = (($14) + ($$0$i$i41<<2)|0);
  HEAP32[$43>>2] = 0;
  $44 = (($$0$i$i41) + 1)|0;
  $$0$i$i41 = $44;
 }
 ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;
 $$0$i$i44 = 0;
 while(1) {
  $exitcond$i$i45 = ($$0$i$i44|0)==(3);
  if ($exitcond$i$i45) {
   break;
  }
  $45 = (($15) + ($$0$i$i44<<2)|0);
  HEAP32[$45>>2] = 0;
  $46 = (($$0$i$i44) + 1)|0;
  $$0$i$i44 = $46;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2,$47,$9,$10,$11,$12,$13,$14,$15,$16);
 $48 = HEAP32[$16>>2]|0;
 $49 = ($$038|0)>($48|0);
 if ($49) {
  $50 = (($$038) - ($48))|0;
  $51 = $50 << 1;
  $52 = ((($15)) + 11|0);
  $53 = HEAP8[$52>>0]|0;
  $54 = ($53<<24>>24)<(0);
  $55 = ((($15)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = $53&255;
  $58 = $54 ? $56 : $57;
  $59 = ((($14)) + 11|0);
  $60 = HEAP8[$59>>0]|0;
  $61 = ($60<<24>>24)<(0);
  $62 = ((($14)) + 4|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = $60&255;
  $65 = $61 ? $63 : $64;
  $66 = (($48) + 1)|0;
  $67 = (($66) + ($51))|0;
  $$sink75 = $65;$$sink76 = $67;$$sink77 = $58;
 } else {
  $68 = ((($15)) + 11|0);
  $69 = HEAP8[$68>>0]|0;
  $70 = ($69<<24>>24)<(0);
  $71 = ((($15)) + 4|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = $69&255;
  $74 = $70 ? $72 : $73;
  $75 = ((($14)) + 11|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = ($76<<24>>24)<(0);
  $78 = ((($14)) + 4|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = $76&255;
  $81 = $77 ? $79 : $80;
  $82 = (($48) + 2)|0;
  $$sink75 = $81;$$sink76 = $82;$$sink77 = $74;
 }
 $83 = (($$sink76) + ($$sink77))|0;
 $84 = (($83) + ($$sink75))|0;
 $85 = ($84>>>0)>(100);
 if ($85) {
  $86 = (_malloc($84)|0);
  $87 = $86;
  $88 = ($86|0)==(0|0);
  if ($88) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$037 = $86;$$sroa$053$0 = $87;
  }
 } else {
  $$037 = $17;$$sroa$053$0 = 0;
 }
 $89 = ((($3)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = (($$0) + ($$038)|0);
 $92 = HEAP8[$11>>0]|0;
 $93 = HEAP8[$12>>0]|0;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$037,$18,$19,$90,$$0,$91,$31,$47,$10,$92,$93,$13,$14,$15,$48);
 $94 = HEAP32[$1>>2]|0;
 HEAP32[$20>>2] = $94;
 $95 = HEAP32[$18>>2]|0;
 $96 = HEAP32[$19>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$20>>2]|0;
 $97 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$037,$95,$96,$3,$4)|0);
 $98 = ($$sroa$053$0|0)==(0);
 if (!($98)) {
  $99 = $$sroa$053$0;
  _free($99);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 $100 = ($$sroa$061$0|0)==(0);
 if (!($100)) {
  $101 = $$sroa$061$0;
  _free($101);
 }
 $102 = ($$sroa$070$0|0)==(0);
 if (!($102)) {
  $103 = $$sroa$070$0;
  _free($103);
 }
 STACKTOP = sp;return ($97|0);
}
function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i29 = 0, $$byval_copy = 0, $$sink47 = 0, $$sink48 = 0, $$sink49 = 0, $$sroa$041$0 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i27 = 0, $exitcond$i$i30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $$byval_copy = sp + 156|0;
 $6 = sp + 152|0;
 $7 = sp + 164|0;
 $8 = sp + 161|0;
 $9 = sp + 160|0;
 $10 = sp + 140|0;
 $11 = sp + 128|0;
 $12 = sp + 116|0;
 $13 = sp + 112|0;
 $14 = sp;
 $15 = sp + 108|0;
 $16 = sp + 104|0;
 $17 = sp + 100|0;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36724)|0);
 $19 = ((($5)) + 11|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = ($20<<24>>24)<(0);
 $22 = ((($5)) + 4|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $20&255;
 $25 = $21 ? $23 : $24;
 $26 = ($25|0)==(0);
 if ($26) {
  $41 = 0;
 } else {
  $27 = HEAP32[$5>>2]|0;
  $28 = $21 ? $27 : $5;
  $29 = HEAP8[$28>>0]|0;
  $30 = HEAP32[$18>>2]|0;
  $31 = ((($30)) + 28|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = (FUNCTION_TABLE_iii[$32 & 1023]($18,45)|0);
  $34 = ($29<<24>>24)==($33<<24>>24);
  $41 = $34;
 }
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $35 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$35>>2] = 0;
  $36 = (($$0$i$i) + 1)|0;
  $$0$i$i = $36;
 }
 ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
 $$0$i$i26 = 0;
 while(1) {
  $exitcond$i$i27 = ($$0$i$i26|0)==(3);
  if ($exitcond$i$i27) {
   break;
  }
  $37 = (($11) + ($$0$i$i26<<2)|0);
  HEAP32[$37>>2] = 0;
  $38 = (($$0$i$i26) + 1)|0;
  $$0$i$i26 = $38;
 }
 ;HEAP32[$12>>2]=0|0;HEAP32[$12+4>>2]=0|0;HEAP32[$12+8>>2]=0|0;
 $$0$i$i29 = 0;
 while(1) {
  $exitcond$i$i30 = ($$0$i$i29|0)==(3);
  if ($exitcond$i$i30) {
   break;
  }
  $39 = (($12) + ($$0$i$i29<<2)|0);
  HEAP32[$39>>2] = 0;
  $40 = (($$0$i$i29) + 1)|0;
  $$0$i$i29 = $40;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2,$41,$6,$7,$8,$9,$10,$11,$12,$13);
 $42 = HEAP8[$19>>0]|0;
 $43 = ($42<<24>>24)<(0);
 $44 = HEAP32[$22>>2]|0;
 $45 = $42&255;
 $46 = $43 ? $44 : $45;
 $47 = HEAP32[$13>>2]|0;
 $48 = ($46|0)>($47|0);
 if ($48) {
  $49 = (($46) - ($47))|0;
  $50 = $49 << 1;
  $51 = ((($12)) + 11|0);
  $52 = HEAP8[$51>>0]|0;
  $53 = ($52<<24>>24)<(0);
  $54 = ((($12)) + 4|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = $52&255;
  $57 = $53 ? $55 : $56;
  $58 = ((($11)) + 11|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = ($59<<24>>24)<(0);
  $61 = ((($11)) + 4|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = $59&255;
  $64 = $60 ? $62 : $63;
  $65 = (($47) + 1)|0;
  $66 = (($65) + ($50))|0;
  $$sink47 = $64;$$sink48 = $66;$$sink49 = $57;
 } else {
  $67 = ((($12)) + 11|0);
  $68 = HEAP8[$67>>0]|0;
  $69 = ($68<<24>>24)<(0);
  $70 = ((($12)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = $68&255;
  $73 = $69 ? $71 : $72;
  $74 = ((($11)) + 11|0);
  $75 = HEAP8[$74>>0]|0;
  $76 = ($75<<24>>24)<(0);
  $77 = ((($11)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = $75&255;
  $80 = $76 ? $78 : $79;
  $81 = (($47) + 2)|0;
  $$sink47 = $80;$$sink48 = $81;$$sink49 = $73;
 }
 $82 = (($$sink48) + ($$sink49))|0;
 $83 = (($82) + ($$sink47))|0;
 $84 = ($83>>>0)>(100);
 if ($84) {
  $85 = (_malloc($83)|0);
  $86 = $85;
  $87 = ($85|0)==(0|0);
  if ($87) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$0 = $85;$$sroa$041$0 = $86;
  }
 } else {
  $$0 = $14;$$sroa$041$0 = 0;
 }
 $88 = ((($3)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = HEAP32[$5>>2]|0;
 $91 = $43 ? $90 : $5;
 $92 = (($91) + ($46)|0);
 $93 = HEAP8[$8>>0]|0;
 $94 = HEAP8[$9>>0]|0;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$0,$15,$16,$89,$91,$92,$18,$41,$7,$93,$94,$10,$11,$12,$47);
 $95 = HEAP32[$1>>2]|0;
 HEAP32[$17>>2] = $95;
 $96 = HEAP32[$15>>2]|0;
 $97 = HEAP32[$16>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$17>>2]|0;
 $98 = (__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$0,$96,$97,$3,$4)|0);
 $99 = ($$sroa$041$0|0)==(0);
 if (!($99)) {
  $100 = $$sroa$041$0;
  _free($100);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;return ($98|0);
}
function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0$i$i$i = 0, $$0$i$i$i51 = 0, $$0$i$i$i59 = 0, $$0$i$i$i67 = 0, $$0$i$i$i75 = 0, $$0$i$i$i83 = 0, $$0$i$i$i91 = 0, $$0$i$i$i99 = 0, $$pr$i$i$i = 0, $$pr$i$i$i47 = 0, $$pr$i$i$i55 = 0, $$pr$i$i$i63 = 0, $$pr$i$i$i71 = 0, $$pr$i$i$i79 = 0, $$pr$i$i$i87 = 0, $$pr$i$i$i95 = 0, $$pre$phi102Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i100 = 0, $exitcond$i$i$i52 = 0, $exitcond$i$i$i60 = 0, $exitcond$i$i$i68 = 0, $exitcond$i$i$i76 = 0, $exitcond$i$i$i84 = 0, $exitcond$i$i$i92 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $10 = sp + 127|0;
 $11 = sp + 126|0;
 $12 = sp + 125|0;
 $13 = sp + 124|0;
 $14 = sp + 123|0;
 $15 = sp + 122|0;
 $16 = sp + 121|0;
 $17 = sp + 120|0;
 $18 = sp + 119|0;
 $19 = sp + 118|0;
 $20 = sp + 117|0;
 $21 = sp + 116|0;
 $22 = sp + 115|0;
 $23 = sp + 114|0;
 $24 = sp + 113|0;
 $25 = sp + 112|0;
 $26 = sp + 108|0;
 $27 = sp + 96|0;
 $28 = sp + 92|0;
 $29 = sp + 80|0;
 $30 = sp + 68|0;
 $31 = sp + 56|0;
 $32 = sp + 52|0;
 $33 = sp + 40|0;
 $34 = sp + 36|0;
 $35 = sp + 24|0;
 $36 = sp + 12|0;
 $37 = sp;
 if ($0) {
  $38 = (__ZNKSt3__26locale9use_facetERNS0_2idE($2,36956)|0);
  if ($1) {
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($39)) + 44|0);
   $41 = HEAP32[$40>>2]|0;
   FUNCTION_TABLE_vii[$41 & 1023]($26,$38);
   $42 = HEAP32[$26>>2]|0;
   HEAP8[$3>>0]=$42&255;HEAP8[$3+1>>0]=($42>>8)&255;HEAP8[$3+2>>0]=($42>>16)&255;HEAP8[$3+3>>0]=$42>>24;
   $43 = HEAP32[$38>>2]|0;
   $44 = ((($43)) + 32|0);
   $45 = HEAP32[$44>>2]|0;
   FUNCTION_TABLE_vii[$45 & 1023]($27,$38);
   $46 = ((($8)) + 11|0);
   $47 = HEAP8[$46>>0]|0;
   $48 = ($47<<24>>24)<(0);
   if ($48) {
    $49 = HEAP32[$8>>2]|0;
    HEAP8[$24>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($49,$24);
    $50 = ((($8)) + 4|0);
    HEAP32[$50>>2] = 0;
    $$pr$i$i$i = HEAP8[$46>>0]|0;
    $51 = ($$pr$i$i$i<<24>>24)<(0);
    if ($51) {
     $52 = HEAP32[$8>>2]|0;
     $53 = ((($8)) + 8|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = $54 & 2147483647;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($52,$55);
     HEAP32[$53>>2] = 0;
    }
   } else {
    HEAP8[$25>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8,$25);
    HEAP8[$46>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$27>>2]|0;HEAP32[$8+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$27+8>>2]|0;
   $$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $56 = (($27) + ($$0$i$i$i<<2)|0);
    HEAP32[$56>>2] = 0;
    $57 = (($$0$i$i$i) + 1)|0;
    $$0$i$i$i = $57;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
   $$pre$phiZ2D = $38;
  } else {
   $58 = HEAP32[$38>>2]|0;
   $59 = ((($58)) + 40|0);
   $60 = HEAP32[$59>>2]|0;
   FUNCTION_TABLE_vii[$60 & 1023]($28,$38);
   $61 = HEAP32[$28>>2]|0;
   HEAP8[$3>>0]=$61&255;HEAP8[$3+1>>0]=($61>>8)&255;HEAP8[$3+2>>0]=($61>>16)&255;HEAP8[$3+3>>0]=$61>>24;
   $62 = HEAP32[$38>>2]|0;
   $63 = ((($62)) + 28|0);
   $64 = HEAP32[$63>>2]|0;
   FUNCTION_TABLE_vii[$64 & 1023]($29,$38);
   $65 = ((($8)) + 11|0);
   $66 = HEAP8[$65>>0]|0;
   $67 = ($66<<24>>24)<(0);
   if ($67) {
    $68 = HEAP32[$8>>2]|0;
    HEAP8[$22>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($68,$22);
    $69 = ((($8)) + 4|0);
    HEAP32[$69>>2] = 0;
    $$pr$i$i$i47 = HEAP8[$65>>0]|0;
    $70 = ($$pr$i$i$i47<<24>>24)<(0);
    if ($70) {
     $71 = HEAP32[$8>>2]|0;
     $72 = ((($8)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = $73 & 2147483647;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($71,$74);
     HEAP32[$72>>2] = 0;
    }
   } else {
    HEAP8[$23>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8,$23);
    HEAP8[$65>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$29>>2]|0;HEAP32[$8+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$29+8>>2]|0;
   $$0$i$i$i51 = 0;
   while(1) {
    $exitcond$i$i$i52 = ($$0$i$i$i51|0)==(3);
    if ($exitcond$i$i$i52) {
     break;
    }
    $75 = (($29) + ($$0$i$i$i51<<2)|0);
    HEAP32[$75>>2] = 0;
    $76 = (($$0$i$i$i51) + 1)|0;
    $$0$i$i$i51 = $76;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
   $$pre$phiZ2D = $38;
  }
  $77 = HEAP32[$38>>2]|0;
  $78 = ((($77)) + 12|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = (FUNCTION_TABLE_ii[$79 & 1023]($38)|0);
  HEAP8[$4>>0] = $80;
  $81 = HEAP32[$38>>2]|0;
  $82 = ((($81)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = (FUNCTION_TABLE_ii[$83 & 1023]($38)|0);
  HEAP8[$5>>0] = $84;
  $85 = HEAP32[$$pre$phiZ2D>>2]|0;
  $86 = ((($85)) + 20|0);
  $87 = HEAP32[$86>>2]|0;
  FUNCTION_TABLE_vii[$87 & 1023]($30,$38);
  $88 = ((($6)) + 11|0);
  $89 = HEAP8[$88>>0]|0;
  $90 = ($89<<24>>24)<(0);
  if ($90) {
   $91 = HEAP32[$6>>2]|0;
   HEAP8[$20>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($91,$20);
   $92 = ((($6)) + 4|0);
   HEAP32[$92>>2] = 0;
   $$pr$i$i$i55 = HEAP8[$88>>0]|0;
   $93 = ($$pr$i$i$i55<<24>>24)<(0);
   if ($93) {
    $94 = HEAP32[$6>>2]|0;
    $95 = ((($6)) + 8|0);
    $96 = HEAP32[$95>>2]|0;
    $97 = $96 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($94,$97);
    HEAP32[$95>>2] = 0;
   }
  } else {
   HEAP8[$21>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$21);
   HEAP8[$88>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$30>>2]|0;HEAP32[$6+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$30+8>>2]|0;
  $$0$i$i$i59 = 0;
  while(1) {
   $exitcond$i$i$i60 = ($$0$i$i$i59|0)==(3);
   if ($exitcond$i$i$i60) {
    break;
   }
   $98 = (($30) + ($$0$i$i$i59<<2)|0);
   HEAP32[$98>>2] = 0;
   $99 = (($$0$i$i$i59) + 1)|0;
   $$0$i$i$i59 = $99;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
  $100 = HEAP32[$$pre$phiZ2D>>2]|0;
  $101 = ((($100)) + 24|0);
  $102 = HEAP32[$101>>2]|0;
  FUNCTION_TABLE_vii[$102 & 1023]($31,$38);
  $103 = ((($7)) + 11|0);
  $104 = HEAP8[$103>>0]|0;
  $105 = ($104<<24>>24)<(0);
  if ($105) {
   $106 = HEAP32[$7>>2]|0;
   HEAP8[$18>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($106,$18);
   $107 = ((($7)) + 4|0);
   HEAP32[$107>>2] = 0;
   $$pr$i$i$i63 = HEAP8[$103>>0]|0;
   $108 = ($$pr$i$i$i63<<24>>24)<(0);
   if ($108) {
    $109 = HEAP32[$7>>2]|0;
    $110 = ((($7)) + 8|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = $111 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($109,$112);
    HEAP32[$110>>2] = 0;
   }
  } else {
   HEAP8[$19>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7,$19);
   HEAP8[$103>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$31>>2]|0;HEAP32[$7+4>>2]=HEAP32[$31+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$31+8>>2]|0;
  $$0$i$i$i67 = 0;
  while(1) {
   $exitcond$i$i$i68 = ($$0$i$i$i67|0)==(3);
   if ($exitcond$i$i$i68) {
    break;
   }
   $113 = (($31) + ($$0$i$i$i67<<2)|0);
   HEAP32[$113>>2] = 0;
   $114 = (($$0$i$i$i67) + 1)|0;
   $$0$i$i$i67 = $114;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
  $115 = HEAP32[$38>>2]|0;
  $116 = ((($115)) + 36|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = (FUNCTION_TABLE_ii[$117 & 1023]($38)|0);
  $storemerge = $118;
 } else {
  $119 = (__ZNKSt3__26locale9use_facetERNS0_2idE($2,36948)|0);
  if ($1) {
   $120 = HEAP32[$119>>2]|0;
   $121 = ((($120)) + 44|0);
   $122 = HEAP32[$121>>2]|0;
   FUNCTION_TABLE_vii[$122 & 1023]($32,$119);
   $123 = HEAP32[$32>>2]|0;
   HEAP8[$3>>0]=$123&255;HEAP8[$3+1>>0]=($123>>8)&255;HEAP8[$3+2>>0]=($123>>16)&255;HEAP8[$3+3>>0]=$123>>24;
   $124 = HEAP32[$119>>2]|0;
   $125 = ((($124)) + 32|0);
   $126 = HEAP32[$125>>2]|0;
   FUNCTION_TABLE_vii[$126 & 1023]($33,$119);
   $127 = ((($8)) + 11|0);
   $128 = HEAP8[$127>>0]|0;
   $129 = ($128<<24>>24)<(0);
   if ($129) {
    $130 = HEAP32[$8>>2]|0;
    HEAP8[$16>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($130,$16);
    $131 = ((($8)) + 4|0);
    HEAP32[$131>>2] = 0;
    $$pr$i$i$i71 = HEAP8[$127>>0]|0;
    $132 = ($$pr$i$i$i71<<24>>24)<(0);
    if ($132) {
     $133 = HEAP32[$8>>2]|0;
     $134 = ((($8)) + 8|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = $135 & 2147483647;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($133,$136);
     HEAP32[$134>>2] = 0;
    }
   } else {
    HEAP8[$17>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8,$17);
    HEAP8[$127>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$33>>2]|0;HEAP32[$8+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$33+8>>2]|0;
   $$0$i$i$i75 = 0;
   while(1) {
    $exitcond$i$i$i76 = ($$0$i$i$i75|0)==(3);
    if ($exitcond$i$i$i76) {
     break;
    }
    $137 = (($33) + ($$0$i$i$i75<<2)|0);
    HEAP32[$137>>2] = 0;
    $138 = (($$0$i$i$i75) + 1)|0;
    $$0$i$i$i75 = $138;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
   $$pre$phi102Z2D = $119;
  } else {
   $139 = HEAP32[$119>>2]|0;
   $140 = ((($139)) + 40|0);
   $141 = HEAP32[$140>>2]|0;
   FUNCTION_TABLE_vii[$141 & 1023]($34,$119);
   $142 = HEAP32[$34>>2]|0;
   HEAP8[$3>>0]=$142&255;HEAP8[$3+1>>0]=($142>>8)&255;HEAP8[$3+2>>0]=($142>>16)&255;HEAP8[$3+3>>0]=$142>>24;
   $143 = HEAP32[$119>>2]|0;
   $144 = ((($143)) + 28|0);
   $145 = HEAP32[$144>>2]|0;
   FUNCTION_TABLE_vii[$145 & 1023]($35,$119);
   $146 = ((($8)) + 11|0);
   $147 = HEAP8[$146>>0]|0;
   $148 = ($147<<24>>24)<(0);
   if ($148) {
    $149 = HEAP32[$8>>2]|0;
    HEAP8[$14>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($149,$14);
    $150 = ((($8)) + 4|0);
    HEAP32[$150>>2] = 0;
    $$pr$i$i$i79 = HEAP8[$146>>0]|0;
    $151 = ($$pr$i$i$i79<<24>>24)<(0);
    if ($151) {
     $152 = HEAP32[$8>>2]|0;
     $153 = ((($8)) + 8|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = $154 & 2147483647;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($152,$155);
     HEAP32[$153>>2] = 0;
    }
   } else {
    HEAP8[$15>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8,$15);
    HEAP8[$146>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$35>>2]|0;HEAP32[$8+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$35+8>>2]|0;
   $$0$i$i$i83 = 0;
   while(1) {
    $exitcond$i$i$i84 = ($$0$i$i$i83|0)==(3);
    if ($exitcond$i$i$i84) {
     break;
    }
    $156 = (($35) + ($$0$i$i$i83<<2)|0);
    HEAP32[$156>>2] = 0;
    $157 = (($$0$i$i$i83) + 1)|0;
    $$0$i$i$i83 = $157;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
   $$pre$phi102Z2D = $119;
  }
  $158 = HEAP32[$119>>2]|0;
  $159 = ((($158)) + 12|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = (FUNCTION_TABLE_ii[$160 & 1023]($119)|0);
  HEAP8[$4>>0] = $161;
  $162 = HEAP32[$119>>2]|0;
  $163 = ((($162)) + 16|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (FUNCTION_TABLE_ii[$164 & 1023]($119)|0);
  HEAP8[$5>>0] = $165;
  $166 = HEAP32[$$pre$phi102Z2D>>2]|0;
  $167 = ((($166)) + 20|0);
  $168 = HEAP32[$167>>2]|0;
  FUNCTION_TABLE_vii[$168 & 1023]($36,$119);
  $169 = ((($6)) + 11|0);
  $170 = HEAP8[$169>>0]|0;
  $171 = ($170<<24>>24)<(0);
  if ($171) {
   $172 = HEAP32[$6>>2]|0;
   HEAP8[$12>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($172,$12);
   $173 = ((($6)) + 4|0);
   HEAP32[$173>>2] = 0;
   $$pr$i$i$i87 = HEAP8[$169>>0]|0;
   $174 = ($$pr$i$i$i87<<24>>24)<(0);
   if ($174) {
    $175 = HEAP32[$6>>2]|0;
    $176 = ((($6)) + 8|0);
    $177 = HEAP32[$176>>2]|0;
    $178 = $177 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($175,$178);
    HEAP32[$176>>2] = 0;
   }
  } else {
   HEAP8[$13>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$13);
   HEAP8[$169>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$36>>2]|0;HEAP32[$6+4>>2]=HEAP32[$36+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$36+8>>2]|0;
  $$0$i$i$i91 = 0;
  while(1) {
   $exitcond$i$i$i92 = ($$0$i$i$i91|0)==(3);
   if ($exitcond$i$i$i92) {
    break;
   }
   $179 = (($36) + ($$0$i$i$i91<<2)|0);
   HEAP32[$179>>2] = 0;
   $180 = (($$0$i$i$i91) + 1)|0;
   $$0$i$i$i91 = $180;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  $181 = HEAP32[$$pre$phi102Z2D>>2]|0;
  $182 = ((($181)) + 24|0);
  $183 = HEAP32[$182>>2]|0;
  FUNCTION_TABLE_vii[$183 & 1023]($37,$119);
  $184 = ((($7)) + 11|0);
  $185 = HEAP8[$184>>0]|0;
  $186 = ($185<<24>>24)<(0);
  if ($186) {
   $187 = HEAP32[$7>>2]|0;
   HEAP8[$10>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($187,$10);
   $188 = ((($7)) + 4|0);
   HEAP32[$188>>2] = 0;
   $$pr$i$i$i95 = HEAP8[$184>>0]|0;
   $189 = ($$pr$i$i$i95<<24>>24)<(0);
   if ($189) {
    $190 = HEAP32[$7>>2]|0;
    $191 = ((($7)) + 8|0);
    $192 = HEAP32[$191>>2]|0;
    $193 = $192 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($190,$193);
    HEAP32[$191>>2] = 0;
   }
  } else {
   HEAP8[$11>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7,$11);
   HEAP8[$184>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$37>>2]|0;HEAP32[$7+4>>2]=HEAP32[$37+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$37+8>>2]|0;
  $$0$i$i$i99 = 0;
  while(1) {
   $exitcond$i$i$i100 = ($$0$i$i$i99|0)==(3);
   if ($exitcond$i$i$i100) {
    break;
   }
   $194 = (($37) + ($$0$i$i$i99<<2)|0);
   HEAP32[$194>>2] = 0;
   $195 = (($$0$i$i$i99) + 1)|0;
   $$0$i$i$i99 = $195;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
  $196 = HEAP32[$119>>2]|0;
  $197 = ((($196)) + 36|0);
  $198 = HEAP32[$197>>2]|0;
  $199 = (FUNCTION_TABLE_ii[$198 & 1023]($119)|0);
  $storemerge = $199;
 }
 HEAP32[$9>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i106 = 0, $$0$i$i113 = 0, $$0$ph = 0, $$0101 = 0, $$0104 = 0, $$07$i$i = 0, $$093 = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1100 = 0, $$1102 = 0, $$194 = 0, $$196 = 0, $$2 = 0, $$2103 = 0, $$3 = 0;
 var $$pn = 0, $$pn$pn = 0, $$sroa$08$0$i = 0, $$sroa$08$0$i112 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $exitcond = 0, $or$cond = 0, $spec$select = 0, $spec$select142 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = $0;
 $15 = ((($13)) + 11|0);
 $16 = ((($13)) + 4|0);
 $17 = ((($12)) + 11|0);
 $18 = ((($12)) + 4|0);
 $19 = $3 & 512;
 $20 = ($19|0)==(0);
 $21 = ((($6)) + 8|0);
 $22 = ($14|0)>(0);
 $23 = ((($11)) + 11|0);
 $24 = ((($11)) + 4|0);
 $$0104 = 0;$$097 = $4;
 while(1) {
  $exitcond = ($$0104|0)==(4);
  if ($exitcond) {
   break;
  }
  $31 = (($8) + ($$0104)|0);
  $32 = HEAP8[$31>>0]|0;
  $33 = $32 << 24 >> 24;
  L4: do {
   switch ($33|0) {
   case 0:  {
    $34 = HEAP32[$2>>2]|0;
    HEAP32[$1>>2] = $34;
    $$2 = $$097;
    break;
   }
   case 1:  {
    $35 = HEAP32[$2>>2]|0;
    HEAP32[$1>>2] = $35;
    $36 = HEAP32[$6>>2]|0;
    $37 = ((($36)) + 28|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (FUNCTION_TABLE_iii[$38 & 1023]($6,32)|0);
    $40 = HEAP32[$2>>2]|0;
    $41 = ((($40)) + 1|0);
    HEAP32[$2>>2] = $41;
    HEAP8[$40>>0] = $39;
    $$2 = $$097;
    break;
   }
   case 3:  {
    $42 = HEAP8[$15>>0]|0;
    $43 = ($42<<24>>24)<(0);
    $44 = HEAP32[$16>>2]|0;
    $45 = $42&255;
    $46 = $43 ? $44 : $45;
    $47 = ($46|0)==(0);
    if ($47) {
     $$2 = $$097;
    } else {
     $48 = HEAP32[$13>>2]|0;
     $49 = $43 ? $48 : $13;
     $50 = HEAP8[$49>>0]|0;
     $51 = HEAP32[$2>>2]|0;
     $52 = ((($51)) + 1|0);
     HEAP32[$2>>2] = $52;
     HEAP8[$51>>0] = $50;
     $$2 = $$097;
    }
    break;
   }
   case 2:  {
    $53 = HEAP8[$17>>0]|0;
    $54 = ($53<<24>>24)<(0);
    $55 = HEAP32[$18>>2]|0;
    $56 = $53&255;
    $57 = $54 ? $55 : $56;
    $58 = ($57|0)==(0);
    $or$cond = $20 | $58;
    if ($or$cond) {
     $$2 = $$097;
    } else {
     $59 = HEAP32[$12>>2]|0;
     $60 = $54 ? $59 : $12;
     $61 = (($60) + ($57)|0);
     $62 = HEAP32[$2>>2]|0;
     $$0$i$i113 = $62;$$sroa$08$0$i112 = $60;
     while(1) {
      $63 = ($$sroa$08$0$i112|0)==($61|0);
      if ($63) {
       break;
      }
      $64 = HEAP8[$$sroa$08$0$i112>>0]|0;
      HEAP8[$$0$i$i113>>0] = $64;
      $65 = ((($$sroa$08$0$i112)) + 1|0);
      $66 = ((($$0$i$i113)) + 1|0);
      $$0$i$i113 = $66;$$sroa$08$0$i112 = $65;
     }
     HEAP32[$2>>2] = $$0$i$i113;
     $$2 = $$097;
    }
    break;
   }
   case 4:  {
    $67 = HEAP32[$2>>2]|0;
    $68 = ((($$097)) + 1|0);
    $spec$select = $7 ? $68 : $$097;
    $$0101 = $spec$select;
    while(1) {
     $69 = ($$0101>>>0)<($5>>>0);
     if (!($69)) {
      break;
     }
     $70 = HEAP8[$$0101>>0]|0;
     $71 = ($70<<24>>24)>(-1);
     if (!($71)) {
      break;
     }
     $72 = $70 << 24 >> 24;
     $73 = HEAP32[$21>>2]|0;
     $74 = (($73) + ($72<<1)|0);
     $75 = HEAP16[$74>>1]|0;
     $76 = $75 & 2048;
     $77 = ($76<<16>>16)==(0);
     if ($77) {
      break;
     }
     $78 = ((($$0101)) + 1|0);
     $$0101 = $78;
    }
    if ($22) {
     $$099 = $14;$$1102 = $$0101;
     while(1) {
      $79 = ($$1102>>>0)>($spec$select>>>0);
      $80 = ($$099|0)>(0);
      $81 = $79 & $80;
      if (!($81)) {
       break;
      }
      $82 = ((($$1102)) + -1|0);
      $83 = HEAP8[$82>>0]|0;
      $84 = HEAP32[$2>>2]|0;
      $85 = ((($84)) + 1|0);
      HEAP32[$2>>2] = $85;
      HEAP8[$84>>0] = $83;
      $86 = (($$099) + -1)|0;
      $$099 = $86;$$1102 = $82;
     }
     if ($80) {
      $87 = HEAP32[$6>>2]|0;
      $88 = ((($87)) + 28|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = (FUNCTION_TABLE_iii[$89 & 1023]($6,48)|0);
      $94 = $90;
     } else {
      $94 = 0;
     }
     $$1100 = $$099;
     while(1) {
      $91 = ($$1100|0)>(0);
      $92 = HEAP32[$2>>2]|0;
      $93 = ((($92)) + 1|0);
      HEAP32[$2>>2] = $93;
      if (!($91)) {
       break;
      }
      HEAP8[$92>>0] = $94;
      $95 = (($$1100) + -1)|0;
      $$1100 = $95;
     }
     HEAP8[$92>>0] = $9;
     $$2103 = $$1102;
    } else {
     $$2103 = $$0101;
    }
    $96 = ($$2103|0)==($spec$select|0);
    L36: do {
     if ($96) {
      $97 = HEAP32[$6>>2]|0;
      $98 = ((($97)) + 28|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = (FUNCTION_TABLE_iii[$99 & 1023]($6,48)|0);
      $101 = HEAP32[$2>>2]|0;
      $102 = ((($101)) + 1|0);
      HEAP32[$2>>2] = $102;
      HEAP8[$101>>0] = $100;
     } else {
      $103 = HEAP8[$23>>0]|0;
      $104 = ($103<<24>>24)<(0);
      $105 = HEAP32[$24>>2]|0;
      $106 = $103&255;
      $107 = $104 ? $105 : $106;
      $108 = ($107|0)==(0);
      if ($108) {
       $$0$ph = -1;
      } else {
       $109 = HEAP32[$11>>2]|0;
       $110 = $104 ? $109 : $11;
       $111 = HEAP8[$110>>0]|0;
       $112 = $111 << 24 >> 24;
       $$0$ph = $112;
      }
      $$0 = $$0$ph;$$093 = 0;$$095 = 0;$$3 = $$2103;
      while(1) {
       $113 = ($$3|0)==($spec$select|0);
       if ($113) {
        break L36;
       }
       $114 = ($$095|0)==($$0|0);
       if ($114) {
        $115 = HEAP32[$2>>2]|0;
        $116 = ((($115)) + 1|0);
        HEAP32[$2>>2] = $116;
        HEAP8[$115>>0] = $10;
        $117 = (($$093) + 1)|0;
        $118 = HEAP8[$23>>0]|0;
        $119 = ($118<<24>>24)<(0);
        $120 = HEAP32[$24>>2]|0;
        $121 = $118&255;
        $122 = $119 ? $120 : $121;
        $123 = ($117>>>0)<($122>>>0);
        if ($123) {
         $124 = HEAP32[$11>>2]|0;
         $125 = $119 ? $124 : $11;
         $126 = (($125) + ($117)|0);
         $127 = HEAP8[$126>>0]|0;
         $128 = ($127<<24>>24)==(127);
         $129 = $127 << 24 >> 24;
         $spec$select142 = $128 ? -1 : $129;
         $$1 = $spec$select142;$$194 = $117;$$196 = 0;
        } else {
         $$1 = $$095;$$194 = $117;$$196 = 0;
        }
       } else {
        $$1 = $$0;$$194 = $$093;$$196 = $$095;
       }
       $130 = ((($$3)) + -1|0);
       $131 = HEAP8[$130>>0]|0;
       $132 = HEAP32[$2>>2]|0;
       $133 = ((($132)) + 1|0);
       HEAP32[$2>>2] = $133;
       HEAP8[$132>>0] = $131;
       $134 = (($$196) + 1)|0;
       $$0 = $$1;$$093 = $$194;$$095 = $134;$$3 = $130;
      }
     }
    } while(0);
    $135 = HEAP32[$2>>2]|0;
    $136 = ($67|0)==($135|0);
    if ($136) {
     $$2 = $spec$select;
    } else {
     $$0$i$i106 = $135;$$07$i$i = $67;
     while(1) {
      $137 = ((($$0$i$i106)) + -1|0);
      $138 = ($$07$i$i>>>0)<($137>>>0);
      if (!($138)) {
       $$2 = $spec$select;
       break L4;
      }
      $139 = HEAP8[$$07$i$i>>0]|0;
      $140 = HEAP8[$137>>0]|0;
      HEAP8[$$07$i$i>>0] = $140;
      HEAP8[$137>>0] = $139;
      $141 = ((($$07$i$i)) + 1|0);
      $$0$i$i106 = $137;$$07$i$i = $141;
     }
    }
    break;
   }
   default: {
    $$2 = $$097;
   }
   }
  } while(0);
  $142 = (($$0104) + 1)|0;
  $$0104 = $142;$$097 = $$2;
 }
 $25 = HEAP8[$15>>0]|0;
 $26 = ($25<<24>>24)<(0);
 $27 = HEAP32[$16>>2]|0;
 $28 = $25&255;
 $29 = $26 ? $27 : $28;
 $30 = ($29>>>0)>(1);
 if ($30) {
  $143 = HEAP32[$13>>2]|0;
  $$pn = $26 ? $143 : $13;
  $144 = (($$pn) + ($29)|0);
  $145 = HEAP32[$2>>2]|0;
  $$0$i$i = $145;$$pn$pn = $$pn;
  while(1) {
   $$sroa$08$0$i = ((($$pn$pn)) + 1|0);
   $146 = ($$sroa$08$0$i|0)==($144|0);
   if ($146) {
    break;
   }
   $147 = HEAP8[$$sroa$08$0$i>>0]|0;
   HEAP8[$$0$i$i>>0] = $147;
   $148 = ((($$0$i$i)) + 1|0);
   $$0$i$i = $148;$$pn$pn = $$sroa$08$0$i;
  }
  HEAP32[$2>>2] = $$0$i$i;
 }
 $149 = $3 & 176;
 $trunc = $149&255;
 switch ($trunc<<24>>24) {
 case 32:  {
  $150 = HEAP32[$2>>2]|0;
  HEAP32[$1>>2] = $150;
  break;
 }
 case 16:  {
  break;
 }
 default: {
  HEAP32[$1>>2] = $0;
 }
 }
 return;
}
function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i39 = 0, $$0$i$i41 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$sink72 = 0, $$sink73 = 0, $$sink74 = 0, $$sroa$050$0 = 0, $$sroa$058$0 = 0, $$sroa$067$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i40 = 0, $exitcond$i$i42 = 0;
 var $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1008|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1008|0);
 $$byval_copy = sp + 988|0;
 $vararg_buffer1 = sp + 912|0;
 $vararg_buffer = sp + 904|0;
 $6 = sp + 800|0;
 $7 = sp + 984|0;
 $8 = sp + 400|0;
 $9 = sp + 980|0;
 $10 = sp + 992|0;
 $11 = sp + 976|0;
 $12 = sp + 972|0;
 $13 = sp + 960|0;
 $14 = sp + 948|0;
 $15 = sp + 936|0;
 $16 = sp + 932|0;
 $17 = sp;
 $18 = sp + 928|0;
 $19 = sp + 924|0;
 $20 = sp + 920|0;
 HEAP32[$7>>2] = $6;
 HEAPF64[$vararg_buffer>>3] = $5;
 $21 = (_snprintf($6,100,24698,$vararg_buffer)|0);
 $22 = ($21>>>0)>(99);
 if ($22) {
  $23 = (__ZNSt3__26__clocEv()|0);
  HEAPF64[$vararg_buffer1>>3] = $5;
  $24 = (__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7,$23,24698,$vararg_buffer1)|0);
  $25 = HEAP32[$7>>2]|0;
  $26 = ($25|0)==(0|0);
  if ($26) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  }
  $27 = $25;
  $28 = $24 << 2;
  $29 = (_malloc($28)|0);
  $30 = $29;
  $31 = ($29|0)==(0|0);
  if ($31) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$0 = $29;$$038 = $24;$$sroa$058$0 = $30;$$sroa$067$0 = $27;
  }
 } else {
  $$0 = $8;$$038 = $21;$$sroa$058$0 = 0;$$sroa$067$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9,$3);
 $32 = (__ZNKSt3__26locale9use_facetERNS0_2idE($9,36756)|0);
 $33 = HEAP32[$7>>2]|0;
 $34 = (($33) + ($$038)|0);
 $35 = HEAP32[$32>>2]|0;
 $36 = ((($35)) + 48|0);
 $37 = HEAP32[$36>>2]|0;
 (FUNCTION_TABLE_iiiii[$37 & 511]($32,$33,$34,$$0)|0);
 $38 = ($$038|0)==(0);
 if ($38) {
  $48 = 0;
 } else {
  $39 = HEAP32[$7>>2]|0;
  $40 = HEAP8[$39>>0]|0;
  $41 = ($40<<24>>24)==(45);
  $48 = $41;
 }
 ;HEAP32[$13>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $42 = (($13) + ($$0$i$i<<2)|0);
  HEAP32[$42>>2] = 0;
  $43 = (($$0$i$i) + 1)|0;
  $$0$i$i = $43;
 }
 ;HEAP32[$14>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
 $$0$i$i39 = 0;
 while(1) {
  $exitcond$i$i40 = ($$0$i$i39|0)==(3);
  if ($exitcond$i$i40) {
   break;
  }
  $44 = (($14) + ($$0$i$i39<<2)|0);
  HEAP32[$44>>2] = 0;
  $45 = (($$0$i$i39) + 1)|0;
  $$0$i$i39 = $45;
 }
 ;HEAP32[$15>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;
 $$0$i$i41 = 0;
 while(1) {
  $exitcond$i$i42 = ($$0$i$i41|0)==(3);
  if ($exitcond$i$i42) {
   break;
  }
  $46 = (($15) + ($$0$i$i41<<2)|0);
  HEAP32[$46>>2] = 0;
  $47 = (($$0$i$i41) + 1)|0;
  $$0$i$i41 = $47;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2,$48,$9,$10,$11,$12,$13,$14,$15,$16);
 $49 = HEAP32[$16>>2]|0;
 $50 = ($$038|0)>($49|0);
 if ($50) {
  $51 = (($$038) - ($49))|0;
  $52 = $51 << 1;
  $53 = ((($15)) + 8|0);
  $54 = ((($53)) + 3|0);
  $55 = HEAP8[$54>>0]|0;
  $56 = ($55<<24>>24)<(0);
  $57 = ((($15)) + 4|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = $55&255;
  $60 = $56 ? $58 : $59;
  $61 = ((($14)) + 8|0);
  $62 = ((($61)) + 3|0);
  $63 = HEAP8[$62>>0]|0;
  $64 = ($63<<24>>24)<(0);
  $65 = ((($14)) + 4|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $63&255;
  $68 = $64 ? $66 : $67;
  $69 = (($49) + 1)|0;
  $70 = (($69) + ($52))|0;
  $$sink72 = $68;$$sink73 = $70;$$sink74 = $60;
 } else {
  $71 = ((($15)) + 8|0);
  $72 = ((($71)) + 3|0);
  $73 = HEAP8[$72>>0]|0;
  $74 = ($73<<24>>24)<(0);
  $75 = ((($15)) + 4|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = $73&255;
  $78 = $74 ? $76 : $77;
  $79 = ((($14)) + 8|0);
  $80 = ((($79)) + 3|0);
  $81 = HEAP8[$80>>0]|0;
  $82 = ($81<<24>>24)<(0);
  $83 = ((($14)) + 4|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = $81&255;
  $86 = $82 ? $84 : $85;
  $87 = (($49) + 2)|0;
  $$sink72 = $86;$$sink73 = $87;$$sink74 = $78;
 }
 $88 = (($$sink73) + ($$sink74))|0;
 $89 = (($88) + ($$sink72))|0;
 $90 = ($89>>>0)>(100);
 if ($90) {
  $91 = $89 << 2;
  $92 = (_malloc($91)|0);
  $93 = $92;
  $94 = ($92|0)==(0|0);
  if ($94) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$037 = $92;$$sroa$050$0 = $93;
  }
 } else {
  $$037 = $17;$$sroa$050$0 = 0;
 }
 $95 = ((($3)) + 4|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = (($$0) + ($$038<<2)|0);
 $98 = HEAP32[$11>>2]|0;
 $99 = HEAP32[$12>>2]|0;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$037,$18,$19,$96,$$0,$97,$32,$48,$10,$98,$99,$13,$14,$15,$49);
 $100 = HEAP32[$1>>2]|0;
 HEAP32[$20>>2] = $100;
 $101 = HEAP32[$18>>2]|0;
 $102 = HEAP32[$19>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$20>>2]|0;
 $103 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$037,$101,$102,$3,$4)|0);
 $104 = ($$sroa$050$0|0)==(0);
 if (!($104)) {
  $105 = $$sroa$050$0;
  _free($105);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($15);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 $106 = ($$sroa$058$0|0)==(0);
 if (!($106)) {
  $107 = $$sroa$058$0;
  _free($107);
 }
 $108 = ($$sroa$067$0|0)==(0);
 if (!($108)) {
  $109 = $$sroa$067$0;
  _free($109);
 }
 STACKTOP = sp;return ($103|0);
}
function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i28 = 0, $$byval_copy = 0, $$sink46 = 0, $$sink47 = 0, $$sink48 = 0, $$sroa$040$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond$i$i27 = 0, $exitcond$i$i29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(480|0);
 $$byval_copy = sp + 464|0;
 $6 = sp + 460|0;
 $7 = sp + 468|0;
 $8 = sp + 456|0;
 $9 = sp + 452|0;
 $10 = sp + 440|0;
 $11 = sp + 428|0;
 $12 = sp + 416|0;
 $13 = sp + 412|0;
 $14 = sp;
 $15 = sp + 408|0;
 $16 = sp + 404|0;
 $17 = sp + 400|0;
 __ZNKSt3__28ios_base6getlocEv($6,$3);
 $18 = (__ZNKSt3__26locale9use_facetERNS0_2idE($6,36756)|0);
 $19 = ((($5)) + 8|0);
 $20 = ((($19)) + 3|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = ($21<<24>>24)<(0);
 $23 = ((($5)) + 4|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $21&255;
 $26 = $22 ? $24 : $25;
 $27 = ($26|0)==(0);
 if ($27) {
  $42 = 0;
 } else {
  $28 = HEAP32[$5>>2]|0;
  $29 = $22 ? $28 : $5;
  $30 = HEAP32[$29>>2]|0;
  $31 = HEAP32[$18>>2]|0;
  $32 = ((($31)) + 44|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = (FUNCTION_TABLE_iii[$33 & 1023]($18,45)|0);
  $35 = ($30|0)==($34|0);
  $42 = $35;
 }
 ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $36 = (($10) + ($$0$i$i<<2)|0);
  HEAP32[$36>>2] = 0;
  $37 = (($$0$i$i) + 1)|0;
  $$0$i$i = $37;
 }
 ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
 $$0$i$i26 = 0;
 while(1) {
  $exitcond$i$i27 = ($$0$i$i26|0)==(3);
  if ($exitcond$i$i27) {
   break;
  }
  $38 = (($11) + ($$0$i$i26<<2)|0);
  HEAP32[$38>>2] = 0;
  $39 = (($$0$i$i26) + 1)|0;
  $$0$i$i26 = $39;
 }
 ;HEAP32[$12>>2]=0|0;HEAP32[$12+4>>2]=0|0;HEAP32[$12+8>>2]=0|0;
 $$0$i$i28 = 0;
 while(1) {
  $exitcond$i$i29 = ($$0$i$i28|0)==(3);
  if ($exitcond$i$i29) {
   break;
  }
  $40 = (($12) + ($$0$i$i28<<2)|0);
  HEAP32[$40>>2] = 0;
  $41 = (($$0$i$i28) + 1)|0;
  $$0$i$i28 = $41;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2,$42,$6,$7,$8,$9,$10,$11,$12,$13);
 $43 = HEAP8[$20>>0]|0;
 $44 = ($43<<24>>24)<(0);
 $45 = HEAP32[$23>>2]|0;
 $46 = $43&255;
 $47 = $44 ? $45 : $46;
 $48 = HEAP32[$13>>2]|0;
 $49 = ($47|0)>($48|0);
 if ($49) {
  $50 = (($47) - ($48))|0;
  $51 = $50 << 1;
  $52 = ((($12)) + 8|0);
  $53 = ((($52)) + 3|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = ($54<<24>>24)<(0);
  $56 = ((($12)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $54&255;
  $59 = $55 ? $57 : $58;
  $60 = ((($11)) + 8|0);
  $61 = ((($60)) + 3|0);
  $62 = HEAP8[$61>>0]|0;
  $63 = ($62<<24>>24)<(0);
  $64 = ((($11)) + 4|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = $62&255;
  $67 = $63 ? $65 : $66;
  $68 = (($48) + 1)|0;
  $69 = (($68) + ($51))|0;
  $$sink46 = $67;$$sink47 = $69;$$sink48 = $59;
 } else {
  $70 = ((($12)) + 8|0);
  $71 = ((($70)) + 3|0);
  $72 = HEAP8[$71>>0]|0;
  $73 = ($72<<24>>24)<(0);
  $74 = ((($12)) + 4|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = $72&255;
  $77 = $73 ? $75 : $76;
  $78 = ((($11)) + 8|0);
  $79 = ((($78)) + 3|0);
  $80 = HEAP8[$79>>0]|0;
  $81 = ($80<<24>>24)<(0);
  $82 = ((($11)) + 4|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = $80&255;
  $85 = $81 ? $83 : $84;
  $86 = (($48) + 2)|0;
  $$sink46 = $85;$$sink47 = $86;$$sink48 = $77;
 }
 $87 = (($$sink47) + ($$sink48))|0;
 $88 = (($87) + ($$sink46))|0;
 $89 = ($88>>>0)>(100);
 if ($89) {
  $90 = $88 << 2;
  $91 = (_malloc($90)|0);
  $92 = $91;
  $93 = ($91|0)==(0|0);
  if ($93) {
   __ZSt17__throw_bad_allocv();
   // unreachable;
  } else {
   $$0 = $91;$$sroa$040$0 = $92;
  }
 } else {
  $$0 = $14;$$sroa$040$0 = 0;
 }
 $94 = ((($3)) + 4|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = HEAP32[$5>>2]|0;
 $97 = $44 ? $96 : $5;
 $98 = (($97) + ($47<<2)|0);
 $99 = HEAP32[$8>>2]|0;
 $100 = HEAP32[$9>>2]|0;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$0,$15,$16,$95,$97,$98,$18,$42,$7,$99,$100,$10,$11,$12,$48);
 $101 = HEAP32[$1>>2]|0;
 HEAP32[$17>>2] = $101;
 $102 = HEAP32[$15>>2]|0;
 $103 = HEAP32[$16>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$17>>2]|0;
 $104 = (__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy,$$0,$102,$103,$3,$4)|0);
 $105 = ($$sroa$040$0|0)==(0);
 if (!($105)) {
  $106 = $$sroa$040$0;
  _free($106);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;return ($104|0);
}
function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0$i$i$i = 0, $$0$i$i$i51 = 0, $$0$i$i$i55 = 0, $$0$i$i$i62 = 0, $$0$i$i$i70 = 0, $$0$i$i$i78 = 0, $$0$i$i$i86 = 0, $$0$i$i$i94 = 0, $$pr$i$i$i = 0, $$pr$i$i$i47 = 0, $$pr$i$i$i54 = 0, $$pr$i$i$i58 = 0, $$pr$i$i$i66 = 0, $$pr$i$i$i74 = 0, $$pr$i$i$i82 = 0, $$pr$i$i$i90 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i$i = 0, $exitcond$i$i$i52 = 0, $exitcond$i$i$i56 = 0, $exitcond$i$i$i63 = 0, $exitcond$i$i$i71 = 0, $exitcond$i$i$i79 = 0, $exitcond$i$i$i87 = 0, $exitcond$i$i$i95 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $10 = sp + 156|0;
 $11 = sp + 152|0;
 $12 = sp + 163|0;
 $13 = sp + 162|0;
 $14 = sp + 148|0;
 $15 = sp + 144|0;
 $16 = sp + 140|0;
 $17 = sp + 136|0;
 $18 = sp + 132|0;
 $19 = sp + 128|0;
 $20 = sp + 161|0;
 $21 = sp + 160|0;
 $22 = sp + 124|0;
 $23 = sp + 120|0;
 $24 = sp + 116|0;
 $25 = sp + 112|0;
 $26 = sp + 108|0;
 $27 = sp + 96|0;
 $28 = sp + 92|0;
 $29 = sp + 80|0;
 $30 = sp + 68|0;
 $31 = sp + 56|0;
 $32 = sp + 52|0;
 $33 = sp + 40|0;
 $34 = sp + 36|0;
 $35 = sp + 24|0;
 $36 = sp + 12|0;
 $37 = sp;
 if ($0) {
  $38 = (__ZNKSt3__26locale9use_facetERNS0_2idE($2,36972)|0);
  if ($1) {
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($39)) + 44|0);
   $41 = HEAP32[$40>>2]|0;
   FUNCTION_TABLE_vii[$41 & 1023]($26,$38);
   $42 = HEAP32[$26>>2]|0;
   HEAP8[$3>>0]=$42&255;HEAP8[$3+1>>0]=($42>>8)&255;HEAP8[$3+2>>0]=($42>>16)&255;HEAP8[$3+3>>0]=$42>>24;
   $43 = HEAP32[$38>>2]|0;
   $44 = ((($43)) + 32|0);
   $45 = HEAP32[$44>>2]|0;
   FUNCTION_TABLE_vii[$45 & 1023]($27,$38);
   $46 = ((($8)) + 8|0);
   $47 = ((($46)) + 3|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = ($48<<24>>24)<(0);
   if ($49) {
    $50 = HEAP32[$8>>2]|0;
    HEAP32[$24>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($50,$24);
    $51 = ((($8)) + 4|0);
    HEAP32[$51>>2] = 0;
    $$pr$i$i$i = HEAP8[$47>>0]|0;
    $52 = ($$pr$i$i$i<<24>>24)<(0);
    if ($52) {
     $53 = HEAP32[$8>>2]|0;
     $54 = HEAP32[$46>>2]|0;
     $55 = $54 << 2;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($53,$55);
     HEAP32[$46>>2] = 0;
    }
   } else {
    HEAP32[$25>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8,$25);
    HEAP8[$47>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$27>>2]|0;HEAP32[$8+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$27+8>>2]|0;
   $$0$i$i$i = 0;
   while(1) {
    $exitcond$i$i$i = ($$0$i$i$i|0)==(3);
    if ($exitcond$i$i$i) {
     break;
    }
    $56 = (($27) + ($$0$i$i$i<<2)|0);
    HEAP32[$56>>2] = 0;
    $57 = (($$0$i$i$i) + 1)|0;
    $$0$i$i$i = $57;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($27);
  } else {
   $58 = HEAP32[$38>>2]|0;
   $59 = ((($58)) + 40|0);
   $60 = HEAP32[$59>>2]|0;
   FUNCTION_TABLE_vii[$60 & 1023]($28,$38);
   $61 = HEAP32[$28>>2]|0;
   HEAP8[$3>>0]=$61&255;HEAP8[$3+1>>0]=($61>>8)&255;HEAP8[$3+2>>0]=($61>>16)&255;HEAP8[$3+3>>0]=$61>>24;
   $62 = HEAP32[$38>>2]|0;
   $63 = ((($62)) + 28|0);
   $64 = HEAP32[$63>>2]|0;
   FUNCTION_TABLE_vii[$64 & 1023]($29,$38);
   $65 = ((($8)) + 8|0);
   $66 = ((($65)) + 3|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = ($67<<24>>24)<(0);
   if ($68) {
    $69 = HEAP32[$8>>2]|0;
    HEAP32[$22>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($69,$22);
    $70 = ((($8)) + 4|0);
    HEAP32[$70>>2] = 0;
    $$pr$i$i$i47 = HEAP8[$66>>0]|0;
    $71 = ($$pr$i$i$i47<<24>>24)<(0);
    if ($71) {
     $72 = HEAP32[$8>>2]|0;
     $73 = HEAP32[$65>>2]|0;
     $74 = $73 << 2;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($72,$74);
     HEAP32[$65>>2] = 0;
    }
   } else {
    HEAP32[$23>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8,$23);
    HEAP8[$66>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$29>>2]|0;HEAP32[$8+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$29+8>>2]|0;
   $$0$i$i$i51 = 0;
   while(1) {
    $exitcond$i$i$i52 = ($$0$i$i$i51|0)==(3);
    if ($exitcond$i$i$i52) {
     break;
    }
    $75 = (($29) + ($$0$i$i$i51<<2)|0);
    HEAP32[$75>>2] = 0;
    $76 = (($$0$i$i$i51) + 1)|0;
    $$0$i$i$i51 = $76;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($29);
  }
  $77 = HEAP32[$38>>2]|0;
  $78 = ((($77)) + 12|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = (FUNCTION_TABLE_ii[$79 & 1023]($38)|0);
  HEAP32[$4>>2] = $80;
  $81 = HEAP32[$38>>2]|0;
  $82 = ((($81)) + 16|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = (FUNCTION_TABLE_ii[$83 & 1023]($38)|0);
  HEAP32[$5>>2] = $84;
  $85 = HEAP32[$38>>2]|0;
  $86 = ((($85)) + 20|0);
  $87 = HEAP32[$86>>2]|0;
  FUNCTION_TABLE_vii[$87 & 1023]($30,$38);
  $88 = ((($6)) + 11|0);
  $89 = HEAP8[$88>>0]|0;
  $90 = ($89<<24>>24)<(0);
  if ($90) {
   $91 = HEAP32[$6>>2]|0;
   HEAP8[$20>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($91,$20);
   $92 = ((($6)) + 4|0);
   HEAP32[$92>>2] = 0;
   $$pr$i$i$i54 = HEAP8[$88>>0]|0;
   $93 = ($$pr$i$i$i54<<24>>24)<(0);
   if ($93) {
    $94 = HEAP32[$6>>2]|0;
    $95 = ((($6)) + 8|0);
    $96 = HEAP32[$95>>2]|0;
    $97 = $96 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($94,$97);
    HEAP32[$95>>2] = 0;
   }
  } else {
   HEAP8[$21>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$21);
   HEAP8[$88>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$30>>2]|0;HEAP32[$6+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$30+8>>2]|0;
  $$0$i$i$i55 = 0;
  while(1) {
   $exitcond$i$i$i56 = ($$0$i$i$i55|0)==(3);
   if ($exitcond$i$i$i56) {
    break;
   }
   $98 = (($30) + ($$0$i$i$i55<<2)|0);
   HEAP32[$98>>2] = 0;
   $99 = (($$0$i$i$i55) + 1)|0;
   $$0$i$i$i55 = $99;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
  $100 = HEAP32[$38>>2]|0;
  $101 = ((($100)) + 24|0);
  $102 = HEAP32[$101>>2]|0;
  FUNCTION_TABLE_vii[$102 & 1023]($31,$38);
  $103 = ((($7)) + 8|0);
  $104 = ((($103)) + 3|0);
  $105 = HEAP8[$104>>0]|0;
  $106 = ($105<<24>>24)<(0);
  if ($106) {
   $107 = HEAP32[$7>>2]|0;
   HEAP32[$18>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($107,$18);
   $108 = ((($7)) + 4|0);
   HEAP32[$108>>2] = 0;
   $$pr$i$i$i58 = HEAP8[$104>>0]|0;
   $109 = ($$pr$i$i$i58<<24>>24)<(0);
   if ($109) {
    $110 = HEAP32[$7>>2]|0;
    $111 = HEAP32[$103>>2]|0;
    $112 = $111 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($110,$112);
    HEAP32[$103>>2] = 0;
   }
  } else {
   HEAP32[$19>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7,$19);
   HEAP8[$104>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$31>>2]|0;HEAP32[$7+4>>2]=HEAP32[$31+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$31+8>>2]|0;
  $$0$i$i$i62 = 0;
  while(1) {
   $exitcond$i$i$i63 = ($$0$i$i$i62|0)==(3);
   if ($exitcond$i$i$i63) {
    break;
   }
   $113 = (($31) + ($$0$i$i$i62<<2)|0);
   HEAP32[$113>>2] = 0;
   $114 = (($$0$i$i$i62) + 1)|0;
   $$0$i$i$i62 = $114;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($31);
  $115 = HEAP32[$38>>2]|0;
  $116 = ((($115)) + 36|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = (FUNCTION_TABLE_ii[$117 & 1023]($38)|0);
  $storemerge = $118;
 } else {
  $119 = (__ZNKSt3__26locale9use_facetERNS0_2idE($2,36964)|0);
  if ($1) {
   $120 = HEAP32[$119>>2]|0;
   $121 = ((($120)) + 44|0);
   $122 = HEAP32[$121>>2]|0;
   FUNCTION_TABLE_vii[$122 & 1023]($32,$119);
   $123 = HEAP32[$32>>2]|0;
   HEAP8[$3>>0]=$123&255;HEAP8[$3+1>>0]=($123>>8)&255;HEAP8[$3+2>>0]=($123>>16)&255;HEAP8[$3+3>>0]=$123>>24;
   $124 = HEAP32[$119>>2]|0;
   $125 = ((($124)) + 32|0);
   $126 = HEAP32[$125>>2]|0;
   FUNCTION_TABLE_vii[$126 & 1023]($33,$119);
   $127 = ((($8)) + 8|0);
   $128 = ((($127)) + 3|0);
   $129 = HEAP8[$128>>0]|0;
   $130 = ($129<<24>>24)<(0);
   if ($130) {
    $131 = HEAP32[$8>>2]|0;
    HEAP32[$16>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($131,$16);
    $132 = ((($8)) + 4|0);
    HEAP32[$132>>2] = 0;
    $$pr$i$i$i66 = HEAP8[$128>>0]|0;
    $133 = ($$pr$i$i$i66<<24>>24)<(0);
    if ($133) {
     $134 = HEAP32[$8>>2]|0;
     $135 = HEAP32[$127>>2]|0;
     $136 = $135 << 2;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($134,$136);
     HEAP32[$127>>2] = 0;
    }
   } else {
    HEAP32[$17>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8,$17);
    HEAP8[$128>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$33>>2]|0;HEAP32[$8+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$33+8>>2]|0;
   $$0$i$i$i70 = 0;
   while(1) {
    $exitcond$i$i$i71 = ($$0$i$i$i70|0)==(3);
    if ($exitcond$i$i$i71) {
     break;
    }
    $137 = (($33) + ($$0$i$i$i70<<2)|0);
    HEAP32[$137>>2] = 0;
    $138 = (($$0$i$i$i70) + 1)|0;
    $$0$i$i$i70 = $138;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($33);
  } else {
   $139 = HEAP32[$119>>2]|0;
   $140 = ((($139)) + 40|0);
   $141 = HEAP32[$140>>2]|0;
   FUNCTION_TABLE_vii[$141 & 1023]($34,$119);
   $142 = HEAP32[$34>>2]|0;
   HEAP8[$3>>0]=$142&255;HEAP8[$3+1>>0]=($142>>8)&255;HEAP8[$3+2>>0]=($142>>16)&255;HEAP8[$3+3>>0]=$142>>24;
   $143 = HEAP32[$119>>2]|0;
   $144 = ((($143)) + 28|0);
   $145 = HEAP32[$144>>2]|0;
   FUNCTION_TABLE_vii[$145 & 1023]($35,$119);
   $146 = ((($8)) + 8|0);
   $147 = ((($146)) + 3|0);
   $148 = HEAP8[$147>>0]|0;
   $149 = ($148<<24>>24)<(0);
   if ($149) {
    $150 = HEAP32[$8>>2]|0;
    HEAP32[$14>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($150,$14);
    $151 = ((($8)) + 4|0);
    HEAP32[$151>>2] = 0;
    $$pr$i$i$i74 = HEAP8[$147>>0]|0;
    $152 = ($$pr$i$i$i74<<24>>24)<(0);
    if ($152) {
     $153 = HEAP32[$8>>2]|0;
     $154 = HEAP32[$146>>2]|0;
     $155 = $154 << 2;
     __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($153,$155);
     HEAP32[$146>>2] = 0;
    }
   } else {
    HEAP32[$15>>2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8,$15);
    HEAP8[$147>>0] = 0;
   }
   ;HEAP32[$8>>2]=HEAP32[$35>>2]|0;HEAP32[$8+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$35+8>>2]|0;
   $$0$i$i$i78 = 0;
   while(1) {
    $exitcond$i$i$i79 = ($$0$i$i$i78|0)==(3);
    if ($exitcond$i$i$i79) {
     break;
    }
    $156 = (($35) + ($$0$i$i$i78<<2)|0);
    HEAP32[$156>>2] = 0;
    $157 = (($$0$i$i$i78) + 1)|0;
    $$0$i$i$i78 = $157;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($35);
  }
  $158 = HEAP32[$119>>2]|0;
  $159 = ((($158)) + 12|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = (FUNCTION_TABLE_ii[$160 & 1023]($119)|0);
  HEAP32[$4>>2] = $161;
  $162 = HEAP32[$119>>2]|0;
  $163 = ((($162)) + 16|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = (FUNCTION_TABLE_ii[$164 & 1023]($119)|0);
  HEAP32[$5>>2] = $165;
  $166 = HEAP32[$119>>2]|0;
  $167 = ((($166)) + 20|0);
  $168 = HEAP32[$167>>2]|0;
  FUNCTION_TABLE_vii[$168 & 1023]($36,$119);
  $169 = ((($6)) + 11|0);
  $170 = HEAP8[$169>>0]|0;
  $171 = ($170<<24>>24)<(0);
  if ($171) {
   $172 = HEAP32[$6>>2]|0;
   HEAP8[$12>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($172,$12);
   $173 = ((($6)) + 4|0);
   HEAP32[$173>>2] = 0;
   $$pr$i$i$i82 = HEAP8[$169>>0]|0;
   $174 = ($$pr$i$i$i82<<24>>24)<(0);
   if ($174) {
    $175 = HEAP32[$6>>2]|0;
    $176 = ((($6)) + 8|0);
    $177 = HEAP32[$176>>2]|0;
    $178 = $177 & 2147483647;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($175,$178);
    HEAP32[$176>>2] = 0;
   }
  } else {
   HEAP8[$13>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6,$13);
   HEAP8[$169>>0] = 0;
  }
  ;HEAP32[$6>>2]=HEAP32[$36>>2]|0;HEAP32[$6+4>>2]=HEAP32[$36+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$36+8>>2]|0;
  $$0$i$i$i86 = 0;
  while(1) {
   $exitcond$i$i$i87 = ($$0$i$i$i86|0)==(3);
   if ($exitcond$i$i$i87) {
    break;
   }
   $179 = (($36) + ($$0$i$i$i86<<2)|0);
   HEAP32[$179>>2] = 0;
   $180 = (($$0$i$i$i86) + 1)|0;
   $$0$i$i$i86 = $180;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  $181 = HEAP32[$119>>2]|0;
  $182 = ((($181)) + 24|0);
  $183 = HEAP32[$182>>2]|0;
  FUNCTION_TABLE_vii[$183 & 1023]($37,$119);
  $184 = ((($7)) + 8|0);
  $185 = ((($184)) + 3|0);
  $186 = HEAP8[$185>>0]|0;
  $187 = ($186<<24>>24)<(0);
  if ($187) {
   $188 = HEAP32[$7>>2]|0;
   HEAP32[$10>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($188,$10);
   $189 = ((($7)) + 4|0);
   HEAP32[$189>>2] = 0;
   $$pr$i$i$i90 = HEAP8[$185>>0]|0;
   $190 = ($$pr$i$i$i90<<24>>24)<(0);
   if ($190) {
    $191 = HEAP32[$7>>2]|0;
    $192 = HEAP32[$184>>2]|0;
    $193 = $192 << 2;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($191,$193);
    HEAP32[$184>>2] = 0;
   }
  } else {
   HEAP32[$11>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7,$11);
   HEAP8[$185>>0] = 0;
  }
  ;HEAP32[$7>>2]=HEAP32[$37>>2]|0;HEAP32[$7+4>>2]=HEAP32[$37+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$37+8>>2]|0;
  $$0$i$i$i94 = 0;
  while(1) {
   $exitcond$i$i$i95 = ($$0$i$i$i94|0)==(3);
   if ($exitcond$i$i$i95) {
    break;
   }
   $194 = (($37) + ($$0$i$i$i94<<2)|0);
   HEAP32[$194>>2] = 0;
   $195 = (($$0$i$i$i94) + 1)|0;
   $$0$i$i$i94 = $195;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($37);
  $196 = HEAP32[$119>>2]|0;
  $197 = ((($196)) + 36|0);
  $198 = HEAP32[$197>>2]|0;
  $199 = (FUNCTION_TABLE_ii[$198 & 1023]($119)|0);
  $storemerge = $199;
 }
 HEAP32[$9>>2] = $storemerge;
 STACKTOP = sp;return;
}
function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 $12 = $12|0;
 $13 = $13|0;
 $14 = $14|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0$i$i112 = 0, $$0$ph = 0, $$0101 = 0, $$0103 = 0, $$0106 = 0, $$07$i$i = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1102 = 0, $$1104 = 0, $$196 = 0, $$198 = 0, $$2 = 0, $$2105 = 0, $$3 = 0;
 var $$pre136 = 0, $$promoted = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $or$cond = 0, $scevgep$i = 0, $scevgep$i113 = 0, $spec$select = 0, $spec$select139 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = $0;
 $15 = ((($13)) + 8|0);
 $16 = ((($15)) + 3|0);
 $17 = ((($13)) + 4|0);
 $18 = ((($12)) + 8|0);
 $19 = ((($18)) + 3|0);
 $20 = ((($12)) + 4|0);
 $21 = $3 & 512;
 $22 = ($21|0)==(0);
 $23 = ($14|0)>(0);
 $24 = ((($11)) + 11|0);
 $25 = ((($11)) + 4|0);
 $$0106 = 0;$$099 = $4;
 while(1) {
  $exitcond = ($$0106|0)==(4);
  if ($exitcond) {
   break;
  }
  $32 = (($8) + ($$0106)|0);
  $33 = HEAP8[$32>>0]|0;
  $34 = $33 << 24 >> 24;
  L4: do {
   switch ($34|0) {
   case 0:  {
    $35 = HEAP32[$2>>2]|0;
    HEAP32[$1>>2] = $35;
    $$2 = $$099;
    break;
   }
   case 1:  {
    $36 = HEAP32[$2>>2]|0;
    HEAP32[$1>>2] = $36;
    $37 = HEAP32[$6>>2]|0;
    $38 = ((($37)) + 44|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (FUNCTION_TABLE_iii[$39 & 1023]($6,32)|0);
    $41 = HEAP32[$2>>2]|0;
    $42 = ((($41)) + 4|0);
    HEAP32[$2>>2] = $42;
    HEAP32[$41>>2] = $40;
    $$2 = $$099;
    break;
   }
   case 3:  {
    $43 = HEAP8[$16>>0]|0;
    $44 = ($43<<24>>24)<(0);
    $45 = HEAP32[$17>>2]|0;
    $46 = $43&255;
    $47 = $44 ? $45 : $46;
    $48 = ($47|0)==(0);
    if ($48) {
     $$2 = $$099;
    } else {
     $49 = HEAP32[$13>>2]|0;
     $50 = $44 ? $49 : $13;
     $51 = HEAP32[$50>>2]|0;
     $52 = HEAP32[$2>>2]|0;
     $53 = ((($52)) + 4|0);
     HEAP32[$2>>2] = $53;
     HEAP32[$52>>2] = $51;
     $$2 = $$099;
    }
    break;
   }
   case 2:  {
    $54 = HEAP8[$19>>0]|0;
    $55 = ($54<<24>>24)<(0);
    $56 = HEAP32[$20>>2]|0;
    $57 = $54&255;
    $58 = $55 ? $56 : $57;
    $59 = ($58|0)==(0);
    $or$cond = $22 | $59;
    if ($or$cond) {
     $$2 = $$099;
    } else {
     $60 = HEAP32[$12>>2]|0;
     $61 = $55 ? $60 : $12;
     $62 = (($61) + ($58<<2)|0);
     $63 = HEAP32[$2>>2]|0;
     $$0$i$i112 = $63;$64 = $61;
     while(1) {
      $65 = ($64|0)==($62|0);
      if ($65) {
       break;
      }
      $66 = HEAP32[$64>>2]|0;
      HEAP32[$$0$i$i112>>2] = $66;
      $67 = ((($64)) + 4|0);
      $68 = ((($$0$i$i112)) + 4|0);
      $$0$i$i112 = $68;$64 = $67;
     }
     $scevgep$i113 = (($63) + ($58<<2)|0);
     HEAP32[$2>>2] = $scevgep$i113;
     $$2 = $$099;
    }
    break;
   }
   case 4:  {
    $69 = HEAP32[$2>>2]|0;
    $70 = ((($$099)) + 4|0);
    $spec$select = $7 ? $70 : $$099;
    $$0103 = $spec$select;
    while(1) {
     $71 = ($$0103>>>0)<($5>>>0);
     if (!($71)) {
      break;
     }
     $72 = HEAP32[$$0103>>2]|0;
     $73 = HEAP32[$6>>2]|0;
     $74 = ((($73)) + 12|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iiii[$75 & 1023]($6,2048,$72)|0);
     if (!($76)) {
      break;
     }
     $77 = ((($$0103)) + 4|0);
     $$0103 = $77;
    }
    if ($23) {
     $$0101 = $14;$$1104 = $$0103;
     while(1) {
      $78 = ($$1104>>>0)>($spec$select>>>0);
      $79 = ($$0101|0)>(0);
      $80 = $78 & $79;
      if (!($80)) {
       break;
      }
      $81 = ((($$1104)) + -4|0);
      $82 = HEAP32[$81>>2]|0;
      $83 = HEAP32[$2>>2]|0;
      $84 = ((($83)) + 4|0);
      HEAP32[$2>>2] = $84;
      HEAP32[$83>>2] = $82;
      $85 = (($$0101) + -1)|0;
      $$0101 = $85;$$1104 = $81;
     }
     if ($79) {
      $86 = HEAP32[$6>>2]|0;
      $87 = ((($86)) + 44|0);
      $88 = HEAP32[$87>>2]|0;
      $89 = (FUNCTION_TABLE_iii[$88 & 1023]($6,48)|0);
      $93 = $89;
     } else {
      $93 = 0;
     }
     $$promoted = HEAP32[$2>>2]|0;
     $$1102 = $$0101;$92 = $$promoted;
     while(1) {
      $90 = ($$1102|0)>(0);
      $91 = ((($92)) + 4|0);
      if (!($90)) {
       break;
      }
      HEAP32[$92>>2] = $93;
      $94 = (($$1102) + -1)|0;
      $$1102 = $94;$92 = $91;
     }
     HEAP32[$2>>2] = $91;
     HEAP32[$92>>2] = $9;
     $$2105 = $$1104;
    } else {
     $$2105 = $$0103;
    }
    $95 = ($$2105|0)==($spec$select|0);
    if ($95) {
     $96 = HEAP32[$6>>2]|0;
     $97 = ((($96)) + 44|0);
     $98 = HEAP32[$97>>2]|0;
     $99 = (FUNCTION_TABLE_iii[$98 & 1023]($6,48)|0);
     $100 = HEAP32[$2>>2]|0;
     $101 = ((($100)) + 4|0);
     HEAP32[$2>>2] = $101;
     HEAP32[$100>>2] = $99;
     $135 = $101;
    } else {
     $102 = HEAP8[$24>>0]|0;
     $103 = ($102<<24>>24)<(0);
     $104 = HEAP32[$25>>2]|0;
     $105 = $102&255;
     $106 = $103 ? $104 : $105;
     $107 = ($106|0)==(0);
     if ($107) {
      $$0$ph = -1;
     } else {
      $108 = HEAP32[$11>>2]|0;
      $109 = $103 ? $108 : $11;
      $110 = HEAP8[$109>>0]|0;
      $111 = $110 << 24 >> 24;
      $$0$ph = $111;
     }
     $$0 = $$0$ph;$$095 = 0;$$097 = 0;$$3 = $$2105;
     while(1) {
      $112 = ($$3|0)==($spec$select|0);
      if ($112) {
       break;
      }
      $113 = ($$097|0)==($$0|0);
      $114 = HEAP32[$2>>2]|0;
      if ($113) {
       $115 = ((($114)) + 4|0);
       HEAP32[$2>>2] = $115;
       HEAP32[$114>>2] = $10;
       $116 = (($$095) + 1)|0;
       $117 = HEAP8[$24>>0]|0;
       $118 = ($117<<24>>24)<(0);
       $119 = HEAP32[$25>>2]|0;
       $120 = $117&255;
       $121 = $118 ? $119 : $120;
       $122 = ($116>>>0)<($121>>>0);
       if ($122) {
        $123 = HEAP32[$11>>2]|0;
        $124 = $118 ? $123 : $11;
        $125 = (($124) + ($116)|0);
        $126 = HEAP8[$125>>0]|0;
        $127 = ($126<<24>>24)==(127);
        $128 = $126 << 24 >> 24;
        $spec$select139 = $127 ? -1 : $128;
        $$1 = $spec$select139;$$196 = $116;$$198 = 0;$132 = $115;
       } else {
        $$1 = $$097;$$196 = $116;$$198 = 0;$132 = $115;
       }
      } else {
       $$1 = $$0;$$196 = $$095;$$198 = $$097;$132 = $114;
      }
      $129 = ((($$3)) + -4|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = ((($132)) + 4|0);
      HEAP32[$2>>2] = $131;
      HEAP32[$132>>2] = $130;
      $133 = (($$198) + 1)|0;
      $$0 = $$1;$$095 = $$196;$$097 = $133;$$3 = $129;
     }
     $$pre136 = HEAP32[$2>>2]|0;
     $135 = $$pre136;
    }
    $134 = ($69|0)==($135|0);
    if ($134) {
     $$2 = $spec$select;
    } else {
     $$0$i$i108 = $135;$$07$i$i = $69;
     while(1) {
      $136 = ((($$0$i$i108)) + -4|0);
      $137 = ($$07$i$i>>>0)<($136>>>0);
      if (!($137)) {
       $$2 = $spec$select;
       break L4;
      }
      $138 = HEAP32[$$07$i$i>>2]|0;
      $139 = HEAP32[$136>>2]|0;
      HEAP32[$$07$i$i>>2] = $139;
      HEAP32[$136>>2] = $138;
      $140 = ((($$07$i$i)) + 4|0);
      $$0$i$i108 = $136;$$07$i$i = $140;
     }
    }
    break;
   }
   default: {
    $$2 = $$099;
   }
   }
  } while(0);
  $141 = (($$0106) + 1)|0;
  $$0106 = $141;$$099 = $$2;
 }
 $26 = HEAP8[$16>>0]|0;
 $27 = ($26<<24>>24)<(0);
 $28 = HEAP32[$17>>2]|0;
 $29 = $26&255;
 $30 = $27 ? $28 : $29;
 $31 = ($30>>>0)>(1);
 if ($31) {
  $142 = HEAP32[$13>>2]|0;
  $143 = ((($142)) + 4|0);
  $144 = $27 ? $143 : $17;
  $145 = $27 ? $142 : $13;
  $146 = (($145) + ($30<<2)|0);
  $147 = HEAP32[$2>>2]|0;
  $148 = $144;
  $149 = $146;
  $150 = (($149) - ($148))|0;
  $$0$i$i = $147;$151 = $144;
  while(1) {
   $152 = ($151|0)==($146|0);
   if ($152) {
    break;
   }
   $153 = HEAP32[$151>>2]|0;
   HEAP32[$$0$i$i>>2] = $153;
   $154 = ((($151)) + 4|0);
   $155 = ((($$0$i$i)) + 4|0);
   $$0$i$i = $155;$151 = $154;
  }
  $156 = $150 >>> 2;
  $scevgep$i = (($147) + ($156<<2)|0);
  HEAP32[$2>>2] = $scevgep$i;
 }
 $157 = $3 & 176;
 $trunc = $157&255;
 switch ($trunc<<24>>24) {
 case 32:  {
  $158 = HEAP32[$2>>2]|0;
  HEAP32[$1>>2] = $158;
  break;
 }
 case 16:  {
  break;
 }
 default: {
  HEAP32[$1>>2] = $0;
 }
 }
 return;
}
function __ZNSt3__28messagesIcED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28messagesIcED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 $6 = HEAP32[$1>>2]|0;
 $7 = $5 ? $6 : $1;
 $8 = (_catopen($7,1)|0);
 $9 = $8;
 $10 = ($8|0)!=((-1)|0);
 $11 = $10&1;
 $spec$select = $9 >>> $11;
 return ($spec$select|0);
}
function __ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i22 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $exitcond$i$i18 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $7 = (($6) + ($$0$i$i<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($$0$i$i) + 1)|0;
  $$0$i$i = $8;
 }
 $9 = ((($5)) + 11|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)<(0);
 $12 = HEAP32[$5>>2]|0;
 $13 = ((($5)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $10&255;
 $16 = $11 ? $12 : $5;
 $17 = $11 ? $14 : $15;
 $18 = (($16) + ($17)|0);
 $$0$i22 = $16;
 while(1) {
  $19 = ($$0$i22>>>0)<($18>>>0);
  if (!($19)) {
   break;
  }
  $20 = HEAP8[$$0$i22>>0]|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6,$20);
  $21 = ((($$0$i22)) + 1|0);
  $$0$i22 = $21;
 }
 $22 = ($2|0)==(-1);
 $23 = $2 << 1;
 $24 = $23;
 $25 = $22 ? (-1) : $24;
 $26 = ((($6)) + 11|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = ($27<<24>>24)<(0);
 $29 = HEAP32[$6>>2]|0;
 $30 = $28 ? $29 : $6;
 $31 = (_catgets($25,$3,$4,$30)|0);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i17 = 0;
 while(1) {
  $exitcond$i$i18 = ($$0$i$i17|0)==(3);
  if ($exitcond$i$i18) {
   break;
  }
  $32 = (($0) + ($$0$i$i17<<2)|0);
  HEAP32[$32>>2] = 0;
  $33 = (($$0$i$i17) + 1)|0;
  $$0$i$i17 = $33;
 }
 $34 = (_strlen($31)|0);
 $35 = (($30) + ($34)|0);
 $$0$i = $30;
 while(1) {
  $36 = ($$0$i>>>0)<($35>>>0);
  if (!($36)) {
   break;
  }
  $37 = HEAP8[$$0$i>>0]|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0,$37);
  $38 = ((($$0$i)) + 1|0);
  $$0$i = $38;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;return;
}
function __ZNKSt3__28messagesIcE8do_closeEl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__28messagesIwED2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28messagesIwED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 $6 = HEAP32[$1>>2]|0;
 $7 = $5 ? $6 : $1;
 $8 = (_catopen($7,1)|0);
 $9 = $8;
 $10 = ($8|0)!=((-1)|0);
 $11 = $10&1;
 $spec$select = $9 >>> $11;
 return ($spec$select|0);
}
function __ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i18 = 0, $$0$i21 = 0, $$016$i = 0, $$017$i = 0, $$019$i = 0, $$020$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $exitcond$i$i = 0, $exitcond$i$i19 = 0, $or$cond$i = 0, $or$cond$i20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $6 = sp + 216|0;
 $7 = sp + 128|0;
 $8 = sp + 212|0;
 $9 = sp + 208|0;
 $10 = sp + 200|0;
 $11 = sp;
 $12 = sp + 192|0;
 $13 = sp + 188|0;
 $14 = sp + 176|0;
 $15 = sp + 168|0;
 $16 = sp + 160|0;
 ;HEAP32[$14>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $17 = (($14) + ($$0$i$i<<2)|0);
  HEAP32[$17>>2] = 0;
  $18 = (($$0$i$i) + 1)|0;
  $$0$i$i = $18;
 }
 $19 = ((($15)) + 4|0);
 HEAP32[$19>>2] = 0;
 HEAP32[$15>>2] = (13764);
 $20 = ((($5)) + 8|0);
 $21 = ((($20)) + 3|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = ($22<<24>>24)<(0);
 $24 = HEAP32[$5>>2]|0;
 $25 = ((($5)) + 4|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = $22&255;
 $28 = $23 ? $24 : $5;
 $29 = $23 ? $26 : $27;
 $30 = (($28) + ($29<<2)|0);
 $31 = ((($7)) + 32|0);
 $$016$i = $28;$$017$i = 0;
 while(1) {
  $32 = ($$016$i>>>0)<($30>>>0);
  $33 = ($$017$i|0)!=(2);
  $34 = $33 & $32;
  if (!($34)) {
   break;
  }
  HEAP32[$9>>2] = $$016$i;
  $35 = HEAP32[$15>>2]|0;
  $36 = ((($35)) + 12|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (FUNCTION_TABLE_iiiiiiiii[$37 & 511]($15,$6,$$016$i,$30,$9,$7,$31,$8)|0);
  $39 = ($38|0)==(2);
  $40 = HEAP32[$9>>2]|0;
  $41 = ($40|0)==($$016$i|0);
  $or$cond$i20 = $39 | $41;
  if ($or$cond$i20) {
   label = 8;
   break;
  }
  $$0$i21 = $7;
  while(1) {
   $42 = HEAP32[$8>>2]|0;
   $43 = ($$0$i21>>>0)<($42>>>0);
   if (!($43)) {
    break;
   }
   $45 = HEAP8[$$0$i21>>0]|0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($14,$45);
   $46 = ((($$0$i21)) + 1|0);
   $$0$i21 = $46;
  }
  $44 = HEAP32[$9>>2]|0;
  $$016$i = $44;$$017$i = $38;
 }
 if ((label|0) == 8) {
  __ZNSt3__221__throw_runtime_errorEPKc(0);
  // unreachable;
 }
 __ZNSt3__26locale5facetD2Ev($15);
 $47 = ($2|0)==(-1);
 $48 = $2 << 1;
 $49 = $48;
 $50 = $47 ? (-1) : $49;
 $51 = ((($14)) + 11|0);
 $52 = HEAP8[$51>>0]|0;
 $53 = ($52<<24>>24)<(0);
 $54 = HEAP32[$14>>2]|0;
 $55 = $53 ? $54 : $14;
 $56 = (_catgets($50,$3,$4,$55)|0);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i18 = 0;
 while(1) {
  $exitcond$i$i19 = ($$0$i$i18|0)==(3);
  if ($exitcond$i$i19) {
   break;
  }
  $57 = (($0) + ($$0$i$i18<<2)|0);
  HEAP32[$57>>2] = 0;
  $58 = (($$0$i$i18) + 1)|0;
  $$0$i$i18 = $58;
 }
 $59 = ((($16)) + 4|0);
 HEAP32[$59>>2] = 0;
 HEAP32[$16>>2] = (13812);
 $60 = (_strlen($56)|0);
 $61 = (($55) + ($60)|0);
 $62 = $61;
 $63 = ((($11)) + 128|0);
 $$019$i = $55;$$020$i = 0;
 while(1) {
  $64 = ($$019$i>>>0)<($61>>>0);
  $65 = ($$020$i|0)!=(2);
  $66 = $65 & $64;
  if (!($66)) {
   label = 23;
   break;
  }
  HEAP32[$13>>2] = $$019$i;
  $67 = HEAP32[$16>>2]|0;
  $68 = ((($67)) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = $$019$i;
  $71 = (($62) - ($70))|0;
  $72 = ($71|0)>(32);
  $73 = ((($$019$i)) + 32|0);
  $74 = $72 ? $73 : $61;
  $75 = (FUNCTION_TABLE_iiiiiiiii[$69 & 511]($16,$10,$$019$i,$74,$13,$11,$63,$12)|0);
  $76 = ($75|0)==(2);
  $77 = HEAP32[$13>>2]|0;
  $78 = ($77|0)==($$019$i|0);
  $or$cond$i = $76 | $78;
  if ($or$cond$i) {
   label = 19;
   break;
  }
  $$0$i = $11;
  while(1) {
   $79 = HEAP32[$12>>2]|0;
   $80 = ($$0$i>>>0)<($79>>>0);
   if (!($80)) {
    break;
   }
   $82 = HEAP32[$$0$i>>2]|0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0,$82);
   $83 = ((($$0$i)) + 4|0);
   $$0$i = $83;
  }
  $81 = HEAP32[$13>>2]|0;
  $$019$i = $81;$$020$i = $75;
 }
 if ((label|0) == 19) {
  __ZNSt3__221__throw_runtime_errorEPKc(0);
  // unreachable;
 }
 else if ((label|0) == 23) {
  __ZNSt3__26locale5facetD2Ev($16);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__28messagesIwE8do_closeEl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__217__widen_from_utf8ILm32EED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp + 4|0;
 $9 = sp;
 HEAP32[$8>>2] = $2;
 HEAP32[$9>>2] = $5;
 $10 = (__ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2,$3,$8,$5,$6,$9,1114111,0)|0);
 $11 = HEAP32[$8>>2]|0;
 HEAP32[$4>>2] = $11;
 $12 = HEAP32[$9>>2]|0;
 HEAP32[$7>>2] = $12;
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp + 4|0;
 $9 = sp;
 HEAP32[$8>>2] = $2;
 HEAP32[$9>>2] = $5;
 $10 = (__ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($2,$3,$8,$5,$6,$9,1114111,0)|0);
 $11 = HEAP32[$8>>2]|0;
 HEAP32[$4>>2] = $11;
 $12 = HEAP32[$9>>2]|0;
 HEAP32[$7>>2] = $12;
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$4>>2] = $2;
 return 3;
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (__ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE($2,$3,$4,1114111,0)|0);
 return ($5|0);
}
function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$091 = 0, $$185 = 0, $$185$ph = 0, $$589 = 0, $$off = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $4 & 4;
 $6 = ($5|0)==(0);
 $$pre = $1;
 if ($6) {
  $$185$ph = $0;
 } else {
  $7 = $0;
  $8 = (($$pre) - ($7))|0;
  $9 = ($8|0)>(2);
  if ($9) {
   $10 = HEAP8[$0>>0]|0;
   $11 = ($10<<24>>24)==(-17);
   if ($11) {
    $12 = ((($0)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = ($13<<24>>24)==(-69);
    if ($14) {
     $15 = ((($0)) + 2|0);
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(-65);
     $18 = ((($0)) + 3|0);
     $spec$select = $17 ? $18 : $0;
     $$185$ph = $spec$select;
    } else {
     $$185$ph = $0;
    }
   } else {
    $$185$ph = $0;
   }
  } else {
   $$185$ph = $0;
  }
 }
 $$091 = 0;$$185 = $$185$ph;
 L7: while(1) {
  $19 = ($$185>>>0)<($1>>>0);
  $20 = ($$091>>>0)<($2>>>0);
  $or$cond = $20 & $19;
  if (!($or$cond)) {
   break;
  }
  $21 = HEAP8[$$185>>0]|0;
  $22 = $21&255;
  $23 = ($21<<24>>24)>(-1);
  do {
   if ($23) {
    $24 = ($22>>>0)>($3>>>0);
    if ($24) {
     break L7;
    }
    $25 = ((($$185)) + 1|0);
    $$589 = $25;
   } else {
    $26 = ($21&255)<(194);
    if ($26) {
     break L7;
    }
    $27 = ($21&255)<(224);
    if ($27) {
     $28 = $$185;
     $29 = (($$pre) - ($28))|0;
     $30 = ($29|0)<(2);
     if ($30) {
      break L7;
     }
     $31 = ((($$185)) + 1|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32&255;
     $34 = $33 & 192;
     $35 = ($34|0)==(128);
     if (!($35)) {
      break L7;
     }
     $36 = $22 << 6;
     $37 = $36 & 1984;
     $38 = $33 & 63;
     $39 = $38 | $37;
     $40 = ($39>>>0)>($3>>>0);
     if ($40) {
      break L7;
     }
     $41 = ((($$185)) + 2|0);
     $$589 = $41;
     break;
    }
    $42 = ($21&255)<(240);
    if ($42) {
     $43 = $$185;
     $44 = (($$pre) - ($43))|0;
     $45 = ($44|0)<(3);
     if ($45) {
      break L7;
     }
     $46 = ((($$185)) + 1|0);
     $47 = HEAP8[$46>>0]|0;
     $48 = ((($$185)) + 2|0);
     $49 = HEAP8[$48>>0]|0;
     switch ($21<<24>>24) {
     case -32:  {
      $50 = $47 & -32;
      $51 = ($50<<24>>24)==(-96);
      if (!($51)) {
       break L7;
      }
      break;
     }
     case -19:  {
      $52 = $47 & -32;
      $53 = ($52<<24>>24)==(-128);
      if (!($53)) {
       break L7;
      }
      break;
     }
     default: {
      $54 = $47 & -64;
      $55 = ($54<<24>>24)==(-128);
      if (!($55)) {
       break L7;
      }
     }
     }
     $56 = $49&255;
     $57 = $56 & 192;
     $58 = ($57|0)==(128);
     if (!($58)) {
      break L7;
     }
     $59 = $22 << 12;
     $60 = $59 & 61440;
     $61 = $47 & 63;
     $62 = $61&255;
     $63 = $62 << 6;
     $64 = $63 | $60;
     $65 = $56 & 63;
     $66 = $64 | $65;
     $67 = ($66>>>0)>($3>>>0);
     $68 = ((($$185)) + 3|0);
     if ($67) {
      break L7;
     } else {
      $$589 = $68;
      break;
     }
    }
    $69 = ($21&255)<(245);
    if (!($69)) {
     break L7;
    }
    $70 = $$185;
    $71 = (($$pre) - ($70))|0;
    $72 = ($71|0)<(4);
    if ($72) {
     break L7;
    }
    $73 = ((($$185)) + 1|0);
    $74 = HEAP8[$73>>0]|0;
    $75 = ((($$185)) + 2|0);
    $76 = HEAP8[$75>>0]|0;
    $77 = ((($$185)) + 3|0);
    $78 = HEAP8[$77>>0]|0;
    switch ($21<<24>>24) {
    case -16:  {
     $$off = (($74) + 112)<<24>>24;
     $79 = ($$off&255)<(48);
     if (!($79)) {
      break L7;
     }
     break;
    }
    case -12:  {
     $80 = $74 & -16;
     $81 = ($80<<24>>24)==(-128);
     if (!($81)) {
      break L7;
     }
     break;
    }
    default: {
     $82 = $74 & -64;
     $83 = ($82<<24>>24)==(-128);
     if (!($83)) {
      break L7;
     }
    }
    }
    $84 = $76&255;
    $85 = $84 & 192;
    $86 = ($85|0)==(128);
    if (!($86)) {
     break L7;
    }
    $87 = $78&255;
    $88 = $87 & 192;
    $89 = ($88|0)==(128);
    if (!($89)) {
     break L7;
    }
    $90 = $22 << 18;
    $91 = $90 & 1835008;
    $92 = $74 & 63;
    $93 = $92&255;
    $94 = $93 << 12;
    $95 = $94 | $91;
    $96 = $84 << 6;
    $97 = $96 & 4032;
    $98 = $95 | $97;
    $99 = $87 & 63;
    $100 = $98 | $99;
    $101 = ($100>>>0)>($3>>>0);
    $102 = ((($$185)) + 4|0);
    if ($101) {
     break L7;
    } else {
     $$589 = $102;
    }
   }
  } while(0);
  $103 = (($$091) + 1)|0;
  $$091 = $103;$$185 = $$589;
 }
 $104 = $$185;
 $105 = $0;
 $106 = (($104) - ($105))|0;
 return ($106|0);
}
function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$9 = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink107 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = $0;
 HEAP32[$5>>2] = $3;
 $8 = $7 & 4;
 $9 = ($8|0)==(0);
 if ($9) {
  $$pre = $1;
  $$pre$phiZ2D = $$pre;
 } else {
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = $10;
  $13 = (($11) - ($12))|0;
  $14 = ($13|0)>(2);
  if ($14) {
   $15 = HEAP8[$10>>0]|0;
   $16 = ($15<<24>>24)==(-17);
   if ($16) {
    $17 = ((($10)) + 1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = ($18<<24>>24)==(-69);
    if ($19) {
     $20 = ((($10)) + 2|0);
     $21 = HEAP8[$20>>0]|0;
     $22 = ($21<<24>>24)==(-65);
     if ($22) {
      $23 = ((($10)) + 3|0);
      HEAP32[$2>>2] = $23;
      $$pre$phiZ2D = $11;
     } else {
      $$pre$phiZ2D = $11;
     }
    } else {
     $$pre$phiZ2D = $11;
    }
   } else {
    $$pre$phiZ2D = $11;
   }
  } else {
   $$pre$phiZ2D = $11;
  }
 }
 L9: while(1) {
  $24 = HEAP32[$2>>2]|0;
  $25 = ($24>>>0)<($1>>>0);
  if (!($25)) {
   $$9 = 0;
   break;
  }
  $26 = HEAP32[$5>>2]|0;
  $27 = ($26>>>0)<($4>>>0);
  if (!($27)) {
   $$9 = 1;
   break;
  }
  $28 = HEAP8[$24>>0]|0;
  $29 = $28&255;
  $30 = ($28<<24>>24)>(-1);
  do {
   if ($30) {
    $31 = ($29>>>0)>($6>>>0);
    if ($31) {
     $$9 = 2;
     break L9;
    } else {
     $$sink = $29;$$sink107 = 1;
    }
   } else {
    $32 = ($28&255)<(194);
    if ($32) {
     $$9 = 2;
     break L9;
    }
    $33 = ($28&255)<(224);
    if ($33) {
     $34 = $24;
     $35 = (($$pre$phiZ2D) - ($34))|0;
     $36 = ($35|0)<(2);
     if ($36) {
      $$9 = 1;
      break L9;
     }
     $37 = ((($24)) + 1|0);
     $38 = HEAP8[$37>>0]|0;
     $39 = $38&255;
     $40 = $39 & 192;
     $41 = ($40|0)==(128);
     if (!($41)) {
      $$9 = 2;
      break L9;
     }
     $42 = $29 << 6;
     $43 = $42 & 1984;
     $44 = $39 & 63;
     $45 = $44 | $43;
     $46 = ($45>>>0)>($6>>>0);
     if ($46) {
      $$9 = 2;
      break L9;
     } else {
      $$sink = $45;$$sink107 = 2;
      break;
     }
    }
    $47 = ($28&255)<(240);
    if ($47) {
     $48 = $24;
     $49 = (($$pre$phiZ2D) - ($48))|0;
     $50 = ($49|0)<(3);
     if ($50) {
      $$9 = 1;
      break L9;
     }
     $51 = ((($24)) + 1|0);
     $52 = HEAP8[$51>>0]|0;
     $53 = ((($24)) + 2|0);
     $54 = HEAP8[$53>>0]|0;
     switch ($28<<24>>24) {
     case -32:  {
      $55 = $52 & -32;
      $56 = ($55<<24>>24)==(-96);
      if (!($56)) {
       $$9 = 2;
       break L9;
      }
      break;
     }
     case -19:  {
      $57 = $52 & -32;
      $58 = ($57<<24>>24)==(-128);
      if (!($58)) {
       $$9 = 2;
       break L9;
      }
      break;
     }
     default: {
      $59 = $52 & -64;
      $60 = ($59<<24>>24)==(-128);
      if (!($60)) {
       $$9 = 2;
       break L9;
      }
     }
     }
     $61 = $54&255;
     $62 = $61 & 192;
     $63 = ($62|0)==(128);
     if (!($63)) {
      $$9 = 2;
      break L9;
     }
     $64 = $29 << 12;
     $65 = $64 & 61440;
     $66 = $52 & 63;
     $67 = $66&255;
     $68 = $67 << 6;
     $69 = $68 | $65;
     $70 = $61 & 63;
     $71 = $69 | $70;
     $72 = ($71>>>0)>($6>>>0);
     if ($72) {
      $$9 = 2;
      break L9;
     } else {
      $$sink = $71;$$sink107 = 3;
      break;
     }
    }
    $73 = ($28&255)<(245);
    if (!($73)) {
     $$9 = 2;
     break L9;
    }
    $74 = $24;
    $75 = (($$pre$phiZ2D) - ($74))|0;
    $76 = ($75|0)<(4);
    if ($76) {
     $$9 = 1;
     break L9;
    }
    $77 = ((($24)) + 1|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = ((($24)) + 2|0);
    $80 = HEAP8[$79>>0]|0;
    $81 = ((($24)) + 3|0);
    $82 = HEAP8[$81>>0]|0;
    switch ($28<<24>>24) {
    case -16:  {
     $$off = (($78) + 112)<<24>>24;
     $83 = ($$off&255)<(48);
     if (!($83)) {
      $$9 = 2;
      break L9;
     }
     break;
    }
    case -12:  {
     $84 = $78 & -16;
     $85 = ($84<<24>>24)==(-128);
     if (!($85)) {
      $$9 = 2;
      break L9;
     }
     break;
    }
    default: {
     $86 = $78 & -64;
     $87 = ($86<<24>>24)==(-128);
     if (!($87)) {
      $$9 = 2;
      break L9;
     }
    }
    }
    $88 = $80&255;
    $89 = $88 & 192;
    $90 = ($89|0)==(128);
    if (!($90)) {
     $$9 = 2;
     break L9;
    }
    $91 = $82&255;
    $92 = $91 & 192;
    $93 = ($92|0)==(128);
    if (!($93)) {
     $$9 = 2;
     break L9;
    }
    $94 = $29 << 18;
    $95 = $94 & 1835008;
    $96 = $78 & 63;
    $97 = $96&255;
    $98 = $97 << 12;
    $99 = $98 | $95;
    $100 = $88 << 6;
    $101 = $100 & 4032;
    $102 = $99 | $101;
    $103 = $91 & 63;
    $104 = $102 | $103;
    $105 = ($104>>>0)>($6>>>0);
    if ($105) {
     $$9 = 2;
     break L9;
    } else {
     $$sink = $104;$$sink107 = 4;
    }
   }
  } while(0);
  HEAP32[$26>>2] = $$sink;
  $106 = (($24) + ($$sink107)|0);
  HEAP32[$2>>2] = $106;
  $107 = HEAP32[$5>>2]|0;
  $108 = ((($107)) + 4|0);
  HEAP32[$5>>2] = $108;
 }
 return ($$9|0);
}
function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$2 = 0, $$pre = 0, $$pre49 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = $0;
 HEAP32[$5>>2] = $3;
 $8 = $7 & 2;
 $9 = ($8|0)==(0);
 $$pre49 = $4;
 if ($9) {
  label = 4;
 } else {
  $10 = $3;
  $11 = (($$pre49) - ($10))|0;
  $12 = ($11|0)<(3);
  if ($12) {
   $$2 = 1;
  } else {
   $13 = ((($3)) + 1|0);
   HEAP32[$5>>2] = $13;
   HEAP8[$3>>0] = -17;
   $14 = HEAP32[$5>>2]|0;
   $15 = ((($14)) + 1|0);
   HEAP32[$5>>2] = $15;
   HEAP8[$14>>0] = -69;
   $16 = HEAP32[$5>>2]|0;
   $17 = ((($16)) + 1|0);
   HEAP32[$5>>2] = $17;
   HEAP8[$16>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $$pre = HEAP32[$2>>2]|0;
   $18 = $$pre;
   while(1) {
    $19 = ($18>>>0)<($1>>>0);
    if (!($19)) {
     $$2 = 0;
     break L4;
    }
    $20 = HEAP32[$18>>2]|0;
    $21 = $20 & -2048;
    $22 = ($21|0)==(55296);
    $23 = ($20>>>0)>($6>>>0);
    $or$cond = $23 | $22;
    if ($or$cond) {
     $$2 = 2;
     break L4;
    }
    $24 = ($20>>>0)<(128);
    do {
     if ($24) {
      $25 = HEAP32[$5>>2]|0;
      $26 = $25;
      $27 = (($$pre49) - ($26))|0;
      $28 = ($27|0)<(1);
      if ($28) {
       $$2 = 1;
       break L4;
      }
      $29 = $20&255;
      $30 = ((($25)) + 1|0);
      HEAP32[$5>>2] = $30;
      HEAP8[$25>>0] = $29;
     } else {
      $31 = ($20>>>0)<(2048);
      if ($31) {
       $32 = HEAP32[$5>>2]|0;
       $33 = $32;
       $34 = (($$pre49) - ($33))|0;
       $35 = ($34|0)<(2);
       if ($35) {
        $$2 = 1;
        break L4;
       }
       $36 = $20 >>> 6;
       $37 = $36 | 192;
       $38 = $37&255;
       $39 = ((($32)) + 1|0);
       HEAP32[$5>>2] = $39;
       HEAP8[$32>>0] = $38;
       $40 = $20 & 63;
       $41 = $40 | 128;
       $42 = $41&255;
       $43 = HEAP32[$5>>2]|0;
       $44 = ((($43)) + 1|0);
       HEAP32[$5>>2] = $44;
       HEAP8[$43>>0] = $42;
       break;
      }
      $45 = ($20>>>0)<(65536);
      $46 = HEAP32[$5>>2]|0;
      $47 = $46;
      $48 = (($$pre49) - ($47))|0;
      if ($45) {
       $49 = ($48|0)<(3);
       if ($49) {
        $$2 = 1;
        break L4;
       }
       $50 = $20 >>> 12;
       $51 = $50 | 224;
       $52 = $51&255;
       $53 = ((($46)) + 1|0);
       HEAP32[$5>>2] = $53;
       HEAP8[$46>>0] = $52;
       $54 = $20 >>> 6;
       $55 = $54 & 63;
       $56 = $55 | 128;
       $57 = $56&255;
       $58 = HEAP32[$5>>2]|0;
       $59 = ((($58)) + 1|0);
       HEAP32[$5>>2] = $59;
       HEAP8[$58>>0] = $57;
       $60 = $20 & 63;
       $61 = $60 | 128;
       $62 = $61&255;
       $63 = HEAP32[$5>>2]|0;
       $64 = ((($63)) + 1|0);
       HEAP32[$5>>2] = $64;
       HEAP8[$63>>0] = $62;
       break;
      } else {
       $65 = ($48|0)<(4);
       if ($65) {
        $$2 = 1;
        break L4;
       }
       $66 = $20 >>> 18;
       $67 = $66 | 240;
       $68 = $67&255;
       $69 = ((($46)) + 1|0);
       HEAP32[$5>>2] = $69;
       HEAP8[$46>>0] = $68;
       $70 = $20 >>> 12;
       $71 = $70 & 63;
       $72 = $71 | 128;
       $73 = $72&255;
       $74 = HEAP32[$5>>2]|0;
       $75 = ((($74)) + 1|0);
       HEAP32[$5>>2] = $75;
       HEAP8[$74>>0] = $73;
       $76 = $20 >>> 6;
       $77 = $76 & 63;
       $78 = $77 | 128;
       $79 = $78&255;
       $80 = HEAP32[$5>>2]|0;
       $81 = ((($80)) + 1|0);
       HEAP32[$5>>2] = $81;
       HEAP8[$80>>0] = $79;
       $82 = $20 & 63;
       $83 = $82 | 128;
       $84 = $83&255;
       $85 = HEAP32[$5>>2]|0;
       $86 = ((($85)) + 1|0);
       HEAP32[$5>>2] = $86;
       HEAP8[$85>>0] = $84;
       break;
      }
     }
    } while(0);
    $87 = HEAP32[$2>>2]|0;
    $88 = ((($87)) + 4|0);
    HEAP32[$2>>2] = $88;
    $18 = $88;
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZNSt3__216__narrow_to_utf8ILm32EED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$4>>2] = $2;
 HEAP32[$7>>2] = $5;
 return 3;
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$4>>2] = $2;
 HEAP32[$7>>2] = $5;
 return 3;
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$4>>2] = $2;
 return 3;
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sroa$speculated = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $3;
 $6 = $2;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<($4>>>0);
 $$sroa$speculated = $8 ? $7 : $4;
 return ($$sroa$speculated|0);
}
function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$070$lcssa = 0, $$077 = 0, $$079 = 0, $$171 = 0, $$173 = 0, $$178 = 0, $$2 = 0, $$2$lcssa = 0, $$375$ph = 0, $$476 = 0, $$5$ph85 = 0, $$pre = 0, $$pre113 = 0, $$pre114 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = sp + 8|0;
 $$070 = $2;
 while(1) {
  $10 = ($$070|0)==($3|0);
  if ($10) {
   $$070$lcssa = $3;
   break;
  }
  $11 = HEAP32[$$070>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $$070$lcssa = $$070;
   break;
  }
  $13 = ((($$070)) + 4|0);
  $$070 = $13;
 }
 HEAP32[$7>>2] = $5;
 HEAP32[$4>>2] = $2;
 $14 = $6;
 $15 = ((($0)) + 8|0);
 $$077 = $2;$$079 = $5;$$171 = $$070$lcssa;
 L6: while(1) {
  $16 = ($$077|0)==($3|0);
  $17 = ($$079|0)==($6|0);
  $or$cond = $17 | $16;
  if ($or$cond) {
   $74 = $$077;
   label = 36;
   break;
  }
  $18 = $1;
  $19 = $18;
  $20 = HEAP32[$19>>2]|0;
  $21 = (($18) + 4)|0;
  $22 = $21;
  $23 = HEAP32[$22>>2]|0;
  $24 = $8;
  $25 = $24;
  HEAP32[$25>>2] = $20;
  $26 = (($24) + 4)|0;
  $27 = $26;
  HEAP32[$27>>2] = $23;
  $28 = $$171;
  $29 = $$077;
  $30 = (($28) - ($29))|0;
  $31 = $30 >> 2;
  $32 = $$079;
  $33 = (($14) - ($32))|0;
  $34 = HEAP32[$15>>2]|0;
  $35 = (___uselocale($34)|0);
  $36 = (_wcsnrtombs($$079,$4,$31,$33,$1)|0);
  $37 = ($35|0)==(0|0);
  if (!($37)) {
   (___uselocale($35)|0);
  }
  switch ($36|0) {
  case -1:  {
   label = 10;
   break L6;
   break;
  }
  case 0:  {
   $$375$ph = 1;
   label = 33;
   break L6;
   break;
  }
  default: {
  }
  }
  $50 = HEAP32[$7>>2]|0;
  $51 = (($50) + ($36)|0);
  HEAP32[$7>>2] = $51;
  $52 = ($51|0)==($6|0);
  if ($52) {
   label = 34;
   break;
  }
  $53 = ($$171|0)==($3|0);
  if ($53) {
   $$pre = HEAP32[$4>>2]|0;
   $$5$ph85 = $3;$77 = $51;$78 = $$pre;
  } else {
   $54 = HEAP32[$15>>2]|0;
   $55 = (___uselocale($54)|0);
   $56 = (_wcrtomb($9,0,$1)|0);
   $57 = ($55|0)==(0|0);
   if (!($57)) {
    (___uselocale($55)|0);
   }
   $58 = ($56|0)==(-1);
   if ($58) {
    $$173 = 2;
    label = 32;
    break;
   }
   $59 = HEAP32[$7>>2]|0;
   $60 = (($14) - ($59))|0;
   $61 = ($56>>>0)>($60>>>0);
   if ($61) {
    $$173 = 1;
    label = 32;
    break;
   }
   $$0 = $9;$$069 = $56;
   while(1) {
    $62 = ($$069|0)==(0);
    if ($62) {
     break;
    }
    $65 = ((($$0)) + 1|0);
    $66 = HEAP8[$$0>>0]|0;
    $67 = HEAP32[$7>>2]|0;
    $68 = ((($67)) + 1|0);
    HEAP32[$7>>2] = $68;
    HEAP8[$67>>0] = $66;
    $69 = (($$069) + -1)|0;
    $$0 = $65;$$069 = $69;
   }
   $63 = HEAP32[$4>>2]|0;
   $64 = ((($63)) + 4|0);
   HEAP32[$4>>2] = $64;
   $$2 = $64;
   while(1) {
    $70 = ($$2|0)==($3|0);
    if ($70) {
     $$2$lcssa = $3;
     break;
    }
    $71 = HEAP32[$$2>>2]|0;
    $72 = ($71|0)==(0);
    if ($72) {
     $$2$lcssa = $$2;
     break;
    }
    $73 = ((($$2)) + 4|0);
    $$2 = $73;
   }
   $$pre113 = HEAP32[$7>>2]|0;
   $$5$ph85 = $$2$lcssa;$77 = $$pre113;$78 = $64;
  }
  $$077 = $78;$$079 = $77;$$171 = $$5$ph85;
 }
 if ((label|0) == 10) {
  HEAP32[$7>>2] = $$079;
  $$178 = $$077;$43 = $$079;
  while(1) {
   $38 = HEAP32[$4>>2]|0;
   $39 = ($$178|0)==($38|0);
   if ($39) {
    break;
   }
   $40 = HEAP32[$$178>>2]|0;
   $41 = HEAP32[$15>>2]|0;
   $42 = (___uselocale($41)|0);
   $44 = (_wcrtomb($43,$40,$8)|0);
   $45 = ($42|0)==(0|0);
   if (!($45)) {
    (___uselocale($42)|0);
   }
   $46 = ($44|0)==(-1);
   if ($46) {
    break;
   }
   $47 = HEAP32[$7>>2]|0;
   $48 = (($47) + ($44)|0);
   HEAP32[$7>>2] = $48;
   $49 = ((($$178)) + 4|0);
   $$178 = $49;$43 = $48;
  }
  HEAP32[$4>>2] = $$178;
  $$375$ph = 2;
  label = 33;
 }
 else if ((label|0) == 32) {
  $$375$ph = $$173;
  label = 33;
 }
 else if ((label|0) == 34) {
  $$pre114 = HEAP32[$4>>2]|0;
  $74 = $$pre114;
  label = 36;
 }
 if ((label|0) == 33) {
  $$476 = $$375$ph;
 }
 else if ((label|0) == 36) {
  $75 = ($74|0)!=($3|0);
  $76 = $75&1;
  $$476 = $76;
 }
 STACKTOP = sp;return ($$476|0);
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$070 = 0, $$070$lcssa = 0, $$074 = 0, $$077 = 0, $$1 = 0, $$172$ph = 0, $$175 = 0, $$2 = 0, $$2$lcssa = 0, $$273 = 0, $$4$ph = 0, $$pre = 0, $$pre110 = 0, $$pre111 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $$070 = $2;
 while(1) {
  $9 = ($$070|0)==($3|0);
  if ($9) {
   $$070$lcssa = $3;
   break;
  }
  $10 = HEAP8[$$070>>0]|0;
  $11 = ($10<<24>>24)==(0);
  if ($11) {
   $$070$lcssa = $$070;
   break;
  }
  $12 = ((($$070)) + 1|0);
  $$070 = $12;
 }
 HEAP32[$7>>2] = $5;
 HEAP32[$4>>2] = $2;
 $13 = $6;
 $14 = ((($0)) + 8|0);
 $$074 = $2;$$077 = $5;$$1 = $$070$lcssa;
 while(1) {
  $15 = ($$074|0)==($3|0);
  $16 = ($$077|0)==($6|0);
  $or$cond = $16 | $15;
  if ($or$cond) {
   $69 = $$074;
   label = 33;
   break;
  }
  $17 = $1;
  $18 = $17;
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + 4)|0;
  $21 = $20;
  $22 = HEAP32[$21>>2]|0;
  $23 = $8;
  $24 = $23;
  HEAP32[$24>>2] = $19;
  $25 = (($23) + 4)|0;
  $26 = $25;
  HEAP32[$26>>2] = $22;
  $27 = $$1;
  $28 = $$074;
  $29 = (($27) - ($28))|0;
  $30 = $$077;
  $31 = (($13) - ($30))|0;
  $32 = $31 >> 2;
  $33 = HEAP32[$14>>2]|0;
  $34 = (___uselocale($33)|0);
  $35 = (_mbsnrtowcs($$077,$4,$29,$32,$1)|0);
  $36 = ($34|0)==(0|0);
  if (!($36)) {
   (___uselocale($34)|0);
  }
  $37 = ($35|0)==(-1);
  if ($37) {
   label = 10;
   break;
  }
  $52 = HEAP32[$7>>2]|0;
  $53 = (($52) + ($35<<2)|0);
  HEAP32[$7>>2] = $53;
  $54 = ($53|0)==($6|0);
  if ($54) {
   label = 30;
   break;
  }
  $55 = ($$1|0)==($3|0);
  $$pre = HEAP32[$4>>2]|0;
  if ($55) {
   $$4$ph = $3;$72 = $53;$73 = $$pre;
  } else {
   $56 = HEAP32[$14>>2]|0;
   $57 = (___uselocale($56)|0);
   $58 = (_mbrtowc($53,$$pre,1,$1)|0);
   $59 = ($57|0)==(0|0);
   if (!($59)) {
    (___uselocale($57)|0);
   }
   $60 = ($58|0)==(0);
   if (!($60)) {
    $$172$ph = 2;
    label = 29;
    break;
   }
   $61 = HEAP32[$7>>2]|0;
   $62 = ((($61)) + 4|0);
   HEAP32[$7>>2] = $62;
   $63 = HEAP32[$4>>2]|0;
   $64 = ((($63)) + 1|0);
   HEAP32[$4>>2] = $64;
   $$2 = $64;
   while(1) {
    $65 = ($$2|0)==($3|0);
    if ($65) {
     $$2$lcssa = $3;
     break;
    }
    $66 = HEAP8[$$2>>0]|0;
    $67 = ($66<<24>>24)==(0);
    if ($67) {
     $$2$lcssa = $$2;
     break;
    }
    $68 = ((($$2)) + 1|0);
    $$2 = $68;
   }
   $$pre110 = HEAP32[$7>>2]|0;
   $$4$ph = $$2$lcssa;$72 = $$pre110;$73 = $64;
  }
  $$074 = $73;$$077 = $72;$$1 = $$4$ph;
 }
 do {
  if ((label|0) == 10) {
   $38 = $$1;
   $$175 = $$074;$storemerge = $$077;
   L29: while(1) {
    HEAP32[$7>>2] = $storemerge;
    $39 = HEAP32[$4>>2]|0;
    $40 = ($$175|0)==($39|0);
    if ($40) {
     label = 19;
     break;
    }
    $41 = $$175;
    $42 = (($38) - ($41))|0;
    $43 = HEAP32[$14>>2]|0;
    $44 = (___uselocale($43)|0);
    $45 = (_mbrtowc($storemerge,$$175,$42,$8)|0);
    $46 = ($44|0)==(0|0);
    if (!($46)) {
     (___uselocale($44)|0);
    }
    switch ($45|0) {
    case -1:  {
     label = 15;
     break L29;
     break;
    }
    case -2:  {
     label = 16;
     break L29;
     break;
    }
    case 0:  {
     $$sink = 1;
     break;
    }
    default: {
     $$sink = $45;
    }
    }
    $47 = (($$175) + ($$sink)|0);
    $48 = HEAP32[$7>>2]|0;
    $49 = ((($48)) + 4|0);
    $$175 = $47;$storemerge = $49;
   }
   if ((label|0) == 15) {
    HEAP32[$4>>2] = $$175;
    $$172$ph = 2;
    label = 29;
    break;
   }
   else if ((label|0) == 16) {
    HEAP32[$4>>2] = $$175;
    $$172$ph = 1;
    label = 29;
    break;
   }
   else if ((label|0) == 19) {
    HEAP32[$4>>2] = $$175;
    $50 = ($$175|0)!=($3|0);
    $51 = $50&1;
    $$172$ph = $51;
    label = 29;
    break;
   }
  }
  else if ((label|0) == 30) {
   $$pre111 = HEAP32[$4>>2]|0;
   $69 = $$pre111;
   label = 33;
  }
 } while(0);
 if ((label|0) == 29) {
  $$273 = $$172$ph;
 }
 else if ((label|0) == 33) {
  $70 = ($69|0)!=($3|0);
  $71 = $70&1;
  $$273 = $71;
 }
 STACKTOP = sp;return ($$273|0);
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 HEAP32[$4>>2] = $2;
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (___uselocale($7)|0);
 $9 = (_wcrtomb($5,0,$1)|0);
 $10 = ($8|0)==(0|0);
 if (!($10)) {
  (___uselocale($8)|0);
 }
 $11 = (($9) + 1)|0;
 $12 = ($11>>>0)<(2);
 L4: do {
  if ($12) {
   $$019 = 2;
  } else {
   $13 = (($9) + -1)|0;
   $14 = HEAP32[$4>>2]|0;
   $15 = $3;
   $16 = (($15) - ($14))|0;
   $17 = ($13>>>0)>($16>>>0);
   if ($17) {
    $$019 = 1;
   } else {
    $$0 = $5;$$018 = $13;
    while(1) {
     $18 = ($$018|0)==(0);
     if ($18) {
      $$019 = 0;
      break L4;
     }
     $19 = ((($$0)) + 1|0);
     $20 = HEAP8[$$0>>0]|0;
     $21 = HEAP32[$4>>2]|0;
     $22 = ((($21)) + 1|0);
     HEAP32[$4>>2] = $22;
     HEAP8[$21>>0] = $20;
     $23 = (($$018) + -1)|0;
     $$0 = $19;$$018 = $23;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$019|0);
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (___uselocale($2)|0);
 $4 = (_mbtowc(0,0,4)|0);
 $5 = ($3|0)==(0|0);
 if (!($5)) {
  (___uselocale($3)|0);
 }
 $6 = ($4|0)==(0);
 if ($6) {
  $7 = HEAP32[$1>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = 1;
  } else {
   $9 = (___uselocale($7)|0);
   $10 = (___ctype_get_mb_cur_max()|0);
   $11 = ($9|0)==(0|0);
   if (!($11)) {
    (___uselocale($9)|0);
   }
   $12 = ($10|0)==(1);
   $spec$select = $12&1;
   return ($spec$select|0);
  }
 } else {
  $$0 = -1;
 }
 return ($$0|0);
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$029 = 0, $$030 = 0, $$034 = 0, $$131 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $3;
 $6 = ((($0)) + 8|0);
 $$029 = 0;$$030 = 0;$$034 = $2;
 L1: while(1) {
  $7 = ($$029>>>0)>=($4>>>0);
  $8 = ($$034|0)==($3|0);
  $or$cond = $8 | $7;
  if ($or$cond) {
   break;
  }
  $9 = $$034;
  $10 = (($5) - ($9))|0;
  $11 = HEAP32[$6>>2]|0;
  $12 = (___uselocale($11)|0);
  $13 = (_mbrlen($$034,$10,$1)|0);
  $14 = ($12|0)==(0|0);
  if (!($14)) {
   (___uselocale($12)|0);
  }
  switch ($13|0) {
  case -2: case -1:  {
   break L1;
   break;
  }
  case 0:  {
   $$sink = 1;
   break;
  }
  default: {
   $$sink = $13;
  }
  }
  $15 = (($$034) + ($$sink)|0);
  $$131 = (($$sink) + ($$030))|0;
  $16 = (($$029) + 1)|0;
  $$029 = $16;$$030 = $$131;$$034 = $15;
 }
 return ($$030|0);
}
function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $7 = 1;
 } else {
  $4 = (___uselocale($2)|0);
  $5 = (___ctype_get_mb_cur_max()|0);
  $6 = ($4|0)==(0|0);
  if ($6) {
   $7 = $5;
  } else {
   (___uselocale($4)|0);
   $7 = $5;
  }
 }
 return ($7|0);
}
function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (13860);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (__ZNSt3__26__clocEv()|0);
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $5 = HEAP32[$1>>2]|0;
  _freelocale($5);
 }
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp + 4|0;
 $9 = sp;
 HEAP32[$8>>2] = $2;
 HEAP32[$9>>2] = $5;
 $10 = (__ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2,$3,$8,$5,$6,$9,1114111,0)|0);
 $11 = HEAP32[$8>>2]|0;
 HEAP32[$4>>2] = $11;
 $12 = HEAP32[$9>>2]|0;
 HEAP32[$7>>2] = $12;
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp + 4|0;
 $9 = sp;
 HEAP32[$8>>2] = $2;
 HEAP32[$9>>2] = $5;
 $10 = (__ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($2,$3,$8,$5,$6,$9,1114111,0)|0);
 $11 = HEAP32[$8>>2]|0;
 HEAP32[$4>>2] = $11;
 $12 = HEAP32[$9>>2]|0;
 HEAP32[$7>>2] = $12;
 STACKTOP = sp;return ($10|0);
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$4>>2] = $2;
 return 3;
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (__ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE($2,$3,$4,1114111,0)|0);
 return ($5|0);
}
function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 4;
}
function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0100 = 0, $$194 = 0, $$194$ph = 0, $$2102 = 0, $$598 = 0, $$off = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond110 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $4 & 4;
 $6 = ($5|0)==(0);
 $$pre = $1;
 if ($6) {
  $$194$ph = $0;
 } else {
  $7 = $0;
  $8 = (($$pre) - ($7))|0;
  $9 = ($8|0)>(2);
  if ($9) {
   $10 = HEAP8[$0>>0]|0;
   $11 = ($10<<24>>24)==(-17);
   if ($11) {
    $12 = ((($0)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = ($13<<24>>24)==(-69);
    if ($14) {
     $15 = ((($0)) + 2|0);
     $16 = HEAP8[$15>>0]|0;
     $17 = ($16<<24>>24)==(-65);
     $18 = ((($0)) + 3|0);
     $spec$select = $17 ? $18 : $0;
     $$194$ph = $spec$select;
    } else {
     $$194$ph = $0;
    }
   } else {
    $$194$ph = $0;
   }
  } else {
   $$194$ph = $0;
  }
 }
 $$0100 = 0;$$194 = $$194$ph;
 L7: while(1) {
  $19 = ($$194>>>0)<($1>>>0);
  $20 = ($$0100>>>0)<($2>>>0);
  $or$cond = $20 & $19;
  if (!($or$cond)) {
   break;
  }
  $21 = HEAP8[$$194>>0]|0;
  $22 = $21&255;
  $23 = ($22>>>0)>($3>>>0);
  if ($23) {
   break;
  }
  $24 = ($21<<24>>24)>(-1);
  do {
   if ($24) {
    $25 = ((($$194)) + 1|0);
    $$2102 = $$0100;$$598 = $25;
   } else {
    $26 = ($21&255)<(194);
    if ($26) {
     break L7;
    }
    $27 = ($21&255)<(224);
    if ($27) {
     $28 = $$194;
     $29 = (($$pre) - ($28))|0;
     $30 = ($29|0)<(2);
     if ($30) {
      break L7;
     }
     $31 = ((($$194)) + 1|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32&255;
     $34 = $33 & 192;
     $35 = ($34|0)==(128);
     if (!($35)) {
      break L7;
     }
     $36 = $22 << 6;
     $37 = $36 & 1984;
     $38 = $33 & 63;
     $39 = $38 | $37;
     $40 = ($39>>>0)>($3>>>0);
     $41 = ((($$194)) + 2|0);
     if ($40) {
      break L7;
     } else {
      $$2102 = $$0100;$$598 = $41;
      break;
     }
    }
    $42 = ($21&255)<(240);
    if ($42) {
     $43 = $$194;
     $44 = (($$pre) - ($43))|0;
     $45 = ($44|0)<(3);
     if ($45) {
      break L7;
     }
     $46 = ((($$194)) + 1|0);
     $47 = HEAP8[$46>>0]|0;
     $48 = ((($$194)) + 2|0);
     $49 = HEAP8[$48>>0]|0;
     switch ($21<<24>>24) {
     case -32:  {
      $50 = $47 & -32;
      $51 = ($50<<24>>24)==(-96);
      if (!($51)) {
       break L7;
      }
      break;
     }
     case -19:  {
      $52 = $47 & -32;
      $53 = ($52<<24>>24)==(-128);
      if (!($53)) {
       break L7;
      }
      break;
     }
     default: {
      $54 = $47 & -64;
      $55 = ($54<<24>>24)==(-128);
      if (!($55)) {
       break L7;
      }
     }
     }
     $56 = $49&255;
     $57 = $56 & 192;
     $58 = ($57|0)==(128);
     if (!($58)) {
      break L7;
     }
     $59 = $22 << 12;
     $60 = $59 & 61440;
     $61 = $47 & 63;
     $62 = $61&255;
     $63 = $62 << 6;
     $64 = $63 | $60;
     $65 = $56 & 63;
     $66 = $64 | $65;
     $67 = ($66>>>0)>($3>>>0);
     $68 = ((($$194)) + 3|0);
     if ($67) {
      break L7;
     } else {
      $$2102 = $$0100;$$598 = $68;
      break;
     }
    }
    $69 = ($21&255)<(245);
    if (!($69)) {
     break L7;
    }
    $70 = $$194;
    $71 = (($$pre) - ($70))|0;
    $72 = ($71|0)<(4);
    $73 = (($2) - ($$0100))|0;
    $74 = ($73>>>0)<(2);
    $or$cond110 = $74 | $72;
    if ($or$cond110) {
     break L7;
    }
    $75 = ((($$194)) + 1|0);
    $76 = HEAP8[$75>>0]|0;
    $77 = ((($$194)) + 2|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = ((($$194)) + 3|0);
    $80 = HEAP8[$79>>0]|0;
    switch ($21<<24>>24) {
    case -16:  {
     $$off = (($76) + 112)<<24>>24;
     $81 = ($$off&255)<(48);
     if (!($81)) {
      break L7;
     }
     break;
    }
    case -12:  {
     $82 = $76 & -16;
     $83 = ($82<<24>>24)==(-128);
     if (!($83)) {
      break L7;
     }
     break;
    }
    default: {
     $84 = $76 & -64;
     $85 = ($84<<24>>24)==(-128);
     if (!($85)) {
      break L7;
     }
    }
    }
    $86 = $78&255;
    $87 = $86 & 192;
    $88 = ($87|0)==(128);
    if (!($88)) {
     break L7;
    }
    $89 = $80&255;
    $90 = $89 & 192;
    $91 = ($90|0)==(128);
    if (!($91)) {
     break L7;
    }
    $92 = $22 << 18;
    $93 = $92 & 1835008;
    $94 = $76 & 63;
    $95 = $94&255;
    $96 = $95 << 12;
    $97 = $96 | $93;
    $98 = $86 << 6;
    $99 = $98 & 4032;
    $100 = $97 | $99;
    $101 = $89 & 63;
    $102 = $100 | $101;
    $103 = ($102>>>0)>($3>>>0);
    $104 = (($$0100) + 1)|0;
    $105 = ((($$194)) + 4|0);
    if ($103) {
     break L7;
    } else {
     $$2102 = $104;$$598 = $105;
    }
   }
  } while(0);
  $106 = (($$2102) + 1)|0;
  $$0100 = $106;$$194 = $$598;
 }
 $107 = $$194;
 $108 = $0;
 $109 = (($107) - ($108))|0;
 return ($109|0);
}
function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$8 = 0, $$off = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = $0;
 HEAP32[$5>>2] = $3;
 $8 = $7 & 4;
 $9 = ($8|0)==(0);
 if ($9) {
  $$pre = $1;
  $$pre$phiZ2D = $$pre;
 } else {
  $10 = HEAP32[$2>>2]|0;
  $11 = $1;
  $12 = $10;
  $13 = (($11) - ($12))|0;
  $14 = ($13|0)>(2);
  if ($14) {
   $15 = HEAP8[$10>>0]|0;
   $16 = ($15<<24>>24)==(-17);
   if ($16) {
    $17 = ((($10)) + 1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = ($18<<24>>24)==(-69);
    if ($19) {
     $20 = ((($10)) + 2|0);
     $21 = HEAP8[$20>>0]|0;
     $22 = ($21<<24>>24)==(-65);
     if ($22) {
      $23 = ((($10)) + 3|0);
      HEAP32[$2>>2] = $23;
      $$pre$phiZ2D = $11;
     } else {
      $$pre$phiZ2D = $11;
     }
    } else {
     $$pre$phiZ2D = $11;
    }
   } else {
    $$pre$phiZ2D = $11;
   }
  } else {
   $$pre$phiZ2D = $11;
  }
 }
 $24 = $4;
 L9: while(1) {
  $25 = HEAP32[$2>>2]|0;
  $26 = ($25>>>0)<($1>>>0);
  if (!($26)) {
   $$8 = 0;
   break;
  }
  $27 = HEAP32[$5>>2]|0;
  $28 = ($27>>>0)<($4>>>0);
  if (!($28)) {
   $$8 = 1;
   break;
  }
  $29 = HEAP8[$25>>0]|0;
  $30 = $29&255;
  $31 = ($30>>>0)>($6>>>0);
  if ($31) {
   $$8 = 2;
   break;
  }
  $32 = ($29<<24>>24)>(-1);
  do {
   if ($32) {
    $33 = $29&255;
    HEAP16[$27>>1] = $33;
    $34 = ((($25)) + 1|0);
    $$sink = $34;
   } else {
    $35 = ($29&255)<(194);
    if ($35) {
     $$8 = 2;
     break L9;
    }
    $36 = ($29&255)<(224);
    if ($36) {
     $37 = $25;
     $38 = (($$pre$phiZ2D) - ($37))|0;
     $39 = ($38|0)<(2);
     if ($39) {
      $$8 = 1;
      break L9;
     }
     $40 = ((($25)) + 1|0);
     $41 = HEAP8[$40>>0]|0;
     $42 = $41&255;
     $43 = $42 & 192;
     $44 = ($43|0)==(128);
     if (!($44)) {
      $$8 = 2;
      break L9;
     }
     $45 = $30 << 6;
     $46 = $45 & 1984;
     $47 = $42 & 63;
     $48 = $47 | $46;
     $49 = ($48>>>0)>($6>>>0);
     if ($49) {
      $$8 = 2;
      break L9;
     }
     $50 = $48&65535;
     HEAP16[$27>>1] = $50;
     $51 = ((($25)) + 2|0);
     $$sink = $51;
     break;
    }
    $52 = ($29&255)<(240);
    if ($52) {
     $53 = $25;
     $54 = (($$pre$phiZ2D) - ($53))|0;
     $55 = ($54|0)<(3);
     if ($55) {
      $$8 = 1;
      break L9;
     }
     $56 = ((($25)) + 1|0);
     $57 = HEAP8[$56>>0]|0;
     $58 = ((($25)) + 2|0);
     $59 = HEAP8[$58>>0]|0;
     switch ($29<<24>>24) {
     case -32:  {
      $60 = $57 & -32;
      $61 = ($60<<24>>24)==(-96);
      if (!($61)) {
       $$8 = 2;
       break L9;
      }
      break;
     }
     case -19:  {
      $62 = $57 & -32;
      $63 = ($62<<24>>24)==(-128);
      if (!($63)) {
       $$8 = 2;
       break L9;
      }
      break;
     }
     default: {
      $64 = $57 & -64;
      $65 = ($64<<24>>24)==(-128);
      if (!($65)) {
       $$8 = 2;
       break L9;
      }
     }
     }
     $66 = $59&255;
     $67 = $66 & 192;
     $68 = ($67|0)==(128);
     if (!($68)) {
      $$8 = 2;
      break L9;
     }
     $69 = $30 << 12;
     $70 = $57 & 63;
     $71 = $70&255;
     $72 = $71 << 6;
     $73 = $72 | $69;
     $74 = $66 & 63;
     $75 = $73 | $74;
     $76 = $75 & 65535;
     $77 = ($76>>>0)>($6>>>0);
     if ($77) {
      $$8 = 2;
      break L9;
     }
     $78 = $75&65535;
     HEAP16[$27>>1] = $78;
     $79 = ((($25)) + 3|0);
     $$sink = $79;
     break;
    }
    $80 = ($29&255)<(245);
    if (!($80)) {
     $$8 = 2;
     break L9;
    }
    $81 = $25;
    $82 = (($$pre$phiZ2D) - ($81))|0;
    $83 = ($82|0)<(4);
    if ($83) {
     $$8 = 1;
     break L9;
    }
    $84 = ((($25)) + 1|0);
    $85 = HEAP8[$84>>0]|0;
    $86 = ((($25)) + 2|0);
    $87 = HEAP8[$86>>0]|0;
    $88 = ((($25)) + 3|0);
    $89 = HEAP8[$88>>0]|0;
    switch ($29<<24>>24) {
    case -16:  {
     $$off = (($85) + 112)<<24>>24;
     $90 = ($$off&255)<(48);
     if (!($90)) {
      $$8 = 2;
      break L9;
     }
     break;
    }
    case -12:  {
     $91 = $85 & -16;
     $92 = ($91<<24>>24)==(-128);
     if (!($92)) {
      $$8 = 2;
      break L9;
     }
     break;
    }
    default: {
     $93 = $85 & -64;
     $94 = ($93<<24>>24)==(-128);
     if (!($94)) {
      $$8 = 2;
      break L9;
     }
    }
    }
    $95 = $87&255;
    $96 = $95 & 192;
    $97 = ($96|0)==(128);
    if (!($97)) {
     $$8 = 2;
     break L9;
    }
    $98 = $89&255;
    $99 = $98 & 192;
    $100 = ($99|0)==(128);
    if (!($100)) {
     $$8 = 2;
     break L9;
    }
    $101 = $27;
    $102 = (($24) - ($101))|0;
    $103 = ($102|0)<(4);
    if ($103) {
     $$8 = 1;
     break L9;
    }
    $104 = $30 & 7;
    $105 = $104 << 18;
    $106 = $85&255;
    $107 = $106 << 12;
    $108 = $107 & 258048;
    $109 = $108 | $105;
    $110 = $95 << 6;
    $111 = $110 & 4032;
    $112 = $109 | $111;
    $113 = $98 & 63;
    $114 = $112 | $113;
    $115 = ($114>>>0)>($6>>>0);
    if ($115) {
     $$8 = 2;
     break L9;
    }
    $116 = $104 << 2;
    $117 = $106 >>> 4;
    $118 = $117 & 3;
    $119 = $118 | $116;
    $120 = $119 << 6;
    $121 = (($120) + 16320)|0;
    $122 = $106 << 2;
    $123 = $122 & 60;
    $124 = $95 >>> 4;
    $125 = $124 & 3;
    $126 = $123 | $125;
    $127 = $126 | $121;
    $128 = $127 | 55296;
    $129 = $128&65535;
    HEAP16[$27>>1] = $129;
    $130 = $110 & 960;
    $131 = $113 | $130;
    $132 = $131 | 56320;
    $133 = $132&65535;
    $134 = ((($27)) + 2|0);
    HEAP32[$5>>2] = $134;
    HEAP16[$134>>1] = $133;
    $135 = HEAP32[$2>>2]|0;
    $136 = ((($135)) + 4|0);
    $$sink = $136;
   }
  } while(0);
  HEAP32[$2>>2] = $$sink;
  $137 = HEAP32[$5>>2]|0;
  $138 = ((($137)) + 2|0);
  HEAP32[$5>>2] = $138;
 }
 return ($$8|0);
}
function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$4 = 0, $$pre = 0, $$pre80 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$2>>2] = $0;
 HEAP32[$5>>2] = $3;
 $8 = $7 & 2;
 $9 = ($8|0)==(0);
 $$pre80 = $4;
 if ($9) {
  label = 4;
 } else {
  $10 = $3;
  $11 = (($$pre80) - ($10))|0;
  $12 = ($11|0)<(3);
  if ($12) {
   $$4 = 1;
  } else {
   $13 = ((($3)) + 1|0);
   HEAP32[$5>>2] = $13;
   HEAP8[$3>>0] = -17;
   $14 = HEAP32[$5>>2]|0;
   $15 = ((($14)) + 1|0);
   HEAP32[$5>>2] = $15;
   HEAP8[$14>>0] = -69;
   $16 = HEAP32[$5>>2]|0;
   $17 = ((($16)) + 1|0);
   HEAP32[$5>>2] = $17;
   HEAP8[$16>>0] = -65;
   label = 4;
  }
 }
 L4: do {
  if ((label|0) == 4) {
   $18 = $1;
   $$pre = HEAP32[$2>>2]|0;
   $19 = $$pre;
   while(1) {
    $20 = ($19>>>0)<($1>>>0);
    if (!($20)) {
     $$4 = 0;
     break L4;
    }
    $21 = HEAP16[$19>>1]|0;
    $22 = $21&65535;
    $23 = ($22>>>0)>($6>>>0);
    if ($23) {
     $$4 = 2;
     break L4;
    }
    $24 = ($21&65535)<(128);
    do {
     if ($24) {
      $25 = HEAP32[$5>>2]|0;
      $26 = $25;
      $27 = (($$pre80) - ($26))|0;
      $28 = ($27|0)<(1);
      if ($28) {
       $$4 = 1;
       break L4;
      }
      $29 = $21&255;
      $30 = ((($25)) + 1|0);
      HEAP32[$5>>2] = $30;
      HEAP8[$25>>0] = $29;
     } else {
      $31 = ($21&65535)<(2048);
      if ($31) {
       $32 = HEAP32[$5>>2]|0;
       $33 = $32;
       $34 = (($$pre80) - ($33))|0;
       $35 = ($34|0)<(2);
       if ($35) {
        $$4 = 1;
        break L4;
       }
       $36 = $22 >>> 6;
       $37 = $36 | 192;
       $38 = $37&255;
       $39 = ((($32)) + 1|0);
       HEAP32[$5>>2] = $39;
       HEAP8[$32>>0] = $38;
       $40 = $22 & 63;
       $41 = $40 | 128;
       $42 = $41&255;
       $43 = HEAP32[$5>>2]|0;
       $44 = ((($43)) + 1|0);
       HEAP32[$5>>2] = $44;
       HEAP8[$43>>0] = $42;
       break;
      }
      $45 = ($21&65535)<(55296);
      if ($45) {
       $46 = HEAP32[$5>>2]|0;
       $47 = $46;
       $48 = (($$pre80) - ($47))|0;
       $49 = ($48|0)<(3);
       if ($49) {
        $$4 = 1;
        break L4;
       }
       $50 = $22 >>> 12;
       $51 = $50 | 224;
       $52 = $51&255;
       $53 = ((($46)) + 1|0);
       HEAP32[$5>>2] = $53;
       HEAP8[$46>>0] = $52;
       $54 = $22 >>> 6;
       $55 = $54 & 63;
       $56 = $55 | 128;
       $57 = $56&255;
       $58 = HEAP32[$5>>2]|0;
       $59 = ((($58)) + 1|0);
       HEAP32[$5>>2] = $59;
       HEAP8[$58>>0] = $57;
       $60 = $22 & 63;
       $61 = $60 | 128;
       $62 = $61&255;
       $63 = HEAP32[$5>>2]|0;
       $64 = ((($63)) + 1|0);
       HEAP32[$5>>2] = $64;
       HEAP8[$63>>0] = $62;
       break;
      }
      $65 = ($21&65535)<(56320);
      if (!($65)) {
       $116 = ($21&65535)<(57344);
       if ($116) {
        $$4 = 2;
        break L4;
       }
       $117 = HEAP32[$5>>2]|0;
       $118 = $117;
       $119 = (($$pre80) - ($118))|0;
       $120 = ($119|0)<(3);
       if ($120) {
        $$4 = 1;
        break L4;
       }
       $121 = $22 >>> 12;
       $122 = $121 | 224;
       $123 = $122&255;
       $124 = ((($117)) + 1|0);
       HEAP32[$5>>2] = $124;
       HEAP8[$117>>0] = $123;
       $125 = $22 >>> 6;
       $126 = $125 & 63;
       $127 = $126 | 128;
       $128 = $127&255;
       $129 = HEAP32[$5>>2]|0;
       $130 = ((($129)) + 1|0);
       HEAP32[$5>>2] = $130;
       HEAP8[$129>>0] = $128;
       $131 = $22 & 63;
       $132 = $131 | 128;
       $133 = $132&255;
       $134 = HEAP32[$5>>2]|0;
       $135 = ((($134)) + 1|0);
       HEAP32[$5>>2] = $135;
       HEAP8[$134>>0] = $133;
       break;
      }
      $66 = $19;
      $67 = (($18) - ($66))|0;
      $68 = ($67|0)<(4);
      if ($68) {
       $$4 = 1;
       break L4;
      }
      $69 = ((($19)) + 2|0);
      $70 = HEAP16[$69>>1]|0;
      $71 = $70&65535;
      $72 = $71 & 64512;
      $73 = ($72|0)==(56320);
      if (!($73)) {
       $$4 = 2;
       break L4;
      }
      $74 = HEAP32[$5>>2]|0;
      $75 = (($$pre80) - ($74))|0;
      $76 = ($75|0)<(4);
      if ($76) {
       $$4 = 1;
       break L4;
      }
      $77 = $22 & 960;
      $78 = $77 << 10;
      $79 = (($78) + 65536)|0;
      $80 = $22 << 10;
      $81 = $80 & 64512;
      $82 = $79 | $81;
      $83 = $71 & 1023;
      $84 = $82 | $83;
      $85 = ($84>>>0)>($6>>>0);
      if ($85) {
       $$4 = 2;
       break L4;
      }
      HEAP32[$2>>2] = $69;
      $86 = $77 >>> 6;
      $87 = (($86) + 1)|0;
      $88 = $87 >>> 2;
      $89 = $88 | 240;
      $90 = $89&255;
      $91 = HEAP32[$5>>2]|0;
      $92 = ((($91)) + 1|0);
      HEAP32[$5>>2] = $92;
      HEAP8[$91>>0] = $90;
      $93 = $87 << 4;
      $94 = $93 & 48;
      $95 = $22 >>> 2;
      $96 = $95 & 15;
      $97 = $96 | $94;
      $98 = $97 | 128;
      $99 = $98&255;
      $100 = HEAP32[$5>>2]|0;
      $101 = ((($100)) + 1|0);
      HEAP32[$5>>2] = $101;
      HEAP8[$100>>0] = $99;
      $102 = $22 << 4;
      $103 = $102 & 48;
      $104 = $71 >>> 6;
      $105 = $104 & 15;
      $106 = $103 | $105;
      $107 = $106 | 128;
      $108 = $107&255;
      $109 = HEAP32[$5>>2]|0;
      $110 = ((($109)) + 1|0);
      HEAP32[$5>>2] = $110;
      HEAP8[$109>>0] = $108;
      $111 = $71 & 63;
      $112 = $111 | 128;
      $113 = $112&255;
      $114 = HEAP32[$5>>2]|0;
      $115 = ((($114)) + 1|0);
      HEAP32[$5>>2] = $115;
      HEAP8[$114>>0] = $113;
     }
    } while(0);
    $136 = HEAP32[$2>>2]|0;
    $137 = ((($136)) + 2|0);
    HEAP32[$2>>2] = $137;
    $19 = $137;
   }
  }
 } while(0);
 return ($$4|0);
}
function __ZNSt3__26locale5__impD2Ev($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (13908);
 $1 = ((($0)) + 8|0);
 $2 = ((($0)) + 12|0);
 $$0 = 0;
 while(1) {
  $3 = HEAP32[$2>>2]|0;
  $4 = HEAP32[$1>>2]|0;
  $5 = (($3) - ($4))|0;
  $6 = $5 >> 2;
  $7 = ($$0>>>0)<($6>>>0);
  if (!($7)) {
   break;
  }
  $9 = $4;
  $10 = (($9) + ($$0<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   $13 = ((($11)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($14) + -1)|0;
   HEAP32[$13>>2] = $15;
   $16 = ($14|0)==(0);
   if ($16) {
    $17 = HEAP32[$11>>2]|0;
    $18 = ((($17)) + 8|0);
    $19 = HEAP32[$18>>2]|0;
    FUNCTION_TABLE_vi[$19 & 1023]($11);
   }
  }
  $20 = (($$0) + 1)|0;
  $$0 = $20;
 }
 $8 = ((($0)) + 144|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__26locale5__impD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5__impD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 $3 = $1;
 do {
  if (!($2)) {
   $4 = ((($0)) + 4|0);
   HEAP32[$4>>2] = $3;
   $5 = ((($0)) + 16|0);
   $6 = ($1|0)==($5|0);
   if ($6) {
    $7 = ((($0)) + 128|0);
    HEAP8[$7>>0] = 0;
    break;
   } else {
    $8 = ((($0)) + 8|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (($9) - ($3))|0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($1,$10);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__25ctypeIcED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (13928);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($0)) + 12|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = ($5<<24>>24)==(0);
  if (!($6)) {
   __ZdaPv($2);
  }
 }
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__25ctypeIcED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__25ctypeIcED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__25ctypeIcE10do_toupperEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1<<24>>24)>(-1);
 if ($2) {
  $3 = $1&255;
  $4 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv()|0);
  $5 = (($4) + ($3<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = $6&255;
  $8 = $7;
 } else {
  $8 = $1;
 }
 return ($8|0);
}
function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $1;
 while(1) {
  $3 = ($$0|0)==($2|0);
  if ($3) {
   break;
  }
  $4 = HEAP8[$$0>>0]|0;
  $5 = ($4<<24>>24)>(-1);
  if ($5) {
   $6 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv()|0);
   $7 = HEAP8[$$0>>0]|0;
   $8 = $7 << 24 >> 24;
   $9 = (($6) + ($8<<2)|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = $10&255;
   $12 = $11;
  } else {
   $12 = $4;
  }
  HEAP8[$$0>>0] = $12;
  $13 = ((($$0)) + 1|0);
  $$0 = $13;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIcE10do_tolowerEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1<<24>>24)>(-1);
 if ($2) {
  $3 = $1 << 24 >> 24;
  $4 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv()|0);
  $5 = (($4) + ($3<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = $6&255;
  $8 = $7;
 } else {
  $8 = $1;
 }
 return ($8|0);
}
function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $1;
 while(1) {
  $3 = ($$0|0)==($2|0);
  if ($3) {
   break;
  }
  $4 = HEAP8[$$0>>0]|0;
  $5 = ($4<<24>>24)>(-1);
  if ($5) {
   $6 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv()|0);
   $7 = HEAP8[$$0>>0]|0;
   $8 = $7 << 24 >> 24;
   $9 = (($6) + ($8<<2)|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = $10&255;
   $12 = $11;
  } else {
   $12 = $4;
  }
  HEAP8[$$0>>0] = $12;
  $13 = ((($$0)) + 1|0);
  $$0 = $13;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIcE8do_widenEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($1|0);
}
function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$07 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $3;$$07 = $1;
 while(1) {
  $4 = ($$07|0)==($2|0);
  if ($4) {
   break;
  }
  $5 = HEAP8[$$07>>0]|0;
  HEAP8[$$0>>0] = $5;
  $6 = ((($$07)) + 1|0);
  $7 = ((($$0)) + 1|0);
  $$0 = $7;$$07 = $6;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIcE9do_narrowEcc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1<<24>>24)>(-1);
 $$ = $3 ? $1 : $2;
 return ($$|0);
}
function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$09 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $4;$$09 = $1;
 while(1) {
  $5 = ($$09|0)==($2|0);
  if ($5) {
   break;
  }
  $6 = HEAP8[$$09>>0]|0;
  $7 = ($6<<24>>24)>(-1);
  $$ = $7 ? $6 : $3;
  HEAP8[$$0>>0] = $$;
  $8 = ((($$09)) + 1|0);
  $9 = ((($$0)) + 1|0);
  $$0 = $9;$$09 = $8;
 }
 return ($2|0);
}
function __ZNSt3__25ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___ctype_tolower_loc()|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__25ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___ctype_toupper_loc()|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__25ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___ctype_b_loc()|0);
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__28numpunctIcED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (13980);
 $1 = ((($0)) + 12|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28numpunctIcED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28numpunctIcED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28numpunctIcE16do_decimal_pointEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP8[$1>>0]|0;
 return ($2|0);
}
function __ZNKSt3__28numpunctIcE16do_thousands_sepEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 9|0);
 $2 = HEAP8[$1>>0]|0;
 return ($2|0);
}
function __ZNKSt3__28numpunctIcE11do_groupingEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 12|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0,$2);
 return;
}
function __ZNKSt3__28numpunctIcE11do_truenameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $2 = (__ZNSt3__211char_traitsIcE6lengthEPKc(26922)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0,26922,$2);
 return;
}
function __ZNKSt3__28numpunctIcE12do_falsenameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $2 = (__ZNSt3__211char_traitsIcE6lengthEPKc(26927)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0,26927,$2);
 return;
}
function __ZNSt3__28numpunctIwED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (14020);
 $1 = ((($0)) + 16|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}
function __ZNSt3__28numpunctIwED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28numpunctIwED2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__28numpunctIwE16do_decimal_pointEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZNKSt3__28numpunctIwE16do_thousands_sepEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZNKSt3__28numpunctIwE11do_groupingEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 16|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0,$2);
 return;
}
function __ZNKSt3__28numpunctIwE11do_truenameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $2 = (__ZNSt3__211char_traitsIwE6lengthEPKw(14076)|0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm($0,14076,$2);
 return;
}
function __ZNKSt3__28numpunctIwE12do_falsenameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $2 = (__ZNSt3__211char_traitsIwE6lengthEPKw(14052)|0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm($0,14052,$2);
 return;
}
function __ZNSt3__26locale5facetD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__25ctypeIwED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt3__25ctypeIwE5do_isEtw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2>>>0)<(128);
 if ($3) {
  $4 = (__ZNSt3__25ctypeIcE13classic_tableEv()|0);
  $5 = (($4) + ($2<<1)|0);
  $6 = HEAP16[$5>>1]|0;
  $7 = $6 & $1;
  $8 = ($7<<16>>16)!=(0);
  $9 = $8;
 } else {
  $9 = 0;
 }
 return ($9|0);
}
function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$08 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $3;$$08 = $1;
 while(1) {
  $4 = ($$08|0)==($2|0);
  if ($4) {
   break;
  }
  $5 = HEAP32[$$08>>2]|0;
  $6 = ($5>>>0)<(128);
  if ($6) {
   $7 = (__ZNSt3__25ctypeIcE13classic_tableEv()|0);
   $8 = HEAP32[$$08>>2]|0;
   $9 = (($7) + ($8<<1)|0);
   $10 = HEAP16[$9>>1]|0;
   $11 = $10&65535;
   $13 = $11;
  } else {
   $13 = 0;
  }
  $12 = $13&65535;
  HEAP16[$$0>>1] = $12;
  $14 = ((($$08)) + 4|0);
  $15 = ((($$0)) + 2|0);
  $$0 = $15;$$08 = $14;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $2;
 while(1) {
  $4 = ($$0|0)==($3|0);
  if ($4) {
   $$0$lcssa = $3;
   break;
  }
  $5 = HEAP32[$$0>>2]|0;
  $6 = ($5>>>0)<(128);
  if ($6) {
   $7 = (__ZNSt3__25ctypeIcE13classic_tableEv()|0);
   $8 = HEAP32[$$0>>2]|0;
   $9 = (($7) + ($8<<1)|0);
   $10 = HEAP16[$9>>1]|0;
   $11 = $10 & $1;
   $12 = ($11<<16>>16)==(0);
   if (!($12)) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $13 = ((($$0)) + 4|0);
  $$0 = $13;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $2;
 while(1) {
  $4 = ($$0|0)==($3|0);
  if ($4) {
   $$0$lcssa = $3;
   break;
  }
  $5 = HEAP32[$$0>>2]|0;
  $6 = ($5>>>0)<(128);
  if (!($6)) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = (__ZNSt3__25ctypeIcE13classic_tableEv()|0);
  $8 = HEAP32[$$0>>2]|0;
  $9 = (($7) + ($8<<1)|0);
  $10 = HEAP16[$9>>1]|0;
  $11 = $10 & $1;
  $12 = ($11<<16>>16)==(0);
  if ($12) {
   $$0$lcssa = $$0;
   break;
  }
  $13 = ((($$0)) + 4|0);
  $$0 = $13;
 }
 return ($$0$lcssa|0);
}
function __ZNKSt3__25ctypeIwE10do_toupperEw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)<(128);
 if ($2) {
  $3 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv()|0);
  $4 = (($3) + ($1<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $5;
 } else {
  $6 = $1;
 }
 return ($6|0);
}
function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $1;
 while(1) {
  $3 = ($$0|0)==($2|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $5 = ($4>>>0)<(128);
  if ($5) {
   $6 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv()|0);
   $7 = HEAP32[$$0>>2]|0;
   $8 = (($6) + ($7<<2)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $9;
  } else {
   $10 = $4;
  }
  HEAP32[$$0>>2] = $10;
  $11 = ((($$0)) + 4|0);
  $$0 = $11;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIwE10do_tolowerEw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)<(128);
 if ($2) {
  $3 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv()|0);
  $4 = (($3) + ($1<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $5;
 } else {
  $6 = $1;
 }
 return ($6|0);
}
function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $1;
 while(1) {
  $3 = ($$0|0)==($2|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$$0>>2]|0;
  $5 = ($4>>>0)<(128);
  if ($5) {
   $6 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv()|0);
   $7 = HEAP32[$$0>>2]|0;
   $8 = (($6) + ($7<<2)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $9;
  } else {
   $10 = $4;
  }
  HEAP32[$$0>>2] = $10;
  $11 = ((($$0)) + 4|0);
  $$0 = $11;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIwE8do_widenEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 24 >> 24;
 return ($2|0);
}
function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$07 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $3;$$07 = $1;
 while(1) {
  $4 = ($$07|0)==($2|0);
  if ($4) {
   break;
  }
  $5 = HEAP8[$$07>>0]|0;
  $6 = $5 << 24 >> 24;
  HEAP32[$$0>>2] = $6;
  $7 = ((($$07)) + 1|0);
  $8 = ((($$0)) + 4|0);
  $$0 = $8;$$07 = $7;
 }
 return ($2|0);
}
function __ZNKSt3__25ctypeIwE9do_narrowEwc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)<(128);
 $4 = $1&255;
 $$0 = $3 ? $4 : $2;
 return ($$0|0);
}
function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$09 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $scevgep = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $1;
 $6 = $2;
 $7 = (($6) - ($5))|0;
 $8 = $7 >>> 2;
 $$0 = $4;$$09 = $1;
 while(1) {
  $9 = ($$09|0)==($2|0);
  if ($9) {
   break;
  }
  $10 = HEAP32[$$09>>2]|0;
  $11 = ($10>>>0)<(128);
  $12 = $10&255;
  $storemerge = $11 ? $12 : $3;
  HEAP8[$$0>>0] = $storemerge;
  $13 = ((($$09)) + 4|0);
  $14 = ((($$0)) + 1|0);
  $$0 = $14;$$09 = $13;
 }
 $scevgep = (($1) + ($8<<2)|0);
 return ($scevgep|0);
}
function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNSt3__220__time_get_c_storageIcEC2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (14336);
 return;
}
function __ZNSt3__220__time_get_c_storageIwEC2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (14372);
 return;
}
function __ZNSt3__25ctypeIcEC2EPKtbm($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $2&1;
 $5 = (($3) + -1)|0;
 $6 = ((($0)) + 4|0);
 HEAP32[$6>>2] = $5;
 HEAP32[$0>>2] = (13928);
 $7 = ((($0)) + 8|0);
 HEAP32[$7>>2] = $1;
 $8 = ((($0)) + 12|0);
 HEAP8[$8>>0] = $4;
 $9 = ($1|0)==(0|0);
 if ($9) {
  $10 = (__ZNSt3__25ctypeIcE13classic_tableEv()|0);
  HEAP32[$7>>2] = $10;
 }
 return;
}
function __ZNSt3__26locale5__impC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 HEAP32[$0>>2] = (13908);
 $4 = ((($0)) + 8|0);
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em($4,28);
 $5 = ((($0)) + 144|0);
 ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
 $6 = (__ZNSt3__211char_traitsIcE6lengthEPKc(23219)|0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($5,23219,$6);
 $7 = HEAP32[$4>>2]|0;
 $8 = ((($0)) + 12|0);
 HEAP32[$8>>2] = $7;
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0,35064);
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0,35072);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0,35080);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0,35096);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0,35104);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0,35112);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0,35128);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0,35136);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0,35144);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0,35168);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,35200);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,35208);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,35216);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,35224);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0,35232);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0,35240);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0,35248);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0,35256);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,35264);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,35272);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,35280);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,35288);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,35296);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,35312);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,35328);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,35344);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0,35360);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0,35368);
 return;
}
function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 128|0);
 HEAP8[$4>>0] = 0;
 $5 = ($1|0)==(0);
 if (!($5)) {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE11__vallocateEm($0,$1);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0,$1);
 }
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35068)>>2] = 0;
 HEAP32[8766] = (11764);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36708)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35076)>>2] = 0;
 HEAP32[8768] = (11796);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36716)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__25ctypeIcEC2EPKtbm(35080,0,0,1);
 return;
}
function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36724)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35100)>>2] = 0;
 HEAP32[8774] = (14124);
 return;
}
function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36756)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35108)>>2] = 0;
 HEAP32[8776] = (14192);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37028)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__27codecvtIwc11__mbstate_tEC2Em(35112,1);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37036)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35132)>>2] = 0;
 HEAP32[8782] = (14240);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37044)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35140)>>2] = 0;
 HEAP32[8784] = (14288);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37052)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28numpunctIcEC2Em(35144,1);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36740)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__28numpunctIwEC2Em(35168,1);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36764)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35204)>>2] = 0;
 HEAP32[8800] = (11828);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36748)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35212)>>2] = 0;
 HEAP32[8802] = (11892);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36772)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35220)>>2] = 0;
 HEAP32[8804] = (11956);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36780)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35228)>>2] = 0;
 HEAP32[8806] = (12008);
 return;
}
function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36788)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35236)>>2] = 0;
 HEAP32[8808] = (13364);
 return;
}
function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36948)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35244)>>2] = 0;
 HEAP32[8810] = (13420);
 return;
}
function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36956)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35252)>>2] = 0;
 HEAP32[8812] = (13476);
 return;
}
function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36964)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35260)>>2] = 0;
 HEAP32[8814] = (13532);
 return;
}
function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36972)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35268)>>2] = 0;
 HEAP32[8816] = (13588);
 return;
}
function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36980)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35276)>>2] = 0;
 HEAP32[8818] = (13616);
 return;
}
function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36988)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35284)>>2] = 0;
 HEAP32[8820] = (13644);
 return;
}
function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36996)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35292)>>2] = 0;
 HEAP32[8822] = (13672);
 return;
}
function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37004)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35300)>>2] = 0;
 HEAP32[8824] = (14104);
 __ZNSt3__220__time_get_c_storageIcEC2Ev((35304));
 HEAP32[8824] = (12060);
 HEAP32[(35304)>>2] = (12108);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36856)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35316)>>2] = 0;
 HEAP32[8828] = (14104);
 __ZNSt3__220__time_get_c_storageIwEC2Ev((35320));
 HEAP32[8828] = (12144);
 HEAP32[(35320)>>2] = (12192);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36924)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35332)>>2] = 0;
 HEAP32[8832] = (14104);
 $0 = (__ZNSt3__26__clocEv()|0);
 HEAP32[(35336)>>2] = $0;
 HEAP32[8832] = (13316);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36932)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35348)>>2] = 0;
 HEAP32[8836] = (14104);
 $0 = (__ZNSt3__26__clocEv()|0);
 HEAP32[(35352)>>2] = $0;
 HEAP32[8836] = (13340);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(36940)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35364)>>2] = 0;
 HEAP32[8840] = (13700);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37012)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[(35372)>>2] = 0;
 HEAP32[8842] = (13732);
 return;
}
function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__26locale2id5__getEv(37020)|0);
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2);
 return;
}
function __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($0)) + 8|0);
 $7 = ((($0)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$6>>2]|0;
 $10 = (($8) - ($9))|0;
 $11 = $10 >> 2;
 $12 = ($11>>>0)>($2>>>0);
 if ($12) {
  $13 = $9;
  $$pre$phiZ2D = $6;$16 = $13;
 } else {
  $14 = (($2) + 1)|0;
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm($6,$14);
  $$pre = HEAP32[$6>>2]|0;
  $$pre$phiZ2D = $6;$16 = $$pre;
 }
 $15 = (($16) + ($2<<2)|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  $19 = ((($17)) + 4|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20) + -1)|0;
  HEAP32[$19>>2] = $21;
  $22 = ($20|0)==(0);
  if ($22) {
   $23 = HEAP32[$17>>2]|0;
   $24 = ((($23)) + 8|0);
   $25 = HEAP32[$24>>2]|0;
   FUNCTION_TABLE_vi[$25 & 1023]($17);
  }
 }
 $26 = HEAP32[$$pre$phiZ2D>>2]|0;
 $27 = (($26) + ($2<<2)|0);
 HEAP32[$27>>2] = $1;
 return;
}
function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$0>>2]|0;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ($6>>>0)<($1>>>0);
 $8 = $4;
 if ($7) {
  $9 = (($1) - ($6))|0;
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm($0,$9);
 } else {
  $10 = ($6>>>0)>($1>>>0);
  if ($10) {
   $11 = (($8) + ($1<<2)|0);
   HEAP32[$2>>2] = $11;
  }
 }
 return;
}
function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sroa$speculated$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = $7 >> 2;
 $9 = ($8>>>0)<($1>>>0);
 do {
  if ($9) {
   $10 = HEAP32[$0>>2]|0;
   $11 = (($6) - ($10))|0;
   $12 = $11 >> 2;
   $13 = (($12) + ($1))|0;
   $14 = (__ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0)|0);
   $15 = ($14>>>0)<($13>>>0);
   if ($15) {
    __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
    // unreachable;
   } else {
    $16 = ((($0)) + 16|0);
    $17 = HEAP32[$3>>2]|0;
    $18 = HEAP32[$0>>2]|0;
    $19 = (($17) - ($18))|0;
    $20 = $19 >> 2;
    $21 = $14 >>> 1;
    $22 = ($20>>>0)<($21>>>0);
    $23 = $19 >> 1;
    $24 = ($23>>>0)<($13>>>0);
    $$sroa$speculated$i = $24 ? $13 : $23;
    $spec$select$i = $22 ? $$sroa$speculated$i : $14;
    $25 = HEAP32[$5>>2]|0;
    $26 = (($25) - ($18))|0;
    $27 = $26 >> 2;
    __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_($2,$spec$select$i,$27,$16);
    __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($2,$1);
    __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0,$2);
    __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev($2);
    break;
   }
  } else {
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0,$1);
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $$pre = HEAP32[$2>>2]|0;
 $$0 = $1;$3 = $$pre;
 while(1) {
  HEAP32[$3>>2] = 0;
  $4 = HEAP32[$2>>2]|0;
  $5 = ((($4)) + 4|0);
  HEAP32[$2>>2] = $5;
  $6 = (($$0) + -1)|0;
  $7 = ($6|0)==(0);
  if ($7) {
   break;
  } else {
   $$0 = $6;$3 = $5;
  }
 }
 return;
}
function __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1073741823;
}
function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = $3;
 $6 = ($1|0)==(0);
 do {
  if ($6) {
   $13 = 0;
  } else {
   $7 = ((($3)) + 112|0);
   $8 = HEAP8[$7>>0]|0;
   $9 = ($8<<24>>24)==(0);
   $10 = ($1>>>0)<(29);
   $or$cond$i$i = $10 & $9;
   if ($or$cond$i$i) {
    HEAP8[$7>>0] = 1;
    $13 = $3;
    break;
   } else {
    $11 = $1 << 2;
    $12 = (__Znwm($11)|0);
    $13 = $12;
    break;
   }
  }
 } while(0);
 HEAP32[$0>>2] = $13;
 $14 = (($13) + ($2<<2)|0);
 $15 = ((($0)) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = ((($0)) + 4|0);
 HEAP32[$16>>2] = $14;
 $17 = (($13) + ($1<<2)|0);
 HEAP32[$4>>2] = $17;
 return;
}
function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $$pre = HEAP32[$2>>2]|0;
 $$0 = $1;$3 = $$pre;
 while(1) {
  HEAP32[$3>>2] = 0;
  $4 = HEAP32[$2>>2]|0;
  $5 = ((($4)) + 4|0);
  HEAP32[$2>>2] = $5;
  $6 = (($$0) + -1)|0;
  $7 = ($6|0)==(0);
  if ($7) {
   break;
  } else {
   $$0 = $6;$3 = $5;
  }
 }
 return;
}
function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 4|0);
 $6 = $2;
 $7 = (($4) - ($6))|0;
 $8 = $7 >> 2;
 $9 = HEAP32[$5>>2]|0;
 $10 = (0 - ($8))|0;
 $11 = (($9) + ($10<<2)|0);
 HEAP32[$5>>2] = $11;
 $12 = ($7|0)>(0);
 if ($12) {
  _memcpy(($11|0),($2|0),($7|0))|0;
  $$pre = HEAP32[$5>>2]|0;
  $$pre$phiZ2D = $5;$15 = $$pre;
 } else {
  $13 = $11;
  $$pre$phiZ2D = $5;$15 = $13;
 }
 $14 = HEAP32[$0>>2]|0;
 HEAP32[$0>>2] = $15;
 HEAP32[$$pre$phiZ2D>>2] = $14;
 $16 = ((($1)) + 8|0);
 $17 = HEAP32[$3>>2]|0;
 $18 = HEAP32[$16>>2]|0;
 HEAP32[$3>>2] = $18;
 HEAP32[$16>>2] = $17;
 $19 = ((($0)) + 8|0);
 $20 = ((($1)) + 12|0);
 $21 = HEAP32[$19>>2]|0;
 $22 = HEAP32[$20>>2]|0;
 HEAP32[$19>>2] = $22;
 HEAP32[$20>>2] = $21;
 $23 = HEAP32[$$pre$phiZ2D>>2]|0;
 HEAP32[$1>>2] = $23;
 return;
}
function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev($0) {
 $0 = $0|0;
 var $$pre$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 8|0);
 $$pre$i$i$i = HEAP32[$3>>2]|0;
 $4 = $$pre$i$i$i;
 while(1) {
  $5 = ($4|0)==($2|0);
  if ($5) {
   break;
  }
  $6 = ((($4)) + -4|0);
  HEAP32[$3>>2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0>>2]|0;
 $8 = ($7|0)==(0|0);
 $9 = $7;
 do {
  if (!($8)) {
   $10 = ((($0)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($7|0)==($11|0);
   if ($12) {
    $13 = ((($11)) + 112|0);
    HEAP8[$13>>0] = 0;
    break;
   } else {
    $14 = ((($0)) + 12|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (($15) - ($9))|0;
    __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($7,$16);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNSt3__28numpunctIwEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 HEAP32[$0>>2] = (14020);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = 46;
 $5 = ((($0)) + 12|0);
 HEAP32[$5>>2] = 44;
 $6 = ((($0)) + 16|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $7 = (($6) + ($$0$i$i<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($$0$i$i) + 1)|0;
  $$0$i$i = $8;
 }
 return;
}
function __ZNSt3__28numpunctIcEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 HEAP32[$0>>2] = (13980);
 $4 = ((($0)) + 8|0);
 HEAP8[$4>>0] = 46;
 $5 = ((($0)) + 9|0);
 HEAP8[$5>>0] = 44;
 $6 = ((($0)) + 12|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $7 = (($6) + ($$0$i$i<<2)|0);
  HEAP32[$7>>2] = 0;
  $8 = (($$0$i$i) + 1)|0;
  $$0$i$i = $8;
 }
 return;
}
function __ZNSt3__27codecvtIwc11__mbstate_tEC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + -1)|0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 HEAP32[$0>>2] = (13860);
 $4 = ((($0)) + 8|0);
 $5 = (__ZNSt3__26__clocEv()|0);
 HEAP32[$4>>2] = $5;
 return;
}
function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE11__vallocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0)|0);
 $3 = ($2>>>0)<($1>>>0);
 if ($3) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $4 = ((($0)) + 128|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 $7 = ($1>>>0)<(29);
 $or$cond$i$i = $7 & $6;
 if ($or$cond$i$i) {
  $8 = ((($0)) + 16|0);
  HEAP8[$4>>0] = 1;
  $$0$i$i$in = $8;
 } else {
  $9 = $1 << 2;
  $10 = (__Znwm($9)|0);
  $$0$i$i$in = $10;
 }
 $11 = ((($0)) + 4|0);
 HEAP32[$11>>2] = $$0$i$i$in;
 HEAP32[$0>>2] = $$0$i$i$in;
 $12 = (($$0$i$i$in) + ($1<<2)|0);
 $13 = ((($0)) + 8|0);
 HEAP32[$13>>2] = $12;
 return;
}
function __ZNSt3__26locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[35376]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(35376)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__26locale5__imp12make_classicEv()|0);
   HEAP32[9266] = 37060;
   ___cxa_guard_release(35376);
  }
 }
 $4 = HEAP32[9266]|0;
 return ($4|0);
}
function __ZNSt3__26locale5__imp12make_classicEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_();
 HEAP32[9265] = 35384;
 return (37060|0);
}
function __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__26locale5__impC2Em(35384,1);
 return;
}
function __ZNSt3__26locale5__imp11make_globalEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__26locale7classicEv()|0);
 __ZNSt3__26localeC2ERKS0_(37068,$0);
 return (37068|0);
}
function __ZNSt3__26localeC2ERKS0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 return;
}
function __ZNSt3__26locale8__globalEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[35544]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire(35544)|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   (__ZNSt3__26locale5__imp11make_globalEv()|0);
   HEAP32[9268] = 37068;
   ___cxa_guard_release(35544);
  }
 }
 $4 = HEAP32[9268]|0;
 return ($4|0);
}
function __ZNSt3__26localeC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNSt3__26locale8__globalEv()|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 return;
}
function __ZNSt3__211char_traitsIcE7compareEPKcS3_m($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$0 = 0;
 } else {
  $4 = (_memcmp($0,$1,$2)|0);
  $$0 = $4;
 }
 return ($$0|0);
}
function __ZNSt3__214__shared_countD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt3__214__shared_countD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _llvm_trap();
 // unreachable;
}
function __ZNSt3__219__shared_weak_countD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _llvm_trap();
 // unreachable;
}
function __ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function __ZNSt3__219__shared_weak_count14__release_weakEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ((($4)) + 16|0);
  $6 = HEAP32[$5>>2]|0;
  FUNCTION_TABLE_vi[$6 & 1023]($0);
 } else {
  $7 = HEAP32[$1>>2]|0;
  $8 = (($7) + -1)|0;
  HEAP32[$1>>2] = $8;
  $9 = ($7|0)==(0);
  if ($9) {
   $10 = HEAP32[$0>>2]|0;
   $11 = ((($10)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   FUNCTION_TABLE_vi[$12 & 1023]($0);
  }
 }
 return;
}
function __ZNSt3__211__call_onceERVmPvPFvS2_E($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_pthread_mutex_lock(37076)|0);
 while(1) {
  $3 = HEAP32[$0>>2]|0;
  $4 = ($3|0)==(1);
  if (!($4)) {
   break;
  }
  (_pthread_cond_wait((37104|0),(37076|0))|0);
 }
 $5 = HEAP32[$0>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  HEAP32[$0>>2] = 1;
  (_pthread_mutex_unlock(37076)|0);
  FUNCTION_TABLE_vi[$2 & 1023]($1);
  (_pthread_mutex_lock(37076)|0);
  HEAP32[$0>>2] = -1;
  (_pthread_mutex_unlock(37076)|0);
  (_pthread_cond_broadcast((37104|0))|0);
 } else {
  (_pthread_mutex_unlock(37076)|0);
 }
 return;
}
function __ZSt17__throw_bad_allocv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _abort();
 // unreachable;
}
function __Znwm($0) {
 $0 = $0|0;
 var $$lcssa = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0);
 $spec$store$select = $1 ? 1 : $0;
 while(1) {
  $2 = (_malloc($spec$store$select)|0);
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $$lcssa = $2;
   break;
  }
  $4 = (__ZSt15get_new_handlerv()|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$lcssa = 0;
   break;
  }
  FUNCTION_TABLE_v[$4 & 1023]();
 }
 return ($$lcssa|0);
}
function __ZdlPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($0);
 return;
}
function __ZdaPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNSt3__218__libcpp_refstringC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = (($2) + 13)|0;
 $4 = (__Znwm($3)|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 $7 = (__ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($4)|0);
 $8 = (($2) + 1)|0;
 _memcpy(($7|0),($1|0),($8|0))|0;
 HEAP32[$0>>2] = $7;
 return;
}
function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 return ($1|0);
}
function __ZNSt11logic_errorC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (17548);
 $2 = ((($0)) + 4|0);
 __ZNSt3__218__libcpp_refstringC2EPKc($2,$1);
 return;
}
function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (17568);
 $2 = ((($0)) + 4|0);
 $3 = ((($1)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 $6 = HEAP32[$1>>2]|0;
 $7 = $5 ? $6 : $1;
 __ZNSt3__218__libcpp_refstringC2EPKc($2,$7);
 return;
}
function __ZNSt13runtime_errorC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (17568);
 $2 = ((($0)) + 4|0);
 __ZNSt3__218__libcpp_refstringC2EPKc($2,$1);
 return;
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _abort();
 // unreachable;
}
function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _abort();
 // unreachable;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $2 = ((($1)) + 11|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)<(0);
 if ($4) {
  $5 = HEAP32[$1>>2]|0;
  $6 = ((($1)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0,$5,$7);
 } else {
  ;HEAP32[$0>>2]=HEAP32[$1>>2]|0;HEAP32[$0+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$1+8>>2]|0;
 }
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($2>>>0)>(4294967279);
 if ($4) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $5 = ($2>>>0)<(11);
 if ($5) {
  $6 = $2&255;
  $7 = ((($0)) + 11|0);
  HEAP8[$7>>0] = $6;
  $$0 = $0;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwm($9)|0);
  HEAP32[$0>>2] = $10;
  $11 = $9 | -2147483648;
  $12 = ((($0)) + 8|0);
  HEAP32[$12>>2] = $11;
  $13 = ((($0)) + 4|0);
  HEAP32[$13>>2] = $2;
  $$0 = $10;
 }
 (__ZNSt3__211char_traitsIcE4copyEPcPKcm($$0,$1,$2)|0);
 $14 = (($$0) + ($2)|0);
 HEAP8[$3>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($14,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($1>>>0)>(4294967279);
 if ($4) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $5 = ($1>>>0)<(11);
 if ($5) {
  $6 = $1&255;
  $7 = ((($0)) + 11|0);
  HEAP8[$7>>0] = $6;
  $$0 = $0;
 } else {
  $8 = (($1) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwm($9)|0);
  HEAP32[$0>>2] = $10;
  $11 = $9 | -2147483648;
  $12 = ((($0)) + 8|0);
  HEAP32[$12>>2] = $11;
  $13 = ((($0)) + 4|0);
  HEAP32[$13>>2] = $1;
  $$0 = $10;
 }
 (__ZNSt3__211char_traitsIcE6assignEPcmc($$0,$1,$2)|0);
 $14 = (($$0) + ($1)|0);
 HEAP8[$3>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($14,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIcE6assignEPcmc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0);
 if (!($3)) {
  $4 = (__ZNSt3__211char_traitsIcE11to_int_typeEc($2)|0);
  $5 = $4&255;
  _memset(($0|0),($5|0),($1|0))|0;
 }
 return ($0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 11|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)<(0);
 if ($3) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ((($0)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = $6 & 2147483647;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($4,$7);
 }
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 11|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)<(0);
 if ($6) {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & 2147483647;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 } else {
  $10 = 10;
 }
 $11 = ($10>>>0)<($2>>>0);
 do {
  if ($11) {
   if ($6) {
    $19 = ((($0)) + 4|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $20;
   } else {
    $21 = $5&255;
    $23 = $21;
   }
   $22 = (($2) - ($10))|0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0,$10,$22,$23,0,$23,$2,$1);
  } else {
   if ($6) {
    $12 = HEAP32[$0>>2]|0;
    $13 = $12;
   } else {
    $13 = $0;
   }
   (__ZNSt3__211char_traitsIcE4moveEPcPKcm($13,$1,$2)|0);
   $14 = (($13) + ($2)|0);
   HEAP8[$3>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($14,$3);
   $15 = HEAP8[$4>>0]|0;
   $16 = ($15<<24>>24)<(0);
   if ($16) {
    $17 = ((($0)) + 4|0);
    HEAP32[$17>>2] = $2;
    break;
   } else {
    $18 = $2&255;
    HEAP8[$4>>0] = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__211char_traitsIcE4moveEPcPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if (!($3)) {
  _memmove(($0|0),($1|0),($2|0))|0;
 }
 return ($0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = (-18 - ($1))|0;
 $10 = ($9>>>0)<($2>>>0);
 if ($10) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $11 = ((($0)) + 11|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)<(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $25 = $14;
 } else {
  $25 = $0;
 }
 $15 = ($1>>>0)<(2147483623);
 if ($15) {
  $16 = (($2) + ($1))|0;
  $17 = $1 << 1;
  $18 = ($16>>>0)<($17>>>0);
  $$sroa$speculated = $18 ? $17 : $16;
  $19 = ($$sroa$speculated>>>0)<(11);
  $20 = (($$sroa$speculated) + 16)|0;
  $21 = $20 & -16;
  $phitmp = $19 ? 11 : $21;
  $22 = $phitmp;
 } else {
  $22 = -17;
 }
 $23 = (__Znwm($22)|0);
 $24 = ($4|0)==(0);
 if (!($24)) {
  (__ZNSt3__211char_traitsIcE4copyEPcPKcm($23,$25,$4)|0);
 }
 $26 = ($6|0)==(0);
 if (!($26)) {
  $27 = (($23) + ($4)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcm($27,$7,$6)|0);
 }
 $28 = (($3) - ($5))|0;
 $29 = (($28) - ($4))|0;
 $30 = ($29|0)==(0);
 if (!($30)) {
  $31 = (($23) + ($4)|0);
  $32 = (($31) + ($6)|0);
  $33 = (($25) + ($4)|0);
  $34 = (($33) + ($5)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcm($32,$34,$29)|0);
 }
 $35 = (($1) + 1)|0;
 $36 = ($35|0)==(11);
 if (!($36)) {
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($25,$35);
 }
 HEAP32[$0>>2] = $23;
 $37 = $22 | -2147483648;
 $38 = ((($0)) + 8|0);
 HEAP32[$38>>2] = $37;
 $39 = (($28) + ($6))|0;
 $40 = ((($0)) + 4|0);
 HEAP32[$40>>2] = $39;
 $41 = (($23) + ($39)|0);
 HEAP8[$8>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($41,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIcE6lengthEPKc($1)|0);
 $3 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm($0,$1,$2)|0);
 return ($3|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 1|0;
 $4 = sp;
 $5 = ((($0)) + 11|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)<(0);
 if ($7) {
  $8 = ((($0)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $11 = $9;
 } else {
  $10 = $6&255;
  $11 = $10;
 }
 $12 = ($11>>>0)<($1>>>0);
 do {
  if ($12) {
   $13 = (($1) - ($11))|0;
   (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc($0,$13,$2)|0);
  } else {
   if ($7) {
    $14 = HEAP32[$0>>2]|0;
    $15 = (($14) + ($1)|0);
    HEAP8[$3>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($15,$3);
    $16 = ((($0)) + 4|0);
    HEAP32[$16>>2] = $1;
    break;
   } else {
    $17 = (($0) + ($1)|0);
    HEAP8[$4>>0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($17,$4);
    $18 = $1&255;
    HEAP8[$5>>0] = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($1|0)==(0);
 if (!($4)) {
  $5 = ((($0)) + 11|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ($6<<24>>24)<(0);
  if ($7) {
   $8 = ((($0)) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $9 & 2147483647;
   $phitmp$i = (($10) + -1)|0;
   $11 = ((($0)) + 4|0);
   $12 = HEAP32[$11>>2]|0;
   $15 = $12;$16 = $phitmp$i;
  } else {
   $13 = $6&255;
   $15 = $13;$16 = 10;
  }
  $14 = (($16) - ($15))|0;
  $17 = ($14>>>0)<($1>>>0);
  if ($17) {
   $18 = (($15) + ($1))|0;
   $19 = (($18) - ($16))|0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0,$16,$19,$15,$15,0,0);
   $$pre = HEAP8[$5>>0]|0;
   $20 = $$pre;
  } else {
   $20 = $6;
  }
  $21 = ($20<<24>>24)<(0);
  if ($21) {
   $22 = HEAP32[$0>>2]|0;
   $24 = $22;
  } else {
   $24 = $0;
  }
  $23 = (($24) + ($15)|0);
  (__ZNSt3__211char_traitsIcE6assignEPcmc($23,$1,$2)|0);
  $25 = (($15) + ($1))|0;
  $26 = HEAP8[$5>>0]|0;
  $27 = ($26<<24>>24)<(0);
  if ($27) {
   $28 = ((($0)) + 4|0);
   HEAP32[$28>>2] = $25;
  } else {
   $29 = $25&255;
   HEAP8[$5>>0] = $29;
  }
  $30 = (($24) + ($25)|0);
  HEAP8[$3>>0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($30,$3);
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (-17 - ($1))|0;
 $8 = ($7>>>0)<($2>>>0);
 if ($8) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $9 = ((($0)) + 11|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)<(0);
 if ($11) {
  $12 = HEAP32[$0>>2]|0;
  $23 = $12;
 } else {
  $23 = $0;
 }
 $13 = ($1>>>0)<(2147483623);
 if ($13) {
  $14 = (($2) + ($1))|0;
  $15 = $1 << 1;
  $16 = ($14>>>0)<($15>>>0);
  $$sroa$speculated = $16 ? $15 : $14;
  $17 = ($$sroa$speculated>>>0)<(11);
  $18 = (($$sroa$speculated) + 16)|0;
  $19 = $18 & -16;
  $phitmp = $17 ? 11 : $19;
  $20 = $phitmp;
 } else {
  $20 = -17;
 }
 $21 = (__Znwm($20)|0);
 $22 = ($4|0)==(0);
 if (!($22)) {
  (__ZNSt3__211char_traitsIcE4copyEPcPKcm($21,$23,$4)|0);
 }
 $24 = (($3) - ($5))|0;
 $25 = (($24) - ($4))|0;
 $26 = ($25|0)==(0);
 if (!($26)) {
  $27 = (($21) + ($4)|0);
  $28 = (($27) + ($6)|0);
  $29 = (($23) + ($4)|0);
  $30 = (($29) + ($5)|0);
  (__ZNSt3__211char_traitsIcE4copyEPcPKcm($28,$30,$25)|0);
 }
 $31 = (($1) + 1)|0;
 $32 = ($31|0)==(11);
 if (!($32)) {
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($23,$31);
 }
 HEAP32[$0>>2] = $21;
 $33 = $20 | -2147483648;
 $34 = ((($0)) + 8|0);
 HEAP32[$34>>2] = $33;
 return;
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 11|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)<(0);
 if ($6) {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & 2147483647;
  $phitmp$i = (($9) + -1)|0;
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;$15 = $phitmp$i;
 } else {
  $12 = $5&255;
  $14 = $12;$15 = 10;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($2>>>0);
 if ($16) {
  $27 = (($14) + ($2))|0;
  $28 = (($27) - ($15))|0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0,$15,$28,$14,$14,0,$2,$1);
 } else {
  $17 = ($2|0)==(0);
  if (!($17)) {
   if ($6) {
    $18 = HEAP32[$0>>2]|0;
    $20 = $18;
   } else {
    $20 = $0;
   }
   $19 = (($20) + ($14)|0);
   (__ZNSt3__211char_traitsIcE4copyEPcPKcm($19,$1,$2)|0);
   $21 = (($14) + ($2))|0;
   $22 = HEAP8[$4>>0]|0;
   $23 = ($22<<24>>24)<(0);
   if ($23) {
    $24 = ((($0)) + 4|0);
    HEAP32[$24>>2] = $21;
   } else {
    $25 = $21&255;
    HEAP8[$4>>0] = $25;
   }
   $26 = (($20) + ($21)|0);
   HEAP8[$3>>0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($26,$3);
  }
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIcE6lengthEPKc($1)|0);
 $3 = (__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($0,$1,$2)|0);
 return ($3|0);
}
function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 1|0;
 $3 = sp;
 HEAP8[$2>>0] = $1;
 $4 = ((($0)) + 11|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)<(0);
 if ($6) {
  $8 = ((($0)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 2147483647;
  $11 = (($10) + -1)|0;
  $12 = ((($0)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $$018 = $13;$$019 = $11;
 } else {
  $7 = $5&255;
  $$018 = $7;$$019 = 10;
 }
 $14 = ($$018|0)==($$019|0);
 if ($14) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0,$$019,1,$$019,$$019,0,0);
  $15 = HEAP8[$4>>0]|0;
  $16 = ($15<<24>>24)<(0);
  if ($16) {
   label = 8;
  } else {
   label = 7;
  }
 } else {
  if ($6) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $17 = (($$018) + 1)|0;
  $18 = $17&255;
  HEAP8[$4>>0] = $18;
  $$pn = $0;
 }
 else if ((label|0) == 8) {
  $19 = HEAP32[$0>>2]|0;
  $20 = (($$018) + 1)|0;
  $21 = ((($0)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;
 }
 $$0 = (($$pn) + ($$018)|0);
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0,$2);
 $22 = ((($$0)) + 1|0);
 HEAP8[$3>>0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($22,$3);
 STACKTOP = sp;return;
}
function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sroa$speculated = 0, $$sroa$speculated19 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $spec$select = 0, $spec$select31 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 11|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)<(0);
 if ($7) {
  $8 = ((($0)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $11 = $9;
 } else {
  $10 = $6&255;
  $11 = $10;
 }
 $12 = ($11>>>0)<($1>>>0);
 $13 = ($4|0)==(-1);
 $or$cond = $13 | $12;
 if ($or$cond) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
  // unreachable;
 }
 $14 = (($11) - ($1))|0;
 $15 = ($14>>>0)<($2>>>0);
 $$sroa$speculated = $15 ? $14 : $2;
 if ($7) {
  $16 = HEAP32[$0>>2]|0;
  $18 = $16;
 } else {
  $18 = $0;
 }
 $17 = (($18) + ($1)|0);
 $19 = ($$sroa$speculated>>>0)>($4>>>0);
 $$sroa$speculated19 = $19 ? $4 : $$sroa$speculated;
 $20 = (__ZNSt3__211char_traitsIcE7compareEPKcS3_m($17,$3,$$sroa$speculated19)|0);
 $21 = ($20|0)==(0);
 if ($21) {
  $22 = ($$sroa$speculated>>>0)<($4>>>0);
  $spec$select = $19&1;
  $spec$select31 = $22 ? -1 : $spec$select;
  return ($spec$select31|0);
 } else {
  return ($20|0);
 }
 return (0)|0;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($2>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $5 = ($2>>>0)<(2);
 do {
  if ($5) {
   $6 = $2&255;
   $7 = ((($0)) + 8|0);
   $8 = ((($7)) + 3|0);
   HEAP8[$8>>0] = $6;
   $$0 = $0;
  } else {
   $9 = (($2) + 4)|0;
   $10 = $9 & -4;
   $11 = ($10>>>0)>(1073741823);
   if ($11) {
    _abort();
    // unreachable;
   } else {
    $12 = $10 << 2;
    $13 = (__Znwm($12)|0);
    HEAP32[$0>>2] = $13;
    $14 = $10 | -2147483648;
    $15 = ((($0)) + 8|0);
    HEAP32[$15>>2] = $14;
    $16 = ((($0)) + 4|0);
    HEAP32[$16>>2] = $2;
    $$0 = $13;
    break;
   }
  }
 } while(0);
 (__ZNSt3__211char_traitsIwE4copyEPwPKwm($$0,$1,$2)|0);
 $17 = (($$0) + ($2<<2)|0);
 HEAP32[$3>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($17,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ($1>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $5 = ($1>>>0)<(2);
 do {
  if ($5) {
   $6 = $1&255;
   $7 = ((($0)) + 8|0);
   $8 = ((($7)) + 3|0);
   HEAP8[$8>>0] = $6;
   $$0 = $0;
  } else {
   $9 = (($1) + 4)|0;
   $10 = $9 & -4;
   $11 = ($10>>>0)>(1073741823);
   if ($11) {
    _abort();
    // unreachable;
   } else {
    $12 = $10 << 2;
    $13 = (__Znwm($12)|0);
    HEAP32[$0>>2] = $13;
    $14 = $10 | -2147483648;
    $15 = ((($0)) + 8|0);
    HEAP32[$15>>2] = $14;
    $16 = ((($0)) + 4|0);
    HEAP32[$16>>2] = $1;
    $$0 = $13;
    break;
   }
  }
 } while(0);
 (__ZNSt3__211char_traitsIwE6assignEPwmw($$0,$1,$2)|0);
 $17 = (($$0) + ($1<<2)|0);
 HEAP32[$3>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($17,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__211char_traitsIwE6assignEPwmw($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0);
 if ($3) {
  $5 = $0;
 } else {
  $4 = (_wmemset($0,$2,$1)|0);
  $5 = $0;
 }
 return ($5|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = ((($1)) + 3|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)<(0);
 if ($4) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = $6 << 2;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($5,$7);
 }
 return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = ((($4)) + 3|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)<(0);
 if ($7) {
  $8 = HEAP32[$4>>2]|0;
  $9 = $8 & 2147483647;
  $phitmp$i = (($9) + -1)|0;
  $10 = $phitmp$i;
 } else {
  $10 = 1;
 }
 $11 = ($10>>>0)<($2>>>0);
 do {
  if ($11) {
   if ($7) {
    $19 = ((($0)) + 4|0);
    $20 = HEAP32[$19>>2]|0;
    $23 = $20;
   } else {
    $21 = $6&255;
    $23 = $21;
   }
   $22 = (($2) - ($10))|0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0,$10,$22,$23,0,$23,$2,$1);
  } else {
   if ($7) {
    $12 = HEAP32[$0>>2]|0;
    $13 = $12;
   } else {
    $13 = $0;
   }
   (__ZNSt3__211char_traitsIwE4moveEPwPKwm($13,$1,$2)|0);
   $14 = (($13) + ($2<<2)|0);
   HEAP32[$3>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($14,$3);
   $15 = HEAP8[$5>>0]|0;
   $16 = ($15<<24>>24)<(0);
   if ($16) {
    $17 = ((($0)) + 4|0);
    HEAP32[$17>>2] = $2;
    break;
   } else {
    $18 = $2&255;
    HEAP8[$5>>0] = $18;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__211char_traitsIwE4moveEPwPKwm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $5 = $0;
 } else {
  $4 = (_wmemmove($0,$1,$2)|0);
  $5 = $0;
 }
 return ($5|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = (1073741806 - ($1))|0;
 $10 = ($9>>>0)<($2>>>0);
 if ($10) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $11 = ((($0)) + 8|0);
 $12 = ((($11)) + 3|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)<(0);
 if ($14) {
  $15 = HEAP32[$0>>2]|0;
  $29 = $15;
 } else {
  $29 = $0;
 }
 $16 = ($1>>>0)<(536870887);
 if ($16) {
  $17 = (($2) + ($1))|0;
  $18 = $1 << 1;
  $19 = ($17>>>0)<($18>>>0);
  $$sroa$speculated = $19 ? $18 : $17;
  $20 = ($$sroa$speculated>>>0)<(2);
  $21 = (($$sroa$speculated) + 4)|0;
  $22 = $21 & -4;
  $23 = $20 ? 2 : $22;
  $24 = ($23>>>0)>(1073741823);
  if ($24) {
   _abort();
   // unreachable;
  } else {
   $26 = $23;
  }
 } else {
  $26 = 1073741807;
 }
 $25 = $26 << 2;
 $27 = (__Znwm($25)|0);
 $28 = ($4|0)==(0);
 if (!($28)) {
  (__ZNSt3__211char_traitsIwE4copyEPwPKwm($27,$29,$4)|0);
 }
 $30 = ($6|0)==(0);
 if (!($30)) {
  $31 = (($27) + ($4<<2)|0);
  (__ZNSt3__211char_traitsIwE4copyEPwPKwm($31,$7,$6)|0);
 }
 $32 = (($3) - ($5))|0;
 $33 = (($32) - ($4))|0;
 $34 = ($33|0)==(0);
 if (!($34)) {
  $35 = (($29) + ($4<<2)|0);
  $36 = (($35) + ($5<<2)|0);
  $37 = (($27) + ($4<<2)|0);
  $38 = (($37) + ($6<<2)|0);
  (__ZNSt3__211char_traitsIwE4copyEPwPKwm($38,$36,$33)|0);
 }
 $39 = (($1) + 1)|0;
 $40 = ($39|0)==(2);
 if (!($40)) {
  $41 = $39 << 2;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($29,$41);
 }
 HEAP32[$0>>2] = $27;
 $42 = $26 | -2147483648;
 HEAP32[$11>>2] = $42;
 $43 = (($32) + ($6))|0;
 $44 = ((($0)) + 4|0);
 HEAP32[$44>>2] = $43;
 $45 = (($27) + ($43<<2)|0);
 HEAP32[$8>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($45,$8);
 STACKTOP = sp;return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNSt3__211char_traitsIwE6lengthEPKw($1)|0);
 $3 = (__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm($0,$1,$2)|0);
 return ($3|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$sroa$speculated = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (1073741807 - ($1))|0;
 $8 = ($7>>>0)<($2>>>0);
 if ($8) {
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
  // unreachable;
 }
 $9 = ((($0)) + 8|0);
 $10 = ((($9)) + 3|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)<(0);
 if ($12) {
  $13 = HEAP32[$0>>2]|0;
  $27 = $13;
 } else {
  $27 = $0;
 }
 $14 = ($1>>>0)<(536870887);
 if ($14) {
  $15 = (($2) + ($1))|0;
  $16 = $1 << 1;
  $17 = ($15>>>0)<($16>>>0);
  $$sroa$speculated = $17 ? $16 : $15;
  $18 = ($$sroa$speculated>>>0)<(2);
  $19 = (($$sroa$speculated) + 4)|0;
  $20 = $19 & -4;
  $21 = $18 ? 2 : $20;
  $22 = ($21>>>0)>(1073741823);
  if ($22) {
   _abort();
   // unreachable;
  } else {
   $24 = $21;
  }
 } else {
  $24 = 1073741807;
 }
 $23 = $24 << 2;
 $25 = (__Znwm($23)|0);
 $26 = ($4|0)==(0);
 if (!($26)) {
  (__ZNSt3__211char_traitsIwE4copyEPwPKwm($25,$27,$4)|0);
 }
 $28 = (($3) - ($5))|0;
 $29 = (($28) - ($4))|0;
 $30 = ($29|0)==(0);
 if (!($30)) {
  $31 = (($27) + ($4<<2)|0);
  $32 = (($31) + ($5<<2)|0);
  $33 = (($25) + ($4<<2)|0);
  $34 = (($33) + ($6<<2)|0);
  (__ZNSt3__211char_traitsIwE4copyEPwPKwm($34,$32,$29)|0);
 }
 $35 = (($1) + 1)|0;
 $36 = ($35|0)==(2);
 if (!($36)) {
  $37 = $35 << 2;
  __ZNSt3__217_DeallocateCaller27__do_deallocate_handle_sizeEPvm($27,$37);
 }
 HEAP32[$0>>2] = $25;
 $38 = $24 | -2147483648;
 HEAP32[$9>>2] = $38;
 return;
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = ((($4)) + 3|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)<(0);
 if ($7) {
  $8 = HEAP32[$4>>2]|0;
  $9 = $8 & 2147483647;
  $phitmp$i = (($9) + -1)|0;
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $14 = $11;$15 = $phitmp$i;
 } else {
  $12 = $6&255;
  $14 = $12;$15 = 1;
 }
 $13 = (($15) - ($14))|0;
 $16 = ($13>>>0)<($2>>>0);
 if ($16) {
  $27 = (($14) + ($2))|0;
  $28 = (($27) - ($15))|0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0,$15,$28,$14,$14,0,$2,$1);
 } else {
  $17 = ($2|0)==(0);
  if (!($17)) {
   if ($7) {
    $18 = HEAP32[$0>>2]|0;
    $20 = $18;
   } else {
    $20 = $0;
   }
   $19 = (($20) + ($14<<2)|0);
   (__ZNSt3__211char_traitsIwE4copyEPwPKwm($19,$1,$2)|0);
   $21 = (($14) + ($2))|0;
   $22 = HEAP8[$5>>0]|0;
   $23 = ($22<<24>>24)<(0);
   if ($23) {
    $24 = ((($0)) + 4|0);
    HEAP32[$24>>2] = $21;
   } else {
    $25 = $21&255;
    HEAP8[$5>>0] = $25;
   }
   $26 = (($20) + ($21<<2)|0);
   HEAP32[$3>>2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($26,$3);
  }
 }
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 HEAP32[$2>>2] = $1;
 $4 = ((($0)) + 8|0);
 $5 = ((($4)) + 3|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)<(0);
 if ($7) {
  $9 = HEAP32[$4>>2]|0;
  $10 = $9 & 2147483647;
  $11 = (($10) + -1)|0;
  $12 = ((($0)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $$018 = $13;$$019 = $11;
 } else {
  $8 = $6&255;
  $$018 = $8;$$019 = 1;
 }
 $14 = ($$018|0)==($$019|0);
 if ($14) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0,$$019,1,$$019,$$019,0,0);
  $15 = HEAP8[$5>>0]|0;
  $16 = ($15<<24>>24)<(0);
  if ($16) {
   label = 8;
  } else {
   label = 7;
  }
 } else {
  if ($7) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $17 = (($$018) + 1)|0;
  $18 = $17&255;
  HEAP8[$5>>0] = $18;
  $$pn = $0;
 }
 else if ((label|0) == 8) {
  $19 = HEAP32[$0>>2]|0;
  $20 = (($$018) + 1)|0;
  $21 = ((($0)) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;
 }
 $$0 = (($$pn) + ($$018<<2)|0);
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0,$2);
 $22 = ((($$0)) + 4|0);
 HEAP32[$3>>2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($22,$3);
 STACKTOP = sp;return;
}
function __ZNSt3__29to_stringEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 __ZNKSt3__212_GLOBAL__N_114initial_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiLb0EEclEv($2);
 __ZNSt3__212_GLOBAL__N_19as_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFiPcmPKczEiEET_T0_SD_PKNSD_10value_typeET1_($0,$2,$1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNKSt3__212_GLOBAL__N_114initial_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiLb0EEclEv($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $1 = (($0) + ($$0$i$i<<2)|0);
  HEAP32[$1>>2] = 0;
  $2 = (($$0$i$i) + 1)|0;
  $$0$i$i = $2;
 }
 $3 = ((($0)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 if ($5) {
  $6 = ((($0)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $7 & 2147483647;
  $phitmp$i = (($8) + -1)|0;
  $9 = $phitmp$i;
 } else {
  $9 = 10;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($0,$9,0);
 return;
}
function __ZNSt3__212_GLOBAL__N_19as_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFiPcmPKczEiEET_T0_SD_PKNSD_10value_typeET1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$017 = 0, $$2 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = ((($1)) + 11|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)<(0);
 if ($5) {
  $6 = ((($1)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $21 = $7;
 } else {
  $8 = $4&255;
  $21 = $8;
 }
 $$017 = $21;$9 = $4;
 while(1) {
  $10 = ($9<<24>>24)<(0);
  if ($10) {
   $11 = HEAP32[$1>>2]|0;
   $13 = $11;
  } else {
   $13 = $1;
  }
  $12 = (($$017) + 1)|0;
  HEAP32[$vararg_buffer>>2] = $2;
  $14 = (_snprintf($13,$12,25366,$vararg_buffer)|0);
  $15 = ($14|0)>(-1);
  if ($15) {
   $16 = ($14>>>0)>($$017>>>0);
   if ($16) {
    $$2 = $14;
   } else {
    break;
   }
  } else {
   $17 = $$017 << 1;
   $18 = $17 | 1;
   $$2 = $18;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($1,$$2,0);
  $$pre = HEAP8[$3>>0]|0;
  $$017 = $$2;$9 = $$pre;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($1,$14,0);
 ;HEAP32[$0>>2]=HEAP32[$1>>2]|0;HEAP32[$0+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$1+8>>2]|0;
 $$0$i$i = 0;
 while(1) {
  $exitcond$i$i = ($$0$i$i|0)==(3);
  if ($exitcond$i$i) {
   break;
  }
  $19 = (($1) + ($$0$i$i<<2)|0);
  HEAP32[$19>>2] = 0;
  $20 = (($$0$i$i) + 1)|0;
  $$0$i$i = $20;
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _abort();
 // unreachable;
}
function _malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$0169$i = 0, $$0170$i = 0, $$0171$i = 0, $$0192 = 0, $$0194 = 0, $$02014$i$i = 0, $$0202$lcssa$i$i = 0, $$02023$i$i = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$024372$i = 0, $$0259$i$i = 0, $$02604$i$i = 0, $$0261$lcssa$i$i = 0, $$02613$i$i = 0;
 var $$0267$i$i = 0, $$0268$i$i = 0, $$0318$i = 0, $$032012$i = 0, $$0321$lcssa$i = 0, $$032111$i = 0, $$0323$i = 0, $$0329$i = 0, $$0335$i = 0, $$0336$i = 0, $$0338$i = 0, $$0339$i = 0, $$0344$i = 0, $$1174$i = 0, $$1174$i$be = 0, $$1174$i$ph = 0, $$1176$i = 0, $$1176$i$be = 0, $$1176$i$ph = 0, $$124471$i = 0;
 var $$1263$i$i = 0, $$1263$i$i$be = 0, $$1263$i$i$ph = 0, $$1265$i$i = 0, $$1265$i$i$be = 0, $$1265$i$i$ph = 0, $$1319$i = 0, $$1324$i = 0, $$1340$i = 0, $$1346$i = 0, $$1346$i$be = 0, $$1346$i$ph = 0, $$1350$i = 0, $$1350$i$be = 0, $$1350$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2331$i = 0, $$3$i = 0;
 var $$3$i$i = 0, $$3$i198 = 0, $$3$i198211 = 0, $$3326$i = 0, $$3348$i = 0, $$4$lcssa$i = 0, $$415$i = 0, $$415$i$ph = 0, $$4236$i = 0, $$4327$lcssa$i = 0, $$432714$i = 0, $$432714$i$ph = 0, $$4333$i = 0, $$533413$i = 0, $$533413$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0;
 var $$pre$i16$i = 0, $$pre$i195 = 0, $$pre$i204 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$i205Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink320 = 0, $$sink321 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i203 = 0, $not$$i = 0, $or$cond$i = 0, $or$cond$i199 = 0, $or$cond1$i = 0, $or$cond1$i197 = 0, $or$cond11$i = 0, $or$cond2$i = 0;
 var $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond6$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $or$cond8$not$i = 0, $spec$select$i = 0, $spec$select$i201 = 0, $spec$select1$i = 0, $spec$select2$i = 0, $spec$select4$i = 0, $spec$select49$i = 0, $spec$select9$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[9288]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (37192 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($16|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[9288] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(37160)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (37192 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69|0)==($65|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[9288] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($67) + ($75)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(37172)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (37192 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[9288] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(37160)>>2] = $76;
     HEAP32[(37172)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(37156)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (37456 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $$0169$i = $124;$$0170$i = $124;$$0171$i = $128;
     while(1) {
      $129 = ((($$0169$i)) + 16|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = ($130|0)==(0|0);
      if ($131) {
       $132 = ((($$0169$i)) + 20|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ($133|0)==(0|0);
       if ($134) {
        break;
       } else {
        $136 = $133;
       }
      } else {
       $136 = $130;
      }
      $135 = ((($136)) + 4|0);
      $137 = HEAP32[$135>>2]|0;
      $138 = $137 & -8;
      $139 = (($138) - ($6))|0;
      $140 = ($139>>>0)<($$0171$i>>>0);
      $spec$select$i = $140 ? $139 : $$0171$i;
      $spec$select1$i = $140 ? $136 : $$0170$i;
      $$0169$i = $136;$$0170$i = $spec$select1$i;$$0171$i = $spec$select$i;
     }
     $141 = (($$0170$i) + ($6)|0);
     $142 = ($141>>>0)>($$0170$i>>>0);
     if ($142) {
      $143 = ((($$0170$i)) + 24|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$0170$i)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($146|0)==($$0170$i|0);
      do {
       if ($147) {
        $152 = ((($$0170$i)) + 20|0);
        $153 = HEAP32[$152>>2]|0;
        $154 = ($153|0)==(0|0);
        if ($154) {
         $155 = ((($$0170$i)) + 16|0);
         $156 = HEAP32[$155>>2]|0;
         $157 = ($156|0)==(0|0);
         if ($157) {
          $$3$i = 0;
          break;
         } else {
          $$1174$i$ph = $156;$$1176$i$ph = $155;
         }
        } else {
         $$1174$i$ph = $153;$$1176$i$ph = $152;
        }
        $$1174$i = $$1174$i$ph;$$1176$i = $$1176$i$ph;
        while(1) {
         $158 = ((($$1174$i)) + 20|0);
         $159 = HEAP32[$158>>2]|0;
         $160 = ($159|0)==(0|0);
         if ($160) {
          $161 = ((($$1174$i)) + 16|0);
          $162 = HEAP32[$161>>2]|0;
          $163 = ($162|0)==(0|0);
          if ($163) {
           break;
          } else {
           $$1174$i$be = $162;$$1176$i$be = $161;
          }
         } else {
          $$1174$i$be = $159;$$1176$i$be = $158;
         }
         $$1174$i = $$1174$i$be;$$1176$i = $$1176$i$be;
        }
        HEAP32[$$1176$i>>2] = 0;
        $$3$i = $$1174$i;
       } else {
        $148 = ((($$0170$i)) + 8|0);
        $149 = HEAP32[$148>>2]|0;
        $150 = ((($149)) + 12|0);
        HEAP32[$150>>2] = $146;
        $151 = ((($146)) + 8|0);
        HEAP32[$151>>2] = $149;
        $$3$i = $146;
       }
      } while(0);
      $164 = ($144|0)==(0|0);
      do {
       if (!($164)) {
        $165 = ((($$0170$i)) + 28|0);
        $166 = HEAP32[$165>>2]|0;
        $167 = (37456 + ($166<<2)|0);
        $168 = HEAP32[$167>>2]|0;
        $169 = ($$0170$i|0)==($168|0);
        if ($169) {
         HEAP32[$167>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $170 = 1 << $166;
          $171 = $170 ^ -1;
          $172 = $98 & $171;
          HEAP32[(37156)>>2] = $172;
          break;
         }
        } else {
         $173 = ((($144)) + 16|0);
         $174 = HEAP32[$173>>2]|0;
         $175 = ($174|0)==($$0170$i|0);
         $176 = ((($144)) + 20|0);
         $$sink = $175 ? $173 : $176;
         HEAP32[$$sink>>2] = $$3$i;
         $177 = ($$3$i|0)==(0|0);
         if ($177) {
          break;
         }
        }
        $178 = ((($$3$i)) + 24|0);
        HEAP32[$178>>2] = $144;
        $179 = ((($$0170$i)) + 16|0);
        $180 = HEAP32[$179>>2]|0;
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $182 = ((($$3$i)) + 16|0);
         HEAP32[$182>>2] = $180;
         $183 = ((($180)) + 24|0);
         HEAP32[$183>>2] = $$3$i;
        }
        $184 = ((($$0170$i)) + 20|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if (!($186)) {
         $187 = ((($$3$i)) + 20|0);
         HEAP32[$187>>2] = $185;
         $188 = ((($185)) + 24|0);
         HEAP32[$188>>2] = $$3$i;
        }
       }
      } while(0);
      $189 = ($$0171$i>>>0)<(16);
      if ($189) {
       $190 = (($$0171$i) + ($6))|0;
       $191 = $190 | 3;
       $192 = ((($$0170$i)) + 4|0);
       HEAP32[$192>>2] = $191;
       $193 = (($$0170$i) + ($190)|0);
       $194 = ((($193)) + 4|0);
       $195 = HEAP32[$194>>2]|0;
       $196 = $195 | 1;
       HEAP32[$194>>2] = $196;
      } else {
       $197 = $6 | 3;
       $198 = ((($$0170$i)) + 4|0);
       HEAP32[$198>>2] = $197;
       $199 = $$0171$i | 1;
       $200 = ((($141)) + 4|0);
       HEAP32[$200>>2] = $199;
       $201 = (($141) + ($$0171$i)|0);
       HEAP32[$201>>2] = $$0171$i;
       $202 = ($33|0)==(0);
       if (!($202)) {
        $203 = HEAP32[(37172)>>2]|0;
        $204 = $33 >>> 3;
        $205 = $204 << 1;
        $206 = (37192 + ($205<<2)|0);
        $207 = 1 << $204;
        $208 = $207 & $8;
        $209 = ($208|0)==(0);
        if ($209) {
         $210 = $207 | $8;
         HEAP32[9288] = $210;
         $$pre$i = ((($206)) + 8|0);
         $$0$i = $206;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $211 = ((($206)) + 8|0);
         $212 = HEAP32[$211>>2]|0;
         $$0$i = $212;$$pre$phi$iZ2D = $211;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $203;
        $213 = ((($$0$i)) + 12|0);
        HEAP32[$213>>2] = $203;
        $214 = ((($203)) + 8|0);
        HEAP32[$214>>2] = $$0$i;
        $215 = ((($203)) + 12|0);
        HEAP32[$215>>2] = $206;
       }
       HEAP32[(37160)>>2] = $$0171$i;
       HEAP32[(37172)>>2] = $141;
      }
      $216 = ((($$0170$i)) + 8|0);
      $$0 = $216;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $217 = ($0>>>0)>(4294967231);
   if ($217) {
    $$0192 = -1;
   } else {
    $218 = (($0) + 11)|0;
    $219 = $218 & -8;
    $220 = HEAP32[(37156)>>2]|0;
    $221 = ($220|0)==(0);
    if ($221) {
     $$0192 = $219;
    } else {
     $222 = (0 - ($219))|0;
     $223 = $218 >>> 8;
     $224 = ($223|0)==(0);
     if ($224) {
      $$0335$i = 0;
     } else {
      $225 = ($219>>>0)>(16777215);
      if ($225) {
       $$0335$i = 31;
      } else {
       $226 = (($223) + 1048320)|0;
       $227 = $226 >>> 16;
       $228 = $227 & 8;
       $229 = $223 << $228;
       $230 = (($229) + 520192)|0;
       $231 = $230 >>> 16;
       $232 = $231 & 4;
       $233 = $232 | $228;
       $234 = $229 << $232;
       $235 = (($234) + 245760)|0;
       $236 = $235 >>> 16;
       $237 = $236 & 2;
       $238 = $233 | $237;
       $239 = (14 - ($238))|0;
       $240 = $234 << $237;
       $241 = $240 >>> 15;
       $242 = (($239) + ($241))|0;
       $243 = $242 << 1;
       $244 = (($242) + 7)|0;
       $245 = $219 >>> $244;
       $246 = $245 & 1;
       $247 = $246 | $243;
       $$0335$i = $247;
      }
     }
     $248 = (37456 + ($$0335$i<<2)|0);
     $249 = HEAP32[$248>>2]|0;
     $250 = ($249|0)==(0|0);
     L79: do {
      if ($250) {
       $$2331$i = 0;$$3$i198 = 0;$$3326$i = $222;
       label = 61;
      } else {
       $251 = ($$0335$i|0)==(31);
       $252 = $$0335$i >>> 1;
       $253 = (25 - ($252))|0;
       $254 = $251 ? 0 : $253;
       $255 = $219 << $254;
       $$0318$i = 0;$$0323$i = $222;$$0329$i = $249;$$0336$i = $255;$$0339$i = 0;
       while(1) {
        $256 = ((($$0329$i)) + 4|0);
        $257 = HEAP32[$256>>2]|0;
        $258 = $257 & -8;
        $259 = (($258) - ($219))|0;
        $260 = ($259>>>0)<($$0323$i>>>0);
        if ($260) {
         $261 = ($259|0)==(0);
         if ($261) {
          $$415$i$ph = $$0329$i;$$432714$i$ph = 0;$$533413$i$ph = $$0329$i;
          label = 65;
          break L79;
         } else {
          $$1319$i = $$0329$i;$$1324$i = $259;
         }
        } else {
         $$1319$i = $$0318$i;$$1324$i = $$0323$i;
        }
        $262 = ((($$0329$i)) + 20|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = $$0336$i >>> 31;
        $265 = (((($$0329$i)) + 16|0) + ($264<<2)|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = ($263|0)==(0|0);
        $268 = ($263|0)==($266|0);
        $or$cond1$i197 = $267 | $268;
        $$1340$i = $or$cond1$i197 ? $$0339$i : $263;
        $269 = ($266|0)==(0|0);
        $spec$select4$i = $$0336$i << 1;
        if ($269) {
         $$2331$i = $$1340$i;$$3$i198 = $$1319$i;$$3326$i = $$1324$i;
         label = 61;
         break;
        } else {
         $$0318$i = $$1319$i;$$0323$i = $$1324$i;$$0329$i = $266;$$0336$i = $spec$select4$i;$$0339$i = $$1340$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 61) {
      $270 = ($$2331$i|0)==(0|0);
      $271 = ($$3$i198|0)==(0|0);
      $or$cond$i199 = $270 & $271;
      if ($or$cond$i199) {
       $272 = 2 << $$0335$i;
       $273 = (0 - ($272))|0;
       $274 = $272 | $273;
       $275 = $274 & $220;
       $276 = ($275|0)==(0);
       if ($276) {
        $$0192 = $219;
        break;
       }
       $277 = (0 - ($275))|0;
       $278 = $275 & $277;
       $279 = (($278) + -1)|0;
       $280 = $279 >>> 12;
       $281 = $280 & 16;
       $282 = $279 >>> $281;
       $283 = $282 >>> 5;
       $284 = $283 & 8;
       $285 = $284 | $281;
       $286 = $282 >>> $284;
       $287 = $286 >>> 2;
       $288 = $287 & 4;
       $289 = $285 | $288;
       $290 = $286 >>> $288;
       $291 = $290 >>> 1;
       $292 = $291 & 2;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 1;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = (($297) + ($298))|0;
       $300 = (37456 + ($299<<2)|0);
       $301 = HEAP32[$300>>2]|0;
       $$3$i198211 = 0;$$4333$i = $301;
      } else {
       $$3$i198211 = $$3$i198;$$4333$i = $$2331$i;
      }
      $302 = ($$4333$i|0)==(0|0);
      if ($302) {
       $$4$lcssa$i = $$3$i198211;$$4327$lcssa$i = $$3326$i;
      } else {
       $$415$i$ph = $$3$i198211;$$432714$i$ph = $$3326$i;$$533413$i$ph = $$4333$i;
       label = 65;
      }
     }
     if ((label|0) == 65) {
      $$415$i = $$415$i$ph;$$432714$i = $$432714$i$ph;$$533413$i = $$533413$i$ph;
      while(1) {
       $303 = ((($$533413$i)) + 4|0);
       $304 = HEAP32[$303>>2]|0;
       $305 = $304 & -8;
       $306 = (($305) - ($219))|0;
       $307 = ($306>>>0)<($$432714$i>>>0);
       $spec$select$i201 = $307 ? $306 : $$432714$i;
       $spec$select2$i = $307 ? $$533413$i : $$415$i;
       $308 = ((($$533413$i)) + 16|0);
       $309 = HEAP32[$308>>2]|0;
       $310 = ($309|0)==(0|0);
       if ($310) {
        $311 = ((($$533413$i)) + 20|0);
        $312 = HEAP32[$311>>2]|0;
        $313 = $312;
       } else {
        $313 = $309;
       }
       $314 = ($313|0)==(0|0);
       if ($314) {
        $$4$lcssa$i = $spec$select2$i;$$4327$lcssa$i = $spec$select$i201;
        break;
       } else {
        $$415$i = $spec$select2$i;$$432714$i = $spec$select$i201;$$533413$i = $313;
       }
      }
     }
     $315 = ($$4$lcssa$i|0)==(0|0);
     if ($315) {
      $$0192 = $219;
     } else {
      $316 = HEAP32[(37160)>>2]|0;
      $317 = (($316) - ($219))|0;
      $318 = ($$4327$lcssa$i>>>0)<($317>>>0);
      if ($318) {
       $319 = (($$4$lcssa$i) + ($219)|0);
       $320 = ($319>>>0)>($$4$lcssa$i>>>0);
       if ($320) {
        $321 = ((($$4$lcssa$i)) + 24|0);
        $322 = HEAP32[$321>>2]|0;
        $323 = ((($$4$lcssa$i)) + 12|0);
        $324 = HEAP32[$323>>2]|0;
        $325 = ($324|0)==($$4$lcssa$i|0);
        do {
         if ($325) {
          $330 = ((($$4$lcssa$i)) + 20|0);
          $331 = HEAP32[$330>>2]|0;
          $332 = ($331|0)==(0|0);
          if ($332) {
           $333 = ((($$4$lcssa$i)) + 16|0);
           $334 = HEAP32[$333>>2]|0;
           $335 = ($334|0)==(0|0);
           if ($335) {
            $$3348$i = 0;
            break;
           } else {
            $$1346$i$ph = $334;$$1350$i$ph = $333;
           }
          } else {
           $$1346$i$ph = $331;$$1350$i$ph = $330;
          }
          $$1346$i = $$1346$i$ph;$$1350$i = $$1350$i$ph;
          while(1) {
           $336 = ((($$1346$i)) + 20|0);
           $337 = HEAP32[$336>>2]|0;
           $338 = ($337|0)==(0|0);
           if ($338) {
            $339 = ((($$1346$i)) + 16|0);
            $340 = HEAP32[$339>>2]|0;
            $341 = ($340|0)==(0|0);
            if ($341) {
             break;
            } else {
             $$1346$i$be = $340;$$1350$i$be = $339;
            }
           } else {
            $$1346$i$be = $337;$$1350$i$be = $336;
           }
           $$1346$i = $$1346$i$be;$$1350$i = $$1350$i$be;
          }
          HEAP32[$$1350$i>>2] = 0;
          $$3348$i = $$1346$i;
         } else {
          $326 = ((($$4$lcssa$i)) + 8|0);
          $327 = HEAP32[$326>>2]|0;
          $328 = ((($327)) + 12|0);
          HEAP32[$328>>2] = $324;
          $329 = ((($324)) + 8|0);
          HEAP32[$329>>2] = $327;
          $$3348$i = $324;
         }
        } while(0);
        $342 = ($322|0)==(0|0);
        do {
         if ($342) {
          $425 = $220;
         } else {
          $343 = ((($$4$lcssa$i)) + 28|0);
          $344 = HEAP32[$343>>2]|0;
          $345 = (37456 + ($344<<2)|0);
          $346 = HEAP32[$345>>2]|0;
          $347 = ($$4$lcssa$i|0)==($346|0);
          if ($347) {
           HEAP32[$345>>2] = $$3348$i;
           $cond$i203 = ($$3348$i|0)==(0|0);
           if ($cond$i203) {
            $348 = 1 << $344;
            $349 = $348 ^ -1;
            $350 = $220 & $349;
            HEAP32[(37156)>>2] = $350;
            $425 = $350;
            break;
           }
          } else {
           $351 = ((($322)) + 16|0);
           $352 = HEAP32[$351>>2]|0;
           $353 = ($352|0)==($$4$lcssa$i|0);
           $354 = ((($322)) + 20|0);
           $$sink320 = $353 ? $351 : $354;
           HEAP32[$$sink320>>2] = $$3348$i;
           $355 = ($$3348$i|0)==(0|0);
           if ($355) {
            $425 = $220;
            break;
           }
          }
          $356 = ((($$3348$i)) + 24|0);
          HEAP32[$356>>2] = $322;
          $357 = ((($$4$lcssa$i)) + 16|0);
          $358 = HEAP32[$357>>2]|0;
          $359 = ($358|0)==(0|0);
          if (!($359)) {
           $360 = ((($$3348$i)) + 16|0);
           HEAP32[$360>>2] = $358;
           $361 = ((($358)) + 24|0);
           HEAP32[$361>>2] = $$3348$i;
          }
          $362 = ((($$4$lcssa$i)) + 20|0);
          $363 = HEAP32[$362>>2]|0;
          $364 = ($363|0)==(0|0);
          if ($364) {
           $425 = $220;
          } else {
           $365 = ((($$3348$i)) + 20|0);
           HEAP32[$365>>2] = $363;
           $366 = ((($363)) + 24|0);
           HEAP32[$366>>2] = $$3348$i;
           $425 = $220;
          }
         }
        } while(0);
        $367 = ($$4327$lcssa$i>>>0)<(16);
        L128: do {
         if ($367) {
          $368 = (($$4327$lcssa$i) + ($219))|0;
          $369 = $368 | 3;
          $370 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$370>>2] = $369;
          $371 = (($$4$lcssa$i) + ($368)|0);
          $372 = ((($371)) + 4|0);
          $373 = HEAP32[$372>>2]|0;
          $374 = $373 | 1;
          HEAP32[$372>>2] = $374;
         } else {
          $375 = $219 | 3;
          $376 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$376>>2] = $375;
          $377 = $$4327$lcssa$i | 1;
          $378 = ((($319)) + 4|0);
          HEAP32[$378>>2] = $377;
          $379 = (($319) + ($$4327$lcssa$i)|0);
          HEAP32[$379>>2] = $$4327$lcssa$i;
          $380 = $$4327$lcssa$i >>> 3;
          $381 = ($$4327$lcssa$i>>>0)<(256);
          if ($381) {
           $382 = $380 << 1;
           $383 = (37192 + ($382<<2)|0);
           $384 = HEAP32[9288]|0;
           $385 = 1 << $380;
           $386 = $384 & $385;
           $387 = ($386|0)==(0);
           if ($387) {
            $388 = $384 | $385;
            HEAP32[9288] = $388;
            $$pre$i204 = ((($383)) + 8|0);
            $$0344$i = $383;$$pre$phi$i205Z2D = $$pre$i204;
           } else {
            $389 = ((($383)) + 8|0);
            $390 = HEAP32[$389>>2]|0;
            $$0344$i = $390;$$pre$phi$i205Z2D = $389;
           }
           HEAP32[$$pre$phi$i205Z2D>>2] = $319;
           $391 = ((($$0344$i)) + 12|0);
           HEAP32[$391>>2] = $319;
           $392 = ((($319)) + 8|0);
           HEAP32[$392>>2] = $$0344$i;
           $393 = ((($319)) + 12|0);
           HEAP32[$393>>2] = $383;
           break;
          }
          $394 = $$4327$lcssa$i >>> 8;
          $395 = ($394|0)==(0);
          if ($395) {
           $$0338$i = 0;
          } else {
           $396 = ($$4327$lcssa$i>>>0)>(16777215);
           if ($396) {
            $$0338$i = 31;
           } else {
            $397 = (($394) + 1048320)|0;
            $398 = $397 >>> 16;
            $399 = $398 & 8;
            $400 = $394 << $399;
            $401 = (($400) + 520192)|0;
            $402 = $401 >>> 16;
            $403 = $402 & 4;
            $404 = $403 | $399;
            $405 = $400 << $403;
            $406 = (($405) + 245760)|0;
            $407 = $406 >>> 16;
            $408 = $407 & 2;
            $409 = $404 | $408;
            $410 = (14 - ($409))|0;
            $411 = $405 << $408;
            $412 = $411 >>> 15;
            $413 = (($410) + ($412))|0;
            $414 = $413 << 1;
            $415 = (($413) + 7)|0;
            $416 = $$4327$lcssa$i >>> $415;
            $417 = $416 & 1;
            $418 = $417 | $414;
            $$0338$i = $418;
           }
          }
          $419 = (37456 + ($$0338$i<<2)|0);
          $420 = ((($319)) + 28|0);
          HEAP32[$420>>2] = $$0338$i;
          $421 = ((($319)) + 16|0);
          $422 = ((($421)) + 4|0);
          HEAP32[$422>>2] = 0;
          HEAP32[$421>>2] = 0;
          $423 = 1 << $$0338$i;
          $424 = $425 & $423;
          $426 = ($424|0)==(0);
          if ($426) {
           $427 = $425 | $423;
           HEAP32[(37156)>>2] = $427;
           HEAP32[$419>>2] = $319;
           $428 = ((($319)) + 24|0);
           HEAP32[$428>>2] = $419;
           $429 = ((($319)) + 12|0);
           HEAP32[$429>>2] = $319;
           $430 = ((($319)) + 8|0);
           HEAP32[$430>>2] = $319;
           break;
          }
          $431 = HEAP32[$419>>2]|0;
          $432 = ((($431)) + 4|0);
          $433 = HEAP32[$432>>2]|0;
          $434 = $433 & -8;
          $435 = ($434|0)==($$4327$lcssa$i|0);
          L145: do {
           if ($435) {
            $$0321$lcssa$i = $431;
           } else {
            $436 = ($$0338$i|0)==(31);
            $437 = $$0338$i >>> 1;
            $438 = (25 - ($437))|0;
            $439 = $436 ? 0 : $438;
            $440 = $$4327$lcssa$i << $439;
            $$032012$i = $440;$$032111$i = $431;
            while(1) {
             $447 = $$032012$i >>> 31;
             $448 = (((($$032111$i)) + 16|0) + ($447<<2)|0);
             $443 = HEAP32[$448>>2]|0;
             $449 = ($443|0)==(0|0);
             if ($449) {
              break;
             }
             $441 = $$032012$i << 1;
             $442 = ((($443)) + 4|0);
             $444 = HEAP32[$442>>2]|0;
             $445 = $444 & -8;
             $446 = ($445|0)==($$4327$lcssa$i|0);
             if ($446) {
              $$0321$lcssa$i = $443;
              break L145;
             } else {
              $$032012$i = $441;$$032111$i = $443;
             }
            }
            HEAP32[$448>>2] = $319;
            $450 = ((($319)) + 24|0);
            HEAP32[$450>>2] = $$032111$i;
            $451 = ((($319)) + 12|0);
            HEAP32[$451>>2] = $319;
            $452 = ((($319)) + 8|0);
            HEAP32[$452>>2] = $319;
            break L128;
           }
          } while(0);
          $453 = ((($$0321$lcssa$i)) + 8|0);
          $454 = HEAP32[$453>>2]|0;
          $455 = ((($454)) + 12|0);
          HEAP32[$455>>2] = $319;
          HEAP32[$453>>2] = $319;
          $456 = ((($319)) + 8|0);
          HEAP32[$456>>2] = $454;
          $457 = ((($319)) + 12|0);
          HEAP32[$457>>2] = $$0321$lcssa$i;
          $458 = ((($319)) + 24|0);
          HEAP32[$458>>2] = 0;
         }
        } while(0);
        $459 = ((($$4$lcssa$i)) + 8|0);
        $$0 = $459;
        STACKTOP = sp;return ($$0|0);
       } else {
        $$0192 = $219;
       }
      } else {
       $$0192 = $219;
      }
     }
    }
   }
  }
 } while(0);
 $460 = HEAP32[(37160)>>2]|0;
 $461 = ($460>>>0)<($$0192>>>0);
 if (!($461)) {
  $462 = (($460) - ($$0192))|0;
  $463 = HEAP32[(37172)>>2]|0;
  $464 = ($462>>>0)>(15);
  if ($464) {
   $465 = (($463) + ($$0192)|0);
   HEAP32[(37172)>>2] = $465;
   HEAP32[(37160)>>2] = $462;
   $466 = $462 | 1;
   $467 = ((($465)) + 4|0);
   HEAP32[$467>>2] = $466;
   $468 = (($463) + ($460)|0);
   HEAP32[$468>>2] = $462;
   $469 = $$0192 | 3;
   $470 = ((($463)) + 4|0);
   HEAP32[$470>>2] = $469;
  } else {
   HEAP32[(37160)>>2] = 0;
   HEAP32[(37172)>>2] = 0;
   $471 = $460 | 3;
   $472 = ((($463)) + 4|0);
   HEAP32[$472>>2] = $471;
   $473 = (($463) + ($460)|0);
   $474 = ((($473)) + 4|0);
   $475 = HEAP32[$474>>2]|0;
   $476 = $475 | 1;
   HEAP32[$474>>2] = $476;
  }
  $477 = ((($463)) + 8|0);
  $$0 = $477;
  STACKTOP = sp;return ($$0|0);
 }
 $478 = HEAP32[(37164)>>2]|0;
 $479 = ($478>>>0)>($$0192>>>0);
 if ($479) {
  $480 = (($478) - ($$0192))|0;
  HEAP32[(37164)>>2] = $480;
  $481 = HEAP32[(37176)>>2]|0;
  $482 = (($481) + ($$0192)|0);
  HEAP32[(37176)>>2] = $482;
  $483 = $480 | 1;
  $484 = ((($482)) + 4|0);
  HEAP32[$484>>2] = $483;
  $485 = $$0192 | 3;
  $486 = ((($481)) + 4|0);
  HEAP32[$486>>2] = $485;
  $487 = ((($481)) + 8|0);
  $$0 = $487;
  STACKTOP = sp;return ($$0|0);
 }
 $488 = HEAP32[9406]|0;
 $489 = ($488|0)==(0);
 if ($489) {
  HEAP32[(37632)>>2] = 4096;
  HEAP32[(37628)>>2] = 4096;
  HEAP32[(37636)>>2] = -1;
  HEAP32[(37640)>>2] = -1;
  HEAP32[(37644)>>2] = 0;
  HEAP32[(37596)>>2] = 0;
  $490 = $1;
  $491 = $490 & -16;
  $492 = $491 ^ 1431655768;
  HEAP32[9406] = $492;
  $496 = 4096;
 } else {
  $$pre$i195 = HEAP32[(37632)>>2]|0;
  $496 = $$pre$i195;
 }
 $493 = (($$0192) + 48)|0;
 $494 = (($$0192) + 47)|0;
 $495 = (($496) + ($494))|0;
 $497 = (0 - ($496))|0;
 $498 = $495 & $497;
 $499 = ($498>>>0)>($$0192>>>0);
 if (!($499)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $500 = HEAP32[(37592)>>2]|0;
 $501 = ($500|0)==(0);
 if (!($501)) {
  $502 = HEAP32[(37584)>>2]|0;
  $503 = (($502) + ($498))|0;
  $504 = ($503>>>0)<=($502>>>0);
  $505 = ($503>>>0)>($500>>>0);
  $or$cond1$i = $504 | $505;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $506 = HEAP32[(37596)>>2]|0;
 $507 = $506 & 4;
 $508 = ($507|0)==(0);
 L178: do {
  if ($508) {
   $509 = HEAP32[(37176)>>2]|0;
   $510 = ($509|0)==(0|0);
   L180: do {
    if ($510) {
     label = 128;
    } else {
     $$0$i20$i = (37600);
     while(1) {
      $511 = HEAP32[$$0$i20$i>>2]|0;
      $512 = ($511>>>0)>($509>>>0);
      if (!($512)) {
       $513 = ((($$0$i20$i)) + 4|0);
       $514 = HEAP32[$513>>2]|0;
       $515 = (($511) + ($514)|0);
       $516 = ($515>>>0)>($509>>>0);
       if ($516) {
        break;
       }
      }
      $517 = ((($$0$i20$i)) + 8|0);
      $518 = HEAP32[$517>>2]|0;
      $519 = ($518|0)==(0|0);
      if ($519) {
       label = 128;
       break L180;
      } else {
       $$0$i20$i = $518;
      }
     }
     $542 = (($495) - ($478))|0;
     $543 = $542 & $497;
     $544 = ($543>>>0)<(2147483647);
     if ($544) {
      $545 = ((($$0$i20$i)) + 4|0);
      $546 = (_sbrk(($543|0))|0);
      $547 = HEAP32[$$0$i20$i>>2]|0;
      $548 = HEAP32[$545>>2]|0;
      $549 = (($547) + ($548)|0);
      $550 = ($546|0)==($549|0);
      if ($550) {
       $551 = ($546|0)==((-1)|0);
       if ($551) {
        $$2234243136$i = $543;
       } else {
        $$723947$i = $543;$$748$i = $546;
        label = 145;
        break L178;
       }
      } else {
       $$2247$ph$i = $546;$$2253$ph$i = $543;
       label = 136;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 128) {
     $520 = (_sbrk(0)|0);
     $521 = ($520|0)==((-1)|0);
     if ($521) {
      $$2234243136$i = 0;
     } else {
      $522 = $520;
      $523 = HEAP32[(37628)>>2]|0;
      $524 = (($523) + -1)|0;
      $525 = $524 & $522;
      $526 = ($525|0)==(0);
      $527 = (($524) + ($522))|0;
      $528 = (0 - ($523))|0;
      $529 = $527 & $528;
      $530 = (($529) - ($522))|0;
      $531 = $526 ? 0 : $530;
      $spec$select49$i = (($531) + ($498))|0;
      $532 = HEAP32[(37584)>>2]|0;
      $533 = (($spec$select49$i) + ($532))|0;
      $534 = ($spec$select49$i>>>0)>($$0192>>>0);
      $535 = ($spec$select49$i>>>0)<(2147483647);
      $or$cond$i = $534 & $535;
      if ($or$cond$i) {
       $536 = HEAP32[(37592)>>2]|0;
       $537 = ($536|0)==(0);
       if (!($537)) {
        $538 = ($533>>>0)<=($532>>>0);
        $539 = ($533>>>0)>($536>>>0);
        $or$cond2$i = $538 | $539;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $540 = (_sbrk(($spec$select49$i|0))|0);
       $541 = ($540|0)==($520|0);
       if ($541) {
        $$723947$i = $spec$select49$i;$$748$i = $520;
        label = 145;
        break L178;
       } else {
        $$2247$ph$i = $540;$$2253$ph$i = $spec$select49$i;
        label = 136;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 136) {
     $552 = (0 - ($$2253$ph$i))|0;
     $553 = ($$2247$ph$i|0)!=((-1)|0);
     $554 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $554 & $553;
     $555 = ($493>>>0)>($$2253$ph$i>>>0);
     $or$cond6$i = $555 & $or$cond7$i;
     if (!($or$cond6$i)) {
      $565 = ($$2247$ph$i|0)==((-1)|0);
      if ($565) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 145;
       break L178;
      }
     }
     $556 = HEAP32[(37632)>>2]|0;
     $557 = (($494) - ($$2253$ph$i))|0;
     $558 = (($557) + ($556))|0;
     $559 = (0 - ($556))|0;
     $560 = $558 & $559;
     $561 = ($560>>>0)<(2147483647);
     if (!($561)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
     $562 = (_sbrk(($560|0))|0);
     $563 = ($562|0)==((-1)|0);
     if ($563) {
      (_sbrk(($552|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $564 = (($560) + ($$2253$ph$i))|0;
      $$723947$i = $564;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
    }
   } while(0);
   $566 = HEAP32[(37596)>>2]|0;
   $567 = $566 | 4;
   HEAP32[(37596)>>2] = $567;
   $$4236$i = $$2234243136$i;
   label = 143;
  } else {
   $$4236$i = 0;
   label = 143;
  }
 } while(0);
 if ((label|0) == 143) {
  $568 = ($498>>>0)<(2147483647);
  if ($568) {
   $569 = (_sbrk(($498|0))|0);
   $570 = (_sbrk(0)|0);
   $571 = ($569|0)!=((-1)|0);
   $572 = ($570|0)!=((-1)|0);
   $or$cond5$i = $571 & $572;
   $573 = ($569>>>0)<($570>>>0);
   $or$cond8$i = $573 & $or$cond5$i;
   $574 = $570;
   $575 = $569;
   $576 = (($574) - ($575))|0;
   $577 = (($$0192) + 40)|0;
   $578 = ($576>>>0)>($577>>>0);
   $spec$select9$i = $578 ? $576 : $$4236$i;
   $or$cond8$not$i = $or$cond8$i ^ 1;
   $579 = ($569|0)==((-1)|0);
   $not$$i = $578 ^ 1;
   $580 = $579 | $not$$i;
   $or$cond50$i = $580 | $or$cond8$not$i;
   if (!($or$cond50$i)) {
    $$723947$i = $spec$select9$i;$$748$i = $569;
    label = 145;
   }
  }
 }
 if ((label|0) == 145) {
  $581 = HEAP32[(37584)>>2]|0;
  $582 = (($581) + ($$723947$i))|0;
  HEAP32[(37584)>>2] = $582;
  $583 = HEAP32[(37588)>>2]|0;
  $584 = ($582>>>0)>($583>>>0);
  if ($584) {
   HEAP32[(37588)>>2] = $582;
  }
  $585 = HEAP32[(37176)>>2]|0;
  $586 = ($585|0)==(0|0);
  L215: do {
   if ($586) {
    $587 = HEAP32[(37168)>>2]|0;
    $588 = ($587|0)==(0|0);
    $589 = ($$748$i>>>0)<($587>>>0);
    $or$cond11$i = $588 | $589;
    if ($or$cond11$i) {
     HEAP32[(37168)>>2] = $$748$i;
    }
    HEAP32[(37600)>>2] = $$748$i;
    HEAP32[(37604)>>2] = $$723947$i;
    HEAP32[(37612)>>2] = 0;
    $590 = HEAP32[9406]|0;
    HEAP32[(37188)>>2] = $590;
    HEAP32[(37184)>>2] = -1;
    HEAP32[(37204)>>2] = (37192);
    HEAP32[(37200)>>2] = (37192);
    HEAP32[(37212)>>2] = (37200);
    HEAP32[(37208)>>2] = (37200);
    HEAP32[(37220)>>2] = (37208);
    HEAP32[(37216)>>2] = (37208);
    HEAP32[(37228)>>2] = (37216);
    HEAP32[(37224)>>2] = (37216);
    HEAP32[(37236)>>2] = (37224);
    HEAP32[(37232)>>2] = (37224);
    HEAP32[(37244)>>2] = (37232);
    HEAP32[(37240)>>2] = (37232);
    HEAP32[(37252)>>2] = (37240);
    HEAP32[(37248)>>2] = (37240);
    HEAP32[(37260)>>2] = (37248);
    HEAP32[(37256)>>2] = (37248);
    HEAP32[(37268)>>2] = (37256);
    HEAP32[(37264)>>2] = (37256);
    HEAP32[(37276)>>2] = (37264);
    HEAP32[(37272)>>2] = (37264);
    HEAP32[(37284)>>2] = (37272);
    HEAP32[(37280)>>2] = (37272);
    HEAP32[(37292)>>2] = (37280);
    HEAP32[(37288)>>2] = (37280);
    HEAP32[(37300)>>2] = (37288);
    HEAP32[(37296)>>2] = (37288);
    HEAP32[(37308)>>2] = (37296);
    HEAP32[(37304)>>2] = (37296);
    HEAP32[(37316)>>2] = (37304);
    HEAP32[(37312)>>2] = (37304);
    HEAP32[(37324)>>2] = (37312);
    HEAP32[(37320)>>2] = (37312);
    HEAP32[(37332)>>2] = (37320);
    HEAP32[(37328)>>2] = (37320);
    HEAP32[(37340)>>2] = (37328);
    HEAP32[(37336)>>2] = (37328);
    HEAP32[(37348)>>2] = (37336);
    HEAP32[(37344)>>2] = (37336);
    HEAP32[(37356)>>2] = (37344);
    HEAP32[(37352)>>2] = (37344);
    HEAP32[(37364)>>2] = (37352);
    HEAP32[(37360)>>2] = (37352);
    HEAP32[(37372)>>2] = (37360);
    HEAP32[(37368)>>2] = (37360);
    HEAP32[(37380)>>2] = (37368);
    HEAP32[(37376)>>2] = (37368);
    HEAP32[(37388)>>2] = (37376);
    HEAP32[(37384)>>2] = (37376);
    HEAP32[(37396)>>2] = (37384);
    HEAP32[(37392)>>2] = (37384);
    HEAP32[(37404)>>2] = (37392);
    HEAP32[(37400)>>2] = (37392);
    HEAP32[(37412)>>2] = (37400);
    HEAP32[(37408)>>2] = (37400);
    HEAP32[(37420)>>2] = (37408);
    HEAP32[(37416)>>2] = (37408);
    HEAP32[(37428)>>2] = (37416);
    HEAP32[(37424)>>2] = (37416);
    HEAP32[(37436)>>2] = (37424);
    HEAP32[(37432)>>2] = (37424);
    HEAP32[(37444)>>2] = (37432);
    HEAP32[(37440)>>2] = (37432);
    HEAP32[(37452)>>2] = (37440);
    HEAP32[(37448)>>2] = (37440);
    $591 = (($$723947$i) + -40)|0;
    $592 = ((($$748$i)) + 8|0);
    $593 = $592;
    $594 = $593 & 7;
    $595 = ($594|0)==(0);
    $596 = (0 - ($593))|0;
    $597 = $596 & 7;
    $598 = $595 ? 0 : $597;
    $599 = (($$748$i) + ($598)|0);
    $600 = (($591) - ($598))|0;
    HEAP32[(37176)>>2] = $599;
    HEAP32[(37164)>>2] = $600;
    $601 = $600 | 1;
    $602 = ((($599)) + 4|0);
    HEAP32[$602>>2] = $601;
    $603 = (($$748$i) + ($591)|0);
    $604 = ((($603)) + 4|0);
    HEAP32[$604>>2] = 40;
    $605 = HEAP32[(37640)>>2]|0;
    HEAP32[(37180)>>2] = $605;
   } else {
    $$024372$i = (37600);
    while(1) {
     $606 = HEAP32[$$024372$i>>2]|0;
     $607 = ((($$024372$i)) + 4|0);
     $608 = HEAP32[$607>>2]|0;
     $609 = (($606) + ($608)|0);
     $610 = ($$748$i|0)==($609|0);
     if ($610) {
      label = 154;
      break;
     }
     $611 = ((($$024372$i)) + 8|0);
     $612 = HEAP32[$611>>2]|0;
     $613 = ($612|0)==(0|0);
     if ($613) {
      break;
     } else {
      $$024372$i = $612;
     }
    }
    if ((label|0) == 154) {
     $614 = ((($$024372$i)) + 4|0);
     $615 = ((($$024372$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($606>>>0)<=($585>>>0);
      $620 = ($$748$i>>>0)>($585>>>0);
      $or$cond51$i = $620 & $619;
      if ($or$cond51$i) {
       $621 = (($608) + ($$723947$i))|0;
       HEAP32[$614>>2] = $621;
       $622 = HEAP32[(37164)>>2]|0;
       $623 = (($622) + ($$723947$i))|0;
       $624 = ((($585)) + 8|0);
       $625 = $624;
       $626 = $625 & 7;
       $627 = ($626|0)==(0);
       $628 = (0 - ($625))|0;
       $629 = $628 & 7;
       $630 = $627 ? 0 : $629;
       $631 = (($585) + ($630)|0);
       $632 = (($623) - ($630))|0;
       HEAP32[(37176)>>2] = $631;
       HEAP32[(37164)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($631)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($585) + ($623)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(37640)>>2]|0;
       HEAP32[(37180)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(37168)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(37168)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124471$i = (37600);
    while(1) {
     $641 = HEAP32[$$124471$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 162;
      break;
     }
     $643 = ((($$124471$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124471$i = $644;
     }
    }
    if ((label|0) == 162) {
     $646 = ((($$124471$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124471$i>>2] = $$748$i;
      $650 = ((($$124471$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($585|0)==($668|0);
      L238: do {
       if ($676) {
        $677 = HEAP32[(37164)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(37164)>>2] = $678;
        HEAP32[(37176)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(37172)>>2]|0;
        $682 = ($681|0)==($668|0);
        if ($682) {
         $683 = HEAP32[(37160)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(37160)>>2] = $684;
         HEAP32[(37172)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L246: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[9288]|0;
            $703 = $702 & $701;
            HEAP32[9288] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1263$i$i$ph = $719;$$1265$i$i$ph = $715;
              }
             } else {
              $$1263$i$i$ph = $717;$$1265$i$i$ph = $716;
             }
             $$1263$i$i = $$1263$i$i$ph;$$1265$i$i = $$1265$i$i$ph;
             while(1) {
              $721 = ((($$1263$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if ($723) {
               $724 = ((($$1263$i$i)) + 16|0);
               $725 = HEAP32[$724>>2]|0;
               $726 = ($725|0)==(0|0);
               if ($726) {
                break;
               } else {
                $$1263$i$i$be = $725;$$1265$i$i$be = $724;
               }
              } else {
               $$1263$i$i$be = $722;$$1265$i$i$be = $721;
              }
              $$1263$i$i = $$1263$i$i$be;$$1265$i$i = $$1265$i$i$be;
             }
             HEAP32[$$1265$i$i>>2] = 0;
             $$3$i$i = $$1263$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (37456 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($731|0)==($668|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(37156)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(37156)>>2] = $736;
             break L246;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $739 = ($738|0)==($668|0);
             $740 = ((($707)) + 20|0);
             $$sink321 = $739 ? $737 : $740;
             HEAP32[$$sink321>>2] = $$3$i$i;
             $741 = ($$3$i$i|0)==(0|0);
             if ($741) {
              break L246;
             }
            }
           } while(0);
           $742 = ((($$3$i$i)) + 24|0);
           HEAP32[$742>>2] = $707;
           $743 = ((($668)) + 16|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = ($744|0)==(0|0);
           if (!($745)) {
            $746 = ((($$3$i$i)) + 16|0);
            HEAP32[$746>>2] = $744;
            $747 = ((($744)) + 24|0);
            HEAP32[$747>>2] = $$3$i$i;
           }
           $748 = ((($743)) + 4|0);
           $749 = HEAP32[$748>>2]|0;
           $750 = ($749|0)==(0|0);
           if ($750) {
            break;
           }
           $751 = ((($$3$i$i)) + 20|0);
           HEAP32[$751>>2] = $749;
           $752 = ((($749)) + 24|0);
           HEAP32[$752>>2] = $$3$i$i;
          }
         } while(0);
         $753 = (($668) + ($692)|0);
         $754 = (($692) + ($673))|0;
         $$0$i$i = $753;$$0259$i$i = $754;
        } else {
         $$0$i$i = $668;$$0259$i$i = $673;
        }
        $755 = ((($$0$i$i)) + 4|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = $756 & -2;
        HEAP32[$755>>2] = $757;
        $758 = $$0259$i$i | 1;
        $759 = ((($672)) + 4|0);
        HEAP32[$759>>2] = $758;
        $760 = (($672) + ($$0259$i$i)|0);
        HEAP32[$760>>2] = $$0259$i$i;
        $761 = $$0259$i$i >>> 3;
        $762 = ($$0259$i$i>>>0)<(256);
        if ($762) {
         $763 = $761 << 1;
         $764 = (37192 + ($763<<2)|0);
         $765 = HEAP32[9288]|0;
         $766 = 1 << $761;
         $767 = $765 & $766;
         $768 = ($767|0)==(0);
         if ($768) {
          $769 = $765 | $766;
          HEAP32[9288] = $769;
          $$pre$i16$i = ((($764)) + 8|0);
          $$0267$i$i = $764;$$pre$phi$i17$iZ2D = $$pre$i16$i;
         } else {
          $770 = ((($764)) + 8|0);
          $771 = HEAP32[$770>>2]|0;
          $$0267$i$i = $771;$$pre$phi$i17$iZ2D = $770;
         }
         HEAP32[$$pre$phi$i17$iZ2D>>2] = $672;
         $772 = ((($$0267$i$i)) + 12|0);
         HEAP32[$772>>2] = $672;
         $773 = ((($672)) + 8|0);
         HEAP32[$773>>2] = $$0267$i$i;
         $774 = ((($672)) + 12|0);
         HEAP32[$774>>2] = $764;
         break;
        }
        $775 = $$0259$i$i >>> 8;
        $776 = ($775|0)==(0);
        do {
         if ($776) {
          $$0268$i$i = 0;
         } else {
          $777 = ($$0259$i$i>>>0)>(16777215);
          if ($777) {
           $$0268$i$i = 31;
           break;
          }
          $778 = (($775) + 1048320)|0;
          $779 = $778 >>> 16;
          $780 = $779 & 8;
          $781 = $775 << $780;
          $782 = (($781) + 520192)|0;
          $783 = $782 >>> 16;
          $784 = $783 & 4;
          $785 = $784 | $780;
          $786 = $781 << $784;
          $787 = (($786) + 245760)|0;
          $788 = $787 >>> 16;
          $789 = $788 & 2;
          $790 = $785 | $789;
          $791 = (14 - ($790))|0;
          $792 = $786 << $789;
          $793 = $792 >>> 15;
          $794 = (($791) + ($793))|0;
          $795 = $794 << 1;
          $796 = (($794) + 7)|0;
          $797 = $$0259$i$i >>> $796;
          $798 = $797 & 1;
          $799 = $798 | $795;
          $$0268$i$i = $799;
         }
        } while(0);
        $800 = (37456 + ($$0268$i$i<<2)|0);
        $801 = ((($672)) + 28|0);
        HEAP32[$801>>2] = $$0268$i$i;
        $802 = ((($672)) + 16|0);
        $803 = ((($802)) + 4|0);
        HEAP32[$803>>2] = 0;
        HEAP32[$802>>2] = 0;
        $804 = HEAP32[(37156)>>2]|0;
        $805 = 1 << $$0268$i$i;
        $806 = $804 & $805;
        $807 = ($806|0)==(0);
        if ($807) {
         $808 = $804 | $805;
         HEAP32[(37156)>>2] = $808;
         HEAP32[$800>>2] = $672;
         $809 = ((($672)) + 24|0);
         HEAP32[$809>>2] = $800;
         $810 = ((($672)) + 12|0);
         HEAP32[$810>>2] = $672;
         $811 = ((($672)) + 8|0);
         HEAP32[$811>>2] = $672;
         break;
        }
        $812 = HEAP32[$800>>2]|0;
        $813 = ((($812)) + 4|0);
        $814 = HEAP32[$813>>2]|0;
        $815 = $814 & -8;
        $816 = ($815|0)==($$0259$i$i|0);
        L291: do {
         if ($816) {
          $$0261$lcssa$i$i = $812;
         } else {
          $817 = ($$0268$i$i|0)==(31);
          $818 = $$0268$i$i >>> 1;
          $819 = (25 - ($818))|0;
          $820 = $817 ? 0 : $819;
          $821 = $$0259$i$i << $820;
          $$02604$i$i = $821;$$02613$i$i = $812;
          while(1) {
           $828 = $$02604$i$i >>> 31;
           $829 = (((($$02613$i$i)) + 16|0) + ($828<<2)|0);
           $824 = HEAP32[$829>>2]|0;
           $830 = ($824|0)==(0|0);
           if ($830) {
            break;
           }
           $822 = $$02604$i$i << 1;
           $823 = ((($824)) + 4|0);
           $825 = HEAP32[$823>>2]|0;
           $826 = $825 & -8;
           $827 = ($826|0)==($$0259$i$i|0);
           if ($827) {
            $$0261$lcssa$i$i = $824;
            break L291;
           } else {
            $$02604$i$i = $822;$$02613$i$i = $824;
           }
          }
          HEAP32[$829>>2] = $672;
          $831 = ((($672)) + 24|0);
          HEAP32[$831>>2] = $$02613$i$i;
          $832 = ((($672)) + 12|0);
          HEAP32[$832>>2] = $672;
          $833 = ((($672)) + 8|0);
          HEAP32[$833>>2] = $672;
          break L238;
         }
        } while(0);
        $834 = ((($$0261$lcssa$i$i)) + 8|0);
        $835 = HEAP32[$834>>2]|0;
        $836 = ((($835)) + 12|0);
        HEAP32[$836>>2] = $672;
        HEAP32[$834>>2] = $672;
        $837 = ((($672)) + 8|0);
        HEAP32[$837>>2] = $835;
        $838 = ((($672)) + 12|0);
        HEAP32[$838>>2] = $$0261$lcssa$i$i;
        $839 = ((($672)) + 24|0);
        HEAP32[$839>>2] = 0;
       }
      } while(0);
      $968 = ((($660)) + 8|0);
      $$0 = $968;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (37600);
    while(1) {
     $840 = HEAP32[$$0$i$i$i>>2]|0;
     $841 = ($840>>>0)>($585>>>0);
     if (!($841)) {
      $842 = ((($$0$i$i$i)) + 4|0);
      $843 = HEAP32[$842>>2]|0;
      $844 = (($840) + ($843)|0);
      $845 = ($844>>>0)>($585>>>0);
      if ($845) {
       break;
      }
     }
     $846 = ((($$0$i$i$i)) + 8|0);
     $847 = HEAP32[$846>>2]|0;
     $$0$i$i$i = $847;
    }
    $848 = ((($844)) + -47|0);
    $849 = ((($848)) + 8|0);
    $850 = $849;
    $851 = $850 & 7;
    $852 = ($851|0)==(0);
    $853 = (0 - ($850))|0;
    $854 = $853 & 7;
    $855 = $852 ? 0 : $854;
    $856 = (($848) + ($855)|0);
    $857 = ((($585)) + 16|0);
    $858 = ($856>>>0)<($857>>>0);
    $859 = $858 ? $585 : $856;
    $860 = ((($859)) + 8|0);
    $861 = ((($859)) + 24|0);
    $862 = (($$723947$i) + -40)|0;
    $863 = ((($$748$i)) + 8|0);
    $864 = $863;
    $865 = $864 & 7;
    $866 = ($865|0)==(0);
    $867 = (0 - ($864))|0;
    $868 = $867 & 7;
    $869 = $866 ? 0 : $868;
    $870 = (($$748$i) + ($869)|0);
    $871 = (($862) - ($869))|0;
    HEAP32[(37176)>>2] = $870;
    HEAP32[(37164)>>2] = $871;
    $872 = $871 | 1;
    $873 = ((($870)) + 4|0);
    HEAP32[$873>>2] = $872;
    $874 = (($$748$i) + ($862)|0);
    $875 = ((($874)) + 4|0);
    HEAP32[$875>>2] = 40;
    $876 = HEAP32[(37640)>>2]|0;
    HEAP32[(37180)>>2] = $876;
    $877 = ((($859)) + 4|0);
    HEAP32[$877>>2] = 27;
    ;HEAP32[$860>>2]=HEAP32[(37600)>>2]|0;HEAP32[$860+4>>2]=HEAP32[(37600)+4>>2]|0;HEAP32[$860+8>>2]=HEAP32[(37600)+8>>2]|0;HEAP32[$860+12>>2]=HEAP32[(37600)+12>>2]|0;
    HEAP32[(37600)>>2] = $$748$i;
    HEAP32[(37604)>>2] = $$723947$i;
    HEAP32[(37612)>>2] = 0;
    HEAP32[(37608)>>2] = $860;
    $879 = $861;
    while(1) {
     $878 = ((($879)) + 4|0);
     HEAP32[$878>>2] = 7;
     $880 = ((($879)) + 8|0);
     $881 = ($880>>>0)<($844>>>0);
     if ($881) {
      $879 = $878;
     } else {
      break;
     }
    }
    $882 = ($859|0)==($585|0);
    if (!($882)) {
     $883 = $859;
     $884 = $585;
     $885 = (($883) - ($884))|0;
     $886 = HEAP32[$877>>2]|0;
     $887 = $886 & -2;
     HEAP32[$877>>2] = $887;
     $888 = $885 | 1;
     $889 = ((($585)) + 4|0);
     HEAP32[$889>>2] = $888;
     HEAP32[$859>>2] = $885;
     $890 = $885 >>> 3;
     $891 = ($885>>>0)<(256);
     if ($891) {
      $892 = $890 << 1;
      $893 = (37192 + ($892<<2)|0);
      $894 = HEAP32[9288]|0;
      $895 = 1 << $890;
      $896 = $894 & $895;
      $897 = ($896|0)==(0);
      if ($897) {
       $898 = $894 | $895;
       HEAP32[9288] = $898;
       $$pre$i$i = ((($893)) + 8|0);
       $$0206$i$i = $893;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $899 = ((($893)) + 8|0);
       $900 = HEAP32[$899>>2]|0;
       $$0206$i$i = $900;$$pre$phi$i$iZ2D = $899;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $585;
      $901 = ((($$0206$i$i)) + 12|0);
      HEAP32[$901>>2] = $585;
      $902 = ((($585)) + 8|0);
      HEAP32[$902>>2] = $$0206$i$i;
      $903 = ((($585)) + 12|0);
      HEAP32[$903>>2] = $893;
      break;
     }
     $904 = $885 >>> 8;
     $905 = ($904|0)==(0);
     if ($905) {
      $$0207$i$i = 0;
     } else {
      $906 = ($885>>>0)>(16777215);
      if ($906) {
       $$0207$i$i = 31;
      } else {
       $907 = (($904) + 1048320)|0;
       $908 = $907 >>> 16;
       $909 = $908 & 8;
       $910 = $904 << $909;
       $911 = (($910) + 520192)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 4;
       $914 = $913 | $909;
       $915 = $910 << $913;
       $916 = (($915) + 245760)|0;
       $917 = $916 >>> 16;
       $918 = $917 & 2;
       $919 = $914 | $918;
       $920 = (14 - ($919))|0;
       $921 = $915 << $918;
       $922 = $921 >>> 15;
       $923 = (($920) + ($922))|0;
       $924 = $923 << 1;
       $925 = (($923) + 7)|0;
       $926 = $885 >>> $925;
       $927 = $926 & 1;
       $928 = $927 | $924;
       $$0207$i$i = $928;
      }
     }
     $929 = (37456 + ($$0207$i$i<<2)|0);
     $930 = ((($585)) + 28|0);
     HEAP32[$930>>2] = $$0207$i$i;
     $931 = ((($585)) + 20|0);
     HEAP32[$931>>2] = 0;
     HEAP32[$857>>2] = 0;
     $932 = HEAP32[(37156)>>2]|0;
     $933 = 1 << $$0207$i$i;
     $934 = $932 & $933;
     $935 = ($934|0)==(0);
     if ($935) {
      $936 = $932 | $933;
      HEAP32[(37156)>>2] = $936;
      HEAP32[$929>>2] = $585;
      $937 = ((($585)) + 24|0);
      HEAP32[$937>>2] = $929;
      $938 = ((($585)) + 12|0);
      HEAP32[$938>>2] = $585;
      $939 = ((($585)) + 8|0);
      HEAP32[$939>>2] = $585;
      break;
     }
     $940 = HEAP32[$929>>2]|0;
     $941 = ((($940)) + 4|0);
     $942 = HEAP32[$941>>2]|0;
     $943 = $942 & -8;
     $944 = ($943|0)==($885|0);
     L325: do {
      if ($944) {
       $$0202$lcssa$i$i = $940;
      } else {
       $945 = ($$0207$i$i|0)==(31);
       $946 = $$0207$i$i >>> 1;
       $947 = (25 - ($946))|0;
       $948 = $945 ? 0 : $947;
       $949 = $885 << $948;
       $$02014$i$i = $949;$$02023$i$i = $940;
       while(1) {
        $956 = $$02014$i$i >>> 31;
        $957 = (((($$02023$i$i)) + 16|0) + ($956<<2)|0);
        $952 = HEAP32[$957>>2]|0;
        $958 = ($952|0)==(0|0);
        if ($958) {
         break;
        }
        $950 = $$02014$i$i << 1;
        $951 = ((($952)) + 4|0);
        $953 = HEAP32[$951>>2]|0;
        $954 = $953 & -8;
        $955 = ($954|0)==($885|0);
        if ($955) {
         $$0202$lcssa$i$i = $952;
         break L325;
        } else {
         $$02014$i$i = $950;$$02023$i$i = $952;
        }
       }
       HEAP32[$957>>2] = $585;
       $959 = ((($585)) + 24|0);
       HEAP32[$959>>2] = $$02023$i$i;
       $960 = ((($585)) + 12|0);
       HEAP32[$960>>2] = $585;
       $961 = ((($585)) + 8|0);
       HEAP32[$961>>2] = $585;
       break L215;
      }
     } while(0);
     $962 = ((($$0202$lcssa$i$i)) + 8|0);
     $963 = HEAP32[$962>>2]|0;
     $964 = ((($963)) + 12|0);
     HEAP32[$964>>2] = $585;
     HEAP32[$962>>2] = $585;
     $965 = ((($585)) + 8|0);
     HEAP32[$965>>2] = $963;
     $966 = ((($585)) + 12|0);
     HEAP32[$966>>2] = $$0202$lcssa$i$i;
     $967 = ((($585)) + 24|0);
     HEAP32[$967>>2] = 0;
    }
   }
  } while(0);
  $969 = HEAP32[(37164)>>2]|0;
  $970 = ($969>>>0)>($$0192>>>0);
  if ($970) {
   $971 = (($969) - ($$0192))|0;
   HEAP32[(37164)>>2] = $971;
   $972 = HEAP32[(37176)>>2]|0;
   $973 = (($972) + ($$0192)|0);
   HEAP32[(37176)>>2] = $973;
   $974 = $971 | 1;
   $975 = ((($973)) + 4|0);
   HEAP32[$975>>2] = $974;
   $976 = $$0192 | 3;
   $977 = ((($972)) + 4|0);
   HEAP32[$977>>2] = $976;
   $978 = ((($972)) + 8|0);
   $$0 = $978;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $979 = (___errno_location()|0);
 HEAP32[$979>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0194$i = 0, $$0194$in$i = 0, $$0346381 = 0, $$0347$lcssa = 0, $$0347380 = 0, $$0359 = 0, $$0366 = 0, $$1 = 0, $$1345 = 0, $$1350 = 0, $$1350$be = 0, $$1350$ph = 0, $$1353 = 0, $$1353$be = 0, $$1353$ph = 0, $$1361 = 0, $$1361$be = 0, $$1361$ph = 0, $$1365 = 0, $$1365$be = 0;
 var $$1365$ph = 0, $$2 = 0, $$3 = 0, $$3363 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink395 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond371 = 0, $cond372 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(37168)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(37172)>>2]|0;
   $18 = ($17|0)==($14|0);
   if ($18) {
    $79 = ((($7)) + 4|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = $80 & 3;
    $82 = ($81|0)==(3);
    if (!($82)) {
     $$1 = $14;$$1345 = $15;$87 = $14;
     break;
    }
    $83 = (($14) + ($15)|0);
    $84 = ((($14)) + 4|0);
    $85 = $15 | 1;
    $86 = $80 & -2;
    HEAP32[(37160)>>2] = $15;
    HEAP32[$79>>2] = $86;
    HEAP32[$84>>2] = $85;
    HEAP32[$83>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[9288]|0;
     $29 = $28 & $27;
     HEAP32[9288] = $29;
     $$1 = $14;$$1345 = $15;$87 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1345 = $15;$87 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1350$ph = $45;$$1353$ph = $41;
      }
     } else {
      $$1350$ph = $43;$$1353$ph = $42;
     }
     $$1350 = $$1350$ph;$$1353 = $$1353$ph;
     while(1) {
      $47 = ((($$1350)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if ($49) {
       $50 = ((($$1350)) + 16|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = ($51|0)==(0|0);
       if ($52) {
        break;
       } else {
        $$1350$be = $51;$$1353$be = $50;
       }
      } else {
       $$1350$be = $48;$$1353$be = $47;
      }
      $$1350 = $$1350$be;$$1353 = $$1353$be;
     }
     HEAP32[$$1353>>2] = 0;
     $$3 = $$1350;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1345 = $15;$87 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (37456 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($57|0)==($14|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond371 = ($$3|0)==(0|0);
     if ($cond371) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(37156)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(37156)>>2] = $62;
      $$1 = $14;$$1345 = $15;$87 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ($64|0)==($14|0);
     $66 = ((($33)) + 20|0);
     $$sink = $65 ? $63 : $66;
     HEAP32[$$sink>>2] = $$3;
     $67 = ($$3|0)==(0|0);
     if ($67) {
      $$1 = $14;$$1345 = $15;$87 = $14;
      break;
     }
    }
    $68 = ((($$3)) + 24|0);
    HEAP32[$68>>2] = $33;
    $69 = ((($14)) + 16|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = ((($$3)) + 16|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
    }
    $74 = ((($69)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($75|0)==(0|0);
    if ($76) {
     $$1 = $14;$$1345 = $15;$87 = $14;
    } else {
     $77 = ((($$3)) + 20|0);
     HEAP32[$77>>2] = $75;
     $78 = ((($75)) + 24|0);
     HEAP32[$78>>2] = $$3;
     $$1 = $14;$$1345 = $15;$87 = $14;
    }
   }
  } else {
   $$1 = $2;$$1345 = $6;$87 = $2;
  }
 } while(0);
 $88 = ($87>>>0)<($7>>>0);
 if (!($88)) {
  return;
 }
 $89 = ((($7)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $90 & 1;
 $92 = ($91|0)==(0);
 if ($92) {
  return;
 }
 $93 = $90 & 2;
 $94 = ($93|0)==(0);
 if ($94) {
  $95 = HEAP32[(37176)>>2]|0;
  $96 = ($95|0)==($7|0);
  if ($96) {
   $97 = HEAP32[(37164)>>2]|0;
   $98 = (($97) + ($$1345))|0;
   HEAP32[(37164)>>2] = $98;
   HEAP32[(37176)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = HEAP32[(37172)>>2]|0;
   $102 = ($$1|0)==($101|0);
   if (!($102)) {
    return;
   }
   HEAP32[(37172)>>2] = 0;
   HEAP32[(37160)>>2] = 0;
   return;
  }
  $103 = HEAP32[(37172)>>2]|0;
  $104 = ($103|0)==($7|0);
  if ($104) {
   $105 = HEAP32[(37160)>>2]|0;
   $106 = (($105) + ($$1345))|0;
   HEAP32[(37160)>>2] = $106;
   HEAP32[(37172)>>2] = $87;
   $107 = $106 | 1;
   $108 = ((($$1)) + 4|0);
   HEAP32[$108>>2] = $107;
   $109 = (($87) + ($106)|0);
   HEAP32[$109>>2] = $106;
   return;
  }
  $110 = $90 & -8;
  $111 = (($110) + ($$1345))|0;
  $112 = $90 >>> 3;
  $113 = ($90>>>0)<(256);
  do {
   if ($113) {
    $114 = ((($7)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($7)) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ($117|0)==($115|0);
    if ($118) {
     $119 = 1 << $112;
     $120 = $119 ^ -1;
     $121 = HEAP32[9288]|0;
     $122 = $121 & $120;
     HEAP32[9288] = $122;
     break;
    } else {
     $123 = ((($115)) + 12|0);
     HEAP32[$123>>2] = $117;
     $124 = ((($117)) + 8|0);
     HEAP32[$124>>2] = $115;
     break;
    }
   } else {
    $125 = ((($7)) + 24|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($7)) + 12|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($128|0)==($7|0);
    do {
     if ($129) {
      $134 = ((($7)) + 16|0);
      $135 = ((($134)) + 4|0);
      $136 = HEAP32[$135>>2]|0;
      $137 = ($136|0)==(0|0);
      if ($137) {
       $138 = HEAP32[$134>>2]|0;
       $139 = ($138|0)==(0|0);
       if ($139) {
        $$3363 = 0;
        break;
       } else {
        $$1361$ph = $138;$$1365$ph = $134;
       }
      } else {
       $$1361$ph = $136;$$1365$ph = $135;
      }
      $$1361 = $$1361$ph;$$1365 = $$1365$ph;
      while(1) {
       $140 = ((($$1361)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $143 = ((($$1361)) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($144|0)==(0|0);
        if ($145) {
         break;
        } else {
         $$1361$be = $144;$$1365$be = $143;
        }
       } else {
        $$1361$be = $141;$$1365$be = $140;
       }
       $$1361 = $$1361$be;$$1365 = $$1365$be;
      }
      HEAP32[$$1365>>2] = 0;
      $$3363 = $$1361;
     } else {
      $130 = ((($7)) + 8|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = ((($131)) + 12|0);
      HEAP32[$132>>2] = $128;
      $133 = ((($128)) + 8|0);
      HEAP32[$133>>2] = $131;
      $$3363 = $128;
     }
    } while(0);
    $146 = ($126|0)==(0|0);
    if (!($146)) {
     $147 = ((($7)) + 28|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = (37456 + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($7|0);
     if ($151) {
      HEAP32[$149>>2] = $$3363;
      $cond372 = ($$3363|0)==(0|0);
      if ($cond372) {
       $152 = 1 << $148;
       $153 = $152 ^ -1;
       $154 = HEAP32[(37156)>>2]|0;
       $155 = $154 & $153;
       HEAP32[(37156)>>2] = $155;
       break;
      }
     } else {
      $156 = ((($126)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($157|0)==($7|0);
      $159 = ((($126)) + 20|0);
      $$sink395 = $158 ? $156 : $159;
      HEAP32[$$sink395>>2] = $$3363;
      $160 = ($$3363|0)==(0|0);
      if ($160) {
       break;
      }
     }
     $161 = ((($$3363)) + 24|0);
     HEAP32[$161>>2] = $126;
     $162 = ((($7)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($163|0)==(0|0);
     if (!($164)) {
      $165 = ((($$3363)) + 16|0);
      HEAP32[$165>>2] = $163;
      $166 = ((($163)) + 24|0);
      HEAP32[$166>>2] = $$3363;
     }
     $167 = ((($162)) + 4|0);
     $168 = HEAP32[$167>>2]|0;
     $169 = ($168|0)==(0|0);
     if (!($169)) {
      $170 = ((($$3363)) + 20|0);
      HEAP32[$170>>2] = $168;
      $171 = ((($168)) + 24|0);
      HEAP32[$171>>2] = $$3363;
     }
    }
   }
  } while(0);
  $172 = $111 | 1;
  $173 = ((($$1)) + 4|0);
  HEAP32[$173>>2] = $172;
  $174 = (($87) + ($111)|0);
  HEAP32[$174>>2] = $111;
  $175 = HEAP32[(37172)>>2]|0;
  $176 = ($$1|0)==($175|0);
  if ($176) {
   HEAP32[(37160)>>2] = $111;
   return;
  } else {
   $$2 = $111;
  }
 } else {
  $177 = $90 & -2;
  HEAP32[$89>>2] = $177;
  $178 = $$1345 | 1;
  $179 = ((($$1)) + 4|0);
  HEAP32[$179>>2] = $178;
  $180 = (($87) + ($$1345)|0);
  HEAP32[$180>>2] = $$1345;
  $$2 = $$1345;
 }
 $181 = $$2 >>> 3;
 $182 = ($$2>>>0)<(256);
 if ($182) {
  $183 = $181 << 1;
  $184 = (37192 + ($183<<2)|0);
  $185 = HEAP32[9288]|0;
  $186 = 1 << $181;
  $187 = $185 & $186;
  $188 = ($187|0)==(0);
  if ($188) {
   $189 = $185 | $186;
   HEAP32[9288] = $189;
   $$pre = ((($184)) + 8|0);
   $$0366 = $184;$$pre$phiZ2D = $$pre;
  } else {
   $190 = ((($184)) + 8|0);
   $191 = HEAP32[$190>>2]|0;
   $$0366 = $191;$$pre$phiZ2D = $190;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $192 = ((($$0366)) + 12|0);
  HEAP32[$192>>2] = $$1;
  $193 = ((($$1)) + 8|0);
  HEAP32[$193>>2] = $$0366;
  $194 = ((($$1)) + 12|0);
  HEAP32[$194>>2] = $184;
  return;
 }
 $195 = $$2 >>> 8;
 $196 = ($195|0)==(0);
 if ($196) {
  $$0359 = 0;
 } else {
  $197 = ($$2>>>0)>(16777215);
  if ($197) {
   $$0359 = 31;
  } else {
   $198 = (($195) + 1048320)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 8;
   $201 = $195 << $200;
   $202 = (($201) + 520192)|0;
   $203 = $202 >>> 16;
   $204 = $203 & 4;
   $205 = $204 | $200;
   $206 = $201 << $204;
   $207 = (($206) + 245760)|0;
   $208 = $207 >>> 16;
   $209 = $208 & 2;
   $210 = $205 | $209;
   $211 = (14 - ($210))|0;
   $212 = $206 << $209;
   $213 = $212 >>> 15;
   $214 = (($211) + ($213))|0;
   $215 = $214 << 1;
   $216 = (($214) + 7)|0;
   $217 = $$2 >>> $216;
   $218 = $217 & 1;
   $219 = $218 | $215;
   $$0359 = $219;
  }
 }
 $220 = (37456 + ($$0359<<2)|0);
 $221 = ((($$1)) + 28|0);
 HEAP32[$221>>2] = $$0359;
 $222 = ((($$1)) + 16|0);
 $223 = ((($$1)) + 20|0);
 HEAP32[$223>>2] = 0;
 HEAP32[$222>>2] = 0;
 $224 = HEAP32[(37156)>>2]|0;
 $225 = 1 << $$0359;
 $226 = $224 & $225;
 $227 = ($226|0)==(0);
 L112: do {
  if ($227) {
   $228 = $224 | $225;
   HEAP32[(37156)>>2] = $228;
   HEAP32[$220>>2] = $$1;
   $229 = ((($$1)) + 24|0);
   HEAP32[$229>>2] = $220;
   $230 = ((($$1)) + 12|0);
   HEAP32[$230>>2] = $$1;
   $231 = ((($$1)) + 8|0);
   HEAP32[$231>>2] = $$1;
  } else {
   $232 = HEAP32[$220>>2]|0;
   $233 = ((($232)) + 4|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = $234 & -8;
   $236 = ($235|0)==($$2|0);
   L115: do {
    if ($236) {
     $$0347$lcssa = $232;
    } else {
     $237 = ($$0359|0)==(31);
     $238 = $$0359 >>> 1;
     $239 = (25 - ($238))|0;
     $240 = $237 ? 0 : $239;
     $241 = $$2 << $240;
     $$0346381 = $241;$$0347380 = $232;
     while(1) {
      $248 = $$0346381 >>> 31;
      $249 = (((($$0347380)) + 16|0) + ($248<<2)|0);
      $244 = HEAP32[$249>>2]|0;
      $250 = ($244|0)==(0|0);
      if ($250) {
       break;
      }
      $242 = $$0346381 << 1;
      $243 = ((($244)) + 4|0);
      $245 = HEAP32[$243>>2]|0;
      $246 = $245 & -8;
      $247 = ($246|0)==($$2|0);
      if ($247) {
       $$0347$lcssa = $244;
       break L115;
      } else {
       $$0346381 = $242;$$0347380 = $244;
      }
     }
     HEAP32[$249>>2] = $$1;
     $251 = ((($$1)) + 24|0);
     HEAP32[$251>>2] = $$0347380;
     $252 = ((($$1)) + 12|0);
     HEAP32[$252>>2] = $$1;
     $253 = ((($$1)) + 8|0);
     HEAP32[$253>>2] = $$1;
     break L112;
    }
   } while(0);
   $254 = ((($$0347$lcssa)) + 8|0);
   $255 = HEAP32[$254>>2]|0;
   $256 = ((($255)) + 12|0);
   HEAP32[$256>>2] = $$1;
   HEAP32[$254>>2] = $$1;
   $257 = ((($$1)) + 8|0);
   HEAP32[$257>>2] = $255;
   $258 = ((($$1)) + 12|0);
   HEAP32[$258>>2] = $$0347$lcssa;
   $259 = ((($$1)) + 24|0);
   HEAP32[$259>>2] = 0;
  }
 } while(0);
 $260 = HEAP32[(37184)>>2]|0;
 $261 = (($260) + -1)|0;
 HEAP32[(37184)>>2] = $261;
 $262 = ($261|0)==(0);
 if (!($262)) {
  return;
 }
 $$0194$in$i = (37608);
 while(1) {
  $$0194$i = HEAP32[$$0194$in$i>>2]|0;
  $263 = ($$0194$i|0)==(0|0);
  $264 = ((($$0194$i)) + 8|0);
  if ($263) {
   break;
  } else {
   $$0194$in$i = $264;
  }
 }
 HEAP32[(37184)>>2] = -1;
 return;
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 (_memcpy(($14|0),($0|0),($24|0))|0);
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1245 = 0, $$1245$be = 0, $$1245$ph = 0, $$1248 = 0, $$1248$be = 0, $$1248$ph = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $storemerge = 0, $storemerge1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = $3 & 3;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ($1>>>0)<(256);
  if ($8) {
   $$2 = 0;
   return ($$2|0);
  }
  $9 = (($1) + 4)|0;
  $10 = ($4>>>0)<($9>>>0);
  if (!($10)) {
   $11 = (($4) - ($1))|0;
   $12 = HEAP32[(37632)>>2]|0;
   $13 = $12 << 1;
   $14 = ($11>>>0)>($13>>>0);
   if (!($14)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $15 = ($4>>>0)<($1>>>0);
 if (!($15)) {
  $16 = (($4) - ($1))|0;
  $17 = ($16>>>0)>(15);
  if (!($17)) {
   $$2 = $0;
   return ($$2|0);
  }
  $18 = (($0) + ($1)|0);
  $19 = $3 & 1;
  $20 = $19 | $1;
  $21 = $20 | 2;
  HEAP32[$2>>2] = $21;
  $22 = ((($18)) + 4|0);
  $23 = $16 | 3;
  HEAP32[$22>>2] = $23;
  $24 = ((($5)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $25 | 1;
  HEAP32[$24>>2] = $26;
  _dispose_chunk($18,$16);
  $$2 = $0;
  return ($$2|0);
 }
 $27 = HEAP32[(37176)>>2]|0;
 $28 = ($27|0)==($5|0);
 if ($28) {
  $29 = HEAP32[(37164)>>2]|0;
  $30 = (($29) + ($4))|0;
  $31 = ($30>>>0)>($1>>>0);
  $32 = (($30) - ($1))|0;
  $33 = (($0) + ($1)|0);
  if (!($31)) {
   $$2 = 0;
   return ($$2|0);
  }
  $34 = $32 | 1;
  $35 = ((($33)) + 4|0);
  $36 = $3 & 1;
  $37 = $36 | $1;
  $38 = $37 | 2;
  HEAP32[$2>>2] = $38;
  HEAP32[$35>>2] = $34;
  HEAP32[(37176)>>2] = $33;
  HEAP32[(37164)>>2] = $32;
  $$2 = $0;
  return ($$2|0);
 }
 $39 = HEAP32[(37172)>>2]|0;
 $40 = ($39|0)==($5|0);
 if ($40) {
  $41 = HEAP32[(37160)>>2]|0;
  $42 = (($41) + ($4))|0;
  $43 = ($42>>>0)<($1>>>0);
  if ($43) {
   $$2 = 0;
   return ($$2|0);
  }
  $44 = (($42) - ($1))|0;
  $45 = ($44>>>0)>(15);
  if ($45) {
   $46 = (($0) + ($1)|0);
   $47 = (($0) + ($42)|0);
   $48 = $3 & 1;
   $49 = $48 | $1;
   $50 = $49 | 2;
   HEAP32[$2>>2] = $50;
   $51 = ((($46)) + 4|0);
   $52 = $44 | 1;
   HEAP32[$51>>2] = $52;
   HEAP32[$47>>2] = $44;
   $53 = ((($47)) + 4|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = $54 & -2;
   HEAP32[$53>>2] = $55;
   $storemerge = $46;$storemerge1 = $44;
  } else {
   $56 = $3 & 1;
   $57 = $56 | $42;
   $58 = $57 | 2;
   HEAP32[$2>>2] = $58;
   $59 = (($0) + ($42)|0);
   $60 = ((($59)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 | 1;
   HEAP32[$60>>2] = $62;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(37160)>>2] = $storemerge1;
  HEAP32[(37172)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $63 = ((($5)) + 4|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = $64 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$2 = 0;
  return ($$2|0);
 }
 $67 = $64 & -8;
 $68 = (($67) + ($4))|0;
 $69 = ($68>>>0)<($1>>>0);
 if ($69) {
  $$2 = 0;
  return ($$2|0);
 }
 $70 = (($68) - ($1))|0;
 $71 = $64 >>> 3;
 $72 = ($64>>>0)<(256);
 do {
  if ($72) {
   $73 = ((($5)) + 8|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($5)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ($76|0)==($74|0);
   if ($77) {
    $78 = 1 << $71;
    $79 = $78 ^ -1;
    $80 = HEAP32[9288]|0;
    $81 = $80 & $79;
    HEAP32[9288] = $81;
    break;
   } else {
    $82 = ((($74)) + 12|0);
    HEAP32[$82>>2] = $76;
    $83 = ((($76)) + 8|0);
    HEAP32[$83>>2] = $74;
    break;
   }
  } else {
   $84 = ((($5)) + 24|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($5)) + 12|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($87|0)==($5|0);
   do {
    if ($88) {
     $93 = ((($5)) + 16|0);
     $94 = ((($93)) + 4|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = HEAP32[$93>>2]|0;
      $98 = ($97|0)==(0|0);
      if ($98) {
       $$3 = 0;
       break;
      } else {
       $$1245$ph = $97;$$1248$ph = $93;
      }
     } else {
      $$1245$ph = $95;$$1248$ph = $94;
     }
     $$1245 = $$1245$ph;$$1248 = $$1248$ph;
     while(1) {
      $99 = ((($$1245)) + 20|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($100|0)==(0|0);
      if ($101) {
       $102 = ((($$1245)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($103|0)==(0|0);
       if ($104) {
        break;
       } else {
        $$1245$be = $103;$$1248$be = $102;
       }
      } else {
       $$1245$be = $100;$$1248$be = $99;
      }
      $$1245 = $$1245$be;$$1248 = $$1248$be;
     }
     HEAP32[$$1248>>2] = 0;
     $$3 = $$1245;
    } else {
     $89 = ((($5)) + 8|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($90)) + 12|0);
     HEAP32[$91>>2] = $87;
     $92 = ((($87)) + 8|0);
     HEAP32[$92>>2] = $90;
     $$3 = $87;
    }
   } while(0);
   $105 = ($85|0)==(0|0);
   if (!($105)) {
    $106 = ((($5)) + 28|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (37456 + ($107<<2)|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ($109|0)==($5|0);
    if ($110) {
     HEAP32[$108>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $111 = 1 << $107;
      $112 = $111 ^ -1;
      $113 = HEAP32[(37156)>>2]|0;
      $114 = $113 & $112;
      HEAP32[(37156)>>2] = $114;
      break;
     }
    } else {
     $115 = ((($85)) + 16|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==($5|0);
     $118 = ((($85)) + 20|0);
     $$sink = $117 ? $115 : $118;
     HEAP32[$$sink>>2] = $$3;
     $119 = ($$3|0)==(0|0);
     if ($119) {
      break;
     }
    }
    $120 = ((($$3)) + 24|0);
    HEAP32[$120>>2] = $85;
    $121 = ((($5)) + 16|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = ($122|0)==(0|0);
    if (!($123)) {
     $124 = ((($$3)) + 16|0);
     HEAP32[$124>>2] = $122;
     $125 = ((($122)) + 24|0);
     HEAP32[$125>>2] = $$3;
    }
    $126 = ((($121)) + 4|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($127|0)==(0|0);
    if (!($128)) {
     $129 = ((($$3)) + 20|0);
     HEAP32[$129>>2] = $127;
     $130 = ((($127)) + 24|0);
     HEAP32[$130>>2] = $$3;
    }
   }
  }
 } while(0);
 $131 = ($70>>>0)<(16);
 if ($131) {
  $132 = $3 & 1;
  $133 = $132 | $68;
  $134 = $133 | 2;
  HEAP32[$2>>2] = $134;
  $135 = (($0) + ($68)|0);
  $136 = ((($135)) + 4|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = $137 | 1;
  HEAP32[$136>>2] = $138;
  $$2 = $0;
  return ($$2|0);
 } else {
  $139 = (($0) + ($1)|0);
  $140 = $3 & 1;
  $141 = $140 | $1;
  $142 = $141 | 2;
  HEAP32[$2>>2] = $142;
  $143 = ((($139)) + 4|0);
  $144 = $70 | 3;
  HEAP32[$143>>2] = $144;
  $145 = (($0) + ($68)|0);
  $146 = ((($145)) + 4|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = $147 | 1;
  HEAP32[$146>>2] = $148;
  _dispose_chunk($139,$70);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03649 = 0, $$0365$lcssa = 0, $$03658 = 0, $$0376 = 0, $$0383 = 0, $$1 = 0, $$1363 = 0, $$1371 = 0, $$1371$be = 0, $$1371$ph = 0, $$1374 = 0, $$1374$be = 0, $$1374$ph = 0, $$1378 = 0, $$1378$be = 0, $$1378$ph = 0, $$1382 = 0, $$1382$be = 0, $$1382$ph = 0, $$2 = 0;
 var $$3 = 0, $$3380 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink24 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(37172)>>2]|0;
   $14 = ($13|0)==($11|0);
   if ($14) {
    $75 = ((($2)) + 4|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = $76 & 3;
    $78 = ($77|0)==(3);
    if (!($78)) {
     $$1 = $11;$$1363 = $12;
     break;
    }
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $76 & -2;
    HEAP32[(37160)>>2] = $12;
    HEAP32[$75>>2] = $81;
    HEAP32[$79>>2] = $80;
    HEAP32[$2>>2] = $12;
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($11)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = HEAP32[9288]|0;
     $25 = $24 & $23;
     HEAP32[9288] = $25;
     $$1 = $11;$$1363 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     HEAP32[$26>>2] = $20;
     $27 = ((($20)) + 8|0);
     HEAP32[$27>>2] = $18;
     $$1 = $11;$$1363 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($11)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = HEAP32[$37>>2]|0;
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1371$ph = $41;$$1374$ph = $37;
      }
     } else {
      $$1371$ph = $39;$$1374$ph = $38;
     }
     $$1371 = $$1371$ph;$$1374 = $$1374$ph;
     while(1) {
      $43 = ((($$1371)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ($44|0)==(0|0);
      if ($45) {
       $46 = ((($$1371)) + 16|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($47|0)==(0|0);
       if ($48) {
        break;
       } else {
        $$1371$be = $47;$$1374$be = $46;
       }
      } else {
       $$1371$be = $44;$$1374$be = $43;
      }
      $$1371 = $$1371$be;$$1374 = $$1374$be;
     }
     HEAP32[$$1374>>2] = 0;
     $$3 = $$1371;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 12|0);
     HEAP32[$35>>2] = $31;
     $36 = ((($31)) + 8|0);
     HEAP32[$36>>2] = $34;
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1363 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (37456 + ($51<<2)|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==($11|0);
    if ($54) {
     HEAP32[$52>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = HEAP32[(37156)>>2]|0;
      $58 = $57 & $56;
      HEAP32[(37156)>>2] = $58;
      $$1 = $11;$$1363 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ($60|0)==($11|0);
     $62 = ((($29)) + 20|0);
     $$sink = $61 ? $59 : $62;
     HEAP32[$$sink>>2] = $$3;
     $63 = ($$3|0)==(0|0);
     if ($63) {
      $$1 = $11;$$1363 = $12;
      break;
     }
    }
    $64 = ((($$3)) + 24|0);
    HEAP32[$64>>2] = $29;
    $65 = ((($11)) + 16|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = ($66|0)==(0|0);
    if (!($67)) {
     $68 = ((($$3)) + 16|0);
     HEAP32[$68>>2] = $66;
     $69 = ((($66)) + 24|0);
     HEAP32[$69>>2] = $$3;
    }
    $70 = ((($65)) + 4|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ($71|0)==(0|0);
    if ($72) {
     $$1 = $11;$$1363 = $12;
    } else {
     $73 = ((($$3)) + 20|0);
     HEAP32[$73>>2] = $71;
     $74 = ((($71)) + 24|0);
     HEAP32[$74>>2] = $$3;
     $$1 = $11;$$1363 = $12;
    }
   }
  } else {
   $$1 = $0;$$1363 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = HEAP32[(37176)>>2]|0;
  $87 = ($86|0)==($2|0);
  if ($87) {
   $88 = HEAP32[(37164)>>2]|0;
   $89 = (($88) + ($$1363))|0;
   HEAP32[(37164)>>2] = $89;
   HEAP32[(37176)>>2] = $$1;
   $90 = $89 | 1;
   $91 = ((($$1)) + 4|0);
   HEAP32[$91>>2] = $90;
   $92 = HEAP32[(37172)>>2]|0;
   $93 = ($$1|0)==($92|0);
   if (!($93)) {
    return;
   }
   HEAP32[(37172)>>2] = 0;
   HEAP32[(37160)>>2] = 0;
   return;
  }
  $94 = HEAP32[(37172)>>2]|0;
  $95 = ($94|0)==($2|0);
  if ($95) {
   $96 = HEAP32[(37160)>>2]|0;
   $97 = (($96) + ($$1363))|0;
   HEAP32[(37160)>>2] = $97;
   HEAP32[(37172)>>2] = $$1;
   $98 = $97 | 1;
   $99 = ((($$1)) + 4|0);
   HEAP32[$99>>2] = $98;
   $100 = (($$1) + ($97)|0);
   HEAP32[$100>>2] = $97;
   return;
  }
  $101 = $83 & -8;
  $102 = (($101) + ($$1363))|0;
  $103 = $83 >>> 3;
  $104 = ($83>>>0)<(256);
  do {
   if ($104) {
    $105 = ((($2)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($2)) + 12|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($108|0)==($106|0);
    if ($109) {
     $110 = 1 << $103;
     $111 = $110 ^ -1;
     $112 = HEAP32[9288]|0;
     $113 = $112 & $111;
     HEAP32[9288] = $113;
     break;
    } else {
     $114 = ((($106)) + 12|0);
     HEAP32[$114>>2] = $108;
     $115 = ((($108)) + 8|0);
     HEAP32[$115>>2] = $106;
     break;
    }
   } else {
    $116 = ((($2)) + 24|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ((($2)) + 12|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = ($119|0)==($2|0);
    do {
     if ($120) {
      $125 = ((($2)) + 16|0);
      $126 = ((($125)) + 4|0);
      $127 = HEAP32[$126>>2]|0;
      $128 = ($127|0)==(0|0);
      if ($128) {
       $129 = HEAP32[$125>>2]|0;
       $130 = ($129|0)==(0|0);
       if ($130) {
        $$3380 = 0;
        break;
       } else {
        $$1378$ph = $129;$$1382$ph = $125;
       }
      } else {
       $$1378$ph = $127;$$1382$ph = $126;
      }
      $$1378 = $$1378$ph;$$1382 = $$1382$ph;
      while(1) {
       $131 = ((($$1378)) + 20|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = ($132|0)==(0|0);
       if ($133) {
        $134 = ((($$1378)) + 16|0);
        $135 = HEAP32[$134>>2]|0;
        $136 = ($135|0)==(0|0);
        if ($136) {
         break;
        } else {
         $$1378$be = $135;$$1382$be = $134;
        }
       } else {
        $$1378$be = $132;$$1382$be = $131;
       }
       $$1378 = $$1378$be;$$1382 = $$1382$be;
      }
      HEAP32[$$1382>>2] = 0;
      $$3380 = $$1378;
     } else {
      $121 = ((($2)) + 8|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = ((($122)) + 12|0);
      HEAP32[$123>>2] = $119;
      $124 = ((($119)) + 8|0);
      HEAP32[$124>>2] = $122;
      $$3380 = $119;
     }
    } while(0);
    $137 = ($117|0)==(0|0);
    if (!($137)) {
     $138 = ((($2)) + 28|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (37456 + ($139<<2)|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($141|0)==($2|0);
     if ($142) {
      HEAP32[$140>>2] = $$3380;
      $cond4 = ($$3380|0)==(0|0);
      if ($cond4) {
       $143 = 1 << $139;
       $144 = $143 ^ -1;
       $145 = HEAP32[(37156)>>2]|0;
       $146 = $145 & $144;
       HEAP32[(37156)>>2] = $146;
       break;
      }
     } else {
      $147 = ((($117)) + 16|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ($148|0)==($2|0);
      $150 = ((($117)) + 20|0);
      $$sink24 = $149 ? $147 : $150;
      HEAP32[$$sink24>>2] = $$3380;
      $151 = ($$3380|0)==(0|0);
      if ($151) {
       break;
      }
     }
     $152 = ((($$3380)) + 24|0);
     HEAP32[$152>>2] = $117;
     $153 = ((($2)) + 16|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ($154|0)==(0|0);
     if (!($155)) {
      $156 = ((($$3380)) + 16|0);
      HEAP32[$156>>2] = $154;
      $157 = ((($154)) + 24|0);
      HEAP32[$157>>2] = $$3380;
     }
     $158 = ((($153)) + 4|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==(0|0);
     if (!($160)) {
      $161 = ((($$3380)) + 20|0);
      HEAP32[$161>>2] = $159;
      $162 = ((($159)) + 24|0);
      HEAP32[$162>>2] = $$3380;
     }
    }
   }
  } while(0);
  $163 = $102 | 1;
  $164 = ((($$1)) + 4|0);
  HEAP32[$164>>2] = $163;
  $165 = (($$1) + ($102)|0);
  HEAP32[$165>>2] = $102;
  $166 = HEAP32[(37172)>>2]|0;
  $167 = ($$1|0)==($166|0);
  if ($167) {
   HEAP32[(37160)>>2] = $102;
   return;
  } else {
   $$2 = $102;
  }
 } else {
  $168 = $83 & -2;
  HEAP32[$82>>2] = $168;
  $169 = $$1363 | 1;
  $170 = ((($$1)) + 4|0);
  HEAP32[$170>>2] = $169;
  $171 = (($$1) + ($$1363)|0);
  HEAP32[$171>>2] = $$1363;
  $$2 = $$1363;
 }
 $172 = $$2 >>> 3;
 $173 = ($$2>>>0)<(256);
 if ($173) {
  $174 = $172 << 1;
  $175 = (37192 + ($174<<2)|0);
  $176 = HEAP32[9288]|0;
  $177 = 1 << $172;
  $178 = $176 & $177;
  $179 = ($178|0)==(0);
  if ($179) {
   $180 = $176 | $177;
   HEAP32[9288] = $180;
   $$pre = ((($175)) + 8|0);
   $$0383 = $175;$$pre$phiZ2D = $$pre;
  } else {
   $181 = ((($175)) + 8|0);
   $182 = HEAP32[$181>>2]|0;
   $$0383 = $182;$$pre$phiZ2D = $181;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $183 = ((($$0383)) + 12|0);
  HEAP32[$183>>2] = $$1;
  $184 = ((($$1)) + 8|0);
  HEAP32[$184>>2] = $$0383;
  $185 = ((($$1)) + 12|0);
  HEAP32[$185>>2] = $175;
  return;
 }
 $186 = $$2 >>> 8;
 $187 = ($186|0)==(0);
 if ($187) {
  $$0376 = 0;
 } else {
  $188 = ($$2>>>0)>(16777215);
  if ($188) {
   $$0376 = 31;
  } else {
   $189 = (($186) + 1048320)|0;
   $190 = $189 >>> 16;
   $191 = $190 & 8;
   $192 = $186 << $191;
   $193 = (($192) + 520192)|0;
   $194 = $193 >>> 16;
   $195 = $194 & 4;
   $196 = $195 | $191;
   $197 = $192 << $195;
   $198 = (($197) + 245760)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 2;
   $201 = $196 | $200;
   $202 = (14 - ($201))|0;
   $203 = $197 << $200;
   $204 = $203 >>> 15;
   $205 = (($202) + ($204))|0;
   $206 = $205 << 1;
   $207 = (($205) + 7)|0;
   $208 = $$2 >>> $207;
   $209 = $208 & 1;
   $210 = $209 | $206;
   $$0376 = $210;
  }
 }
 $211 = (37456 + ($$0376<<2)|0);
 $212 = ((($$1)) + 28|0);
 HEAP32[$212>>2] = $$0376;
 $213 = ((($$1)) + 16|0);
 $214 = ((($$1)) + 20|0);
 HEAP32[$214>>2] = 0;
 HEAP32[$213>>2] = 0;
 $215 = HEAP32[(37156)>>2]|0;
 $216 = 1 << $$0376;
 $217 = $215 & $216;
 $218 = ($217|0)==(0);
 if ($218) {
  $219 = $215 | $216;
  HEAP32[(37156)>>2] = $219;
  HEAP32[$211>>2] = $$1;
  $220 = ((($$1)) + 24|0);
  HEAP32[$220>>2] = $211;
  $221 = ((($$1)) + 12|0);
  HEAP32[$221>>2] = $$1;
  $222 = ((($$1)) + 8|0);
  HEAP32[$222>>2] = $$1;
  return;
 }
 $223 = HEAP32[$211>>2]|0;
 $224 = ((($223)) + 4|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = $225 & -8;
 $227 = ($226|0)==($$2|0);
 L104: do {
  if ($227) {
   $$0365$lcssa = $223;
  } else {
   $228 = ($$0376|0)==(31);
   $229 = $$0376 >>> 1;
   $230 = (25 - ($229))|0;
   $231 = $228 ? 0 : $230;
   $232 = $$2 << $231;
   $$03649 = $232;$$03658 = $223;
   while(1) {
    $239 = $$03649 >>> 31;
    $240 = (((($$03658)) + 16|0) + ($239<<2)|0);
    $235 = HEAP32[$240>>2]|0;
    $241 = ($235|0)==(0|0);
    if ($241) {
     break;
    }
    $233 = $$03649 << 1;
    $234 = ((($235)) + 4|0);
    $236 = HEAP32[$234>>2]|0;
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     $$0365$lcssa = $235;
     break L104;
    } else {
     $$03649 = $233;$$03658 = $235;
    }
   }
   HEAP32[$240>>2] = $$1;
   $242 = ((($$1)) + 24|0);
   HEAP32[$242>>2] = $$03658;
   $243 = ((($$1)) + 12|0);
   HEAP32[$243>>2] = $$1;
   $244 = ((($$1)) + 8|0);
   HEAP32[$244>>2] = $$1;
   return;
  }
 } while(0);
 $245 = ((($$0365$lcssa)) + 8|0);
 $246 = HEAP32[$245>>2]|0;
 $247 = ((($246)) + 12|0);
 HEAP32[$247>>2] = $$1;
 HEAP32[$245>>2] = $$1;
 $248 = ((($$1)) + 8|0);
 HEAP32[$248>>2] = $246;
 $249 = ((($$1)) + 12|0);
 HEAP32[$249>>2] = $$0365$lcssa;
 $250 = ((($$1)) + 24|0);
 HEAP32[$250>>2] = 0;
 return;
}
function __ZL28demangling_terminate_handlerv() {
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $vararg_buffer10 = sp + 1056|0;
 $vararg_buffer7 = sp + 1048|0;
 $vararg_buffer3 = sp + 1040|0;
 $vararg_buffer = sp + 1024|0;
 $0 = sp + 1068|0;
 $1 = sp + 1064|0;
 $2 = sp;
 $3 = sp + 1060|0;
 $4 = (___cxa_get_globals_fast()|0);
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = HEAP32[$4>>2]|0;
  $7 = ($6|0)==(0|0);
  if (!($7)) {
   $8 = ((($6)) + 80|0);
   $9 = ((($6)) + 48|0);
   $10 = (__ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception($9)|0);
   if (!($10)) {
    HEAP32[$vararg_buffer7>>2] = 25505;
    _abort_message(25455,$vararg_buffer7);
    // unreachable;
   }
   $11 = (__ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception($9)|0);
   $12 = (getTempRet0() | 0);
   $13 = ($11|0)==(1126902529);
   $14 = ($12|0)==(1129074247);
   $15 = $13 & $14;
   if ($15) {
    $16 = ((($6)) + 44|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = $17;
   } else {
    $18 = $8;
   }
   HEAP32[$0>>2] = $18;
   $19 = HEAP32[$6>>2]|0;
   HEAP32[$3>>2] = 1024;
   $20 = ((($19)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (___cxa_demangle($21,$2,$3,$1)|0);
   $23 = HEAP32[$1>>2]|0;
   $24 = ($23|0)==(0);
   if ($24) {
    $$0 = $22;
   } else {
    $25 = HEAP32[$20>>2]|0;
    $$0 = $25;
   }
   $26 = HEAP32[2156]|0;
   $27 = ((($26)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 1023](8624,$19,$0)|0);
   if ($29) {
    $30 = HEAP32[$0>>2]|0;
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($31)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 1023]($30)|0);
    HEAP32[$vararg_buffer>>2] = 25505;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $$0;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $34;
    _abort_message(25369,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = 25505;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $$0;
    _abort_message(25414,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(25493,$vararg_buffer10);
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (37648|0);
}
function __ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception($0)|0);
 $2 = (getTempRet0() | 0);
 $3 = $1 & -256;
 $4 = ($3|0)==(1126902528);
 $5 = ($2|0)==(1129074247);
 $6 = $4 & $5;
 return ($6|0);
}
function __ZN10__cxxabiv119__getExceptionClassEPK17_Unwind_Exception($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + 4)|0;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 setTempRet0(($6) | 0);
 return ($3|0);
}
function ___cxa_demangle($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$027 = 0, $$028 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4496|0);
 $4 = sp;
 $5 = sp + 4472|0;
 $6 = ($0|0)==(0|0);
 if ($6) {
  label = 3;
 } else {
  $7 = ($1|0)!=(0|0);
  $8 = ($2|0)==(0|0);
  $or$cond = $7 & $8;
  if ($or$cond) {
   label = 3;
  } else {
   $10 = (_strlen($0)|0);
   $11 = (($0) + ($10)|0);
   __ZN12_GLOBAL__N_116itanium_demangle14ManglingParserINS_16DefaultAllocatorEECI2NS0_22AbstractManglingParserIS3_S2_EEEPKcS6_($4,$0,$11);
   __ZN12_GLOBAL__N_112OutputStreamC2Ev($5);
   $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E5parseEv($4)|0);
   $13 = ($12|0)==(0|0);
   if ($13) {
    $$027 = $1;$$028 = -2;
   } else {
    $14 = (__ZN12_GLOBAL__N_122initializeOutputStreamEPcPmRNS_12OutputStreamEm($1,$2,$5)|0);
    if ($14) {
     __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($12,$5);
     __ZN12_GLOBAL__N_112OutputStreampLEc($5,0);
     if (!($8)) {
      $15 = (__ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($5)|0);
      HEAP32[$2>>2] = $15;
     }
     $16 = (__ZN12_GLOBAL__N_112OutputStream9getBufferEv($5)|0);
     $$027 = $16;$$028 = 0;
    } else {
     $$027 = $1;$$028 = -1;
    }
   }
   $17 = ($3|0)==(0|0);
   if (!($17)) {
    HEAP32[$3>>2] = $$028;
   }
   $18 = ($$028|0)==(0);
   $19 = $18 ? $$027 : 0;
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_ED2Ev($4);
   $$0 = $19;
  }
 }
 if ((label|0) == 3) {
  $9 = ($3|0)==(0|0);
  if ($9) {
   $$0 = 0;
  } else {
   HEAP32[$3>>2] = -3;
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _abort_message($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[2712]|0;
 (_vfprintf($2,$0,$1)|0);
 (_fputc(10,$2)|0);
 _abort();
 // unreachable;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp;
 $4 = (__ZL8is_equalPKSt9type_infoS1_b($0,$1,0)|0);
 if ($4) {
  $$2 = 1;
 } else {
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$2 = 0;
  } else {
   $6 = (___dynamic_cast($1,8648,8632,0)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    $$2 = 0;
   } else {
    HEAP32[$3>>2] = $6;
    $8 = ((($3)) + 4|0);
    HEAP32[$8>>2] = 0;
    $9 = ((($3)) + 8|0);
    HEAP32[$9>>2] = $0;
    $10 = ((($3)) + 12|0);
    HEAP32[$10>>2] = -1;
    $11 = ((($3)) + 16|0);
    $12 = ((($3)) + 24|0);
    $13 = ((($3)) + 48|0);
    dest=$11; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$11+36>>1]=0|0;HEAP8[$11+38>>0]=0|0;
    HEAP32[$13>>2] = 1;
    $14 = HEAP32[$6>>2]|0;
    $15 = ((($14)) + 28|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = HEAP32[$2>>2]|0;
    FUNCTION_TABLE_viiii[$16 & 1023]($6,$3,$17,1);
    $18 = HEAP32[$12>>2]|0;
    $19 = ($18|0)==(1);
    if ($19) {
     $20 = HEAP32[$11>>2]|0;
     HEAP32[$2>>2] = $20;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$2 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZL8is_equalPKSt9type_infoS1_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZL8is_equalPKSt9type_infoS1_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZL8is_equalPKSt9type_infoS1_b($0,$8,$4)|0);
   if ($9) {
    $10 = ((($1)) + 16|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==($2|0);
    if (!($12)) {
     $13 = ((($1)) + 20|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = ($14|0)==($2|0);
     if (!($15)) {
      $18 = ((($1)) + 32|0);
      HEAP32[$18>>2] = $3;
      HEAP32[$13>>2] = $2;
      $19 = ((($1)) + 40|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (($20) + 1)|0;
      HEAP32[$19>>2] = $21;
      $22 = ((($1)) + 36|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($23|0)==(1);
      if ($24) {
       $25 = ((($1)) + 24|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = ($26|0)==(2);
       if ($27) {
        $28 = ((($1)) + 54|0);
        HEAP8[$28>>0] = 1;
       }
      }
      $29 = ((($1)) + 44|0);
      HEAP32[$29>>2] = 4;
      break;
     }
    }
    $16 = ($3|0)==(1);
    if ($16) {
     $17 = ((($1)) + 32|0);
     HEAP32[$17>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZL8is_equalPKSt9type_infoS1_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 }
 return;
}
function __ZL8is_equalPKSt9type_infoS1_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if ($2) {
  $4 = ((($0)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($1)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (_strcmp($5,$7)|0);
  $9 = ($8|0)==(0);
  $$0 = $9;
 } else {
  $3 = ($0|0)==($1|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   HEAP32[$4>>2] = $2;
   $7 = ((($1)) + 24|0);
   HEAP32[$7>>2] = $3;
   $8 = ((($1)) + 36|0);
   HEAP32[$8>>2] = 1;
  } else {
   $9 = ($5|0)==($2|0);
   if (!($9)) {
    $13 = ((($1)) + 36|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (($14) + 1)|0;
    HEAP32[$13>>2] = $15;
    $16 = ((($1)) + 24|0);
    HEAP32[$16>>2] = 2;
    $17 = ((($1)) + 54|0);
    HEAP8[$17>>0] = 1;
    break;
   }
   $10 = ((($1)) + 24|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(2);
   if ($12) {
    HEAP32[$10>>2] = $3;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==($2|0);
 if ($6) {
  $7 = ((($1)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(1);
  if (!($9)) {
   HEAP32[$7>>2] = $3;
  }
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 53|0);
 HEAP8[$5>>0] = 1;
 $6 = ((($1)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($3|0);
 do {
  if ($8) {
   $9 = ((($1)) + 52|0);
   HEAP8[$9>>0] = 1;
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(0|0);
   if ($12) {
    HEAP32[$10>>2] = $2;
    $13 = ((($1)) + 24|0);
    HEAP32[$13>>2] = $4;
    $14 = ((($1)) + 36|0);
    HEAP32[$14>>2] = 1;
    $15 = ((($1)) + 48|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==(1);
    $18 = ($4|0)==(1);
    $or$cond = $18 & $17;
    if (!($or$cond)) {
     break;
    }
    $19 = ((($1)) + 54|0);
    HEAP8[$19>>0] = 1;
    break;
   }
   $20 = ($11|0)==($2|0);
   if (!($20)) {
    $30 = ((($1)) + 36|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (($31) + 1)|0;
    HEAP32[$30>>2] = $32;
    $33 = ((($1)) + 54|0);
    HEAP8[$33>>0] = 1;
    break;
   }
   $21 = ((($1)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($22|0)==(2);
   if ($23) {
    HEAP32[$21>>2] = $4;
    $27 = $4;
   } else {
    $27 = $22;
   }
   $24 = ((($1)) + 48|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(1);
   $28 = ($27|0)==(1);
   $or$cond22 = $26 & $28;
   if ($or$cond22) {
    $29 = ((($1)) + 54|0);
    HEAP8[$29>>0] = 1;
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond28 = 0, $or$cond30 = 0, $or$cond32 = 0, $spec$select = 0, $spec$select33 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + -8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($0) + ($7)|0);
 $9 = ((($5)) + -4|0);
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $2;
 $11 = ((($4)) + 4|0);
 HEAP32[$11>>2] = $0;
 $12 = ((($4)) + 8|0);
 HEAP32[$12>>2] = $1;
 $13 = ((($4)) + 12|0);
 HEAP32[$13>>2] = $3;
 $14 = ((($4)) + 16|0);
 $15 = ((($4)) + 20|0);
 $16 = ((($4)) + 24|0);
 $17 = ((($4)) + 28|0);
 $18 = ((($4)) + 32|0);
 $19 = ((($4)) + 40|0);
 dest=$14; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$14+36>>1]=0|0;HEAP8[$14+38>>0]=0|0;
 $20 = (__ZL8is_equalPKSt9type_infoS1_b($10,$2,0)|0);
 L1: do {
  if ($20) {
   $21 = ((($4)) + 48|0);
   HEAP32[$21>>2] = 1;
   $22 = HEAP32[$10>>2]|0;
   $23 = ((($22)) + 20|0);
   $24 = HEAP32[$23>>2]|0;
   FUNCTION_TABLE_viiiiii[$24 & 1023]($10,$4,$8,$8,1,0);
   $25 = HEAP32[$16>>2]|0;
   $26 = ($25|0)==(1);
   $spec$select = $26 ? $8 : 0;
   $$0 = $spec$select;
  } else {
   $27 = ((($4)) + 36|0);
   $28 = HEAP32[$10>>2]|0;
   $29 = ((($28)) + 24|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_viiiii[$30 & 1023]($10,$4,$8,1,0);
   $31 = HEAP32[$27>>2]|0;
   switch ($31|0) {
   case 0:  {
    $32 = HEAP32[$19>>2]|0;
    $33 = ($32|0)==(1);
    $34 = HEAP32[$17>>2]|0;
    $35 = ($34|0)==(1);
    $or$cond = $33 & $35;
    $36 = HEAP32[$18>>2]|0;
    $37 = ($36|0)==(1);
    $or$cond28 = $or$cond & $37;
    $38 = HEAP32[$15>>2]|0;
    $spec$select33 = $or$cond28 ? $38 : 0;
    $$0 = $spec$select33;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $$0 = 0;
    break L1;
   }
   }
   $39 = HEAP32[$16>>2]|0;
   $40 = ($39|0)==(1);
   if (!($40)) {
    $41 = HEAP32[$19>>2]|0;
    $42 = ($41|0)==(0);
    $43 = HEAP32[$17>>2]|0;
    $44 = ($43|0)==(1);
    $or$cond30 = $42 & $44;
    $45 = HEAP32[$18>>2]|0;
    $46 = ($45|0)==(1);
    $or$cond32 = $or$cond30 & $46;
    if (!($or$cond32)) {
     $$0 = 0;
     break;
    }
   }
   $47 = HEAP32[$14>>2]|0;
   $$0 = $47;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZL8is_equalPKSt9type_infoS1_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_viiiiii[$13 & 1023]($10,$1,$2,$3,$4,$5);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZL8is_equalPKSt9type_infoS1_b($0,$6,$4)|0);
 L1: do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZL8is_equalPKSt9type_infoS1_b($0,$8,$4)|0);
   if (!($9)) {
    $43 = ((($0)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$44>>2]|0;
    $46 = ((($45)) + 24|0);
    $47 = HEAP32[$46>>2]|0;
    FUNCTION_TABLE_viiiii[$47 & 1023]($44,$1,$2,$3,$4);
    break;
   }
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==($2|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==($2|0);
    if (!($15)) {
     $18 = ((($1)) + 32|0);
     HEAP32[$18>>2] = $3;
     $19 = ((($1)) + 44|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(4);
     do {
      if (!($21)) {
       $22 = ((($1)) + 52|0);
       HEAP8[$22>>0] = 0;
       $23 = ((($1)) + 53|0);
       HEAP8[$23>>0] = 0;
       $24 = ((($0)) + 8|0);
       $25 = HEAP32[$24>>2]|0;
       $26 = HEAP32[$25>>2]|0;
       $27 = ((($26)) + 20|0);
       $28 = HEAP32[$27>>2]|0;
       FUNCTION_TABLE_viiiiii[$28 & 1023]($25,$1,$2,$2,1,$4);
       $29 = HEAP8[$23>>0]|0;
       $30 = ($29<<24>>24)==(0);
       if ($30) {
        HEAP32[$19>>2] = 4;
        break;
       } else {
        $31 = HEAP8[$22>>0]|0;
        $32 = ($31<<24>>24)==(0);
        HEAP32[$19>>2] = 3;
        if ($32) {
         break;
        } else {
         break L1;
        }
       }
      }
     } while(0);
     HEAP32[$13>>2] = $2;
     $33 = ((($1)) + 40|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = (($34) + 1)|0;
     HEAP32[$33>>2] = $35;
     $36 = ((($1)) + 36|0);
     $37 = HEAP32[$36>>2]|0;
     $38 = ($37|0)==(1);
     if (!($38)) {
      break;
     }
     $39 = ((($1)) + 24|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==(2);
     if (!($41)) {
      break;
     }
     $42 = ((($1)) + 54|0);
     HEAP8[$42>>0] = 1;
     break;
    }
   }
   $16 = ($3|0)==(1);
   if ($16) {
    $17 = ((($1)) + 32|0);
    HEAP32[$17>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZL8is_equalPKSt9type_infoS1_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 } else {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 28|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viiii[$11 & 1023]($8,$1,$2,$3);
 }
 return;
}
function __ZNSt9type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14ManglingParserINS_16DefaultAllocatorEECI2NS0_22AbstractManglingParserIS3_S2_EEEPKcS6_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_EC2EPKcS7_($0,$1,$2);
 return;
}
function __ZN12_GLOBAL__N_112OutputStreamC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 HEAP32[$1>>2] = -1;
 $2 = ((($0)) + 16|0);
 HEAP32[$2>>2] = -1;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E5parseEv($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $$2 = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy2 = sp + 72|0;
 $$byval_copy1 = sp + 64|0;
 $$byval_copy = sp + 56|0;
 $1 = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1,25684);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
 $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 do {
  if ($8) {
   $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($9)|0);
   HEAP32[$2>>2] = $10;
   $11 = ($10|0)==(0|0);
   if ($11) {
    $$0 = 0;
   } else {
    $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $13 = ($12<<24>>24)==(46);
    if ($13) {
     $14 = HEAP32[$0>>2]|0;
     $15 = ((($0)) + 4|0);
     $16 = HEAP32[$15>>2]|0;
     __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($3,$14,$16);
     $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9DotSuffixEJRPNS0_4NodeENS_10StringViewEEEES9_DpOT0_($0,$2,$3)|0);
     HEAP32[$2>>2] = $17;
     $18 = HEAP32[$15>>2]|0;
     HEAP32[$0>>2] = $18;
     $21 = $17;
    } else {
     $21 = $10;
    }
    $19 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
    $20 = ($19|0)==(0);
    $spec$select = $20 ? $21 : 0;
    $$0 = $spec$select;
   }
   $$4 = $$0;
  } else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4,25687);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
   $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
   if (!($22)) {
    $37 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $38 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($37)|0);
    $39 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
    $40 = ($39|0)==(0);
    $$ = $40 ? $38 : 0;
    $$4 = $$;
    break;
   }
   $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($23)|0);
   HEAP32[$5>>2] = $24;
   $25 = ($24|0)==(0|0);
   if ($25) {
    $$2 = 0;
   } else {
    __ZN12_GLOBAL__N_110StringViewC2EPKc($6,25692);
    ;HEAP32[$$byval_copy2>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$6+4>>2]|0;
    $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
    if ($26) {
     $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($7,$0,0);
     $28 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($7)|0);
     $29 = $27 & $28;
     if ($29) {
      $$2 = 0;
     } else {
      $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
      $31 = ($30<<24>>24)==(46);
      if ($31) {
       $32 = ((($0)) + 4|0);
       $33 = HEAP32[$32>>2]|0;
       HEAP32[$0>>2] = $33;
      }
      $34 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
      $35 = ($34|0)==(0);
      if ($35) {
       $36 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA34_KcRPNS0_4NodeEEEESC_DpOT0_($0,25706,$5)|0);
       $$2 = $36;
      } else {
       $$2 = 0;
      }
     }
    } else {
     $$2 = 0;
    }
   }
   $$4 = $$2;
  }
 } while(0);
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_ED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 368|0);
 __ZN12_GLOBAL__N_116DefaultAllocatorD2Ev($1);
 $2 = ((($0)) + 332|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EED2Ev($2);
 $3 = ((($0)) + 288|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EED2Ev($3);
 $4 = ((($0)) + 148|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EED2Ev($4);
 $5 = ((($0)) + 8|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EED2Ev($5);
 return;
}
function __ZN12_GLOBAL__N_122initializeOutputStreamEPcPmRNS_12OutputStreamEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$010 = 0, $$09 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 if ($3) {
  $4 = (_malloc(1024)|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$09 = 0;
  } else {
   $$0 = 1024;$$010 = $4;
   label = 4;
  }
 } else {
  $6 = HEAP32[$1>>2]|0;
  $$0 = $6;$$010 = $0;
  label = 4;
 }
 if ((label|0) == 4) {
  __ZN12_GLOBAL__N_112OutputStream5resetEPcm($2,$$010,$$0);
  $$09 = 1;
 }
 return ($$09|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vii[$4 & 1023]($0,$1);
 $5 = ((($0)) + 5|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)==(1);
 if (!($7)) {
  $8 = HEAP32[$0>>2]|0;
  $9 = ((($8)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 1023]($0,$1);
 }
 return;
}
function __ZN12_GLOBAL__N_112OutputStreampLEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_112OutputStream4growEm($0,1);
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 $6 = (($2) + ($4)|0);
 HEAP8[$6>>0] = $1;
 return;
}
function __ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZN12_GLOBAL__N_112OutputStream9getBufferEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN12_GLOBAL__N_112OutputStream4growEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1))|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 if (!($7)) {
  $8 = $6 << 1;
  $9 = ($8>>>0)<($4>>>0);
  $spec$store$select = $9 ? $4 : $8;
  HEAP32[$5>>2] = $spec$store$select;
  $10 = HEAP32[$0>>2]|0;
  $11 = (_realloc($10,$spec$store$select)|0);
  HEAP32[$0>>2] = $11;
  $12 = ($11|0)==(0|0);
  if ($12) {
   __ZSt9terminatev();
   // unreachable;
  }
 }
 return;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_get_globals_fast()|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   $4 = ((($2)) + 48|0);
   $5 = (__ZN10__cxxabiv121__isOurExceptionClassEPK17_Unwind_Exception($4)|0);
   if ($5) {
    $6 = ((($2)) + 12|0);
    $7 = HEAP32[$6>>2]|0;
    __ZSt11__terminatePFvvE($7);
    // unreachable;
   }
  }
 }
 $8 = (__ZSt13get_terminatev()|0);
 __ZSt11__terminatePFvvE($8);
 // unreachable;
}
function __ZSt11__terminatePFvvE($0) {
 $0 = $0|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 FUNCTION_TABLE_v[$0 & 1023]();
 _abort_message(25644,$vararg_buffer);
 // unreachable;
}
function __ZSt13get_terminatev() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (663|0);
}
function __ZN12_GLOBAL__N_112OutputStream5resetEPcm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = 0;
 HEAP32[$0>>2] = $1;
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocatorD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_120BumpPointerAllocatorD2Ev($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE8isInlineEv($0)|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  _free($2);
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($0)|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  _free($2);
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8isInlineEv($0)|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  _free($2);
 }
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8isInlineEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 12|0);
 $3 = ($1|0)==($2|0);
 return ($3|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 12|0);
 $3 = ($1|0)==($2|0);
 return ($3|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE8isInlineEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 12|0);
 $3 = ($1|0)==($2|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_120BumpPointerAllocatorD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_120BumpPointerAllocator5resetEv($0);
 return;
}
function __ZN12_GLOBAL__N_120BumpPointerAllocator5resetEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4096|0);
 while(1) {
  $2 = HEAP32[$1>>2]|0;
  $3 = ($2|0)==(0|0);
  if ($3) {
   break;
  }
  $4 = HEAP32[$2>>2]|0;
  HEAP32[$1>>2] = $4;
  $5 = ($0|0)==($2|0);
  if (!($5)) {
   _free($2);
  }
 }
 HEAP32[$0>>2] = 0;
 $6 = ((($0)) + 4|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$1>>2] = $0;
 return;
}
function __ZN12_GLOBAL__N_110StringViewC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 $3 = (_strlen($1)|0);
 $4 = (($1) + ($3)|0);
 HEAP32[$2>>2] = $4;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($2,$4,$6);
 $7 = $1;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 $17 = (__ZNK12_GLOBAL__N_110StringView10startsWithES0_($2,$tmpcast$byval_copy)|0);
 if ($17) {
  $18 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($1)|0);
  $19 = HEAP32[$0>>2]|0;
  $20 = (($19) + ($18)|0);
  HEAP32[$0>>2] = $20;
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($0) {
 $0 = $0|0;
 var $$10 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy = sp + 88|0;
 $1 = sp + 80|0;
 $2 = sp + 64|0;
 $3 = sp + 60|0;
 $4 = sp + 56|0;
 $5 = sp + 48|0;
 $6 = sp + 40|0;
 $7 = sp + 32|0;
 $8 = sp + 24|0;
 $9 = sp + 16|0;
 $10 = sp + 8|0;
 $11 = sp;
 $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 switch ($12<<24>>24) {
 case 84: case 71:  {
  $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseSpecialNameEv($13)|0);
  $$10 = $14;
  break;
 }
 default: {
  HEAP32[$1>>2] = $0;
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9NameStateC2EPS5_($2,$0);
  $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($15,$2)|0);
  HEAP32[$3>>2] = $16;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$9 = 0;
  } else {
   $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E26resolveForwardTemplateRefsERNS5_9NameStateE($0,$2)|0);
   if ($18) {
    $$9 = 0;
   } else {
    $19 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEvENKUlvE_clEv($1)|0);
    if ($19) {
     $$9 = $16;
    } else {
     HEAP32[$4>>2] = 0;
     __ZN12_GLOBAL__N_110StringViewC2EPKc($5,31039);
     ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
     $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
     do {
      if ($20) {
       $21 = ((($0)) + 8|0);
       $22 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($21)|0);
       while(1) {
        $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
        if ($23) {
         label = 11;
         break;
        }
        $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($15)|0);
        HEAP32[$6>>2] = $24;
        $25 = ($24|0)==(0|0);
        if ($25) {
         label = 12;
         break;
        }
        __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($21,$6);
       }
       if ((label|0) == 11) {
        __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($7,$0,$22);
        $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12EnableIfAttrEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$7)|0);
        HEAP32[$4>>2] = $26;
        label = 13;
        break;
       }
       else if ((label|0) == 12) {
        $$8 = 0;
        break;
       }
      } else {
       label = 13;
      }
     } while(0);
     if ((label|0) == 13) {
      HEAP32[$8>>2] = 0;
      $27 = HEAP8[$2>>0]|0;
      $28 = ($27<<24>>24)==(0);
      if ($28) {
       $29 = ((($2)) + 1|0);
       $30 = HEAP8[$29>>0]|0;
       $31 = ($30<<24>>24)==(0);
       if ($31) {
        label = 16;
       } else {
        $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($15)|0);
        HEAP32[$8>>2] = $32;
        $33 = ($32|0)==(0|0);
        if ($33) {
         $$7 = 0;
        } else {
         label = 16;
        }
       }
      } else {
       label = 16;
      }
      do {
       if ((label|0) == 16) {
        $34 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,118)|0);
        if ($34) {
         __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($9);
         $35 = ((($2)) + 4|0);
         $36 = ((($2)) + 8|0);
         $37 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FunctionEncodingEJRPNS0_4NodeESA_NS0_9NodeArrayESA_RNS0_10QualifiersERNS0_15FunctionRefQualEEEES9_DpOT0_($0,$8,$3,$9,$4,$35,$36)|0);
         $$7 = $37;
         break;
        }
        $38 = ((($0)) + 8|0);
        $39 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($38)|0);
        while(1) {
         $40 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($15)|0);
         HEAP32[$10>>2] = $40;
         $41 = ($40|0)==(0|0);
         if ($41) {
          label = 21;
          break;
         }
         __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($38,$10);
         $42 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEvENKUlvE_clEv($1)|0);
         if ($42) {
          label = 22;
          break;
         }
        }
        if ((label|0) == 21) {
         $$7 = 0;
         break;
        }
        else if ((label|0) == 22) {
         __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($11,$0,$39);
         $43 = ((($2)) + 4|0);
         $44 = ((($2)) + 8|0);
         $45 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FunctionEncodingEJRPNS0_4NodeESA_NS0_9NodeArrayESA_RNS0_10QualifiersERNS0_15FunctionRefQualEEEES9_DpOT0_($0,$8,$3,$11,$4,$43,$44)|0);
         $$7 = $45;
         break;
        }
       }
      } while(0);
      $$8 = $$7;
     }
     $$9 = $$8;
    }
   }
  }
  $$10 = $$9;
 }
 }
 STACKTOP = sp;return ($$10|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$0>>2]|0;
 $5 = $4;
 $6 = (($3) - ($5))|0;
 $7 = ($6>>>0)>($1>>>0);
 if ($7) {
  $8 = (($4) + ($1)|0);
  $9 = HEAP8[$8>>0]|0;
  $$0 = $9;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9DotSuffixEJRPNS0_4NodeENS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9DotSuffixEJRPNS2_4NodeENS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2|0)==($4|0);
 if ($5) {
  $$0 = 0;
 } else {
  $6 = HEAP8[$2>>0]|0;
  $7 = ($6<<24>>24)==($1<<24>>24);
  if ($7) {
   $8 = ((($2)) + 1|0);
   HEAP32[$0>>2] = $8;
   $$0 = 1;
  } else {
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit4 = 0, $isdigittmp = 0, $isdigittmp3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$1>>2]|0;
 if ($2) {
  (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($1,110)|0);
 }
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($1)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  label = 6;
 } else {
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP8[$6>>0]|0;
  $8 = $7 << 24 >> 24;
  $isdigittmp = (($8) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $12 = $6;
   while(1) {
    $9 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($1)|0);
    $10 = ($9|0)==(0);
    if ($10) {
     break;
    }
    $11 = HEAP8[$12>>0]|0;
    $13 = $11 << 24 >> 24;
    $isdigittmp3 = (($13) + -48)|0;
    $isdigit4 = ($isdigittmp3>>>0)<(10);
    if (!($isdigit4)) {
     break;
    }
    $14 = ((($12)) + 1|0);
    HEAP32[$1>>2] = $14;
    $12 = $14;
   }
   __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($0,$3,$12);
  } else {
   label = 6;
  }
 }
 if ((label|0) == 6) {
  __ZN12_GLOBAL__N_110StringViewC2Ev($0);
 }
 return;
}
function __ZNK12_GLOBAL__N_110StringView5emptyEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA34_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA34_KcRPNS2_4NodeEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($0) {
 $0 = $0|0;
 var $$033 = 0, $$10 = 0, $$131 = 0, $$942$ph = 0, $$pre = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $spec$select = 0, $spec$select43 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $1 = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 36|0;
 $5 = sp + 32|0;
 $6 = sp + 28|0;
 $7 = sp + 24|0;
 $8 = sp + 20|0;
 $9 = sp + 16|0;
 $10 = sp + 12|0;
 $11 = sp + 8|0;
 $12 = sp + 4|0;
 $13 = sp;
 HEAP32[$1>>2] = 0;
 $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $15 = $14 << 24 >> 24;
 L1: do {
  switch ($15|0) {
  case 75: case 86: case 114:  {
   $16 = ($14<<24>>24)==(114);
   $spec$select = $16&1;
   $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,$spec$select)|0);
   $18 = ($17<<24>>24)==(86);
   $19 = $16 ? 2 : 1;
   $$131 = $18 ? $19 : $spec$select;
   $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,$$131)|0);
   $21 = ($20<<24>>24)==(75);
   $22 = $21&1;
   $spec$select43 = (($$131) + ($22))|0;
   $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,$spec$select43)|0);
   switch ($23<<24>>24) {
   case 70:  {
    break;
   }
   case 68:  {
    $24 = (($spec$select43) + 1)|0;
    $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,$24)|0);
    switch ($25<<24>>24) {
    case 120: case 119: case 79: case 111:  {
     break;
    }
    default: {
     label = 5;
     break L1;
    }
    }
    break;
   }
   default: {
    label = 5;
    break L1;
   }
   }
   $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv($26)|0);
   HEAP32[$1>>2] = $27;
   $202 = $27;
   label = 81;
   break;
  }
  case 85:  {
   label = 5;
   break;
  }
  case 118:  {
   $30 = HEAP32[$0>>2]|0;
   $31 = ((($30)) + 1|0);
   HEAP32[$0>>2] = $31;
   $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,25740)|0);
   $$10 = $32;
   break;
  }
  case 119:  {
   $33 = HEAP32[$0>>2]|0;
   $34 = ((($33)) + 1|0);
   HEAP32[$0>>2] = $34;
   $35 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA8_KcEEEPNS0_4NodeEDpOT0_($0)|0);
   $$10 = $35;
   break;
  }
  case 98:  {
   $36 = HEAP32[$0>>2]|0;
   $37 = ((($36)) + 1|0);
   HEAP32[$0>>2] = $37;
   $38 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,25745)|0);
   $$10 = $38;
   break;
  }
  case 99:  {
   $39 = HEAP32[$0>>2]|0;
   $40 = ((($39)) + 1|0);
   HEAP32[$0>>2] = $40;
   $41 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,25750)|0);
   $$10 = $41;
   break;
  }
  case 97:  {
   $42 = HEAP32[$0>>2]|0;
   $43 = ((($42)) + 1|0);
   HEAP32[$0>>2] = $43;
   $44 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,25755)|0);
   $$10 = $44;
   break;
  }
  case 104:  {
   $45 = HEAP32[$0>>2]|0;
   $46 = ((($45)) + 1|0);
   HEAP32[$0>>2] = $46;
   $47 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA14_KcEEEPNS0_4NodeEDpOT0_($0,25767)|0);
   $$10 = $47;
   break;
  }
  case 115:  {
   $48 = HEAP32[$0>>2]|0;
   $49 = ((($48)) + 1|0);
   HEAP32[$0>>2] = $49;
   $50 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0,25781)|0);
   $$10 = $50;
   break;
  }
  case 116:  {
   $51 = HEAP32[$0>>2]|0;
   $52 = ((($51)) + 1|0);
   HEAP32[$0>>2] = $52;
   $53 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0,25787)|0);
   $$10 = $53;
   break;
  }
  case 105:  {
   $54 = HEAP32[$0>>2]|0;
   $55 = ((($54)) + 1|0);
   HEAP32[$0>>2] = $55;
   $56 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0,25802)|0);
   $$10 = $56;
   break;
  }
  case 106:  {
   $57 = HEAP32[$0>>2]|0;
   $58 = ((($57)) + 1|0);
   HEAP32[$0>>2] = $58;
   $59 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA13_KcEEEPNS0_4NodeEDpOT0_($0,25806)|0);
   $$10 = $59;
   break;
  }
  case 108:  {
   $60 = HEAP32[$0>>2]|0;
   $61 = ((($60)) + 1|0);
   HEAP32[$0>>2] = $61;
   $62 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,25819)|0);
   $$10 = $62;
   break;
  }
  case 109:  {
   $63 = HEAP32[$0>>2]|0;
   $64 = ((($63)) + 1|0);
   HEAP32[$0>>2] = $64;
   $65 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA14_KcEEEPNS0_4NodeEDpOT0_($0,25824)|0);
   $$10 = $65;
   break;
  }
  case 120:  {
   $66 = HEAP32[$0>>2]|0;
   $67 = ((($66)) + 1|0);
   HEAP32[$0>>2] = $67;
   $68 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,25838)|0);
   $$10 = $68;
   break;
  }
  case 121:  {
   $69 = HEAP32[$0>>2]|0;
   $70 = ((($69)) + 1|0);
   HEAP32[$0>>2] = $70;
   $71 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA19_KcEEEPNS0_4NodeEDpOT0_($0)|0);
   $$10 = $71;
   break;
  }
  case 110:  {
   $72 = HEAP32[$0>>2]|0;
   $73 = ((($72)) + 1|0);
   HEAP32[$0>>2] = $73;
   $74 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0,25848)|0);
   $$10 = $74;
   break;
  }
  case 111:  {
   $75 = HEAP32[$0>>2]|0;
   $76 = ((($75)) + 1|0);
   HEAP32[$0>>2] = $76;
   $77 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA18_KcEEEPNS0_4NodeEDpOT0_($0,25857)|0);
   $$10 = $77;
   break;
  }
  case 102:  {
   $78 = HEAP32[$0>>2]|0;
   $79 = ((($78)) + 1|0);
   HEAP32[$0>>2] = $79;
   $80 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0,25875)|0);
   $$10 = $80;
   break;
  }
  case 100:  {
   $81 = HEAP32[$0>>2]|0;
   $82 = ((($81)) + 1|0);
   HEAP32[$0>>2] = $82;
   $83 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA7_KcEEEPNS0_4NodeEDpOT0_($0)|0);
   $$10 = $83;
   break;
  }
  case 101:  {
   $84 = HEAP32[$0>>2]|0;
   $85 = ((($84)) + 1|0);
   HEAP32[$0>>2] = $85;
   $86 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,25881)|0);
   $$10 = $86;
   break;
  }
  case 103:  {
   $87 = HEAP32[$0>>2]|0;
   $88 = ((($87)) + 1|0);
   HEAP32[$0>>2] = $88;
   $89 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,25893)|0);
   $$10 = $89;
   break;
  }
  case 122:  {
   $90 = HEAP32[$0>>2]|0;
   $91 = ((($90)) + 1|0);
   HEAP32[$0>>2] = $91;
   $92 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0,25904)|0);
   $$10 = $92;
   break;
  }
  case 117:  {
   $93 = HEAP32[$0>>2]|0;
   $94 = ((($93)) + 1|0);
   HEAP32[$0>>2] = $94;
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($2,$0);
   $95 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($2)|0);
   if ($95) {
    $$033 = 0;
   } else {
    $96 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
    $$033 = $96;
   }
   $$10 = $$033;
   break;
  }
  case 68:  {
   $97 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $98 = $97 << 24 >> 24;
   do {
    switch ($98|0) {
    case 100:  {
     $99 = HEAP32[$0>>2]|0;
     $100 = ((($99)) + 2|0);
     HEAP32[$0>>2] = $100;
     $101 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,25908)|0);
     $$10 = $101;
     break L1;
     break;
    }
    case 101:  {
     $102 = HEAP32[$0>>2]|0;
     $103 = ((($102)) + 2|0);
     HEAP32[$0>>2] = $103;
     $104 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,25918)|0);
     $$10 = $104;
     break L1;
     break;
    }
    case 102:  {
     $105 = HEAP32[$0>>2]|0;
     $106 = ((($105)) + 2|0);
     HEAP32[$0>>2] = $106;
     $107 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,25929)|0);
     $$10 = $107;
     break L1;
     break;
    }
    case 104:  {
     $108 = HEAP32[$0>>2]|0;
     $109 = ((($108)) + 2|0);
     HEAP32[$0>>2] = $109;
     $110 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,25939)|0);
     $$10 = $110;
     break L1;
     break;
    }
    case 105:  {
     $111 = HEAP32[$0>>2]|0;
     $112 = ((($111)) + 2|0);
     HEAP32[$0>>2] = $112;
     $113 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0,25949)|0);
     $$10 = $113;
     break L1;
     break;
    }
    case 115:  {
     $114 = HEAP32[$0>>2]|0;
     $115 = ((($114)) + 2|0);
     HEAP32[$0>>2] = $115;
     $116 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0,25958)|0);
     $$10 = $116;
     break L1;
     break;
    }
    case 97:  {
     $117 = HEAP32[$0>>2]|0;
     $118 = ((($117)) + 2|0);
     HEAP32[$0>>2] = $118;
     $119 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,25967)|0);
     $$10 = $119;
     break L1;
     break;
    }
    case 99:  {
     $120 = HEAP32[$0>>2]|0;
     $121 = ((($120)) + 2|0);
     HEAP32[$0>>2] = $121;
     $122 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0,25972)|0);
     $$10 = $122;
     break L1;
     break;
    }
    case 110:  {
     $123 = HEAP32[$0>>2]|0;
     $124 = ((($123)) + 2|0);
     HEAP32[$0>>2] = $124;
     $125 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0,25987)|0);
     $$10 = $125;
     break L1;
     break;
    }
    case 84: case 116:  {
     $126 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $127 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv($126)|0);
     HEAP32[$1>>2] = $127;
     $202 = $127;
     label = 81;
     break L1;
     break;
    }
    case 118:  {
     $128 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $129 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseVectorTypeEv($128)|0);
     HEAP32[$1>>2] = $129;
     $202 = $129;
     label = 81;
     break L1;
     break;
    }
    case 112:  {
     $130 = HEAP32[$0>>2]|0;
     $131 = ((($130)) + 2|0);
     HEAP32[$0>>2] = $131;
     $132 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $133 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($132)|0);
     HEAP32[$3>>2] = $133;
     $134 = ($133|0)==(0|0);
     if ($134) {
      $$10 = 0;
      break L1;
     } else {
      $135 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ParameterPackExpansionEJRPNS0_4NodeEEEES9_DpOT0_($0,$3)|0);
      HEAP32[$1>>2] = $135;
      label = 82;
      break L1;
     }
     break;
    }
    case 120: case 119: case 79: case 111:  {
     $136 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $137 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv($136)|0);
     HEAP32[$1>>2] = $137;
     $202 = $137;
     label = 81;
     break L1;
     break;
    }
    default: {
     $$10 = 0;
     break L1;
    }
    }
   } while(0);
   break;
  }
  case 70:  {
   $138 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $139 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv($138)|0);
   HEAP32[$1>>2] = $139;
   $202 = $139;
   label = 81;
   break;
  }
  case 65:  {
   $140 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $141 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseArrayTypeEv($140)|0);
   HEAP32[$1>>2] = $141;
   $202 = $141;
   label = 81;
   break;
  }
  case 77:  {
   $142 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $143 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E24parsePointerToMemberTypeEv($142)|0);
   HEAP32[$1>>2] = $143;
   $202 = $143;
   label = 81;
   break;
  }
  case 84:  {
   $144 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   switch ($144<<24>>24) {
   case 101: case 117: case 115:  {
    $145 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $146 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseClassEnumTypeEv($145)|0);
    HEAP32[$1>>2] = $146;
    $202 = $146;
    label = 81;
    break L1;
    break;
   }
   default: {
   }
   }
   $147 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $148 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($147)|0);
   HEAP32[$1>>2] = $148;
   $149 = ($148|0)==(0|0);
   if ($149) {
    $$10 = 0;
   } else {
    $150 = ((($0)) + 360|0);
    $151 = HEAP8[$150>>0]|0;
    $152 = ($151<<24>>24)==(0);
    if ($152) {
     label = 82;
    } else {
     $153 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
     $154 = ($153<<24>>24)==(73);
     if ($154) {
      $155 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($147,0)|0);
      HEAP32[$4>>2] = $155;
      $156 = ($155|0)==(0|0);
      if ($156) {
       $$10 = 0;
       break L1;
      } else {
       $157 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$4)|0);
       HEAP32[$1>>2] = $157;
       label = 82;
       break L1;
      }
     } else {
      label = 82;
     }
    }
   }
   break;
  }
  case 80:  {
   $158 = HEAP32[$0>>2]|0;
   $159 = ((($158)) + 1|0);
   HEAP32[$0>>2] = $159;
   $160 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $161 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($160)|0);
   HEAP32[$5>>2] = $161;
   $162 = ($161|0)==(0|0);
   if ($162) {
    $$10 = 0;
    break L1;
   } else {
    $163 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PointerTypeEJRPNS0_4NodeEEEES9_DpOT0_($0,$5)|0);
    HEAP32[$1>>2] = $163;
    label = 82;
    break L1;
   }
   break;
  }
  case 82:  {
   $164 = HEAP32[$0>>2]|0;
   $165 = ((($164)) + 1|0);
   HEAP32[$0>>2] = $165;
   $166 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $167 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($166)|0);
   HEAP32[$6>>2] = $167;
   $168 = ($167|0)==(0|0);
   if ($168) {
    $$10 = 0;
    break L1;
   } else {
    HEAP32[$7>>2] = 0;
    $169 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ReferenceTypeEJRPNS0_4NodeENS0_13ReferenceKindEEEES9_DpOT0_($0,$6,$7)|0);
    HEAP32[$1>>2] = $169;
    label = 82;
    break L1;
   }
   break;
  }
  case 79:  {
   $170 = HEAP32[$0>>2]|0;
   $171 = ((($170)) + 1|0);
   HEAP32[$0>>2] = $171;
   $172 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $173 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($172)|0);
   HEAP32[$8>>2] = $173;
   $174 = ($173|0)==(0|0);
   if ($174) {
    $$10 = 0;
    break L1;
   } else {
    HEAP32[$9>>2] = 1;
    $175 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ReferenceTypeEJRPNS0_4NodeENS0_13ReferenceKindEEEES9_DpOT0_($0,$8,$9)|0);
    HEAP32[$1>>2] = $175;
    label = 82;
    break L1;
   }
   break;
  }
  case 67:  {
   $176 = HEAP32[$0>>2]|0;
   $177 = ((($176)) + 1|0);
   HEAP32[$0>>2] = $177;
   $178 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $179 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($178)|0);
   HEAP32[$10>>2] = $179;
   $180 = ($179|0)==(0|0);
   if ($180) {
    $$10 = 0;
    break L1;
   } else {
    $181 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20PostfixQualifiedTypeEJRPNS0_4NodeERA9_KcEEES9_DpOT0_($0,$10)|0);
    HEAP32[$1>>2] = $181;
    label = 82;
    break L1;
   }
   break;
  }
  case 71:  {
   $182 = HEAP32[$0>>2]|0;
   $183 = ((($182)) + 1|0);
   HEAP32[$0>>2] = $183;
   $184 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $185 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($184)|0);
   HEAP32[$11>>2] = $185;
   $186 = ($185|0)==(0|0);
   if ($186) {
    $$10 = 0;
    break L1;
   } else {
    $187 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20PostfixQualifiedTypeEJRPNS0_4NodeERA11_KcEEES9_DpOT0_($0,$11)|0);
    HEAP32[$1>>2] = $187;
    label = 82;
    break L1;
   }
   break;
  }
  case 83:  {
   $188 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   switch ($188<<24>>24) {
   case 116: case 0:  {
    label = 80;
    break L1;
    break;
   }
   default: {
   }
   }
   $189 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $190 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($189)|0);
   HEAP32[$12>>2] = $190;
   $191 = ($190|0)==(0|0);
   if ($191) {
    $$942$ph = 0;
   } else {
    $192 = ((($0)) + 360|0);
    $193 = HEAP8[$192>>0]|0;
    $194 = ($193<<24>>24)==(0);
    if ($194) {
     $$942$ph = $190;
    } else {
     $195 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
     $196 = ($195<<24>>24)==(73);
     if ($196) {
      $197 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($189,0)|0);
      HEAP32[$13>>2] = $197;
      $198 = ($197|0)==(0|0);
      if ($198) {
       $$10 = 0;
       break L1;
      } else {
       $199 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$12,$13)|0);
       HEAP32[$1>>2] = $199;
       label = 82;
       break L1;
      }
     } else {
      $$942$ph = $190;
     }
    }
   }
   $$10 = $$942$ph;
   break;
  }
  default: {
   label = 80;
  }
  }
 } while(0);
 if ((label|0) == 5) {
  $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv($28)|0);
  HEAP32[$1>>2] = $29;
  $202 = $29;
  label = 81;
 }
 else if ((label|0) == 80) {
  $200 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $201 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseClassEnumTypeEv($200)|0);
  HEAP32[$1>>2] = $201;
  $202 = $201;
  label = 81;
 }
 if ((label|0) == 81) {
  $203 = ($202|0)==(0|0);
  if ($203) {
   $$10 = 0;
  } else {
   label = 82;
  }
 }
 if ((label|0) == 82) {
  $204 = ((($0)) + 148|0);
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($204,$1);
  $$pre = HEAP32[$1>>2]|0;
  $$10 = $$pre;
 }
 STACKTOP = sp;return ($$10|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseFunctionTypeEv($0) {
 $0 = $0|0;
 var $$7 = 0, $$8 = 0, $$9 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $$byval_copy5 = sp + 144|0;
 $$byval_copy4 = sp + 136|0;
 $$byval_copy3 = sp + 128|0;
 $$byval_copy2 = sp + 120|0;
 $$byval_copy1 = sp + 112|0;
 $$byval_copy = sp + 104|0;
 $1 = sp + 100|0;
 $2 = sp + 96|0;
 $3 = sp + 88|0;
 $4 = sp + 80|0;
 $5 = sp + 72|0;
 $6 = sp + 64|0;
 $7 = sp + 56|0;
 $8 = sp + 48|0;
 $9 = sp + 40|0;
 $10 = sp + 32|0;
 $11 = sp + 152|0;
 $12 = sp + 24|0;
 $13 = sp + 16|0;
 $14 = sp + 8|0;
 $15 = sp;
 $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0)|0);
 HEAP32[$1>>2] = $16;
 HEAP32[$2>>2] = 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,30740);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 do {
  if ($17) {
   $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0,30743)|0);
   HEAP32[$2>>2] = $18;
   label = 14;
  } else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4,30752);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
   $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
   if ($19) {
    $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($20)|0);
    HEAP32[$5>>2] = $21;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $$9 = 0;
     break;
    }
    $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    if ($23) {
     $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12NoexceptSpecEJRPNS0_4NodeEEEES9_DpOT0_($0,$5)|0);
     HEAP32[$2>>2] = $24;
     label = 14;
     break;
    } else {
     $$9 = 0;
     break;
    }
   }
   __ZN12_GLOBAL__N_110StringViewC2EPKc($6,30755);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$6+4>>2]|0;
   $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
   if ($25) {
    $26 = ((($0)) + 8|0);
    $27 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($26)|0);
    while(1) {
     $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
     if ($28) {
      label = 12;
      break;
     }
     $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($29)|0);
     HEAP32[$7>>2] = $30;
     $31 = ($30|0)==(0|0);
     if ($31) {
      label = 13;
      break;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($26,$7);
    }
    if ((label|0) == 12) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($8,$0,$27);
     $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20DynamicExceptionSpecEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$8)|0);
     HEAP32[$2>>2] = $32;
     label = 14;
     break;
    }
    else if ((label|0) == 13) {
     $$9 = 0;
     break;
    }
   } else {
    label = 14;
   }
  }
 } while(0);
 if ((label|0) == 14) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($9,30758);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$9>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$9+4>>2]|0;
  (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy3)|0);
  $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,70)|0);
  if ($33) {
   (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,89)|0);
   $34 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $35 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($34)|0);
   HEAP32[$10>>2] = $35;
   $36 = ($35|0)==(0|0);
   if ($36) {
    $$8 = 0;
   } else {
    HEAP8[$11>>0] = 0;
    $37 = ((($0)) + 8|0);
    $38 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($37)|0);
    while(1) {
     $39 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
     if ($39) {
      label = 27;
      break;
     }
     $40 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,118)|0);
     if (!($40)) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($12,30761);
      ;HEAP32[$$byval_copy4>>2]=HEAP32[$12>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$12+4>>2]|0;
      $41 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy4)|0);
      if ($41) {
       label = 21;
       break;
      }
      __ZN12_GLOBAL__N_110StringViewC2EPKc($13,30764);
      ;HEAP32[$$byval_copy5>>2]=HEAP32[$13>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$13+4>>2]|0;
      $42 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy5)|0);
      if ($42) {
       label = 23;
       break;
      }
      $43 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($34)|0);
      HEAP32[$14>>2] = $43;
      $44 = ($43|0)==(0|0);
      if ($44) {
       label = 26;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($37,$14);
     }
    }
    if ((label|0) == 21) {
     HEAP8[$11>>0] = 1;
     label = 27;
    }
    else if ((label|0) == 23) {
     HEAP8[$11>>0] = 2;
     label = 27;
    }
    else if ((label|0) == 26) {
     $$7 = 0;
    }
    if ((label|0) == 27) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($15,$0,$38);
     $45 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12FunctionTypeEJRPNS0_4NodeERNS0_9NodeArrayERNS0_10QualifiersERNS0_15FunctionRefQualESA_EEES9_DpOT0_($0,$10,$15,$1,$11,$2)|0);
     $$7 = $45;
    }
    $$8 = $$7;
   }
   $$9 = $$8;
  } else {
   $$9 = 0;
  }
 }
 STACKTOP = sp;return ($$9|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy = sp + 72|0;
 $1 = sp + 64|0;
 $2 = sp + 56|0;
 $3 = sp + 48|0;
 $4 = sp;
 $5 = sp + 36|0;
 $6 = sp + 24|0;
 $7 = sp + 20|0;
 $8 = sp + 16|0;
 $9 = sp + 12|0;
 $10 = sp + 8|0;
 $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,85)|0);
 if ($11) {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($1,$0);
  $12 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($1)|0);
  do {
   if ($12) {
    $$3 = 0;
   } else {
    __ZN12_GLOBAL__N_110StringViewC2EPKc($2,30555);
    ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
    $13 = (__ZNK12_GLOBAL__N_110StringView10startsWithES0_($1,$$byval_copy)|0);
    if (!($13)) {
     $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv($22)|0);
     HEAP32[$8>>2] = $23;
     $24 = ($23|0)==(0|0);
     if ($24) {
      $$2 = 0;
     } else {
      $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_17VendorExtQualTypeEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$8,$1)|0);
      $$2 = $25;
     }
     $$3 = $$2;
     break;
    }
    __ZNK12_GLOBAL__N_110StringView9dropFrontEm($3,$1,9);
    __ZN12_GLOBAL__N_110StringViewC2Ev($4);
    $14 = (__ZNK12_GLOBAL__N_110StringView5beginEv($3)|0);
    __ZN12_GLOBAL__N_114SwapAndRestoreIPKcEC2ERS2_S2_($5,$0,$14);
    $15 = ((($0)) + 4|0);
    $16 = (__ZNK12_GLOBAL__N_110StringView3endEv($3)|0);
    __ZN12_GLOBAL__N_114SwapAndRestoreIPKcEC2ERS2_S2_($6,$15,$16);
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($4,$0);
    __ZN12_GLOBAL__N_114SwapAndRestoreIPKcED2Ev($6);
    __ZN12_GLOBAL__N_114SwapAndRestoreIPKcED2Ev($5);
    $17 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($4)|0);
    if ($17) {
     $$1 = 0;
    } else {
     $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseQualifiedTypeEv($18)|0);
     HEAP32[$7>>2] = $19;
     $20 = ($19|0)==(0|0);
     if ($20) {
      $$0 = 0;
     } else {
      $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ObjCProtoNameEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$7,$4)|0);
      $$0 = $21;
     }
     $$1 = $$0;
    }
    $$3 = $$1;
   }
  } while(0);
  $$5 = $$3;
 } else {
  $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0)|0);
  HEAP32[$9>>2] = $26;
  $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($27)|0);
  HEAP32[$10>>2] = $28;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $$4 = 0;
  } else {
   $30 = ($26|0)==(0);
   if ($30) {
    $$4 = $28;
   } else {
    $31 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8QualTypeEJRPNS0_4NodeERNS0_10QualifiersEEEES9_DpOT0_($0,$10,$9)|0);
    HEAP32[$10>>2] = $31;
    $$4 = $31;
   }
  }
  $$5 = $$4;
 }
 STACKTOP = sp;return ($$5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA5_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA8_KcEEEPNS0_4NodeEDpOT0_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 368|0);
 $2 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA8_KcEEEPT_DpOT0_($1,26660)|0);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA12_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA14_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA14_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA6_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA15_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA4_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA13_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA13_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA10_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA19_KcEEEPNS0_4NodeEDpOT0_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 368|0);
 $2 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA19_KcEEEPT_DpOT0_($1,30536)|0);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA9_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA9_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA18_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA18_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA7_KcEEEPNS0_4NodeEDpOT0_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 368|0);
 $2 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA7_KcEEEPT_DpOT0_($1,30529)|0);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA11_KcEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parsePositiveIntegerEPm($1,$2)|0);
 if ($4) {
  label = 3;
 } else {
  $5 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($1)|0);
  $6 = HEAP32[$2>>2]|0;
  $7 = ($5>>>0)<($6>>>0);
  if ($7) {
   label = 3;
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (($8) + ($6)|0);
   __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($3,$8,$9);
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + ($6)|0);
   HEAP32[$1>>2] = $11;
   $12 = $3;
   $13 = $12;
   $14 = HEAP32[$13>>2]|0;
   $15 = (($12) + 4)|0;
   $16 = $15;
   $17 = HEAP32[$16>>2]|0;
   $18 = $0;
   $19 = $18;
   HEAP32[$19>>2] = $14;
   $20 = (($18) + 4)|0;
   $21 = $20;
   HEAP32[$21>>2] = $17;
  }
 }
 if ((label|0) == 3) {
  __ZN12_GLOBAL__N_110StringViewC2Ev($0);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,68)|0);
 do {
  if ($2) {
   $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,116)|0);
   if (!($3)) {
    $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,84)|0);
    if (!($4)) {
     $$1 = 0;
     break;
    }
   }
   $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($5)|0);
   HEAP32[$1>>2] = $6;
   $7 = ($6|0)==(0|0);
   if ($7) {
    $$0 = 0;
   } else {
    $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    if ($8) {
     $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,30519,$1)|0);
     $$0 = $9;
    } else {
     $$0 = 0;
    }
   }
   $$1 = $$0;
  } else {
   $$1 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseVectorTypeEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $$off = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 40|0;
 $1 = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp + 20|0;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $7 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1,30394);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
 $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 do {
  if ($8) {
   $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   $$off = (($9) + -49)<<24>>24;
   $10 = ($$off&255)<(9);
   if ($10) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2,$0,0);
    $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    do {
     if ($11) {
      $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,112)|0);
      if ($12) {
       $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15PixelVectorTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
       $$1 = $13;
       break;
      }
      $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($14)|0);
      HEAP32[$3>>2] = $15;
      $16 = ($15|0)==(0|0);
      if ($16) {
       $$0 = 0;
      } else {
       $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$3,$2)|0);
       $$0 = $17;
      }
      $$1 = $$0;
     } else {
      $$1 = 0;
     }
    } while(0);
    $$5 = $$1;
    break;
   }
   $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
   if ($18) {
    $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($26)|0);
    HEAP32[$6>>2] = $27;
    $28 = ($27|0)==(0|0);
    if ($28) {
     $$4 = 0;
    } else {
     __ZN12_GLOBAL__N_110StringViewC2Ev($7);
     $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeENS_10StringViewEEEES9_DpOT0_($0,$6,$7)|0);
     $$4 = $29;
    }
    $$5 = $$4;
    break;
   }
   $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($19)|0);
   HEAP32[$4>>2] = $20;
   $21 = ($20|0)==(0|0);
   if ($21) {
    $$3 = 0;
   } else {
    $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if ($22) {
     $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($19)|0);
     HEAP32[$5>>2] = $23;
     $24 = ($23|0)==(0|0);
     if ($24) {
      $$2 = 0;
     } else {
      $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$5,$4)|0);
      $$2 = $25;
     }
     $$3 = $$2;
    } else {
     $$3 = 0;
    }
   }
   $$5 = $$3;
  } else {
   $$5 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ParameterPackExpansionEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle22ParameterPackExpansionEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseArrayTypeEv($0) {
 $0 = $0|0;
 var $$1 = 0, $$2 = 0, $$3 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $1 = sp;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,65)|0);
 if ($4) {
  __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2Ev($1);
  $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
  $6 = $5 << 24 >> 24;
  $isdigittmp = (($6) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2,$0,0);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
   __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2ENS_10StringViewE($1,$$byval_copy);
   $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
   if ($7) {
    label = 8;
   } else {
    $$2 = 0;
   }
  } else {
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
   if ($8) {
    label = 8;
   } else {
    $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($9)|0);
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$2 = 0;
    } else {
     $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
     if ($12) {
      __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2EPNS0_4NodeE($1,$10);
      label = 8;
     } else {
      $$2 = 0;
     }
    }
   }
  }
  if ((label|0) == 8) {
   $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($13)|0);
   HEAP32[$3>>2] = $14;
   $15 = ($14|0)==(0|0);
   if ($15) {
    $$1 = 0;
   } else {
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9ArrayTypeEJRPNS0_4NodeERNS0_12NodeOrStringEEEES9_DpOT0_($0,$3,$1)|0);
    $$1 = $16;
   }
   $$2 = $$1;
  }
  $$3 = $$2;
 } else {
  $$3 = 0;
 }
 STACKTOP = sp;return ($$3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E24parsePointerToMemberTypeEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,77)|0);
 if ($3) {
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($4)|0);
  HEAP32[$1>>2] = $5;
  $6 = ($5|0)==(0|0);
  if ($6) {
   $$1 = 0;
  } else {
   $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($4)|0);
   HEAP32[$2>>2] = $7;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $$0 = 0;
   } else {
    $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19PointerToMemberTypeEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2)|0);
    $$0 = $9;
   }
   $$1 = $$0;
  }
  $$2 = $$1;
 } else {
  $$2 = 0;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseClassEnumTypeEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 48|0;
 $$byval_copy = sp + 40|0;
 $1 = sp;
 $2 = sp + 32|0;
 $3 = sp + 24|0;
 $4 = sp + 16|0;
 $5 = sp + 8|0;
 __ZN12_GLOBAL__N_110StringViewC2Ev($1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29450);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 do {
  if ($6) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($1,29453);
  } else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3,29460);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
   $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
   if ($7) {
    __ZN12_GLOBAL__N_110StringViewC2EPKc($1,29463);
    break;
   }
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4,29469);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
   if ($8) {
    __ZN12_GLOBAL__N_110StringViewC2EPKc($1,29472);
   }
  }
 } while(0);
 $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
 $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($9,0)|0);
 HEAP32[$5>>2] = $10;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 0;
 } else {
  $12 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($1)|0);
  if ($12) {
   $$0 = $10;
  } else {
   $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ElaboratedTypeSpefTypeEJRNS_10StringViewERPNS0_4NodeEEEESB_DpOT0_($0,$1,$5)|0);
   $$0 = $13;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($0) {
 $0 = $0|0;
 var $$1 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,84)|0);
 if ($3) {
  HEAP32[$1>>2] = 0;
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
  if ($4) {
   $20 = 0;
   label = 5;
  } else {
   $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parsePositiveIntegerEPm($0,$1)|0);
   if ($5) {
    $$1 = 0;
   } else {
    $6 = HEAP32[$1>>2]|0;
    $7 = (($6) + 1)|0;
    HEAP32[$1>>2] = $7;
    $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if ($8) {
     $20 = $7;
     label = 5;
    } else {
     $$1 = 0;
    }
   }
  }
  do {
   if ((label|0) == 5) {
    $9 = ((($0)) + 362|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA5_KcEEEPNS0_4NodeEDpOT0_($0,25967)|0);
     $$1 = $12;
     break;
    }
    $13 = ((($0)) + 361|0);
    $14 = HEAP8[$13>>0]|0;
    $15 = ($14<<24>>24)==(0);
    if (!($15)) {
     $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_24ForwardTemplateReferenceEJRmEEEPNS0_4NodeEDpOT0_($0,$1)|0);
     $17 = ((($0)) + 332|0);
     HEAP32[$2>>2] = $16;
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE9push_backERKS3_($17,$2);
     $$1 = $16;
     break;
    }
    $18 = ((($0)) + 288|0);
    $19 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($18)|0);
    $21 = ($20>>>0)<($19>>>0);
    if ($21) {
     $22 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEixEm($18,$20)|0);
     $23 = HEAP32[$22>>2]|0;
     $$1 = $23;
    } else {
     $$1 = 0;
    }
   }
  } while(0);
  $$2 = $$1;
 } else {
  $$2 = 0;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $2 = sp + 32|0;
 $3 = sp + 28|0;
 $4 = sp + 24|0;
 $5 = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,73)|0);
 do {
  if ($8) {
   $9 = ((($0)) + 288|0);
   if ($1) {
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($9);
   }
   $10 = ((($0)) + 8|0);
   $11 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($10)|0);
   while(1) {
    $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    if ($12) {
     label = 16;
     break;
    }
    if ($1) {
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEC2EOS4_($2,$9);
     $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($13)|0);
     HEAP32[$3>>2] = $14;
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEaSEOS4_($9,$2);
     $15 = ($14|0)==(0|0);
     if ($15) {
      label = 12;
      break;
     }
     $16 = $14;
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($10,$3);
     HEAP32[$4>>2] = $16;
     $17 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($14)|0);
     $18 = ($17<<24>>24)==(28);
     if ($18) {
      __ZNK12_GLOBAL__N_116itanium_demangle20TemplateArgumentPack11getElementsEv($5,$14);
      $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ParameterPackEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$5)|0);
      HEAP32[$4>>2] = $19;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE9push_backERKS3_($9,$4);
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EED2Ev($2);
    } else {
     $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($20)|0);
     HEAP32[$6>>2] = $21;
     $22 = ($21|0)==(0|0);
     if ($22) {
      label = 15;
      break;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($10,$6);
    }
   }
   if ((label|0) == 12) {
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EED2Ev($2);
    $$6 = 0;
    break;
   }
   else if ((label|0) == 15) {
    $$6 = 0;
    break;
   }
   else if ((label|0) == 16) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($7,$0,$11);
    $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12TemplateArgsEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$7)|0);
    $$6 = $23;
    break;
   }
  } else {
   $$6 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$6|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20NameWithTemplateArgsEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PointerTypeEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11PointerTypeEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ReferenceTypeEJRPNS0_4NodeENS0_13ReferenceKindEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13ReferenceTypeEJRPNS2_4NodeENS2_13ReferenceKindEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20PostfixQualifiedTypeEJRPNS0_4NodeERA9_KcEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20PostfixQualifiedTypeEJRPNS2_4NodeERA9_KcEEEPT_DpOT0_($2,$1,26361)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20PostfixQualifiedTypeEJRPNS0_4NodeERA11_KcEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20PostfixQualifiedTypeEJRPNS2_4NodeERA11_KcEEEPT_DpOT0_($2,$1,26293)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$18 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = sp + 28|0;
 $2 = sp + 24|0;
 $3 = sp + 20|0;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp;
 $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,83)|0);
 L1: do {
  if ($9) {
   $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   $11 = $10 << 24 >> 24;
   $12 = (_islower($11)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $36 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if ($36) {
     $37 = ((($0)) + 148|0);
     $38 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5emptyEv($37)|0);
     if ($38) {
      $$2 = 0;
      break;
     }
     $39 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEixEm($37,0)|0);
     $40 = HEAP32[$39>>2]|0;
     $$2 = $40;
     break;
    }
    HEAP32[$8>>2] = 0;
    $41 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10parseSeqIdEPm($0,$8)|0);
    if ($41) {
     $$18 = 0;
    } else {
     $42 = HEAP32[$8>>2]|0;
     $43 = (($42) + 1)|0;
     HEAP32[$8>>2] = $43;
     $44 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
     if ($44) {
      $45 = ((($0)) + 148|0);
      $46 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($45)|0);
      $47 = ($43>>>0)<($46>>>0);
      if ($47) {
       $48 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEixEm($45,$43)|0);
       $49 = HEAP32[$48>>2]|0;
       $$18 = $49;
      } else {
       $$18 = 0;
      }
     } else {
      $$18 = 0;
     }
    }
    $$2 = $$18;
    break;
   }
   switch ($11|0) {
   case 97:  {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 1|0);
    HEAP32[$0>>2] = $15;
    HEAP32[$1>>2] = 0;
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$1)|0);
    $$0 = $16;
    break;
   }
   case 98:  {
    $17 = HEAP32[$0>>2]|0;
    $18 = ((($17)) + 1|0);
    HEAP32[$0>>2] = $18;
    HEAP32[$2>>2] = 1;
    $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
    $$0 = $19;
    break;
   }
   case 115:  {
    $20 = HEAP32[$0>>2]|0;
    $21 = ((($20)) + 1|0);
    HEAP32[$0>>2] = $21;
    HEAP32[$3>>2] = 2;
    $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$3)|0);
    $$0 = $22;
    break;
   }
   case 105:  {
    $23 = HEAP32[$0>>2]|0;
    $24 = ((($23)) + 1|0);
    HEAP32[$0>>2] = $24;
    HEAP32[$4>>2] = 3;
    $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$4)|0);
    $$0 = $25;
    break;
   }
   case 111:  {
    $26 = HEAP32[$0>>2]|0;
    $27 = ((($26)) + 1|0);
    HEAP32[$0>>2] = $27;
    HEAP32[$5>>2] = 4;
    $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$5)|0);
    $$0 = $28;
    break;
   }
   case 100:  {
    $29 = HEAP32[$0>>2]|0;
    $30 = ((($29)) + 1|0);
    HEAP32[$0>>2] = $30;
    HEAP32[$6>>2] = 5;
    $31 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$6)|0);
    $$0 = $31;
    break;
   }
   default: {
    $$2 = 0;
    break L1;
   }
   }
   $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE($32,$$0)|0);
   HEAP32[$7>>2] = $33;
   $34 = ($33|0)==($$0|0);
   if ($34) {
    $$1 = $$0;
   } else {
    $35 = ((($0)) + 148|0);
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($35,$7);
    $$1 = $33;
   }
   $$2 = $$1;
  } else {
   $$2 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($0)|0);
  $8 = $7 << 1;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE7reserveEm($0,$8);
  $$pre = HEAP32[$2>>2]|0;
  $11 = $$pre;
 } else {
  $11 = $3;
 }
 $9 = HEAP32[$1>>2]|0;
 $10 = ((($11)) + 4|0);
 HEAP32[$2>>2] = $10;
 HEAP32[$11>>2] = $9;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 $5 = $4 >> 2;
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE7reserveEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in = 0, $$pre$phi11Z2D = 0, $$pre10 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($0)|0);
 $3 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8isInlineEv($0)|0);
 do {
  if ($3) {
   $4 = $1 << 2;
   $5 = (_malloc($4)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __ZSt9terminatev();
    // unreachable;
   }
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($0)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $7;
   $11 = (($9) - ($10))|0;
   $12 = ($11|0)==(0);
   if (!($12)) {
    _memmove(($5|0),($7|0),($11|0))|0;
   }
   HEAP32[$0>>2] = $5;
   $$in = $5;$$pre$phi11Z2D = $8;
  } else {
   $13 = HEAP32[$0>>2]|0;
   $14 = $1 << 2;
   $15 = (_realloc($13,$14)|0);
   HEAP32[$0>>2] = $15;
   $16 = ($15|0)==(0|0);
   if ($16) {
    __ZSt9terminatev();
    // unreachable;
   } else {
    $$pre10 = ((($0)) + 4|0);
    $$in = $15;$$pre$phi11Z2D = $$pre10;
    break;
   }
  }
 } while(0);
 $17 = (($$in) + ($2<<2)|0);
 HEAP32[$$pre$phi11Z2D>>2] = $17;
 $18 = (($$in) + ($1<<2)|0);
 $19 = ((($0)) + 8|0);
 HEAP32[$19>>2] = $18;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SpecialSubstitutionEJNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19SpecialSubstitutionEJNS2_14SpecialSubKindEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp;
 HEAP32[$2>>2] = $1;
 $7 = $1;
 while(1) {
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,66)|0);
  if (!($4)) {
   $$2 = $7;
   break;
  }
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseBareSourceNameEv($3,$0);
  $5 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($3)|0);
  if ($5) {
   label = 5;
   break;
  }
  $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10AbiTagAttrEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$2,$3)|0);
  HEAP32[$2>>2] = $6;
  $7 = $6;
 }
 if ((label|0) == 5) {
  $$2 = 0;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5emptyEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEixEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5beginEv($0)|0);
 $3 = (($2) + ($1<<2)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10parseSeqIdEPm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$08 = 0, $$off = 0, $$off11 = 0, $$sink15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $3 = ($2<<24>>24)>(47);
 if ($3) {
  $4 = ($2<<24>>24)<(58);
  $$off = (($2) + -65)<<24>>24;
  $5 = ($$off&255)<(26);
  $or$cond = $4 | $5;
  if ($or$cond) {
   $$0 = 0;
   while(1) {
    $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $7 = ($6<<24>>24)>(47);
    if (!($7)) {
     break;
    }
    $8 = ($6<<24>>24)<(58);
    if ($8) {
     $$sink15 = -48;
    } else {
     $$off11 = (($6) + -65)<<24>>24;
     $9 = ($$off11&255)<(26);
     if ($9) {
      $$sink15 = -55;
     } else {
      break;
     }
    }
    $10 = ($$0*36)|0;
    $11 = $6 << 24 >> 24;
    $12 = (($10) + ($$sink15))|0;
    $13 = (($12) + ($11))|0;
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 1|0);
    HEAP32[$0>>2] = $15;
    $$0 = $13;
   }
   HEAP32[$1>>2] = $$0;
   $$08 = 0;
  } else {
   $$08 = 1;
  }
 } else {
  $$08 = 1;
 }
 return ($$08|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5beginEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10AbiTagAttrEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10AbiTagAttrEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10AbiTagAttrEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10AbiTagAttrC2EPNS0_4NodeENS_10StringViewE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi9Z2D = 0, $$pre$phiZ2D = 0, $$pre7 = 0, $$pre8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + 15)|0;
 $3 = $2 & -16;
 $4 = ((($0)) + 4096|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + ($3))|0;
 $9 = ($8>>>0)>(4087);
 do {
  if ($9) {
   $10 = ($3>>>0)>(4088);
   if ($10) {
    $11 = (__ZN12_GLOBAL__N_120BumpPointerAllocator15allocateMassiveEm($0,$3)|0);
    $$0 = $11;
    break;
   } else {
    __ZN12_GLOBAL__N_120BumpPointerAllocator4growEv($0);
    $$pre = HEAP32[$4>>2]|0;
    $$phi$trans$insert = ((($$pre)) + 4|0);
    $$pre7 = HEAP32[$$phi$trans$insert>>2]|0;
    $$pre8 = (($$pre7) + ($3))|0;
    $$pre$phi9Z2D = $$pre8;$$pre$phiZ2D = $$phi$trans$insert;$13 = $$pre;$15 = $$pre7;
    label = 5;
    break;
   }
  } else {
   $$pre$phi9Z2D = $8;$$pre$phiZ2D = $6;$13 = $5;$15 = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  HEAP32[$$pre$phiZ2D>>2] = $$pre$phi9Z2D;
  $12 = ((($13)) + 8|0);
  $14 = (($12) + ($15)|0);
  $$0 = $14;
 }
 return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10AbiTagAttrC2EPNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 5|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ((($1)) + 6|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ((($1)) + 7|0);
 $8 = HEAP8[$7>>0]|0;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,8,$4,$6,$8);
 HEAP32[$0>>2] = (14536);
 $9 = ((($0)) + 8|0);
 HEAP32[$9>>2] = $1;
 $10 = ((($0)) + 12|0);
 $11 = $2;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = $10;
 $18 = $17;
 HEAP32[$18>>2] = $13;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = $16;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (14580);
 $5 = ((($0)) + 4|0);
 HEAP8[$5>>0] = $1;
 $6 = ((($0)) + 5|0);
 HEAP8[$6>>0] = $2;
 $7 = ((($0)) + 6|0);
 HEAP8[$7>>0] = $3;
 $8 = ((($0)) + 7|0);
 HEAP8[$8>>0] = $4;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node12hasArraySlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node15hasFunctionSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node13getSyntaxNodeERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle10AbiTagAttr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 40|0;
 $tmpcast$byval_copy = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = sp + 8|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_vii[$9 & 1023]($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26002);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $10 = ((($0)) + 12|0);
 $11 = $10;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = $3;
 $18 = $17;
 HEAP32[$18>>2] = $13;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = $16;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26008);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_110StringViewC2Ev($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle4NodeD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10AbiTagAttrD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_110StringViewC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($1)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  __ZN12_GLOBAL__N_112OutputStream4growEm($0,$2);
  $4 = HEAP32[$0>>2]|0;
  $5 = ((($0)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($4) + ($6)|0);
  $8 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
  _memmove(($7|0),($8|0),($2|0))|0;
  $9 = HEAP32[$5>>2]|0;
  $10 = (($9) + ($2))|0;
  HEAP32[$5>>2] = $10;
 }
 return;
}
function __ZNK12_GLOBAL__N_110StringView4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 return ($4|0);
}
function __ZNK12_GLOBAL__N_110StringView5beginEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle4NodeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _llvm_trap();
 // unreachable;
}
function __ZN12_GLOBAL__N_120BumpPointerAllocator15allocateMassiveEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1) + 8)|0;
 $3 = (_malloc($2)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  __ZSt9terminatev();
  // unreachable;
 } else {
  $5 = ((($0)) + 4096|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$3>>2] = $7;
  $8 = ((($3)) + 4|0);
  HEAP32[$8>>2] = 0;
  HEAP32[$6>>2] = $3;
  $9 = ((($3)) + 8|0);
  return ($9|0);
 }
 return (0)|0;
}
function __ZN12_GLOBAL__N_120BumpPointerAllocator4growEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_malloc(4096)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  __ZSt9terminatev();
  // unreachable;
 } else {
  $3 = ((($0)) + 4096|0);
  $4 = HEAP32[$3>>2]|0;
  HEAP32[$1>>2] = $4;
  $5 = ((($1)) + 4|0);
  HEAP32[$5>>2] = 0;
  HEAP32[$3>>2] = $1;
  return;
 }
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19SpecialSubstitutionEJNS2_14SpecialSubKindEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle19SpecialSubstitutionC2ENS0_14SpecialSubKindE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle19SpecialSubstitutionC2ENS0_14SpecialSubKindE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,36,1,1,1);
 HEAP32[$0>>2] = (14624);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19SpecialSubstitution9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy5 = sp + 88|0;
 $$byval_copy4 = sp + 80|0;
 $$byval_copy3 = sp + 72|0;
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 switch ($9|0) {
 case 0:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26152);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  break;
 }
 case 1:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26167);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  break;
 }
 case 2:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26185);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
  break;
 }
 case 3:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26197);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
  break;
 }
 case 4:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6,26210);
  ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
  break;
 }
 case 5:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7,26223);
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy5);
  break;
 }
 default: {
 }
 }
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19SpecialSubstitution11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 switch ($3|0) {
 case 0:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26097);
  break;
 }
 case 1:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26107);
  break;
 }
 case 2:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26120);
  break;
 }
 case 3:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26127);
  break;
 }
 case 4:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26135);
  break;
 }
 case 5:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26143);
  break;
 }
 default: {
  // unreachable;
 }
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle19SpecialSubstitutionD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20PostfixQualifiedTypeEJRPNS2_4NodeERA11_KcEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$2);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle20PostfixQualifiedTypeC2EPNS0_4NodeENS_10StringViewE($4,$5,$$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle20PostfixQualifiedTypeC2EPNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,5,1,1,1);
 HEAP32[$0>>2] = (14668);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle20PostfixQualifiedType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vii[$7 & 1023]($4,$1);
 $8 = ((($0)) + 12|0);
 $9 = $8;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $2;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle20PostfixQualifiedTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20PostfixQualifiedTypeEJRPNS2_4NodeERA9_KcEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$2);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle20PostfixQualifiedTypeC2EPNS0_4NodeENS_10StringViewE($4,$5,$$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13ReferenceTypeEJRPNS2_4NodeENS2_13ReferenceKindEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13ReferenceTypeC2EPKNS0_4NodeENS0_13ReferenceKindE($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13ReferenceTypeC2EPKNS0_4NodeENS0_13ReferenceKindE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 5|0);
 $4 = HEAP8[$3>>0]|0;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,12,$4,1,1);
 HEAP32[$0>>2] = (14712);
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $1;
 $6 = ((($0)) + 12|0);
 HEAP32[$6>>2] = $2;
 $7 = ((($0)) + 16|0);
 HEAP8[$7>>0] = 0;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($3,$1)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 48|0;
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 24|0;
 $4 = sp + 16|0;
 $5 = sp + 8|0;
 $6 = sp;
 $7 = ((($0)) + 16|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$7,1);
  __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType8collapseERNS_12OutputStreamE($3,$0,$1);
  $10 = ((($3)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($12)) + 16|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vii[$14 & 1023]($11,$1);
  $15 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($11,$1)|0);
  if ($15) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26372);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  }
  $16 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($11,$1)|0);
  if ($16) {
   label = 6;
  } else {
   $17 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($11,$1)|0);
   if ($17) {
    label = 6;
   }
  }
  if ((label|0) == 6) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26374);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  }
  $18 = HEAP32[$3>>2]|0;
  $19 = ($18|0)==(0);
  $20 = $19 ? 26376 : 26378;
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6,$20);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
 }
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 16|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$5,1);
  __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType8collapseERNS_12OutputStreamE($3,$0,$1);
  $8 = ((($3)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($9,$1)|0);
  if ($10) {
   label = 4;
  } else {
   $11 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($9,$1)|0);
   if ($11) {
    label = 4;
   }
  }
  if ((label|0) == 4) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26370);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  }
  $12 = HEAP32[$9>>2]|0;
  $13 = ((($12)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vii[$14 & 1023]($9,$1);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13ReferenceTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $2&1;
 HEAP32[$0>>2] = $1;
 $4 = ((($0)) + 4|0);
 $5 = HEAP8[$1>>0]|0;
 HEAP8[$4>>0] = $5;
 $6 = ((($0)) + 5|0);
 HEAP8[$6>>0] = 1;
 HEAP8[$1>>0] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType8collapseERNS_12OutputStreamE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 12|0);
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$3>>2]|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$4>>2]|0;
 HEAP32[$6>>2] = $7;
 $$in = $7;$21 = $5;
 while(1) {
  $8 = $$in;
  $9 = $$in;
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($10)) + 12|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (FUNCTION_TABLE_iii[$12 & 1023]($8,$2)|0);
  $14 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($13)|0);
  $15 = ($14<<24>>24)==(12);
  if (!($15)) {
   break;
  }
  $16 = ((($13)) + 8|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$6>>2] = $17;
  $18 = ((($13)) + 12|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)<($21|0);
  $22 = $20 ? $19 : $21;
  HEAP32[$0>>2] = $22;
  $$in = $17;$21 = $22;
 }
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 6|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)==(2);
 if ($4) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (FUNCTION_TABLE_iii[$8 & 1023]($0,$1)|0);
  $$0 = $9;
 } else {
  $5 = ($3<<24>>24)==(0);
  $$0 = $5;
 }
 return ($$0|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 7|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)==(2);
 if ($4) {
  $6 = HEAP32[$0>>2]|0;
  $7 = ((($6)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (FUNCTION_TABLE_iii[$8 & 1023]($0,$1)|0);
  $$0 = $9;
 } else {
  $5 = ($3<<24>>24)==(0);
  $$0 = $5;
 }
 return ($$0|0);
}
function __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 5|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = ((($0)) + 4|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = HEAP32[$0>>2]|0;
  HEAP8[$6>>0] = $5;
 }
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP8[$1>>0]|0;
 return ($2|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 5|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = ($3<<24>>24)==(2);
 if ($4) {
  $6 = HEAP32[$0>>2]|0;
  $7 = HEAP32[$6>>2]|0;
  $8 = (FUNCTION_TABLE_iii[$7 & 1023]($0,$1)|0);
  $$0 = $8;
 } else {
  $5 = ($3<<24>>24)==(0);
  $$0 = $5;
 }
 return ($$0|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11PointerTypeEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11PointerTypeC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle11PointerTypeC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 5|0);
 $3 = HEAP8[$2>>0]|0;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,11,$3,1,1);
 HEAP32[$0>>2] = (14756);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle11PointerType19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($3,$1)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle11PointerType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy4 = sp + 88|0;
 $tmpcast$byval_copy = sp + 80|0;
 $$byval_copy3 = sp + 72|0;
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 16|0;
 $6 = sp;
 $7 = sp + 8|0;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($9)|0);
 $11 = ($10<<24>>24)==(10);
 do {
  if ($11) {
   $12 = (__ZNK12_GLOBAL__N_116itanium_demangle13ObjCProtoName12isObjCObjectEv($9)|0);
   if ($12) {
    $23 = HEAP32[$8>>2]|0;
    __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26445);
    ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
    __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
    $24 = ((($23)) + 12|0);
    $25 = $24;
    $26 = $25;
    $27 = HEAP32[$26>>2]|0;
    $28 = (($25) + 4)|0;
    $29 = $28;
    $30 = HEAP32[$29>>2]|0;
    $31 = $6;
    $32 = $31;
    HEAP32[$32>>2] = $27;
    $33 = (($31) + 4)|0;
    $34 = $33;
    HEAP32[$34>>2] = $30;
    ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
    __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
    __ZN12_GLOBAL__N_110StringViewC2EPKc($7,26449);
    ;HEAP32[$$byval_copy4>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$7+4>>2]|0;
    __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
    break;
   } else {
    $$pre = HEAP32[$8>>2]|0;
    $14 = $$pre;
    label = 4;
    break;
   }
  } else {
   $14 = $9;
   label = 4;
  }
 } while(0);
 if ((label|0) == 4) {
  $13 = HEAP32[$14>>2]|0;
  $15 = ((($13)) + 16|0);
  $16 = HEAP32[$15>>2]|0;
  FUNCTION_TABLE_vii[$16 & 1023]($14,$1);
  $17 = HEAP32[$8>>2]|0;
  $18 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($17,$1)|0);
  if ($18) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26372);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  }
  $19 = HEAP32[$8>>2]|0;
  $20 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($19,$1)|0);
  if ($20) {
   label = 8;
  } else {
   $21 = HEAP32[$8>>2]|0;
   $22 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($21,$1)|0);
   if ($22) {
    label = 8;
   }
  }
  if ((label|0) == 8) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26374);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26443);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 }
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle11PointerType10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($4)|0);
 $6 = ($5<<24>>24)==(10);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle13ObjCProtoName12isObjCObjectEv($4)|0);
  if (!($7)) {
   $$pre = HEAP32[$3>>2]|0;
   $8 = $$pre;
   label = 4;
  }
 } else {
  $8 = $4;
  label = 4;
 }
 if ((label|0) == 4) {
  $9 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($8,$1)|0);
  if ($9) {
   label = 6;
  } else {
   $10 = HEAP32[$3>>2]|0;
   $11 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($10,$1)|0);
   if ($11) {
    label = 6;
   }
  }
  if ((label|0) == 6) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26370);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  }
  $12 = HEAP32[$3>>2]|0;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  FUNCTION_TABLE_vii[$15 & 1023]($12,$1);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle11PointerTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ObjCProtoName12isObjCObjectEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($4)|0);
 $6 = ($5<<24>>24)==(7);
 if ($6) {
  __ZNK12_GLOBAL__N_116itanium_demangle8NameType7getNameEv($1,$4);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26431);
  $7 = (__ZN12_GLOBAL__N_1eqERKNS_10StringViewES2_($1,$2)|0);
  $8 = $7;
 } else {
  $8 = 0;
 }
 STACKTOP = sp;return ($8|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle8NameType7getNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $0;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZN12_GLOBAL__N_1eqERKNS_10StringViewES2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$08$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($0)|0);
 $3 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($1)|0);
 $4 = ($2|0)==($3|0);
 L1: do {
  if ($4) {
   $5 = (__ZNK12_GLOBAL__N_110StringView5beginEv($0)|0);
   $6 = (__ZNK12_GLOBAL__N_110StringView3endEv($0)|0);
   $7 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
   $$0$i$i = $7;$$08$i$i = $5;
   while(1) {
    $8 = ($$08$i$i|0)==($6|0);
    if ($8) {
     $14 = 1;
     break L1;
    }
    $9 = HEAP8[$$08$i$i>>0]|0;
    $10 = HEAP8[$$0$i$i>>0]|0;
    $11 = ($9<<24>>24)==($10<<24>>24);
    if (!($11)) {
     $14 = 0;
     break L1;
    }
    $12 = ((($$08$i$i)) + 1|0);
    $13 = ((($$0$i$i)) + 1|0);
    $$0$i$i = $13;$$08$i$i = $12;
   }
  } else {
   $14 = 0;
  }
 } while(0);
 return ($14|0);
}
function __ZNK12_GLOBAL__N_110StringView3endEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20NameWithTemplateArgsEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgsC2EPNS0_4NodeES3_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgsC2EPNS0_4NodeES3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,32,1,1,1);
 HEAP32[$0>>2] = (14800);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgs9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($3,$1);
 $4 = ((($0)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($5,$1);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgs11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($0,$3);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgsD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEC2EOS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEC2Ev($0);
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($1)|0);
 if ($2) {
  $3 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5beginEv($1)|0);
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE3endEv($1)|0);
  $5 = $4;
  $6 = $3;
  $7 = (($5) - ($6))|0;
  $8 = ($7|0)==(0);
  if (!($8)) {
   $9 = HEAP32[$0>>2]|0;
   _memmove(($9|0),($3|0),($7|0))|0;
  }
  $10 = HEAP32[$0>>2]|0;
  $11 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($1)|0);
  $12 = (($10) + ($11<<2)|0);
  $13 = ((($0)) + 4|0);
  HEAP32[$13>>2] = $12;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($1);
 } else {
  $14 = HEAP32[$1>>2]|0;
  HEAP32[$0>>2] = $14;
  $15 = ((($1)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($0)) + 4|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($1)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($0)) + 8|0);
  HEAP32[$20>>2] = $19;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE11clearInlineEv($1);
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($0) {
 $0 = $0|0;
 var $$5 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $4 = $3 << 24 >> 24;
 L1: do {
  switch ($4|0) {
  case 88:  {
   $5 = HEAP32[$0>>2]|0;
   $6 = ((($5)) + 1|0);
   HEAP32[$0>>2] = $6;
   $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($7)|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$5 = 0;
   } else {
    $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    $spec$select = $10 ? $8 : 0;
    STACKTOP = sp;return ($spec$select|0);
   }
   break;
  }
  case 74:  {
   $11 = HEAP32[$0>>2]|0;
   $12 = ((($11)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = ((($0)) + 8|0);
   $14 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($13)|0);
   while(1) {
    $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    if ($15) {
     label = 9;
     break;
    }
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($16)|0);
    HEAP32[$1>>2] = $17;
    $18 = ($17|0)==(0|0);
    if ($18) {
     label = 8;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($13,$1);
   }
   if ((label|0) == 8) {
    $$5 = 0;
    break L1;
   }
   else if ((label|0) == 9) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($2,$0,$14);
    $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20TemplateArgumentPackEJRNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
    $$5 = $19;
    break L1;
   }
   break;
  }
  case 76:  {
   $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $21 = ($20<<24>>24)==(90);
   if (!($21)) {
    $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseExprPrimaryEv($28)|0);
    $$5 = $29;
    break L1;
   }
   $22 = HEAP32[$0>>2]|0;
   $23 = ((($22)) + 2|0);
   HEAP32[$0>>2] = $23;
   $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($24)|0);
   $26 = ($25|0)==(0|0);
   if ($26) {
    $$5 = 0;
   } else {
    $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    $spec$select13 = $27 ? $25 : 0;
    $$5 = $spec$select13;
   }
   break;
  }
  default: {
   $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $31 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($30)|0);
   $$5 = $31;
  }
  }
 } while(0);
 STACKTOP = sp;return ($$5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEaSEOS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($1)|0);
 $3 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($0)|0);
 do {
  if ($2) {
   if (!($3)) {
    $4 = HEAP32[$0>>2]|0;
    _free($4);
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE11clearInlineEv($0);
   }
   $5 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5beginEv($1)|0);
   $6 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE3endEv($1)|0);
   $7 = $6;
   $8 = $5;
   $9 = (($7) - ($8))|0;
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = HEAP32[$0>>2]|0;
    _memmove(($11|0),($5|0),($9|0))|0;
   }
   $12 = HEAP32[$0>>2]|0;
   $13 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($1)|0);
   $14 = (($12) + ($13<<2)|0);
   $15 = ((($0)) + 4|0);
   HEAP32[$15>>2] = $14;
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($1);
  } else {
   if ($3) {
    $16 = HEAP32[$1>>2]|0;
    HEAP32[$0>>2] = $16;
    $17 = ((($1)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($0)) + 4|0);
    HEAP32[$19>>2] = $18;
    $20 = ((($1)) + 8|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ((($0)) + 8|0);
    HEAP32[$22>>2] = $21;
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE11clearInlineEv($1);
    break;
   } else {
    $23 = HEAP32[$0>>2]|0;
    $24 = HEAP32[$1>>2]|0;
    HEAP32[$0>>2] = $24;
    HEAP32[$1>>2] = $23;
    $25 = ((($0)) + 4|0);
    $26 = ((($1)) + 4|0);
    $27 = HEAP32[$25>>2]|0;
    $28 = HEAP32[$26>>2]|0;
    HEAP32[$25>>2] = $28;
    HEAP32[$26>>2] = $27;
    $29 = ((($0)) + 8|0);
    $30 = ((($1)) + 8|0);
    $31 = HEAP32[$29>>2]|0;
    $32 = HEAP32[$30>>2]|0;
    HEAP32[$29>>2] = $32;
    HEAP32[$30>>2] = $31;
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5clearEv($1);
    break;
   }
  }
 } while(0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle20TemplateArgumentPack11getElementsEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $0;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ParameterPackEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13ParameterPackEJNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE9push_backERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($0)|0);
  $8 = $7 << 1;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE7reserveEm($0,$8);
  $$pre = HEAP32[$2>>2]|0;
  $11 = $$pre;
 } else {
  $11 = $3;
 }
 $9 = HEAP32[$1>>2]|0;
 $10 = ((($11)) + 4|0);
 HEAP32[$2>>2] = $10;
 HEAP32[$11>>2] = $9;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5beginEv($3)|0);
 $5 = (($4) + ($2<<2)|0);
 $6 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE3endEv($3)|0);
 __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13makeNodeArrayIPPNS0_4NodeEEENS0_9NodeArrayET_SB_($0,$1,$5,$6);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8dropBackEm($3,$2);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12TemplateArgsEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12TemplateArgsEJNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12TemplateArgsEJNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12TemplateArgsC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle12TemplateArgsC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,30,1,1,1);
 HEAP32[$0>>2] = (14844);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12TemplateArgs9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26556);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($5,$1);
 $6 = (__ZNK12_GLOBAL__N_112OutputStream4backEv($1)|0);
 $7 = ($6<<24>>24)==(62);
 if ($7) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26372);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26449);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12TemplateArgsD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$off0 = 0, $$018 = 0, $$1$off0 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 4|0);
 $$0$off0 = 1;$$018 = 0;
 while(1) {
  $4 = HEAP32[$3>>2]|0;
  $5 = ($$018|0)==($4|0);
  if ($5) {
   break;
  }
  $6 = (__ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($1)|0);
  if (!($$0$off0)) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26558);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  }
  $7 = (__ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($1)|0);
  $8 = HEAP32[$0>>2]|0;
  $9 = (($8) + ($$018<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($10,$1);
  $11 = (__ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($1)|0);
  $12 = ($7|0)==($11|0);
  if ($12) {
   __ZN12_GLOBAL__N_112OutputStream18setCurrentPositionEm($1,$6);
   $$1$off0 = $$0$off0;
  } else {
   $$1$off0 = 0;
  }
  $13 = (($$018) + 1)|0;
  $$0$off0 = $$1$off0;$$018 = $13;
 }
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_112OutputStream4backEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = 0;
 } else {
  $4 = (($2) + -1)|0;
  $5 = HEAP32[$0>>2]|0;
  $6 = (($5) + ($4)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7;
 }
 return ($8|0);
}
function __ZN12_GLOBAL__N_112OutputStream18setCurrentPositionEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE3endEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13makeNodeArrayIPPNS0_4NodeEEENS0_9NodeArrayET_SB_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $3;
 $5 = $2;
 $6 = (($4) - ($5))|0;
 $7 = $6 >> 2;
 $8 = ((($1)) + 368|0);
 $9 = (__ZN12_GLOBAL__N_116DefaultAllocator17allocateNodeArrayEm($8,$7)|0);
 $10 = ($6|0)==(0);
 if (!($10)) {
  _memmove(($9|0),($2|0),($6|0))|0;
 }
 __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2EPPNS0_4NodeEm($0,$9,$7);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8dropBackEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (($2) + ($1<<2)|0);
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = $3;
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator17allocateNodeArrayEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 << 2;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,$2)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2EPPNS0_4NodeEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 $5 = $4 >> 2;
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE7reserveEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in = 0, $$pre$phi11Z2D = 0, $$pre10 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($0)|0);
 $3 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE8isInlineEv($0)|0);
 do {
  if ($3) {
   $4 = $1 << 2;
   $5 = (_malloc($4)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __ZSt9terminatev();
    // unreachable;
   }
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($0)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $7;
   $11 = (($9) - ($10))|0;
   $12 = ($11|0)==(0);
   if (!($12)) {
    _memmove(($5|0),($7|0),($11|0))|0;
   }
   HEAP32[$0>>2] = $5;
   $$in = $5;$$pre$phi11Z2D = $8;
  } else {
   $13 = HEAP32[$0>>2]|0;
   $14 = $1 << 2;
   $15 = (_realloc($13,$14)|0);
   HEAP32[$0>>2] = $15;
   $16 = ($15|0)==(0|0);
   if ($16) {
    __ZSt9terminatev();
    // unreachable;
   } else {
    $$pre10 = ((($0)) + 4|0);
    $$in = $15;$$pre$phi11Z2D = $$pre10;
    break;
   }
  }
 } while(0);
 $17 = (($$in) + ($2<<2)|0);
 HEAP32[$$pre$phi11Z2D>>2] = $17;
 $18 = (($$in) + ($1<<2)|0);
 $19 = ((($0)) + 8|0);
 HEAP32[$19>>2] = $18;
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13ParameterPackEJNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13ParameterPackC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13ParameterPackC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$05$i = 0, $$05$i2 = 0, $$05$i4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,27,1,1,1);
 HEAP32[$0>>2] = (14888);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 $13 = ((($0)) + 5|0);
 HEAP8[$13>>0] = 2;
 $14 = ((($0)) + 7|0);
 HEAP8[$14>>0] = 2;
 $15 = ((($0)) + 6|0);
 HEAP8[$15>>0] = 2;
 $16 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($2)|0);
 $17 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($2)|0);
 $$05$i = $16;
 while(1) {
  $18 = ($$05$i|0)==($17|0);
  if ($18) {
   label = 4;
   break;
  }
  $19 = HEAP32[$$05$i>>2]|0;
  $20 = (__ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE_clES4_($19)|0);
  $21 = ((($$05$i)) + 4|0);
  if ($20) {
   $$05$i = $21;
  } else {
   break;
  }
 }
 if ((label|0) == 4) {
  HEAP8[$15>>0] = 1;
 }
 $22 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($2)|0);
 $23 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($2)|0);
 $$05$i2 = $22;
 while(1) {
  $24 = ($$05$i2|0)==($23|0);
  if ($24) {
   label = 8;
   break;
  }
  $25 = HEAP32[$$05$i2>>2]|0;
  $26 = (__ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE0_clES4_($25)|0);
  $27 = ((($$05$i2)) + 4|0);
  if ($26) {
   $$05$i2 = $27;
  } else {
   break;
  }
 }
 if ((label|0) == 8) {
  HEAP8[$14>>0] = 1;
 }
 $28 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($2)|0);
 $29 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($2)|0);
 $$05$i4 = $28;
 while(1) {
  $30 = ($$05$i4|0)==($29|0);
  if ($30) {
   label = 12;
   break;
  }
  $31 = HEAP32[$$05$i4>>2]|0;
  $32 = (__ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE1_clES4_($31)|0);
  $33 = ((($$05$i4)) + 4|0);
  if ($32) {
   $$05$i4 = $33;
  } else {
   break;
  }
 }
 if ((label|0) == 12) {
  HEAP8[$13>>0] = 1;
 }
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5beginEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray3endEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($1) + ($3<<2)|0);
 return ($4|0);
}
function __ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE_clES4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 6|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(1);
 return ($3|0);
}
function __ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE0_clES4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 7|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(1);
 return ($3|0);
}
function __ZZN12_GLOBAL__N_116itanium_demangle13ParameterPackC1ENS0_9NodeArrayEENKUlPNS0_4NodeEE1_clES4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 5|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(1);
 return ($3|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1);
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($4)|0);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($4,$3)|0);
  $8 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($7,$1)|0);
  $9 = $8;
 } else {
  $9 = 0;
 }
 return ($9|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack12hasArraySlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1);
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($4)|0);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($4,$3)|0);
  $8 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($7,$1)|0);
  $9 = $8;
 } else {
  $9 = 0;
 }
 return ($9|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack15hasFunctionSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1);
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($4)|0);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($4,$3)|0);
  $8 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($7,$1)|0);
  $9 = $8;
 } else {
  $9 = 0;
 }
 return ($9|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack13getSyntaxNodeERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1);
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($4)|0);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($4,$3)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (FUNCTION_TABLE_iii[$10 & 1023]($7,$1)|0);
  $12 = $11;
 } else {
  $12 = $0;
 }
 return ($12|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1);
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($4)|0);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($4,$3)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 16|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 1023]($7,$1);
 }
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1);
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($4)|0);
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($4,$3)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 1023]($7,$1);
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13ParameterPackD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack23initializePackExpansionERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(-1);
 if ($4) {
  $5 = ((($0)) + 8|0);
  $6 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($5)|0);
  HEAP32[$2>>2] = $6;
  $7 = ((($1)) + 12|0);
  HEAP32[$7>>2] = 0;
 }
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle9NodeArrayixEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (($2) + ($1<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE11clearInlineEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 44|0);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5beginEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE3endEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$14 = 0, $$15 = 0, $$16 = 0, $$17 = 0, $$2 = 0, $$21 = 0, $$22 = 0, $$23 = 0, $$24 = 0, $$25 = 0, $$26 = 0, $$27 = 0, $$28 = 0, $$29 = 0;
 var $$3 = 0, $$30 = 0, $$31 = 0, $$32 = 0, $$33 = 0, $$34 = 0, $$35 = 0, $$36 = 0, $$37 = 0, $$42 = 0, $$43 = 0, $$47 = 0, $$48 = 0, $$49 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0;
 var $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0, $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0, $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0;
 var $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy31 = 0, $$byval_copy32 = 0, $$byval_copy33 = 0, $$byval_copy34 = 0, $$byval_copy35 = 0, $$byval_copy36 = 0, $$byval_copy37 = 0, $$byval_copy38 = 0, $$byval_copy39 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $isdigit = 0, $isdigittmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 880|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(880|0);
 $$byval_copy39 = sp + 864|0;
 $$byval_copy38 = sp + 856|0;
 $$byval_copy37 = sp + 848|0;
 $$byval_copy36 = sp + 840|0;
 $$byval_copy35 = sp + 832|0;
 $$byval_copy34 = sp + 824|0;
 $$byval_copy33 = sp + 816|0;
 $$byval_copy32 = sp + 808|0;
 $$byval_copy31 = sp + 800|0;
 $$byval_copy30 = sp + 792|0;
 $$byval_copy29 = sp + 784|0;
 $$byval_copy28 = sp + 776|0;
 $$byval_copy27 = sp + 768|0;
 $$byval_copy26 = sp + 760|0;
 $$byval_copy25 = sp + 752|0;
 $$byval_copy24 = sp + 744|0;
 $$byval_copy23 = sp + 736|0;
 $$byval_copy22 = sp + 728|0;
 $$byval_copy21 = sp + 720|0;
 $$byval_copy20 = sp + 712|0;
 $$byval_copy19 = sp + 704|0;
 $$byval_copy18 = sp + 696|0;
 $$byval_copy17 = sp + 688|0;
 $$byval_copy16 = sp + 680|0;
 $$byval_copy15 = sp + 672|0;
 $$byval_copy14 = sp + 664|0;
 $$byval_copy13 = sp + 656|0;
 $$byval_copy12 = sp + 648|0;
 $$byval_copy11 = sp + 640|0;
 $$byval_copy10 = sp + 632|0;
 $$byval_copy9 = sp + 624|0;
 $$byval_copy8 = sp + 616|0;
 $$byval_copy7 = sp + 608|0;
 $$byval_copy6 = sp + 600|0;
 $$byval_copy5 = sp + 592|0;
 $$byval_copy4 = sp + 584|0;
 $$byval_copy3 = sp + 576|0;
 $$byval_copy2 = sp + 568|0;
 $$byval_copy1 = sp + 560|0;
 $$byval_copy = sp + 552|0;
 $1 = sp + 874|0;
 $2 = sp + 544|0;
 $3 = sp + 536|0;
 $4 = sp + 528|0;
 $5 = sp + 520|0;
 $6 = sp + 512|0;
 $7 = sp + 504|0;
 $8 = sp + 500|0;
 $9 = sp + 496|0;
 $10 = sp + 492|0;
 $11 = sp + 488|0;
 $12 = sp + 484|0;
 $13 = sp + 480|0;
 $14 = sp + 472|0;
 $15 = sp + 464|0;
 $16 = sp + 456|0;
 $17 = sp + 448|0;
 $18 = sp + 873|0;
 $19 = sp + 444|0;
 $20 = sp + 440|0;
 $21 = sp + 432|0;
 $22 = sp + 424|0;
 $23 = sp + 872|0;
 $24 = sp + 420|0;
 $25 = sp + 416|0;
 $26 = sp + 412|0;
 $27 = sp + 408|0;
 $28 = sp + 400|0;
 $29 = sp + 392|0;
 $30 = sp + 384|0;
 $31 = sp + 376|0;
 $32 = sp + 368|0;
 $33 = sp + 360|0;
 $34 = sp + 352|0;
 $35 = sp + 348|0;
 $36 = sp + 344|0;
 $37 = sp + 340|0;
 $38 = sp + 336|0;
 $39 = sp + 328|0;
 $40 = sp + 320|0;
 $41 = sp + 312|0;
 $42 = sp + 304|0;
 $43 = sp + 296|0;
 $44 = sp + 288|0;
 $45 = sp + 280|0;
 $46 = sp + 272|0;
 $47 = sp + 264|0;
 $48 = sp + 256|0;
 $49 = sp + 248|0;
 $50 = sp + 240|0;
 $51 = sp + 232|0;
 $52 = sp + 224|0;
 $53 = sp + 216|0;
 $54 = sp + 208|0;
 $55 = sp + 200|0;
 $56 = sp + 192|0;
 $57 = sp + 184|0;
 $58 = sp + 176|0;
 $59 = sp + 168|0;
 $60 = sp + 160|0;
 $61 = sp + 152|0;
 $62 = sp + 144|0;
 $63 = sp + 136|0;
 $64 = sp + 132|0;
 $65 = sp + 128|0;
 $66 = sp + 124|0;
 $67 = sp + 120|0;
 $68 = sp + 116|0;
 $69 = sp + 112|0;
 $70 = sp + 104|0;
 $71 = sp + 96|0;
 $72 = sp + 88|0;
 $73 = sp + 80|0;
 $74 = sp + 72|0;
 $75 = sp + 68|0;
 $76 = sp + 64|0;
 $77 = sp + 60|0;
 $78 = sp + 56|0;
 $79 = sp + 52|0;
 $80 = sp + 48|0;
 $81 = sp + 44|0;
 $82 = sp + 40|0;
 $83 = sp + 32|0;
 $84 = sp + 28|0;
 $85 = sp + 24|0;
 $86 = sp + 20|0;
 $87 = sp + 16|0;
 $88 = sp + 8|0;
 $89 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27087);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $90 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 $91 = $90&1;
 HEAP8[$1>>0] = $91;
 $92 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
 $93 = ($92>>>0)<(2);
 L1: do {
  if ($93) {
   $$49 = 0;
  } else {
   $94 = HEAP32[$0>>2]|0;
   $95 = HEAP8[$94>>0]|0;
   $96 = $95 << 24 >> 24;
   do {
    switch ($96|0) {
    case 76:  {
     $97 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $98 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseExprPrimaryEv($97)|0);
     $$49 = $98;
     break L1;
     break;
    }
    case 84:  {
     $99 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $100 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($99)|0);
     $$49 = $100;
     break L1;
     break;
    }
    case 102:  {
     $101 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
     switch ($101<<24>>24) {
     case 112:  {
      label = 7;
      break;
     }
     case 76:  {
      $102 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,2)|0);
      $103 = $102 << 24 >> 24;
      $isdigittmp = (($103) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if ($isdigit) {
       label = 7;
      } else {
       label = 8;
      }
      break;
     }
     default: {
      label = 8;
     }
     }
     if ((label|0) == 7) {
      $104 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $105 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseFunctionParamEv($104)|0);
      $$49 = $105;
      break L1;
     }
     else if ((label|0) == 8) {
      $106 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $107 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseFoldExprEv($106)|0);
      $$49 = $107;
      break L1;
     }
     break;
    }
    case 97:  {
     $108 = ((($94)) + 1|0);
     $109 = HEAP8[$108>>0]|0;
     $110 = $109 << 24 >> 24;
     switch ($110|0) {
     case 97:  {
      $111 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $111;
      $112 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26378);
      ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
      $113 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($112,$$byval_copy1)|0);
      $$49 = $113;
      break L1;
      break;
     }
     case 100:  {
      $114 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $114;
      $115 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26376);
      ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
      $116 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($115,$$byval_copy2)|0);
      $$49 = $116;
      break L1;
      break;
     }
     case 110:  {
      $117 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $117;
      $118 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26376);
      ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
      $119 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($118,$$byval_copy3)|0);
      $$49 = $119;
      break L1;
      break;
     }
     case 78:  {
      $120 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $120;
      $121 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($6,27090);
      ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$6+4>>2]|0;
      $122 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($121,$$byval_copy4)|0);
      $$49 = $122;
      break L1;
      break;
     }
     case 83:  {
      $123 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $123;
      $124 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($7,27093);
      ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$7+4>>2]|0;
      $125 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($124,$$byval_copy5)|0);
      $$49 = $125;
      break L1;
      break;
     }
     case 116:  {
      $126 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $126;
      $127 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $128 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($127)|0);
      HEAP32[$8>>2] = $128;
      $129 = ($128|0)==(0|0);
      if ($129) {
       $$0 = 0;
      } else {
       $130 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,27095,$8)|0);
       $$0 = $130;
      }
      $$49 = $$0;
      break L1;
      break;
     }
     case 122:  {
      $131 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $131;
      $132 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $133 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($132)|0);
      HEAP32[$9>>2] = $133;
      $134 = ($133|0)==(0|0);
      if ($134) {
       $$1 = 0;
      } else {
       $135 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,27095,$9)|0);
       $$1 = $135;
      }
      $$49 = $$1;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 99:  {
     $136 = ((($94)) + 1|0);
     $137 = HEAP8[$136>>0]|0;
     $138 = $137 << 24 >> 24;
     switch ($138|0) {
     case 99:  {
      $139 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $139;
      $140 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $141 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($140)|0);
      HEAP32[$10>>2] = $141;
      $142 = ($141|0)==(0|0);
      if ($142) {
       $$3 = 0;
      } else {
       $143 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($140)|0);
       HEAP32[$11>>2] = $143;
       $144 = ($143|0)==(0|0);
       if ($144) {
        $$2 = 0;
       } else {
        $145 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA11_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$10,$11)|0);
        $$2 = $145;
       }
       $$3 = $$2;
      }
      $$49 = $$3;
      break L1;
      break;
     }
     case 108:  {
      $146 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $146;
      $147 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $148 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($147)|0);
      HEAP32[$12>>2] = $148;
      $149 = ($148|0)==(0|0);
      do {
       if ($149) {
        $$7 = 0;
       } else {
        $150 = ((($0)) + 8|0);
        $151 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($150)|0);
        while(1) {
         $152 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
         if ($152) {
          label = 33;
          break;
         }
         $153 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($147)|0);
         HEAP32[$13>>2] = $153;
         $154 = ($153|0)==(0|0);
         if ($154) {
          label = 31;
          break;
         }
         __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($150,$13);
        }
        if ((label|0) == 31) {
         $$7 = 0;
         break;
        }
        else if ((label|0) == 33) {
         __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($14,$0,$151);
         $155 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CallExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0,$12,$14)|0);
         $$7 = $155;
         break;
        }
       }
      } while(0);
      $$49 = $$7;
      break L1;
      break;
     }
     case 109:  {
      $156 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $156;
      $157 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($15,27105);
      ;HEAP32[$$byval_copy6>>2]=HEAP32[$15>>2]|0;HEAP32[$$byval_copy6+4>>2]=HEAP32[$15+4>>2]|0;
      $158 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($157,$$byval_copy6)|0);
      $$49 = $158;
      break L1;
      break;
     }
     case 111:  {
      $159 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $159;
      $160 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($16,27107);
      ;HEAP32[$$byval_copy7>>2]=HEAP32[$16>>2]|0;HEAP32[$$byval_copy7+4>>2]=HEAP32[$16+4>>2]|0;
      $161 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($160,$$byval_copy7)|0);
      $$49 = $161;
      break L1;
      break;
     }
     case 118:  {
      $162 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $163 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseConversionExprEv($162)|0);
      $$49 = $163;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 100:  {
     $164 = ((($94)) + 1|0);
     $165 = HEAP8[$164>>0]|0;
     $166 = $165 << 24 >> 24;
     switch ($166|0) {
     case 97:  {
      $167 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $167;
      $168 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $169 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($168)|0);
      HEAP32[$17>>2] = $169;
      $170 = ($169|0)==(0|0);
      if ($170) {
       $$8 = 0;
      } else {
       HEAP8[$18>>0] = 1;
       $171 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10DeleteExprEJRPNS0_4NodeERbbEEES9_DpOT0_($0,$17,$1,$18)|0);
       $$8 = $171;
      }
      $$49 = $$8;
      break L1;
      break;
     }
     case 99:  {
      $172 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $172;
      $173 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $174 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($173)|0);
      HEAP32[$19>>2] = $174;
      $175 = ($174|0)==(0|0);
      if ($175) {
       $$10 = 0;
      } else {
       $176 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($173)|0);
       HEAP32[$20>>2] = $176;
       $177 = ($176|0)==(0|0);
       if ($177) {
        $$9 = 0;
       } else {
        $178 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA13_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$19,$20)|0);
        $$9 = $178;
       }
       $$10 = $$9;
      }
      $$49 = $$10;
      break L1;
      break;
     }
     case 101:  {
      $179 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $179;
      $180 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($21,26443);
      ;HEAP32[$$byval_copy8>>2]=HEAP32[$21>>2]|0;HEAP32[$$byval_copy8+4>>2]=HEAP32[$21+4>>2]|0;
      $181 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($180,$$byval_copy8)|0);
      $$49 = $181;
      break L1;
      break;
     }
     case 108:  {
      $182 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $182;
      $183 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $184 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($183)|0);
      HEAP32[$22>>2] = $184;
      $185 = ($184|0)==(0|0);
      if ($185) {
       $$11 = 0;
      } else {
       HEAP8[$23>>0] = 0;
       $186 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10DeleteExprEJRPNS0_4NodeERbbEEES9_DpOT0_($0,$22,$1,$23)|0);
       $$11 = $186;
      }
      $$49 = $$11;
      break L1;
      break;
     }
     case 110:  {
      $187 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $188 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv($187)|0);
      $$49 = $188;
      break L1;
      break;
     }
     case 115:  {
      $189 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $189;
      $190 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $191 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($190)|0);
      HEAP32[$24>>2] = $191;
      $192 = ($191|0)==(0|0);
      if ($192) {
       $$13 = 0;
      } else {
       $193 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($190)|0);
       HEAP32[$25>>2] = $193;
       $194 = ($193|0)==(0|0);
       if ($194) {
        $$12 = 0;
       } else {
        $195 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA3_KcSA_EEES9_DpOT0_($0,$24,27109,$25)|0);
        $$12 = $195;
       }
       $$13 = $$12;
      }
      $$49 = $$13;
      break L1;
      break;
     }
     case 116:  {
      $196 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $196;
      $197 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $198 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($197)|0);
      HEAP32[$26>>2] = $198;
      $199 = ($198|0)==(0|0);
      if ($199) {
       $$15 = 0;
      } else {
       $200 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($197)|0);
       HEAP32[$27>>2] = $200;
       $201 = ($200|0)==(0|0);
       if ($201) {
        $$14 = 0;
       } else {
        $202 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA2_KcSA_EEES9_DpOT0_($0,$26,$27)|0);
        $$14 = $202;
       }
       $$15 = $$14;
      }
      $$49 = $$15;
      break L1;
      break;
     }
     case 118:  {
      $203 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $203;
      $204 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($28,27112);
      ;HEAP32[$$byval_copy9>>2]=HEAP32[$28>>2]|0;HEAP32[$$byval_copy9+4>>2]=HEAP32[$28+4>>2]|0;
      $205 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($204,$$byval_copy9)|0);
      $$49 = $205;
      break L1;
      break;
     }
     case 86:  {
      $206 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $206;
      $207 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($29,27114);
      ;HEAP32[$$byval_copy10>>2]=HEAP32[$29>>2]|0;HEAP32[$$byval_copy10+4>>2]=HEAP32[$29+4>>2]|0;
      $208 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($207,$$byval_copy10)|0);
      $$49 = $208;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 101:  {
     $209 = ((($94)) + 1|0);
     $210 = HEAP8[$209>>0]|0;
     $211 = $210 << 24 >> 24;
     switch ($211|0) {
     case 111:  {
      $212 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $212;
      $213 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($30,27117);
      ;HEAP32[$$byval_copy11>>2]=HEAP32[$30>>2]|0;HEAP32[$$byval_copy11+4>>2]=HEAP32[$30+4>>2]|0;
      $214 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($213,$$byval_copy11)|0);
      $$49 = $214;
      break L1;
      break;
     }
     case 79:  {
      $215 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $215;
      $216 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($31,27119);
      ;HEAP32[$$byval_copy12>>2]=HEAP32[$31>>2]|0;HEAP32[$$byval_copy12+4>>2]=HEAP32[$31+4>>2]|0;
      $217 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($216,$$byval_copy12)|0);
      $$49 = $217;
      break L1;
      break;
     }
     case 113:  {
      $218 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $218;
      $219 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($32,27122);
      ;HEAP32[$$byval_copy13>>2]=HEAP32[$32>>2]|0;HEAP32[$$byval_copy13+4>>2]=HEAP32[$32+4>>2]|0;
      $220 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($219,$$byval_copy13)|0);
      $$49 = $220;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 103:  {
     $221 = ((($94)) + 1|0);
     $222 = HEAP8[$221>>0]|0;
     $223 = $222 << 24 >> 24;
     switch ($223|0) {
     case 101:  {
      $224 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $224;
      $225 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($33,27125);
      ;HEAP32[$$byval_copy14>>2]=HEAP32[$33>>2]|0;HEAP32[$$byval_copy14+4>>2]=HEAP32[$33+4>>2]|0;
      $226 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($225,$$byval_copy14)|0);
      $$49 = $226;
      break L1;
      break;
     }
     case 116:  {
      $227 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $227;
      $228 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($34,26449);
      ;HEAP32[$$byval_copy15>>2]=HEAP32[$34>>2]|0;HEAP32[$$byval_copy15+4>>2]=HEAP32[$34+4>>2]|0;
      $229 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($228,$$byval_copy15)|0);
      $$49 = $229;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 105:  {
     $230 = ((($94)) + 1|0);
     $231 = HEAP8[$230>>0]|0;
     $232 = $231 << 24 >> 24;
     switch ($232|0) {
     case 120:  {
      $233 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $233;
      $234 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $235 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($234)|0);
      HEAP32[$35>>2] = $235;
      $236 = ($235|0)==(0|0);
      if ($236) {
       $$17 = 0;
      } else {
       $237 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($234)|0);
       HEAP32[$36>>2] = $237;
       $238 = ($237|0)==(0|0);
       if ($238) {
        $$16 = 0;
       } else {
        $239 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_18ArraySubscriptExprEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$35,$36)|0);
        $$16 = $239;
       }
       $$17 = $$16;
      }
      $$49 = $$17;
      break L1;
      break;
     }
     case 108:  {
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     $240 = ((($94)) + 2|0);
     HEAP32[$0>>2] = $240;
     $241 = ((($0)) + 8|0);
     $242 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($241)|0);
     while(1) {
      $243 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if ($243) {
       label = 82;
       break;
      }
      $244 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $245 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($244)|0);
      HEAP32[$37>>2] = $245;
      $246 = ($245|0)==(0|0);
      if ($246) {
       label = 81;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($241,$37);
     }
     if ((label|0) == 81) {
      $$49 = 0;
      break L1;
     }
     else if ((label|0) == 82) {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($39,$0,$242);
      $247 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12InitListExprEJDnNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$38,$39)|0);
      $$49 = $247;
      break L1;
     }
     break;
    }
    case 108:  {
     $248 = ((($94)) + 1|0);
     $249 = HEAP8[$248>>0]|0;
     $250 = $249 << 24 >> 24;
     switch ($250|0) {
     case 101:  {
      $251 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $251;
      $252 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($40,27128);
      ;HEAP32[$$byval_copy16>>2]=HEAP32[$40>>2]|0;HEAP32[$$byval_copy16+4>>2]=HEAP32[$40+4>>2]|0;
      $253 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($252,$$byval_copy16)|0);
      $$49 = $253;
      break L1;
      break;
     }
     case 115:  {
      $254 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $254;
      $255 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($41,27131);
      ;HEAP32[$$byval_copy17>>2]=HEAP32[$41>>2]|0;HEAP32[$$byval_copy17+4>>2]=HEAP32[$41+4>>2]|0;
      $256 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($255,$$byval_copy17)|0);
      $$49 = $256;
      break L1;
      break;
     }
     case 83:  {
      $257 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $257;
      $258 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($42,27134);
      ;HEAP32[$$byval_copy18>>2]=HEAP32[$42>>2]|0;HEAP32[$$byval_copy18+4>>2]=HEAP32[$42+4>>2]|0;
      $259 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($258,$$byval_copy18)|0);
      $$49 = $259;
      break L1;
      break;
     }
     case 116:  {
      $260 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $260;
      $261 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($43,26556);
      ;HEAP32[$$byval_copy19>>2]=HEAP32[$43>>2]|0;HEAP32[$$byval_copy19+4>>2]=HEAP32[$43+4>>2]|0;
      $262 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($261,$$byval_copy19)|0);
      $$49 = $262;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 109:  {
     $263 = ((($94)) + 1|0);
     $264 = HEAP8[$263>>0]|0;
     $265 = $264 << 24 >> 24;
     switch ($265|0) {
     case 105:  {
      $266 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $266;
      $267 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($44,26977);
      ;HEAP32[$$byval_copy20>>2]=HEAP32[$44>>2]|0;HEAP32[$$byval_copy20+4>>2]=HEAP32[$44+4>>2]|0;
      $268 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($267,$$byval_copy20)|0);
      $$49 = $268;
      break L1;
      break;
     }
     case 73:  {
      $269 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $269;
      $270 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($45,27138);
      ;HEAP32[$$byval_copy21>>2]=HEAP32[$45>>2]|0;HEAP32[$$byval_copy21+4>>2]=HEAP32[$45+4>>2]|0;
      $271 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($270,$$byval_copy21)|0);
      $$49 = $271;
      break L1;
      break;
     }
     case 108:  {
      $272 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $272;
      $273 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($46,26443);
      ;HEAP32[$$byval_copy22>>2]=HEAP32[$46>>2]|0;HEAP32[$$byval_copy22+4>>2]=HEAP32[$46+4>>2]|0;
      $274 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($273,$$byval_copy22)|0);
      $$49 = $274;
      break L1;
      break;
     }
     case 76:  {
      $275 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $275;
      $276 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($47,27141);
      ;HEAP32[$$byval_copy23>>2]=HEAP32[$47>>2]|0;HEAP32[$$byval_copy23+4>>2]=HEAP32[$47+4>>2]|0;
      $277 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($276,$$byval_copy23)|0);
      $$49 = $277;
      break L1;
      break;
     }
     case 109:  {
      $278 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $278;
      $279 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
      if ($279) {
       $280 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       __ZN12_GLOBAL__N_110StringViewC2EPKc($48,27144);
       ;HEAP32[$$byval_copy24>>2]=HEAP32[$48>>2]|0;HEAP32[$$byval_copy24+4>>2]=HEAP32[$48+4>>2]|0;
       $281 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($280,$$byval_copy24)|0);
       $$49 = $281;
       break L1;
      }
      $282 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $283 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($282)|0);
      HEAP32[$49>>2] = $283;
      $284 = ($283|0)==(0|0);
      if ($284) {
       $$21 = 0;
      } else {
       $285 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PostfixExprEJRPNS0_4NodeERA3_KcEEES9_DpOT0_($0,$49,27144)|0);
       $$21 = $285;
      }
      $$49 = $$21;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 110:  {
     $286 = ((($94)) + 1|0);
     $287 = HEAP8[$286>>0]|0;
     $288 = $287 << 24 >> 24;
     switch ($288|0) {
     case 119: case 97:  {
      $289 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $290 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseNewExprEv($289)|0);
      $$49 = $290;
      break L1;
      break;
     }
     case 101:  {
      $291 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $291;
      $292 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($50,27147);
      ;HEAP32[$$byval_copy25>>2]=HEAP32[$50>>2]|0;HEAP32[$$byval_copy25+4>>2]=HEAP32[$50+4>>2]|0;
      $293 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($292,$$byval_copy25)|0);
      $$49 = $293;
      break L1;
      break;
     }
     case 103:  {
      $294 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $294;
      $295 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($51,26977);
      ;HEAP32[$$byval_copy26>>2]=HEAP32[$51>>2]|0;HEAP32[$$byval_copy26+4>>2]=HEAP32[$51+4>>2]|0;
      $296 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($295,$$byval_copy26)|0);
      $$49 = $296;
      break L1;
      break;
     }
     case 116:  {
      $297 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $297;
      $298 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($52,27150);
      ;HEAP32[$$byval_copy27>>2]=HEAP32[$52>>2]|0;HEAP32[$$byval_copy27+4>>2]=HEAP32[$52+4>>2]|0;
      $299 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($298,$$byval_copy27)|0);
      $$49 = $299;
      break L1;
      break;
     }
     case 120:  {
      $300 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $300;
      $301 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $302 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($301)|0);
      HEAP32[$53>>2] = $302;
      $303 = ($302|0)==(0|0);
      if ($303) {
       $$22 = 0;
      } else {
       $304 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA11_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$53)|0);
       $$22 = $304;
      }
      $$49 = $$22;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 111:  {
     $305 = ((($94)) + 1|0);
     $306 = HEAP8[$305>>0]|0;
     $307 = $306 << 24 >> 24;
     switch ($307|0) {
     case 110:  {
      $308 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $309 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv($308)|0);
      $$49 = $309;
      break L1;
      break;
     }
     case 111:  {
      $310 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $310;
      $311 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($54,27152);
      ;HEAP32[$$byval_copy28>>2]=HEAP32[$54>>2]|0;HEAP32[$$byval_copy28+4>>2]=HEAP32[$54+4>>2]|0;
      $312 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($311,$$byval_copy28)|0);
      $$49 = $312;
      break L1;
      break;
     }
     case 114:  {
      $313 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $313;
      $314 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($55,27155);
      ;HEAP32[$$byval_copy29>>2]=HEAP32[$55>>2]|0;HEAP32[$$byval_copy29+4>>2]=HEAP32[$55+4>>2]|0;
      $315 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($314,$$byval_copy29)|0);
      $$49 = $315;
      break L1;
      break;
     }
     case 82:  {
      $316 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $316;
      $317 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($56,27157);
      ;HEAP32[$$byval_copy30>>2]=HEAP32[$56>>2]|0;HEAP32[$$byval_copy30+4>>2]=HEAP32[$56+4>>2]|0;
      $318 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($317,$$byval_copy30)|0);
      $$49 = $318;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 112:  {
     $319 = ((($94)) + 1|0);
     $320 = HEAP8[$319>>0]|0;
     $321 = $320 << 24 >> 24;
     switch ($321|0) {
     case 109:  {
      $322 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $322;
      $323 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($57,27160);
      ;HEAP32[$$byval_copy31>>2]=HEAP32[$57>>2]|0;HEAP32[$$byval_copy31+4>>2]=HEAP32[$57+4>>2]|0;
      $324 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($323,$$byval_copy31)|0);
      $$49 = $324;
      break L1;
      break;
     }
     case 108:  {
      $325 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $325;
      $326 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($58,27164);
      ;HEAP32[$$byval_copy32>>2]=HEAP32[$58>>2]|0;HEAP32[$$byval_copy32+4>>2]=HEAP32[$58+4>>2]|0;
      $327 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($326,$$byval_copy32)|0);
      $$49 = $327;
      break L1;
      break;
     }
     case 76:  {
      $328 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $328;
      $329 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($59,27166);
      ;HEAP32[$$byval_copy33>>2]=HEAP32[$59>>2]|0;HEAP32[$$byval_copy33+4>>2]=HEAP32[$59+4>>2]|0;
      $330 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($329,$$byval_copy33)|0);
      $$49 = $330;
      break L1;
      break;
     }
     case 112:  {
      $331 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $331;
      $332 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
      if ($332) {
       $333 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       __ZN12_GLOBAL__N_110StringViewC2EPKc($60,27169);
       ;HEAP32[$$byval_copy34>>2]=HEAP32[$60>>2]|0;HEAP32[$$byval_copy34+4>>2]=HEAP32[$60+4>>2]|0;
       $334 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($333,$$byval_copy34)|0);
       $$49 = $334;
       break L1;
      }
      $335 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $336 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($335)|0);
      HEAP32[$61>>2] = $336;
      $337 = ($336|0)==(0|0);
      if ($337) {
       $$23 = 0;
      } else {
       $338 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PostfixExprEJRPNS0_4NodeERA3_KcEEES9_DpOT0_($0,$61,27169)|0);
       $$23 = $338;
      }
      $$49 = $$23;
      break L1;
      break;
     }
     case 115:  {
      $339 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $339;
      $340 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($62,27164);
      ;HEAP32[$$byval_copy35>>2]=HEAP32[$62>>2]|0;HEAP32[$$byval_copy35+4>>2]=HEAP32[$62+4>>2]|0;
      $341 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($340,$$byval_copy35)|0);
      $$49 = $341;
      break L1;
      break;
     }
     case 116:  {
      $342 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $342;
      $343 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $344 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($343)|0);
      HEAP32[$63>>2] = $344;
      $345 = ($344|0)==(0|0);
      if ($345) {
       $$25 = 0;
      } else {
       $346 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($343)|0);
       HEAP32[$64>>2] = $346;
       $347 = ($346|0)==(0|0);
       if ($347) {
        $$24 = 0;
       } else {
        $348 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA3_KcSA_EEES9_DpOT0_($0,$63,27172,$64)|0);
        $$24 = $348;
       }
       $$25 = $$24;
      }
      $$49 = $$25;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 113:  {
     $349 = ((($94)) + 1|0);
     $350 = HEAP8[$349>>0]|0;
     $351 = ($350<<24>>24)==(117);
     if (!($351)) {
      $$49 = 0;
      break L1;
     }
     $352 = ((($94)) + 2|0);
     HEAP32[$0>>2] = $352;
     $353 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $354 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($353)|0);
     HEAP32[$65>>2] = $354;
     $355 = ($354|0)==(0|0);
     if ($355) {
      $$28 = 0;
     } else {
      $356 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($353)|0);
      HEAP32[$66>>2] = $356;
      $357 = ($356|0)==(0|0);
      if ($357) {
       $$27 = 0;
      } else {
       $358 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($353)|0);
       HEAP32[$67>>2] = $358;
       $359 = ($358|0)==(0|0);
       if ($359) {
        $$26 = 0;
       } else {
        $360 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15ConditionalExprEJRPNS0_4NodeESA_SA_EEES9_DpOT0_($0,$65,$66,$67)|0);
        $$26 = $360;
       }
       $$27 = $$26;
      }
      $$28 = $$27;
     }
     $$49 = $$28;
     break L1;
     break;
    }
    case 114:  {
     $361 = ((($94)) + 1|0);
     $362 = HEAP8[$361>>0]|0;
     $363 = $362 << 24 >> 24;
     switch ($363|0) {
     case 99:  {
      $364 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $364;
      $365 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $366 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($365)|0);
      HEAP32[$68>>2] = $366;
      $367 = ($366|0)==(0|0);
      if ($367) {
       $$30 = 0;
      } else {
       $368 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($365)|0);
       HEAP32[$69>>2] = $368;
       $369 = ($368|0)==(0|0);
       if ($369) {
        $$29 = 0;
       } else {
        $370 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA17_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$68,$69)|0);
        $$29 = $370;
       }
       $$30 = $$29;
      }
      $$49 = $$30;
      break L1;
      break;
     }
     case 109:  {
      $371 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $371;
      $372 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($70,27175);
      ;HEAP32[$$byval_copy36>>2]=HEAP32[$70>>2]|0;HEAP32[$$byval_copy36+4>>2]=HEAP32[$70+4>>2]|0;
      $373 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($372,$$byval_copy36)|0);
      $$49 = $373;
      break L1;
      break;
     }
     case 77:  {
      $374 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $374;
      $375 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($71,27177);
      ;HEAP32[$$byval_copy37>>2]=HEAP32[$71>>2]|0;HEAP32[$$byval_copy37+4>>2]=HEAP32[$71+4>>2]|0;
      $376 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($375,$$byval_copy37)|0);
      $$49 = $376;
      break L1;
      break;
     }
     case 115:  {
      $377 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $377;
      $378 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($72,27180);
      ;HEAP32[$$byval_copy38>>2]=HEAP32[$72>>2]|0;HEAP32[$$byval_copy38+4>>2]=HEAP32[$72+4>>2]|0;
      $379 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($378,$$byval_copy38)|0);
      $$49 = $379;
      break L1;
      break;
     }
     case 83:  {
      $380 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $380;
      $381 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      __ZN12_GLOBAL__N_110StringViewC2EPKc($73,27183);
      ;HEAP32[$$byval_copy39>>2]=HEAP32[$73>>2]|0;HEAP32[$$byval_copy39+4>>2]=HEAP32[$73+4>>2]|0;
      $382 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($381,$$byval_copy39)|0);
      $$49 = $382;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 115:  {
     $383 = ((($94)) + 1|0);
     $384 = HEAP8[$383>>0]|0;
     $385 = $384 << 24 >> 24;
     switch ($385|0) {
     case 99:  {
      $386 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $386;
      $387 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $388 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($387)|0);
      HEAP32[$74>>2] = $388;
      $389 = ($388|0)==(0|0);
      if ($389) {
       $$32 = 0;
      } else {
       $390 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($387)|0);
       HEAP32[$75>>2] = $390;
       $391 = ($390|0)==(0|0);
       if ($391) {
        $$31 = 0;
       } else {
        $392 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA12_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$74,$75)|0);
        $$31 = $392;
       }
       $$32 = $$31;
      }
      $$49 = $$32;
      break L1;
      break;
     }
     case 112:  {
      $393 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $393;
      $394 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $395 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($394)|0);
      HEAP32[$76>>2] = $395;
      $396 = ($395|0)==(0|0);
      if ($396) {
       $$33 = 0;
      } else {
       $397 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ParameterPackExpansionEJRPNS0_4NodeEEEES9_DpOT0_($0,$76)|0);
       $$33 = $397;
      }
      $$49 = $$33;
      break L1;
      break;
     }
     case 114:  {
      $398 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $399 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv($398)|0);
      $$49 = $399;
      break L1;
      break;
     }
     case 116:  {
      $400 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $400;
      $401 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $402 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($401)|0);
      HEAP32[$77>>2] = $402;
      $403 = ($402|0)==(0|0);
      if ($403) {
       $$34 = 0;
      } else {
       $404 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,27187,$77)|0);
       $$34 = $404;
      }
      $$49 = $$34;
      break L1;
      break;
     }
     case 122:  {
      $405 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $405;
      $406 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $407 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($406)|0);
      HEAP32[$78>>2] = $407;
      $408 = ($407|0)==(0|0);
      if ($408) {
       $$35 = 0;
      } else {
       $409 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,27187,$78)|0);
       $$35 = $409;
      }
      $$49 = $$35;
      break L1;
      break;
     }
     case 90:  {
      $410 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $410;
      $411 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
      switch ($411<<24>>24) {
      case 84:  {
       $412 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       $413 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($412)|0);
       HEAP32[$79>>2] = $413;
       $414 = ($413|0)==(0|0);
       if ($414) {
        $$36 = 0;
       } else {
        $415 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SizeofParamPackExprEJRPNS0_4NodeEEEES9_DpOT0_($0,$79)|0);
        $$36 = $415;
       }
       $$49 = $$36;
       break L1;
       break;
      }
      case 102:  {
       $416 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       $417 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseFunctionParamEv($416)|0);
       HEAP32[$80>>2] = $417;
       $418 = ($417|0)==(0|0);
       if ($418) {
        $$37 = 0;
       } else {
        $419 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA12_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$80)|0);
        $$37 = $419;
       }
       $$49 = $$37;
       break L1;
       break;
      }
      default: {
       $$49 = 0;
       break L1;
      }
      }
      break;
     }
     case 80:  {
      $420 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $420;
      $421 = ((($0)) + 8|0);
      $422 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($421)|0);
      while(1) {
       $423 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
       if ($423) {
        label = 172;
        break;
       }
       $424 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       $425 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseTemplateArgEv($424)|0);
       HEAP32[$81>>2] = $425;
       $426 = ($425|0)==(0|0);
       if ($426) {
        label = 171;
        break;
       }
       __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($421,$81);
      }
      if ((label|0) == 171) {
       $$49 = 0;
       break L1;
      }
      else if ((label|0) == 172) {
       __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($83,$0,$422);
       $427 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13NodeArrayNodeEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$83)|0);
       HEAP32[$82>>2] = $427;
       $428 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA12_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$82)|0);
       $$49 = $428;
       break L1;
      }
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 116:  {
     $429 = ((($94)) + 1|0);
     $430 = HEAP8[$429>>0]|0;
     $431 = $430 << 24 >> 24;
     switch ($431|0) {
     case 101:  {
      $432 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $432;
      $433 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $434 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($433)|0);
      HEAP32[$84>>2] = $434;
      $435 = ($434|0)==(0|0);
      if ($435) {
       $$42 = 0;
      } else {
       $436 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,27196,$84)|0);
       $$42 = $436;
      }
      $$49 = $$42;
      break L1;
      break;
     }
     case 105:  {
      $437 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $437;
      $438 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $439 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($438)|0);
      HEAP32[$85>>2] = $439;
      $440 = ($439|0)==(0|0);
      if ($440) {
       $$43 = 0;
      } else {
       $441 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,27196,$85)|0);
       $$43 = $441;
      }
      $$49 = $$43;
      break L1;
      break;
     }
     case 108:  {
      $442 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $442;
      $443 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $444 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($443)|0);
      HEAP32[$86>>2] = $444;
      $445 = ($444|0)==(0|0);
      do {
       if ($445) {
        $$47 = 0;
       } else {
        $446 = ((($0)) + 8|0);
        $447 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($446)|0);
        while(1) {
         $448 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
         if ($448) {
          label = 186;
          break;
         }
         $449 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($443)|0);
         HEAP32[$87>>2] = $449;
         $450 = ($449|0)==(0|0);
         if ($450) {
          label = 185;
          break;
         }
         __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($446,$87);
        }
        if ((label|0) == 185) {
         $$47 = 0;
         break;
        }
        else if ((label|0) == 186) {
         __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($88,$0,$447);
         $451 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12InitListExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0,$86,$88)|0);
         $$47 = $451;
         break;
        }
       }
      } while(0);
      $$49 = $$47;
      break L1;
      break;
     }
     case 114:  {
      $452 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $452;
      $453 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA6_KcEEEPNS0_4NodeEDpOT0_($0,27205)|0);
      $$49 = $453;
      break L1;
      break;
     }
     case 119:  {
      $454 = ((($94)) + 2|0);
      HEAP32[$0>>2] = $454;
      $455 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $456 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($455)|0);
      HEAP32[$89>>2] = $456;
      $457 = ($456|0)==(0|0);
      if ($457) {
       $$48 = 0;
      } else {
       $458 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9ThrowExprEJRPNS0_4NodeEEEES9_DpOT0_($0,$89)|0);
       $$48 = $458;
      }
      $$49 = $$48;
      break L1;
      break;
     }
     default: {
      $$49 = 0;
      break L1;
     }
     }
     break;
    }
    case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
     $459 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $460 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv($459)|0);
     $$49 = $460;
     break L1;
     break;
    }
    default: {
     $$49 = 0;
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 STACKTOP = sp;return ($$49|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20TemplateArgumentPackEJRNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20TemplateArgumentPackEJRNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseExprPrimaryEv($0) {
 $0 = $0|0;
 var $$1 = 0, $$2 = 0, $$3 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $$byval_copy16 = sp + 296|0;
 $$byval_copy15 = sp + 288|0;
 $$byval_copy14 = sp + 280|0;
 $$byval_copy13 = sp + 272|0;
 $$byval_copy12 = sp + 264|0;
 $$byval_copy11 = sp + 256|0;
 $$byval_copy10 = sp + 248|0;
 $$byval_copy9 = sp + 240|0;
 $$byval_copy8 = sp + 232|0;
 $$byval_copy7 = sp + 224|0;
 $$byval_copy6 = sp + 216|0;
 $$byval_copy5 = sp + 208|0;
 $$byval_copy4 = sp + 200|0;
 $$byval_copy3 = sp + 192|0;
 $$byval_copy2 = sp + 184|0;
 $$byval_copy1 = sp + 176|0;
 $$byval_copy = sp + 168|0;
 $1 = sp + 160|0;
 $2 = sp + 152|0;
 $3 = sp + 144|0;
 $4 = sp + 136|0;
 $5 = sp + 128|0;
 $6 = sp + 120|0;
 $7 = sp + 112|0;
 $8 = sp + 104|0;
 $9 = sp + 96|0;
 $10 = sp + 88|0;
 $11 = sp + 80|0;
 $12 = sp + 72|0;
 $13 = sp + 64|0;
 $14 = sp + 56|0;
 $15 = sp + 48|0;
 $16 = sp + 40|0;
 $17 = sp + 32|0;
 $18 = sp + 24|0;
 $19 = sp + 16|0;
 $20 = sp + 8|0;
 $21 = sp;
 $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,76)|0);
 L1: do {
  if ($22) {
   $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   $24 = $23 << 24 >> 24;
   do {
    switch ($24|0) {
    case 84:  {
     $$3 = 0;
     break L1;
     break;
    }
    case 119:  {
     $25 = HEAP32[$0>>2]|0;
     $26 = ((($25)) + 1|0);
     HEAP32[$0>>2] = $26;
     $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($1,26660);
     ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
     $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($27,$$byval_copy)|0);
     $$3 = $28;
     break L1;
     break;
    }
    case 98:  {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26668);
     ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
     $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
     if ($29) {
      HEAP32[$3>>2] = 0;
      $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8BoolExprEJiEEEPNS0_4NodeEDpOT0_($0,$3)|0);
      $$3 = $30;
      break L1;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26672);
     ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
     $31 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
     if (!($31)) {
      $$3 = 0;
      break L1;
     }
     HEAP32[$5>>2] = 1;
     $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8BoolExprEJiEEEPNS0_4NodeEDpOT0_($0,$5)|0);
     $$3 = $32;
     break L1;
     break;
    }
    case 99:  {
     $33 = HEAP32[$0>>2]|0;
     $34 = ((($33)) + 1|0);
     HEAP32[$0>>2] = $34;
     $35 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($6,25750);
     ;HEAP32[$$byval_copy3>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$6+4>>2]|0;
     $36 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($35,$$byval_copy3)|0);
     $$3 = $36;
     break L1;
     break;
    }
    case 97:  {
     $37 = HEAP32[$0>>2]|0;
     $38 = ((($37)) + 1|0);
     HEAP32[$0>>2] = $38;
     $39 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($7,25755);
     ;HEAP32[$$byval_copy4>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$7+4>>2]|0;
     $40 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($39,$$byval_copy4)|0);
     $$3 = $40;
     break L1;
     break;
    }
    case 104:  {
     $41 = HEAP32[$0>>2]|0;
     $42 = ((($41)) + 1|0);
     HEAP32[$0>>2] = $42;
     $43 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($8,25767);
     ;HEAP32[$$byval_copy5>>2]=HEAP32[$8>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$8+4>>2]|0;
     $44 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($43,$$byval_copy5)|0);
     $$3 = $44;
     break L1;
     break;
    }
    case 115:  {
     $45 = HEAP32[$0>>2]|0;
     $46 = ((($45)) + 1|0);
     HEAP32[$0>>2] = $46;
     $47 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($9,25781);
     ;HEAP32[$$byval_copy6>>2]=HEAP32[$9>>2]|0;HEAP32[$$byval_copy6+4>>2]=HEAP32[$9+4>>2]|0;
     $48 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($47,$$byval_copy6)|0);
     $$3 = $48;
     break L1;
     break;
    }
    case 116:  {
     $49 = HEAP32[$0>>2]|0;
     $50 = ((($49)) + 1|0);
     HEAP32[$0>>2] = $50;
     $51 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($10,25787);
     ;HEAP32[$$byval_copy7>>2]=HEAP32[$10>>2]|0;HEAP32[$$byval_copy7+4>>2]=HEAP32[$10+4>>2]|0;
     $52 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($51,$$byval_copy7)|0);
     $$3 = $52;
     break L1;
     break;
    }
    case 105:  {
     $53 = HEAP32[$0>>2]|0;
     $54 = ((($53)) + 1|0);
     HEAP32[$0>>2] = $54;
     $55 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($11,37670);
     ;HEAP32[$$byval_copy8>>2]=HEAP32[$11>>2]|0;HEAP32[$$byval_copy8+4>>2]=HEAP32[$11+4>>2]|0;
     $56 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($55,$$byval_copy8)|0);
     $$3 = $56;
     break L1;
     break;
    }
    case 106:  {
     $57 = HEAP32[$0>>2]|0;
     $58 = ((($57)) + 1|0);
     HEAP32[$0>>2] = $58;
     $59 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($12,26676);
     ;HEAP32[$$byval_copy9>>2]=HEAP32[$12>>2]|0;HEAP32[$$byval_copy9+4>>2]=HEAP32[$12+4>>2]|0;
     $60 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($59,$$byval_copy9)|0);
     $$3 = $60;
     break L1;
     break;
    }
    case 108:  {
     $61 = HEAP32[$0>>2]|0;
     $62 = ((($61)) + 1|0);
     HEAP32[$0>>2] = $62;
     $63 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($13,26678);
     ;HEAP32[$$byval_copy10>>2]=HEAP32[$13>>2]|0;HEAP32[$$byval_copy10+4>>2]=HEAP32[$13+4>>2]|0;
     $64 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($63,$$byval_copy10)|0);
     $$3 = $64;
     break L1;
     break;
    }
    case 109:  {
     $65 = HEAP32[$0>>2]|0;
     $66 = ((($65)) + 1|0);
     HEAP32[$0>>2] = $66;
     $67 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($14,26680);
     ;HEAP32[$$byval_copy11>>2]=HEAP32[$14>>2]|0;HEAP32[$$byval_copy11+4>>2]=HEAP32[$14+4>>2]|0;
     $68 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($67,$$byval_copy11)|0);
     $$3 = $68;
     break L1;
     break;
    }
    case 120:  {
     $69 = HEAP32[$0>>2]|0;
     $70 = ((($69)) + 1|0);
     HEAP32[$0>>2] = $70;
     $71 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($15,26683);
     ;HEAP32[$$byval_copy12>>2]=HEAP32[$15>>2]|0;HEAP32[$$byval_copy12+4>>2]=HEAP32[$15+4>>2]|0;
     $72 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($71,$$byval_copy12)|0);
     $$3 = $72;
     break L1;
     break;
    }
    case 121:  {
     $73 = HEAP32[$0>>2]|0;
     $74 = ((($73)) + 1|0);
     HEAP32[$0>>2] = $74;
     $75 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($16,26686);
     ;HEAP32[$$byval_copy13>>2]=HEAP32[$16>>2]|0;HEAP32[$$byval_copy13+4>>2]=HEAP32[$16+4>>2]|0;
     $76 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($75,$$byval_copy13)|0);
     $$3 = $76;
     break L1;
     break;
    }
    case 110:  {
     $77 = HEAP32[$0>>2]|0;
     $78 = ((($77)) + 1|0);
     HEAP32[$0>>2] = $78;
     $79 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($17,25848);
     ;HEAP32[$$byval_copy14>>2]=HEAP32[$17>>2]|0;HEAP32[$$byval_copy14+4>>2]=HEAP32[$17+4>>2]|0;
     $80 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($79,$$byval_copy14)|0);
     $$3 = $80;
     break L1;
     break;
    }
    case 111:  {
     $81 = HEAP32[$0>>2]|0;
     $82 = ((($81)) + 1|0);
     HEAP32[$0>>2] = $82;
     $83 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     __ZN12_GLOBAL__N_110StringViewC2EPKc($18,25857);
     ;HEAP32[$$byval_copy15>>2]=HEAP32[$18>>2]|0;HEAP32[$$byval_copy15+4>>2]=HEAP32[$18+4>>2]|0;
     $84 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($83,$$byval_copy15)|0);
     $$3 = $84;
     break L1;
     break;
    }
    case 102:  {
     $85 = HEAP32[$0>>2]|0;
     $86 = ((($85)) + 1|0);
     HEAP32[$0>>2] = $86;
     $87 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $88 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIfEEPNS0_4NodeEv($87)|0);
     $$3 = $88;
     break L1;
     break;
    }
    case 100:  {
     $89 = HEAP32[$0>>2]|0;
     $90 = ((($89)) + 1|0);
     HEAP32[$0>>2] = $90;
     $91 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $92 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIdEEPNS0_4NodeEv($91)|0);
     $$3 = $92;
     break L1;
     break;
    }
    case 101:  {
     $93 = HEAP32[$0>>2]|0;
     $94 = ((($93)) + 1|0);
     HEAP32[$0>>2] = $94;
     $95 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $96 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIeEEPNS0_4NodeEv($95)|0);
     $$3 = $96;
     break L1;
     break;
    }
    case 95:  {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($19,25684);
     ;HEAP32[$$byval_copy16>>2]=HEAP32[$19>>2]|0;HEAP32[$$byval_copy16+4>>2]=HEAP32[$19+4>>2]|0;
     $97 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy16)|0);
     if (!($97)) {
      $$3 = 0;
      break L1;
     }
     $98 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $99 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($98)|0);
     $100 = ($99|0)==(0|0);
     if (!($100)) {
      $101 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if ($101) {
       $$3 = $99;
       break L1;
      }
     }
     $$3 = 0;
     break L1;
     break;
    }
    default: {
     $102 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $103 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($102)|0);
     HEAP32[$20>>2] = $103;
     $104 = ($103|0)==(0|0);
     if ($104) {
      $$2 = 0;
     } else {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($21,$0,0);
      $105 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($21)|0);
      $106 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if ($105) {
       $spec$select = $106 ? $103 : 0;
       $$1 = $spec$select;
      } else {
       if ($106) {
        $107 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15IntegerCastExprEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$20,$21)|0);
        $$1 = $107;
       } else {
        $$1 = 0;
       }
      }
      $$2 = $$1;
     }
     $$3 = $$2;
     break L1;
    }
    }
   } while(0);
  } else {
   $$3 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseIntegerLiteralENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2,$0,1);
 $3 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($2)|0);
 if ($3) {
  $$0 = 0;
 } else {
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
  if ($4) {
   $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14IntegerLiteralEJRNS_10StringViewES9_EEEPNS0_4NodeEDpOT0_($0,$1,$2)|0);
   $$0 = $5;
  } else {
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8BoolExprEJiEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8BoolExprEJiEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIfEEPNS0_4NodeEv($0) {
 $0 = $0|0;
 var $$020 = 0, $$3 = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
 $3 = ($2>>>0)<(9);
 if ($3) {
  $$4 = 0;
 } else {
  $4 = HEAP32[$0>>2]|0;
  $5 = ((($4)) + 8|0);
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($1,$4,$5);
  $6 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
  $7 = (__ZNK12_GLOBAL__N_110StringView3endEv($1)|0);
  $$020 = $6;
  while(1) {
   $8 = ($$020|0)==($7|0);
   if ($8) {
    label = 5;
    break;
   }
   $9 = HEAP8[$$020>>0]|0;
   $10 = $9 << 24 >> 24;
   $11 = (_isxdigit($10)|0);
   $12 = ($11|0)==(0);
   $13 = ((($$020)) + 1|0);
   if ($12) {
    $$3 = 0;
    break;
   } else {
    $$020 = $13;
   }
  }
  if ((label|0) == 5) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 8|0);
   HEAP32[$0>>2] = $15;
   $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
   if ($16) {
    $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIfEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1)|0);
    $$3 = $17;
   } else {
    $$3 = 0;
   }
  }
  $$4 = $$3;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIdEEPNS0_4NodeEv($0) {
 $0 = $0|0;
 var $$020 = 0, $$3 = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
 $3 = ($2>>>0)<(17);
 if ($3) {
  $$4 = 0;
 } else {
  $4 = HEAP32[$0>>2]|0;
  $5 = ((($4)) + 16|0);
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($1,$4,$5);
  $6 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
  $7 = (__ZNK12_GLOBAL__N_110StringView3endEv($1)|0);
  $$020 = $6;
  while(1) {
   $8 = ($$020|0)==($7|0);
   if ($8) {
    label = 5;
    break;
   }
   $9 = HEAP8[$$020>>0]|0;
   $10 = $9 << 24 >> 24;
   $11 = (_isxdigit($10)|0);
   $12 = ($11|0)==(0);
   $13 = ((($$020)) + 1|0);
   if ($12) {
    $$3 = 0;
    break;
   } else {
    $$020 = $13;
   }
  }
  if ((label|0) == 5) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 16|0);
   HEAP32[$0>>2] = $15;
   $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
   if ($16) {
    $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIdEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1)|0);
    $$3 = $17;
   } else {
    $$3 = 0;
   }
  }
  $$4 = $$3;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseFloatingLiteralIeEEPNS0_4NodeEv($0) {
 $0 = $0|0;
 var $$020 = 0, $$3 = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
 $3 = ($2>>>0)<(21);
 if ($3) {
  $$4 = 0;
 } else {
  $4 = HEAP32[$0>>2]|0;
  $5 = ((($4)) + 20|0);
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($1,$4,$5);
  $6 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
  $7 = (__ZNK12_GLOBAL__N_110StringView3endEv($1)|0);
  $$020 = $6;
  while(1) {
   $8 = ($$020|0)==($7|0);
   if ($8) {
    label = 5;
    break;
   }
   $9 = HEAP8[$$020>>0]|0;
   $10 = $9 << 24 >> 24;
   $11 = (_isxdigit($10)|0);
   $12 = ($11|0)==(0);
   $13 = ((($$020)) + 1|0);
   if ($12) {
    $$3 = 0;
    break;
   } else {
    $$020 = $13;
   }
  }
  if ((label|0) == 5) {
   $14 = HEAP32[$0>>2]|0;
   $15 = ((($14)) + 20|0);
   HEAP32[$0>>2] = $15;
   $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
   if ($16) {
    $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIeEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1)|0);
    $$3 = $17;
   } else {
    $$3 = 0;
   }
  }
  $$4 = $$3;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15IntegerCastExprEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15IntegerCastExprEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15IntegerCastExprEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15IntegerCastExprC2EPKNS0_4NodeENS_10StringViewE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15IntegerCastExprC2EPKNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,60,1,1,1);
 HEAP32[$0>>2] = (14932);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15IntegerCastExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $tmpcast$byval_copy = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $7 = ((($0)) + 12|0);
 $8 = $7;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($8) + 4)|0;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = $4;
 $15 = $14;
 HEAP32[$15>>2] = $10;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $13;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15IntegerCastExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIeEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FloatLiteralImplIeEEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FloatLiteralImplIeEEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeEC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeEC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,64,1,1,1);
 HEAP32[$0>>2] = (14976);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeE9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$add = 0, $$0$i$i = 0, $$0$idx = 0, $$0$ptr = 0, $$034 = 0, $$07$i$i = 0, $$add = 0, $$byval_copy = 0, $$ptr = 0, $$v = 0, $$v38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $isdigit = 0, $isdigit37 = 0, $isdigittmp = 0, $isdigittmp36 = 0, $scevgep = 0, $uglygep = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $$byval_copy = sp + 64|0;
 $vararg_buffer = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp;
 $4 = sp + 56|0;
 $5 = ((($0)) + 8|0);
 $6 = (__ZNK12_GLOBAL__N_110StringView5beginEv($5)|0);
 $7 = (__ZNK12_GLOBAL__N_110StringView3endEv($5)|0);
 $8 = ((($7)) + 1|0);
 $9 = $8;
 $10 = $6;
 $11 = (($9) - ($10))|0;
 $12 = ($11>>>0)>(20);
 if ($12) {
  $scevgep = ((($2)) + 8|0);
  $$0$idx = 0;$$034 = $2;
  while(1) {
   $13 = ($$0$idx|0)==(20);
   if ($13) {
    break;
   }
   $$0$ptr = (($6) + ($$0$idx)|0);
   $14 = HEAP8[$$0$ptr>>0]|0;
   $15 = $14 << 24 >> 24;
   $isdigittmp = (($15) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   $$v = $isdigit ? 0 : 9;
   $16 = (($$v) + ($15))|0;
   $$0$add = $$0$idx | 1;
   $$ptr = (($6) + ($$0$add)|0);
   $17 = HEAP8[$$ptr>>0]|0;
   $18 = $17 << 24 >> 24;
   $isdigittmp36 = (($18) + -48)|0;
   $isdigit37 = ($isdigittmp36>>>0)<(10);
   $$v38 = $isdigit37 ? 208 : 169;
   $19 = (($$v38) + ($18))|0;
   $20 = $16 << 4;
   $21 = (($19) + ($20))|0;
   $22 = $21&255;
   HEAP8[$$034>>0] = $22;
   $$add = (($$0$idx) + 2)|0;
   $23 = ((($$034)) + 1|0);
   $$0$idx = $$add;$$034 = $23;
  }
  $uglygep = ((($scevgep)) + 2|0);
  $$0$i$i = $uglygep;$$07$i$i = $2;
  while(1) {
   $24 = ((($$0$i$i)) + -1|0);
   $25 = ($$07$i$i>>>0)<($24>>>0);
   if (!($25)) {
    break;
   }
   $26 = HEAP8[$$07$i$i>>0]|0;
   $27 = HEAP8[$24>>0]|0;
   HEAP8[$$07$i$i>>0] = $27;
   HEAP8[$24>>0] = $26;
   $28 = ((($$07$i$i)) + 1|0);
   $$0$i$i = $24;$$07$i$i = $28;
  }
  dest=$3; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $29 = +HEAPF64[$2>>3];
  HEAPF64[$vararg_buffer>>3] = $29;
  $30 = (_snprintf($3,40,26742,$vararg_buffer)|0);
  $31 = (($3) + ($30)|0);
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($4,$3,$31);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIdEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FloatLiteralImplIdEEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FloatLiteralImplIdEEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdEC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdEC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,63,1,1,1);
 HEAP32[$0>>2] = (15020);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdE9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$add = 0, $$0$i$i = 0, $$0$idx = 0, $$0$ptr = 0, $$034 = 0, $$07$i$i = 0, $$add = 0, $$byval_copy = 0, $$ptr = 0, $$v = 0, $$v38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $isdigit = 0, $isdigit37 = 0, $isdigittmp = 0, $isdigittmp36 = 0, $scevgep = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 56|0;
 $vararg_buffer = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp;
 $4 = sp + 48|0;
 $5 = ((($0)) + 8|0);
 $6 = (__ZNK12_GLOBAL__N_110StringView5beginEv($5)|0);
 $7 = (__ZNK12_GLOBAL__N_110StringView3endEv($5)|0);
 $8 = ((($7)) + 1|0);
 $9 = $8;
 $10 = $6;
 $11 = (($9) - ($10))|0;
 $12 = ($11>>>0)>(16);
 if ($12) {
  $scevgep = ((($2)) + 8|0);
  $$0$idx = 0;$$034 = $2;
  while(1) {
   $13 = ($$0$idx|0)==(16);
   if ($13) {
    break;
   }
   $$0$ptr = (($6) + ($$0$idx)|0);
   $14 = HEAP8[$$0$ptr>>0]|0;
   $15 = $14 << 24 >> 24;
   $isdigittmp = (($15) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   $$v = $isdigit ? 0 : 9;
   $16 = (($$v) + ($15))|0;
   $$0$add = $$0$idx | 1;
   $$ptr = (($6) + ($$0$add)|0);
   $17 = HEAP8[$$ptr>>0]|0;
   $18 = $17 << 24 >> 24;
   $isdigittmp36 = (($18) + -48)|0;
   $isdigit37 = ($isdigittmp36>>>0)<(10);
   $$v38 = $isdigit37 ? 208 : 169;
   $19 = (($$v38) + ($18))|0;
   $20 = $16 << 4;
   $21 = (($19) + ($20))|0;
   $22 = $21&255;
   HEAP8[$$034>>0] = $22;
   $$add = (($$0$idx) + 2)|0;
   $23 = ((($$034)) + 1|0);
   $$0$idx = $$add;$$034 = $23;
  }
  $$0$i$i = $scevgep;$$07$i$i = $2;
  while(1) {
   $24 = ((($$0$i$i)) + -1|0);
   $25 = ($$07$i$i>>>0)<($24>>>0);
   if (!($25)) {
    break;
   }
   $26 = HEAP8[$$07$i$i>>0]|0;
   $27 = HEAP8[$24>>0]|0;
   HEAP8[$$07$i$i>>0] = $27;
   HEAP8[$24>>0] = $26;
   $28 = ((($$07$i$i)) + 1|0);
   $$0$i$i = $24;$$07$i$i = $28;
  }
  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;
  $29 = +HEAPF64[$2>>3];
  HEAPF64[$vararg_buffer>>3] = $29;
  $30 = (_snprintf($3,32,26803,$vararg_buffer)|0);
  $31 = (($3) + ($30)|0);
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($4,$3,$31);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FloatLiteralImplIfEEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FloatLiteralImplIfEEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FloatLiteralImplIfEEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfEC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfEC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,62,1,1,1);
 HEAP32[$0>>2] = (15064);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfE9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$add = 0, $$0$i$i = 0, $$0$idx = 0, $$0$ptr = 0, $$034 = 0, $$07$i$i = 0, $$add = 0, $$byval_copy = 0, $$ptr = 0, $$v = 0, $$v38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $isdigit = 0, $isdigit37 = 0, $isdigittmp = 0, $isdigittmp36 = 0, $scevgep = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 48|0;
 $vararg_buffer = sp + 24|0;
 $2 = sp + 40|0;
 $3 = sp;
 $4 = sp + 32|0;
 $5 = ((($0)) + 8|0);
 $6 = (__ZNK12_GLOBAL__N_110StringView5beginEv($5)|0);
 $7 = (__ZNK12_GLOBAL__N_110StringView3endEv($5)|0);
 $8 = ((($7)) + 1|0);
 $9 = $8;
 $10 = $6;
 $11 = (($9) - ($10))|0;
 $12 = ($11>>>0)>(8);
 if ($12) {
  $scevgep = ((($2)) + 4|0);
  $$0$idx = 0;$$034 = $2;
  while(1) {
   $13 = ($$0$idx|0)==(8);
   if ($13) {
    break;
   }
   $$0$ptr = (($6) + ($$0$idx)|0);
   $14 = HEAP8[$$0$ptr>>0]|0;
   $15 = $14 << 24 >> 24;
   $isdigittmp = (($15) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   $$v = $isdigit ? 0 : 9;
   $16 = (($$v) + ($15))|0;
   $$0$add = $$0$idx | 1;
   $$ptr = (($6) + ($$0$add)|0);
   $17 = HEAP8[$$ptr>>0]|0;
   $18 = $17 << 24 >> 24;
   $isdigittmp36 = (($18) + -48)|0;
   $isdigit37 = ($isdigittmp36>>>0)<(10);
   $$v38 = $isdigit37 ? 208 : 169;
   $19 = (($$v38) + ($18))|0;
   $20 = $16 << 4;
   $21 = (($19) + ($20))|0;
   $22 = $21&255;
   HEAP8[$$034>>0] = $22;
   $$add = (($$0$idx) + 2)|0;
   $23 = ((($$034)) + 1|0);
   $$0$idx = $$add;$$034 = $23;
  }
  $$0$i$i = $scevgep;$$07$i$i = $2;
  while(1) {
   $24 = ((($$0$i$i)) + -1|0);
   $25 = ($$07$i$i>>>0)<($24>>>0);
   if (!($25)) {
    break;
   }
   $26 = HEAP8[$$07$i$i>>0]|0;
   $27 = HEAP8[$24>>0]|0;
   HEAP8[$$07$i$i>>0] = $27;
   HEAP8[$24>>0] = $26;
   $28 = ((($$07$i$i)) + 1|0);
   $$0$i$i = $24;$$07$i$i = $28;
  }
  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;
  $29 = +HEAPF32[$2>>2];
  $30 = $29;
  HEAPF64[$vararg_buffer>>3] = $30;
  $31 = (_snprintf($3,24,26862,$vararg_buffer)|0);
  $32 = (($3) + ($31)|0);
  __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($4,$3,$32);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfED0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8BoolExprEJiEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 $4 = ($3|0)!=(0);
 __ZN12_GLOBAL__N_116itanium_demangle8BoolExprC2Eb($2,$4);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8BoolExprC2Eb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1&1;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,59,1,1,1);
 HEAP32[$0>>2] = (15108);
 $3 = ((($0)) + 8|0);
 HEAP8[$3>>0] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8BoolExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26927);
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26922);
 }
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8BoolExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14IntegerLiteralEJRNS_10StringViewES9_EEEPNS0_4NodeEDpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle14IntegerLiteralEJRNS_10StringViewES5_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle14IntegerLiteralEJRNS_10StringViewES5_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast3$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast3$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 $6 = $1;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 $16 = $2;
 $17 = $16;
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + 4)|0;
 $20 = $19;
 $21 = HEAP32[$20>>2]|0;
 $22 = $4;
 $23 = $22;
 HEAP32[$23>>2] = $18;
 $24 = (($22) + 4)|0;
 $25 = $24;
 HEAP32[$25>>2] = $21;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 ;HEAP32[$tmpcast3$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast3$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle14IntegerLiteralC2ENS_10StringViewES2_($5,$tmpcast$byval_copy,$tmpcast3$byval_copy);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14IntegerLiteralC2ENS_10StringViewES2_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,61,1,1,1);
 HEAP32[$0>>2] = (15152);
 $3 = ((($0)) + 8|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = ((($0)) + 16|0);
 $15 = $2;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($15) + 4)|0;
 $19 = $18;
 $20 = HEAP32[$19>>2]|0;
 $21 = $14;
 $22 = $21;
 HEAP32[$22>>2] = $17;
 $23 = (($21) + 4)|0;
 $24 = $23;
 HEAP32[$24>>2] = $20;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle14IntegerLiteral9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast8$byval_copy = 0, $tmpcast9$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $tmpcast8$byval_copy = sp + 104|0;
 $tmpcast$byval_copy = sp + 96|0;
 $$byval_copy3 = sp + 88|0;
 $$byval_copy2 = sp + 80|0;
 $$byval_copy1 = sp + 72|0;
 $tmpcast9$byval_copy = sp + 64|0;
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 16|0;
 $4 = sp + 40|0;
 $5 = sp + 32|0;
 $6 = sp + 24|0;
 $7 = sp + 8|0;
 $8 = sp;
 $9 = ((($0)) + 8|0);
 $10 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($9)|0);
 $11 = ($10>>>0)>(3);
 if ($11) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  $12 = $9;
  $13 = $12;
  $14 = HEAP32[$13>>2]|0;
  $15 = (($12) + 4)|0;
  $16 = $15;
  $17 = HEAP32[$16>>2]|0;
  $18 = $3;
  $19 = $18;
  HEAP32[$19>>2] = $14;
  $20 = (($18) + 4)|0;
  $21 = $20;
  HEAP32[$21>>2] = $17;
  ;HEAP32[$tmpcast9$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast9$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast9$byval_copy);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26370);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 }
 $22 = ((($0)) + 16|0);
 $23 = (__ZNK12_GLOBAL__N_110StringViewixEm($22)|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = ($24<<24>>24)==(110);
 if ($25) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26977);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
  __ZNK12_GLOBAL__N_110StringView9dropFrontEm($6,$22,1);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
 } else {
  $26 = $22;
  $27 = $26;
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 4)|0;
  $30 = $29;
  $31 = HEAP32[$30>>2]|0;
  $32 = $7;
  $33 = $32;
  HEAP32[$33>>2] = $28;
  $34 = (($32) + 4)|0;
  $35 = $34;
  HEAP32[$35>>2] = $31;
  ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$7>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 }
 $36 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($9)|0);
 $37 = ($36>>>0)<(4);
 if ($37) {
  $38 = $9;
  $39 = $38;
  $40 = HEAP32[$39>>2]|0;
  $41 = (($38) + 4)|0;
  $42 = $41;
  $43 = HEAP32[$42>>2]|0;
  $44 = $8;
  $45 = $44;
  HEAP32[$45>>2] = $40;
  $46 = (($44) + 4)|0;
  $47 = $46;
  HEAP32[$47>>2] = $43;
  ;HEAP32[$tmpcast8$byval_copy>>2]=HEAP32[$8>>2]|0;HEAP32[$tmpcast8$byval_copy+4>>2]=HEAP32[$8+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast8$byval_copy);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14IntegerLiteralD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_110StringViewixEm($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNK12_GLOBAL__N_110StringView5beginEv($0)|0);
 return ($1|0);
}
function __ZNK12_GLOBAL__N_110StringView9dropFrontEm($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($1)|0);
 $4 = ($3>>>0)>($2>>>0);
 $5 = (($3) + -1)|0;
 $spec$select = $4 ? $2 : $5;
 $6 = HEAP32[$1>>2]|0;
 $7 = (($6) + ($spec$select)|0);
 $8 = ((($1)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($0,$7,$9);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20TemplateArgumentPackEJRNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle20TemplateArgumentPackC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle20TemplateArgumentPackC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,28,1,1,1);
 HEAP32[$0>>2] = (15196);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle20TemplateArgumentPack9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($2,$1);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle20TemplateArgumentPackD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseFunctionParamEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy1 = sp + 48|0;
 $$byval_copy = sp + 40|0;
 $1 = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1,29333);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
 $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 if ($6) {
  (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0)|0);
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2,$0,0);
  $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
  if ($7) {
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13FunctionParamEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
   $$0 = $8;
  } else {
   $$0 = 0;
  }
  $$2 = $$0;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,29336);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
  if ($9) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($4,$0,0);
   $10 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($4)|0);
   if ($10) {
    $$2 = 0;
   } else {
    $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,112)|0);
    if ($11) {
     (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0)|0);
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($5,$0,0);
     $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
     if ($12) {
      $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13FunctionParamEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$5)|0);
      $$1 = $13;
     } else {
      $$1 = 0;
     }
     $$2 = $$1;
    } else {
     $$2 = 0;
    }
   }
  } else {
   $$2 = 0;
  }
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseFoldExprEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy10 = 0, $$byval_copy11 = 0, $$byval_copy12 = 0, $$byval_copy13 = 0, $$byval_copy14 = 0, $$byval_copy15 = 0, $$byval_copy16 = 0, $$byval_copy17 = 0, $$byval_copy18 = 0, $$byval_copy19 = 0, $$byval_copy2 = 0, $$byval_copy20 = 0, $$byval_copy21 = 0, $$byval_copy22 = 0;
 var $$byval_copy23 = 0, $$byval_copy24 = 0, $$byval_copy25 = 0, $$byval_copy26 = 0, $$byval_copy27 = 0, $$byval_copy28 = 0, $$byval_copy29 = 0, $$byval_copy3 = 0, $$byval_copy30 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$byval_copy8 = 0, $$byval_copy9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 768|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(768|0);
 $$byval_copy30 = sp + 752|0;
 $$byval_copy29 = sp + 744|0;
 $$byval_copy28 = sp + 736|0;
 $$byval_copy27 = sp + 728|0;
 $$byval_copy26 = sp + 720|0;
 $$byval_copy25 = sp + 712|0;
 $$byval_copy24 = sp + 704|0;
 $$byval_copy23 = sp + 696|0;
 $$byval_copy22 = sp + 688|0;
 $$byval_copy21 = sp + 680|0;
 $$byval_copy20 = sp + 672|0;
 $$byval_copy19 = sp + 664|0;
 $$byval_copy18 = sp + 656|0;
 $$byval_copy17 = sp + 648|0;
 $$byval_copy16 = sp + 640|0;
 $$byval_copy15 = sp + 632|0;
 $$byval_copy14 = sp + 624|0;
 $$byval_copy13 = sp + 616|0;
 $$byval_copy12 = sp + 608|0;
 $$byval_copy11 = sp + 600|0;
 $$byval_copy10 = sp + 592|0;
 $$byval_copy9 = sp + 584|0;
 $$byval_copy8 = sp + 576|0;
 $$byval_copy7 = sp + 568|0;
 $$byval_copy6 = sp + 560|0;
 $$byval_copy5 = sp + 552|0;
 $$byval_copy4 = sp + 544|0;
 $$byval_copy3 = sp + 536|0;
 $$byval_copy2 = sp + 528|0;
 $$byval_copy1 = sp + 520|0;
 $$byval_copy = sp + 512|0;
 $1 = sp + 760|0;
 $2 = sp + 248|0;
 $3 = sp + 504|0;
 $4 = sp + 240|0;
 $5 = sp + 496|0;
 $6 = sp + 232|0;
 $7 = sp + 488|0;
 $8 = sp + 224|0;
 $9 = sp + 480|0;
 $10 = sp + 216|0;
 $11 = sp + 472|0;
 $12 = sp + 208|0;
 $13 = sp + 464|0;
 $14 = sp + 200|0;
 $15 = sp + 456|0;
 $16 = sp + 192|0;
 $17 = sp + 448|0;
 $18 = sp + 184|0;
 $19 = sp + 440|0;
 $20 = sp + 176|0;
 $21 = sp + 432|0;
 $22 = sp + 168|0;
 $23 = sp + 424|0;
 $24 = sp + 160|0;
 $25 = sp + 416|0;
 $26 = sp + 152|0;
 $27 = sp + 408|0;
 $28 = sp + 144|0;
 $29 = sp + 400|0;
 $30 = sp + 136|0;
 $31 = sp + 392|0;
 $32 = sp + 128|0;
 $33 = sp + 384|0;
 $34 = sp + 120|0;
 $35 = sp + 376|0;
 $36 = sp + 112|0;
 $37 = sp + 368|0;
 $38 = sp + 104|0;
 $39 = sp + 360|0;
 $40 = sp + 96|0;
 $41 = sp + 352|0;
 $42 = sp + 88|0;
 $43 = sp + 344|0;
 $44 = sp + 80|0;
 $45 = sp + 336|0;
 $46 = sp + 72|0;
 $47 = sp + 328|0;
 $48 = sp + 64|0;
 $49 = sp + 320|0;
 $50 = sp + 56|0;
 $51 = sp + 312|0;
 $52 = sp + 48|0;
 $53 = sp + 304|0;
 $54 = sp + 40|0;
 $55 = sp + 296|0;
 $56 = sp + 32|0;
 $57 = sp + 288|0;
 $58 = sp + 24|0;
 $59 = sp + 280|0;
 $60 = sp + 16|0;
 $61 = sp + 272|0;
 $62 = sp + 8|0;
 $63 = sp + 264|0;
 $64 = sp;
 $65 = sp + 260|0;
 $66 = sp + 256|0;
 $67 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,102)|0);
 if ($67) {
  $68 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
  switch ($68<<24>>24) {
  case 76: case 108:  {
   $storemerge = 1;
   label = 4;
   break;
  }
  case 82: case 114:  {
   $storemerge = 0;
   label = 4;
   break;
  }
  default: {
   $$2 = 0;
  }
  }
  if ((label|0) == 4) {
   HEAP8[$1>>0] = $storemerge;
   $69 = HEAP32[$0>>2]|0;
   $70 = ((($69)) + 1|0);
   HEAP32[$0>>2] = $70;
   __ZN12_GLOBAL__N_110StringViewC2Ev($2);
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3,29186);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
   $71 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
   do {
    if ($71) {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26378);
     $72 = $4;
     $73 = $72;
     $74 = HEAP32[$73>>2]|0;
     $75 = (($72) + 4)|0;
     $76 = $75;
     $77 = HEAP32[$76>>2]|0;
     $78 = $2;
     $79 = $78;
     HEAP32[$79>>2] = $74;
     $80 = (($78) + 4)|0;
     $81 = $80;
     HEAP32[$81>>2] = $77;
     label = 66;
    } else {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($5,29189);
     ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
     $82 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
     if ($82) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($6,26376);
      $83 = $6;
      $84 = $83;
      $85 = HEAP32[$84>>2]|0;
      $86 = (($83) + 4)|0;
      $87 = $86;
      $88 = HEAP32[$87>>2]|0;
      $89 = $2;
      $90 = $89;
      HEAP32[$90>>2] = $85;
      $91 = (($89) + 4)|0;
      $92 = $91;
      HEAP32[$92>>2] = $88;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($7,29192);
     ;HEAP32[$$byval_copy2>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$7+4>>2]|0;
     $93 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
     if ($93) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($8,27090);
      $94 = $8;
      $95 = $94;
      $96 = HEAP32[$95>>2]|0;
      $97 = (($94) + 4)|0;
      $98 = $97;
      $99 = HEAP32[$98>>2]|0;
      $100 = $2;
      $101 = $100;
      HEAP32[$101>>2] = $96;
      $102 = (($100) + 4)|0;
      $103 = $102;
      HEAP32[$103>>2] = $99;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($9,29195);
     ;HEAP32[$$byval_copy3>>2]=HEAP32[$9>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$9+4>>2]|0;
     $104 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy3)|0);
     if ($104) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($10,27093);
      $105 = $10;
      $106 = $105;
      $107 = HEAP32[$106>>2]|0;
      $108 = (($105) + 4)|0;
      $109 = $108;
      $110 = HEAP32[$109>>2]|0;
      $111 = $2;
      $112 = $111;
      HEAP32[$112>>2] = $107;
      $113 = (($111) + 4)|0;
      $114 = $113;
      HEAP32[$114>>2] = $110;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($11,29198);
     ;HEAP32[$$byval_copy4>>2]=HEAP32[$11>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$11+4>>2]|0;
     $115 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy4)|0);
     if ($115) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($12,27105);
      $116 = $12;
      $117 = $116;
      $118 = HEAP32[$117>>2]|0;
      $119 = (($116) + 4)|0;
      $120 = $119;
      $121 = HEAP32[$120>>2]|0;
      $122 = $2;
      $123 = $122;
      HEAP32[$123>>2] = $118;
      $124 = (($122) + 4)|0;
      $125 = $124;
      HEAP32[$125>>2] = $121;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($13,29201);
     ;HEAP32[$$byval_copy5>>2]=HEAP32[$13>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$13+4>>2]|0;
     $126 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy5)|0);
     if ($126) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($14,27109);
      $127 = $14;
      $128 = $127;
      $129 = HEAP32[$128>>2]|0;
      $130 = (($127) + 4)|0;
      $131 = $130;
      $132 = HEAP32[$131>>2]|0;
      $133 = $2;
      $134 = $133;
      HEAP32[$134>>2] = $129;
      $135 = (($133) + 4)|0;
      $136 = $135;
      HEAP32[$136>>2] = $132;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($15,29204);
     ;HEAP32[$$byval_copy6>>2]=HEAP32[$15>>2]|0;HEAP32[$$byval_copy6+4>>2]=HEAP32[$15+4>>2]|0;
     $137 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy6)|0);
     if ($137) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($16,27112);
      $138 = $16;
      $139 = $138;
      $140 = HEAP32[$139>>2]|0;
      $141 = (($138) + 4)|0;
      $142 = $141;
      $143 = HEAP32[$142>>2]|0;
      $144 = $2;
      $145 = $144;
      HEAP32[$145>>2] = $140;
      $146 = (($144) + 4)|0;
      $147 = $146;
      HEAP32[$147>>2] = $143;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($17,29207);
     ;HEAP32[$$byval_copy7>>2]=HEAP32[$17>>2]|0;HEAP32[$$byval_copy7+4>>2]=HEAP32[$17+4>>2]|0;
     $148 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy7)|0);
     if ($148) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($18,27114);
      $149 = $18;
      $150 = $149;
      $151 = HEAP32[$150>>2]|0;
      $152 = (($149) + 4)|0;
      $153 = $152;
      $154 = HEAP32[$153>>2]|0;
      $155 = $2;
      $156 = $155;
      HEAP32[$156>>2] = $151;
      $157 = (($155) + 4)|0;
      $158 = $157;
      HEAP32[$158>>2] = $154;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($19,29210);
     ;HEAP32[$$byval_copy8>>2]=HEAP32[$19>>2]|0;HEAP32[$$byval_copy8+4>>2]=HEAP32[$19+4>>2]|0;
     $159 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy8)|0);
     if ($159) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($20,27117);
      $160 = $20;
      $161 = $160;
      $162 = HEAP32[$161>>2]|0;
      $163 = (($160) + 4)|0;
      $164 = $163;
      $165 = HEAP32[$164>>2]|0;
      $166 = $2;
      $167 = $166;
      HEAP32[$167>>2] = $162;
      $168 = (($166) + 4)|0;
      $169 = $168;
      HEAP32[$169>>2] = $165;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($21,29213);
     ;HEAP32[$$byval_copy9>>2]=HEAP32[$21>>2]|0;HEAP32[$$byval_copy9+4>>2]=HEAP32[$21+4>>2]|0;
     $170 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy9)|0);
     if ($170) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($22,27119);
      $171 = $22;
      $172 = $171;
      $173 = HEAP32[$172>>2]|0;
      $174 = (($171) + 4)|0;
      $175 = $174;
      $176 = HEAP32[$175>>2]|0;
      $177 = $2;
      $178 = $177;
      HEAP32[$178>>2] = $173;
      $179 = (($177) + 4)|0;
      $180 = $179;
      HEAP32[$180>>2] = $176;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($23,29216);
     ;HEAP32[$$byval_copy10>>2]=HEAP32[$23>>2]|0;HEAP32[$$byval_copy10+4>>2]=HEAP32[$23+4>>2]|0;
     $181 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy10)|0);
     if ($181) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($24,27122);
      $182 = $24;
      $183 = $182;
      $184 = HEAP32[$183>>2]|0;
      $185 = (($182) + 4)|0;
      $186 = $185;
      $187 = HEAP32[$186>>2]|0;
      $188 = $2;
      $189 = $188;
      HEAP32[$189>>2] = $184;
      $190 = (($188) + 4)|0;
      $191 = $190;
      HEAP32[$191>>2] = $187;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($25,29219);
     ;HEAP32[$$byval_copy11>>2]=HEAP32[$25>>2]|0;HEAP32[$$byval_copy11+4>>2]=HEAP32[$25+4>>2]|0;
     $192 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy11)|0);
     if ($192) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($26,27125);
      $193 = $26;
      $194 = $193;
      $195 = HEAP32[$194>>2]|0;
      $196 = (($193) + 4)|0;
      $197 = $196;
      $198 = HEAP32[$197>>2]|0;
      $199 = $2;
      $200 = $199;
      HEAP32[$200>>2] = $195;
      $201 = (($199) + 4)|0;
      $202 = $201;
      HEAP32[$202>>2] = $198;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($27,29222);
     ;HEAP32[$$byval_copy12>>2]=HEAP32[$27>>2]|0;HEAP32[$$byval_copy12+4>>2]=HEAP32[$27+4>>2]|0;
     $203 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy12)|0);
     if ($203) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($28,26449);
      $204 = $28;
      $205 = $204;
      $206 = HEAP32[$205>>2]|0;
      $207 = (($204) + 4)|0;
      $208 = $207;
      $209 = HEAP32[$208>>2]|0;
      $210 = $2;
      $211 = $210;
      HEAP32[$211>>2] = $206;
      $212 = (($210) + 4)|0;
      $213 = $212;
      HEAP32[$213>>2] = $209;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($29,29225);
     ;HEAP32[$$byval_copy13>>2]=HEAP32[$29>>2]|0;HEAP32[$$byval_copy13+4>>2]=HEAP32[$29+4>>2]|0;
     $214 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy13)|0);
     if ($214) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($30,27128);
      $215 = $30;
      $216 = $215;
      $217 = HEAP32[$216>>2]|0;
      $218 = (($215) + 4)|0;
      $219 = $218;
      $220 = HEAP32[$219>>2]|0;
      $221 = $2;
      $222 = $221;
      HEAP32[$222>>2] = $217;
      $223 = (($221) + 4)|0;
      $224 = $223;
      HEAP32[$224>>2] = $220;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($31,29228);
     ;HEAP32[$$byval_copy14>>2]=HEAP32[$31>>2]|0;HEAP32[$$byval_copy14+4>>2]=HEAP32[$31+4>>2]|0;
     $225 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy14)|0);
     if ($225) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($32,27131);
      $226 = $32;
      $227 = $226;
      $228 = HEAP32[$227>>2]|0;
      $229 = (($226) + 4)|0;
      $230 = $229;
      $231 = HEAP32[$230>>2]|0;
      $232 = $2;
      $233 = $232;
      HEAP32[$233>>2] = $228;
      $234 = (($232) + 4)|0;
      $235 = $234;
      HEAP32[$235>>2] = $231;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($33,29231);
     ;HEAP32[$$byval_copy15>>2]=HEAP32[$33>>2]|0;HEAP32[$$byval_copy15+4>>2]=HEAP32[$33+4>>2]|0;
     $236 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy15)|0);
     if ($236) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($34,27134);
      $237 = $34;
      $238 = $237;
      $239 = HEAP32[$238>>2]|0;
      $240 = (($237) + 4)|0;
      $241 = $240;
      $242 = HEAP32[$241>>2]|0;
      $243 = $2;
      $244 = $243;
      HEAP32[$244>>2] = $239;
      $245 = (($243) + 4)|0;
      $246 = $245;
      HEAP32[$246>>2] = $242;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($35,29234);
     ;HEAP32[$$byval_copy16>>2]=HEAP32[$35>>2]|0;HEAP32[$$byval_copy16+4>>2]=HEAP32[$35+4>>2]|0;
     $247 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy16)|0);
     if ($247) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($36,26556);
      $248 = $36;
      $249 = $248;
      $250 = HEAP32[$249>>2]|0;
      $251 = (($248) + 4)|0;
      $252 = $251;
      $253 = HEAP32[$252>>2]|0;
      $254 = $2;
      $255 = $254;
      HEAP32[$255>>2] = $250;
      $256 = (($254) + 4)|0;
      $257 = $256;
      HEAP32[$257>>2] = $253;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($37,29237);
     ;HEAP32[$$byval_copy17>>2]=HEAP32[$37>>2]|0;HEAP32[$$byval_copy17+4>>2]=HEAP32[$37+4>>2]|0;
     $258 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy17)|0);
     if ($258) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($38,26977);
      $259 = $38;
      $260 = $259;
      $261 = HEAP32[$260>>2]|0;
      $262 = (($259) + 4)|0;
      $263 = $262;
      $264 = HEAP32[$263>>2]|0;
      $265 = $2;
      $266 = $265;
      HEAP32[$266>>2] = $261;
      $267 = (($265) + 4)|0;
      $268 = $267;
      HEAP32[$268>>2] = $264;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($39,29240);
     ;HEAP32[$$byval_copy18>>2]=HEAP32[$39>>2]|0;HEAP32[$$byval_copy18+4>>2]=HEAP32[$39+4>>2]|0;
     $269 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy18)|0);
     if ($269) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($40,27138);
      $270 = $40;
      $271 = $270;
      $272 = HEAP32[$271>>2]|0;
      $273 = (($270) + 4)|0;
      $274 = $273;
      $275 = HEAP32[$274>>2]|0;
      $276 = $2;
      $277 = $276;
      HEAP32[$277>>2] = $272;
      $278 = (($276) + 4)|0;
      $279 = $278;
      HEAP32[$279>>2] = $275;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($41,29243);
     ;HEAP32[$$byval_copy19>>2]=HEAP32[$41>>2]|0;HEAP32[$$byval_copy19+4>>2]=HEAP32[$41+4>>2]|0;
     $280 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy19)|0);
     if ($280) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($42,26443);
      $281 = $42;
      $282 = $281;
      $283 = HEAP32[$282>>2]|0;
      $284 = (($281) + 4)|0;
      $285 = $284;
      $286 = HEAP32[$285>>2]|0;
      $287 = $2;
      $288 = $287;
      HEAP32[$288>>2] = $283;
      $289 = (($287) + 4)|0;
      $290 = $289;
      HEAP32[$290>>2] = $286;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($43,29246);
     ;HEAP32[$$byval_copy20>>2]=HEAP32[$43>>2]|0;HEAP32[$$byval_copy20+4>>2]=HEAP32[$43+4>>2]|0;
     $291 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy20)|0);
     if ($291) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($44,27141);
      $292 = $44;
      $293 = $292;
      $294 = HEAP32[$293>>2]|0;
      $295 = (($292) + 4)|0;
      $296 = $295;
      $297 = HEAP32[$296>>2]|0;
      $298 = $2;
      $299 = $298;
      HEAP32[$299>>2] = $294;
      $300 = (($298) + 4)|0;
      $301 = $300;
      HEAP32[$301>>2] = $297;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($45,29249);
     ;HEAP32[$$byval_copy21>>2]=HEAP32[$45>>2]|0;HEAP32[$$byval_copy21+4>>2]=HEAP32[$45+4>>2]|0;
     $302 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy21)|0);
     if ($302) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($46,27147);
      $303 = $46;
      $304 = $303;
      $305 = HEAP32[$304>>2]|0;
      $306 = (($303) + 4)|0;
      $307 = $306;
      $308 = HEAP32[$307>>2]|0;
      $309 = $2;
      $310 = $309;
      HEAP32[$310>>2] = $305;
      $311 = (($309) + 4)|0;
      $312 = $311;
      HEAP32[$312>>2] = $308;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($47,29252);
     ;HEAP32[$$byval_copy22>>2]=HEAP32[$47>>2]|0;HEAP32[$$byval_copy22+4>>2]=HEAP32[$47+4>>2]|0;
     $313 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy22)|0);
     if ($313) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($48,27152);
      $314 = $48;
      $315 = $314;
      $316 = HEAP32[$315>>2]|0;
      $317 = (($314) + 4)|0;
      $318 = $317;
      $319 = HEAP32[$318>>2]|0;
      $320 = $2;
      $321 = $320;
      HEAP32[$321>>2] = $316;
      $322 = (($320) + 4)|0;
      $323 = $322;
      HEAP32[$323>>2] = $319;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($49,29255);
     ;HEAP32[$$byval_copy23>>2]=HEAP32[$49>>2]|0;HEAP32[$$byval_copy23+4>>2]=HEAP32[$49+4>>2]|0;
     $324 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy23)|0);
     if ($324) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($50,27155);
      $325 = $50;
      $326 = $325;
      $327 = HEAP32[$326>>2]|0;
      $328 = (($325) + 4)|0;
      $329 = $328;
      $330 = HEAP32[$329>>2]|0;
      $331 = $2;
      $332 = $331;
      HEAP32[$332>>2] = $327;
      $333 = (($331) + 4)|0;
      $334 = $333;
      HEAP32[$334>>2] = $330;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($51,29258);
     ;HEAP32[$$byval_copy24>>2]=HEAP32[$51>>2]|0;HEAP32[$$byval_copy24+4>>2]=HEAP32[$51+4>>2]|0;
     $335 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy24)|0);
     if ($335) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($52,27157);
      $336 = $52;
      $337 = $336;
      $338 = HEAP32[$337>>2]|0;
      $339 = (($336) + 4)|0;
      $340 = $339;
      $341 = HEAP32[$340>>2]|0;
      $342 = $2;
      $343 = $342;
      HEAP32[$343>>2] = $338;
      $344 = (($342) + 4)|0;
      $345 = $344;
      HEAP32[$345>>2] = $341;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($53,29261);
     ;HEAP32[$$byval_copy25>>2]=HEAP32[$53>>2]|0;HEAP32[$$byval_copy25+4>>2]=HEAP32[$53+4>>2]|0;
     $346 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy25)|0);
     if ($346) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($54,27164);
      $347 = $54;
      $348 = $347;
      $349 = HEAP32[$348>>2]|0;
      $350 = (($347) + 4)|0;
      $351 = $350;
      $352 = HEAP32[$351>>2]|0;
      $353 = $2;
      $354 = $353;
      HEAP32[$354>>2] = $349;
      $355 = (($353) + 4)|0;
      $356 = $355;
      HEAP32[$356>>2] = $352;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($55,29264);
     ;HEAP32[$$byval_copy26>>2]=HEAP32[$55>>2]|0;HEAP32[$$byval_copy26+4>>2]=HEAP32[$55+4>>2]|0;
     $357 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy26)|0);
     if ($357) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($56,27166);
      $358 = $56;
      $359 = $358;
      $360 = HEAP32[$359>>2]|0;
      $361 = (($358) + 4)|0;
      $362 = $361;
      $363 = HEAP32[$362>>2]|0;
      $364 = $2;
      $365 = $364;
      HEAP32[$365>>2] = $360;
      $366 = (($364) + 4)|0;
      $367 = $366;
      HEAP32[$367>>2] = $363;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($57,29267);
     ;HEAP32[$$byval_copy27>>2]=HEAP32[$57>>2]|0;HEAP32[$$byval_copy27+4>>2]=HEAP32[$57+4>>2]|0;
     $368 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy27)|0);
     if ($368) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($58,27175);
      $369 = $58;
      $370 = $369;
      $371 = HEAP32[$370>>2]|0;
      $372 = (($369) + 4)|0;
      $373 = $372;
      $374 = HEAP32[$373>>2]|0;
      $375 = $2;
      $376 = $375;
      HEAP32[$376>>2] = $371;
      $377 = (($375) + 4)|0;
      $378 = $377;
      HEAP32[$378>>2] = $374;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($59,29270);
     ;HEAP32[$$byval_copy28>>2]=HEAP32[$59>>2]|0;HEAP32[$$byval_copy28+4>>2]=HEAP32[$59+4>>2]|0;
     $379 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy28)|0);
     if ($379) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($60,27177);
      $380 = $60;
      $381 = $380;
      $382 = HEAP32[$381>>2]|0;
      $383 = (($380) + 4)|0;
      $384 = $383;
      $385 = HEAP32[$384>>2]|0;
      $386 = $2;
      $387 = $386;
      HEAP32[$387>>2] = $382;
      $388 = (($386) + 4)|0;
      $389 = $388;
      HEAP32[$389>>2] = $385;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($61,29273);
     ;HEAP32[$$byval_copy29>>2]=HEAP32[$61>>2]|0;HEAP32[$$byval_copy29+4>>2]=HEAP32[$61+4>>2]|0;
     $390 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy29)|0);
     if ($390) {
      __ZN12_GLOBAL__N_110StringViewC2EPKc($62,27180);
      $391 = $62;
      $392 = $391;
      $393 = HEAP32[$392>>2]|0;
      $394 = (($391) + 4)|0;
      $395 = $394;
      $396 = HEAP32[$395>>2]|0;
      $397 = $2;
      $398 = $397;
      HEAP32[$398>>2] = $393;
      $399 = (($397) + 4)|0;
      $400 = $399;
      HEAP32[$400>>2] = $396;
      label = 66;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($63,29276);
     ;HEAP32[$$byval_copy30>>2]=HEAP32[$63>>2]|0;HEAP32[$$byval_copy30+4>>2]=HEAP32[$63+4>>2]|0;
     $401 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy30)|0);
     if (!($401)) {
      $$1 = 0;
      break;
     }
     __ZN12_GLOBAL__N_110StringViewC2EPKc($64,27183);
     $402 = $64;
     $403 = $402;
     $404 = HEAP32[$403>>2]|0;
     $405 = (($402) + 4)|0;
     $406 = $405;
     $407 = HEAP32[$406>>2]|0;
     $408 = $2;
     $409 = $408;
     HEAP32[$409>>2] = $404;
     $410 = (($408) + 4)|0;
     $411 = $410;
     HEAP32[$411>>2] = $407;
     label = 66;
    }
   } while(0);
   if ((label|0) == 66) {
    $412 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $413 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($412)|0);
    HEAP32[$65>>2] = $413;
    HEAP32[$66>>2] = 0;
    $414 = ($413|0)==(0|0);
    $415 = $413;
    L100: do {
     if ($414) {
      $$0 = 0;
     } else {
      switch ($68<<24>>24) {
      case 76: case 82:  {
       $416 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($412)|0);
       HEAP32[$66>>2] = $416;
       $417 = ($416|0)==(0|0);
       $418 = $416;
       if ($417) {
        $$0 = 0;
        break L100;
       }
       $419 = ($storemerge<<24>>24)==(0);
       if (!($419)) {
        HEAP32[$65>>2] = $418;
        HEAP32[$66>>2] = $415;
       }
       break;
      }
      default: {
      }
      }
      $420 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8FoldExprEJRbRNS_10StringViewERPNS0_4NodeESD_EEESC_DpOT0_($0,$1,$2,$65,$66)|0);
      $$0 = $420;
     }
    } while(0);
    $$1 = $$0;
   }
   $$2 = $$1;
  }
  $$3 = $$2;
 } else {
  $$3 = 0;
 }
 STACKTOP = sp;return ($$3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBinaryExprENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
 $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($4)|0);
 HEAP32[$2>>2] = $5;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $$1 = 0;
 } else {
  $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($4)|0);
  HEAP32[$3>>2] = $7;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = 0;
  } else {
   $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BinaryExprEJRPNS0_4NodeERNS_10StringViewESA_EEES9_DpOT0_($0,$2,$1,$3)|0);
   $$0 = $9;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parsePrefixExprENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($3)|0);
 HEAP32[$2>>2] = $4;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 0;
 } else {
  $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10PrefixExprEJRNS_10StringViewERPNS0_4NodeEEEESB_DpOT0_($0,$1,$2)|0);
  $$0 = $6;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA10_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA10_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($3,$1,$2,26370)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA11_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA11_KcRPNS2_4NodeES9_EEEPT_DpOT0_($3,29075,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CallExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CallExprEJRPNS2_4NodeENS2_9NodeArrayEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseConversionExprEv($0) {
 $0 = $0|0;
 var $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy = sp + 56|0;
 $1 = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1,28974);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
 $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 if ($8) {
  $9 = ((($0)) + 360|0);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($3,$9,0);
  $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($10)|0);
  HEAP32[$2>>2] = $11;
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($3);
  $12 = ($11|0)==(0|0);
  do {
   if ($12) {
    $$4 = 0;
   } else {
    $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if (!($13)) {
     $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($10)|0);
     HEAP32[$6>>2] = $20;
     $21 = ($20|0)==(0|0);
     if ($21) {
      $$3 = 0;
     } else {
      $22 = ((($6)) + 4|0);
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13makeNodeArrayIPPNS0_4NodeEEENS0_9NodeArrayET_SB_($7,$0,$6,$22);
      $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14ConversionExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0,$2,$7)|0);
      $$3 = $23;
     }
     $$4 = $$3;
     break;
    }
    $14 = ((($0)) + 8|0);
    $15 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($14)|0);
    while(1) {
     $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
     if ($16) {
      label = 9;
      break;
     }
     $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($10)|0);
     HEAP32[$4>>2] = $17;
     $18 = ($17|0)==(0|0);
     if ($18) {
      label = 7;
      break;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($14,$4);
    }
    if ((label|0) == 7) {
     $$4 = 0;
     break;
    }
    else if ((label|0) == 9) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($5,$0,$15);
     $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14ConversionExprEJRPNS0_4NodeERNS0_9NodeArrayEEEES9_DpOT0_($0,$2,$5)|0);
     $$4 = $19;
     break;
    }
   }
  } while(0);
  $$5 = $$4;
 } else {
  $$5 = 0;
 }
 STACKTOP = sp;return ($$5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10DeleteExprEJRPNS0_4NodeERbbEEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10DeleteExprEJRPNS2_4NodeERbbEEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA13_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA13_KcRPNS2_4NodeES9_EEEPT_DpOT0_($3,28903,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedNameEv($0) {
 $0 = $0|0;
 var $$10 = 0, $$4 = 0, $$8 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$not = 0, $$pre$phi24Z2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $brmerge = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy2 = sp + 80|0;
 $$byval_copy1 = sp + 72|0;
 $$byval_copy = sp + 64|0;
 $1 = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 36|0;
 $5 = sp + 32|0;
 $6 = sp + 24|0;
 $7 = sp + 16|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $10 = sp;
 HEAP32[$1>>2] = 0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28113);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 L1: do {
  if ($11) {
   $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($12)|0);
   HEAP32[$1>>2] = $13;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $$10 = 0;
   } else {
    $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $16 = ($15<<24>>24)==(73);
    do {
     if ($16) {
      $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($12,0)|0);
      HEAP32[$3>>2] = $17;
      $18 = ($17|0)==(0|0);
      if ($18) {
       $$10 = 0;
       break L1;
      } else {
       $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$3)|0);
       HEAP32[$1>>2] = $19;
       break;
      }
     }
    } while(0);
    while(1) {
     $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
     if ($20) {
      break;
     }
     $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($12)|0);
     HEAP32[$4>>2] = $21;
     $22 = ($21|0)==(0|0);
     if ($22) {
      label = 35;
      break;
     }
     $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$4)|0);
     HEAP32[$1>>2] = $23;
    }
    if ((label|0) == 35) {
     $$10 = 0;
     break;
    }
    $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($12)|0);
    HEAP32[$5>>2] = $24;
    $25 = ($24|0)==(0|0);
    if ($25) {
     $$4 = 0;
    } else {
     $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$5)|0);
     $$4 = $26;
    }
    $$10 = $$4;
   }
  } else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($6,27087);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$6+4>>2]|0;
   $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
   __ZN12_GLOBAL__N_110StringViewC2EPKc($7,28117);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$7+4>>2]|0;
   $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
   if (!($28)) {
    $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($29)|0);
    HEAP32[$1>>2] = $30;
    $31 = ($30|0)==(0|0);
    $$not = $27 ^ 1;
    $brmerge = $31 | $$not;
    if ($brmerge) {
     $$10 = $30;
     break;
    }
    $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19GlobalQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$1)|0);
    HEAP32[$1>>2] = $32;
    $$10 = $32;
    break;
   }
   $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   $34 = $33 << 24 >> 24;
   $isdigittmp = (($34) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   L25: do {
    if ($isdigit) {
     while(1) {
      $35 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $36 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($35)|0);
      HEAP32[$8>>2] = $36;
      $37 = ($36|0)==(0|0);
      if ($37) {
       break;
      }
      $38 = HEAP32[$1>>2]|0;
      $39 = ($38|0)==(0|0);
      do {
       if ($39) {
        if ($27) {
         $41 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19GlobalQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$8)|0);
         HEAP32[$1>>2] = $41;
         break;
        } else {
         HEAP32[$1>>2] = $36;
         break;
        }
       } else {
        $40 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$8)|0);
        HEAP32[$1>>2] = $40;
       }
      } while(0);
      $42 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if ($42) {
       $$pre$phi24Z2D = $35;
       break L25;
      }
     }
     $$10 = 0;
     break L1;
    } else {
     $43 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $44 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($43)|0);
     HEAP32[$1>>2] = $44;
     $45 = ($44|0)==(0|0);
     if ($45) {
      $$10 = 0;
      break L1;
     }
     $46 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
     $47 = ($46<<24>>24)==(73);
     if ($47) {
      $48 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($43,0)|0);
      HEAP32[$9>>2] = $48;
      $49 = ($48|0)==(0|0);
      if ($49) {
       $$10 = 0;
       break L1;
      } else {
       $50 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$9)|0);
       HEAP32[$1>>2] = $50;
       $$pre$phi24Z2D = $43;
       break;
      }
     } else {
      $$pre$phi24Z2D = $43;
     }
    }
   } while(0);
   $51 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($$pre$phi24Z2D)|0);
   HEAP32[$10>>2] = $51;
   $52 = ($51|0)==(0|0);
   if ($52) {
    $$8 = 0;
   } else {
    $53 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$10)|0);
    $$8 = $53;
   }
   $$10 = $$8;
  }
 } while(0);
 STACKTOP = sp;return ($$10|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA3_KcSA_EEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10MemberExprEJRPNS2_4NodeERA3_KcS6_EEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10MemberExprEJRPNS0_4NodeERA2_KcSA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10MemberExprEJRPNS2_4NodeERA2_KcS6_EEEPT_DpOT0_($3,$1,28064,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_18ArraySubscriptExprEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle18ArraySubscriptExprEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = sp + 24|0;
 $2 = sp + 20|0;
 $3 = sp + 29|0;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $6 = sp + 28|0;
 $7 = sp + 8|0;
 $8 = sp + 4|0;
 $9 = sp;
 $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $11 = ($10<<24>>24)==(100);
 L1: do {
  if ($11) {
   $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $13 = $12 << 24 >> 24;
   switch ($13|0) {
   case 105:  {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 2|0);
    HEAP32[$0>>2] = $15;
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($16)|0);
    HEAP32[$1>>2] = $17;
    $18 = ($17|0)==(0|0);
    if ($18) {
     $$1 = 0;
    } else {
     $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($16)|0);
     HEAP32[$2>>2] = $19;
     $20 = ($19|0)==(0|0);
     if ($20) {
      $$0 = 0;
     } else {
      HEAP8[$3>>0] = 0;
      $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BracedExprEJRPNS0_4NodeESA_bEEES9_DpOT0_($0,$1,$2,$3)|0);
      $$0 = $21;
     }
     $$1 = $$0;
    }
    $$7 = $$1;
    break L1;
    break;
   }
   case 120:  {
    $22 = HEAP32[$0>>2]|0;
    $23 = ((($22)) + 2|0);
    HEAP32[$0>>2] = $23;
    $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($24)|0);
    HEAP32[$4>>2] = $25;
    $26 = ($25|0)==(0|0);
    if ($26) {
     $$3 = 0;
    } else {
     $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($24)|0);
     HEAP32[$5>>2] = $27;
     $28 = ($27|0)==(0|0);
     if ($28) {
      $$2 = 0;
     } else {
      HEAP8[$6>>0] = 1;
      $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BracedExprEJRPNS0_4NodeESA_bEEES9_DpOT0_($0,$4,$5,$6)|0);
      $$2 = $29;
     }
     $$3 = $$2;
    }
    $$7 = $$3;
    break L1;
    break;
   }
   case 88:  {
    $30 = HEAP32[$0>>2]|0;
    $31 = ((($30)) + 2|0);
    HEAP32[$0>>2] = $31;
    $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($32)|0);
    HEAP32[$7>>2] = $33;
    $34 = ($33|0)==(0|0);
    if ($34) {
     $$6 = 0;
    } else {
     $35 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($32)|0);
     HEAP32[$8>>2] = $35;
     $36 = ($35|0)==(0|0);
     if ($36) {
      $$5 = 0;
     } else {
      $37 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseBracedExprEv($32)|0);
      HEAP32[$9>>2] = $37;
      $38 = ($37|0)==(0|0);
      if ($38) {
       $$4 = 0;
      } else {
       $39 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15BracedRangeExprEJRPNS0_4NodeESA_SA_EEES9_DpOT0_($0,$7,$8,$9)|0);
       $$4 = $39;
      }
      $$5 = $$4;
     }
     $$6 = $$5;
    }
    $$7 = $$6;
    break L1;
    break;
   }
   default: {
    label = 20;
    break L1;
   }
   }
  } else {
   label = 20;
  }
 } while(0);
 if ((label|0) == 20) {
  $40 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $41 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($40)|0);
  $$7 = $41;
 }
 STACKTOP = sp;return ($$7|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12InitListExprEJDnNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12InitListExprEJDnNS2_9NodeArrayEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11PostfixExprEJRPNS0_4NodeERA3_KcEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11PostfixExprEJRPNS2_4NodeERA3_KcEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseNewExprEv($0) {
 $0 = $0|0;
 var $$5 = 0, $$7 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $$byval_copy3 = sp + 104|0;
 $$byval_copy2 = sp + 96|0;
 $$byval_copy1 = sp + 88|0;
 $$byval_copy = sp + 80|0;
 $1 = sp + 113|0;
 $2 = sp + 72|0;
 $3 = sp + 112|0;
 $4 = sp + 64|0;
 $5 = sp + 56|0;
 $6 = sp + 48|0;
 $7 = sp + 40|0;
 $8 = sp + 32|0;
 $9 = sp + 24|0;
 $10 = sp + 16|0;
 $11 = sp + 8|0;
 $12 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27087);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 $14 = $13&1;
 HEAP8[$1>>0] = $14;
 $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
 $16 = ($15<<24>>24)==(97);
 $17 = $16&1;
 HEAP8[$3>>0] = $17;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,27701);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
 if ($18) {
  label = 3;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,27704);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$5+4>>2]|0;
  $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
  if ($19) {
   label = 3;
  } else {
   $$7 = 0;
  }
 }
 do {
  if ((label|0) == 3) {
   $20 = ((($0)) + 8|0);
   $21 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($20)|0);
   while(1) {
    $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if ($22) {
     break;
    }
    $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($23)|0);
    HEAP32[$6>>2] = $24;
    $25 = ($24|0)==(0|0);
    if ($25) {
     label = 7;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20,$6);
   }
   if ((label|0) == 7) {
    $$7 = 0;
    break;
   }
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($7,$0,$21);
   $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($26)|0);
   HEAP32[$8>>2] = $27;
   $28 = ($27|0)==(0|0);
   do {
    if ($28) {
     $$5 = 0;
    } else {
     __ZN12_GLOBAL__N_110StringViewC2EPKc($9,27707);
     ;HEAP32[$$byval_copy3>>2]=HEAP32[$9>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$9+4>>2]|0;
     $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy3)|0);
     if (!($29)) {
      $35 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if (!($35)) {
       $$5 = 0;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($12);
      $36 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_7NewExprEJRNS0_9NodeArrayERPNS0_4NodeES8_RbSD_EEESB_DpOT0_($0,$7,$8,$12,$1,$3)|0);
      $$5 = $36;
      break;
     }
     $30 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($20)|0);
     while(1) {
      $31 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if ($31) {
       label = 15;
       break;
      }
      $32 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv($26)|0);
      HEAP32[$10>>2] = $32;
      $33 = ($32|0)==(0|0);
      if ($33) {
       label = 13;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($20,$10);
     }
     if ((label|0) == 13) {
      $$5 = 0;
      break;
     }
     else if ((label|0) == 15) {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($11,$0,$30);
      $34 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_7NewExprEJRNS0_9NodeArrayERPNS0_4NodeES9_RbSD_EEESB_DpOT0_($0,$7,$8,$11,$1,$3)|0);
      $$5 = $34;
      break;
     }
    }
   } while(0);
   $$7 = $$5;
  }
 } while(0);
 STACKTOP = sp;return ($$7|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA11_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA11_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($2,27690,$1,26370)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15ConditionalExprEJRPNS0_4NodeESA_SA_EEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15ConditionalExprEJRPNS2_4NodeES6_S6_EEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA17_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA17_KcRPNS2_4NodeES9_EEEPT_DpOT0_($3,27609,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8CastExprEJRA12_KcRPNS0_4NodeESD_EEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA12_KcRPNS2_4NodeES9_EEEPT_DpOT0_($3,27550,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA9_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA9_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($3,$1,$2,26370)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19SizeofParamPackExprEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19SizeofParamPackExprEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13EnclosingExprEJRA12_KcRPNS0_4NodeERA2_S8_EEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA12_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($2,27362,$1,26370)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13NodeArrayNodeEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13NodeArrayNodeEJNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12InitListExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12InitListExprEJRPNS2_4NodeENS2_9NodeArrayEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9ThrowExprEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9ThrowExprEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9ThrowExprEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle9ThrowExprC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle9ThrowExprC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,58,1,1,1);
 HEAP32[$0>>2] = (15240);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9ThrowExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27211);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle9ThrowExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12InitListExprEJRPNS2_4NodeENS2_9NodeArrayEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12InitListExprC2EPKNS0_4NodeENS0_9NodeArrayE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle12InitListExprC2EPKNS0_4NodeENS0_9NodeArrayE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,56,1,1,1);
 HEAP32[$0>>2] = (15284);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12InitListExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($3,$1);
 }
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,123);
 $5 = ((($0)) + 12|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($5,$1);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,125);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12InitListExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13NodeArrayNodeEJNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13NodeArrayNodeC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13NodeArrayNodeC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,0,1,1,1);
 HEAP32[$0>>2] = (15328);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13NodeArrayNode9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($2,$1);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13NodeArrayNodeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA12_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,28)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $7 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,$3);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprC2ENS_10StringViewEPNS0_4NodeES2_($6,$$byval_copy,$7,$$byval_copy1);
 STACKTOP = sp;return ($6|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprC2ENS_10StringViewEPNS0_4NodeES2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,47,1,1,1);
 HEAP32[$0>>2] = (15372);
 $4 = ((($0)) + 8|0);
 $5 = $1;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 $15 = ((($0)) + 16|0);
 HEAP32[$15>>2] = $2;
 $16 = ((($0)) + 20|0);
 $17 = $3;
 $18 = $17;
 $19 = HEAP32[$18>>2]|0;
 $20 = (($17) + 4)|0;
 $21 = $20;
 $22 = HEAP32[$21>>2]|0;
 $23 = $16;
 $24 = $23;
 HEAP32[$24>>2] = $19;
 $25 = (($23) + 4)|0;
 $26 = $25;
 HEAP32[$26>>2] = $22;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13EnclosingExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast4$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast4$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = $4;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $2;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 $15 = ((($0)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($16,$1);
 $17 = ((($0)) + 20|0);
 $18 = $17;
 $19 = $18;
 $20 = HEAP32[$19>>2]|0;
 $21 = (($18) + 4)|0;
 $22 = $21;
 $23 = HEAP32[$22>>2]|0;
 $24 = $3;
 $25 = $24;
 HEAP32[$25>>2] = $20;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $23;
 ;HEAP32[$tmpcast4$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast4$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast4$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19SizeofParamPackExprEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle19SizeofParamPackExprC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle19SizeofParamPackExprC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,49,1,1,1);
 HEAP32[$0>>2] = (15416);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19SizeofParamPackExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 40|0;
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27424);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionC2EPKNS0_4NodeE($3,$6);
 __ZNK12_GLOBAL__N_116itanium_demangle22ParameterPackExpansion9printLeftERNS_12OutputStreamE($3,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle19SizeofParamPackExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,29,1,1,1);
 HEAP32[$0>>2] = (15460);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle22ParameterPackExpansion9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$030 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy1 = sp + 48|0;
 $$byval_copy = sp + 40|0;
 $2 = sp + 28|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = ((($1)) + 12|0);
 __ZN12_GLOBAL__N_114SwapAndRestoreIjEC2ERjj($2,$6);
 $7 = ((($1)) + 16|0);
 __ZN12_GLOBAL__N_114SwapAndRestoreIjEC2ERjj($3,$7);
 $8 = (__ZNK12_GLOBAL__N_112OutputStream18getCurrentPositionEv($1)|0);
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($10,$1);
 $11 = HEAP32[$7>>2]|0;
 L1: do {
  switch ($11|0) {
  case -1:  {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($4,25904);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
   break;
  }
  case 0:  {
   __ZN12_GLOBAL__N_112OutputStream18setCurrentPositionEm($1,$8);
   break;
  }
  default: {
   $$030 = 1;
   while(1) {
    $12 = ($$030>>>0)<($11>>>0);
    if (!($12)) {
     break L1;
    }
    __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26558);
    ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
    __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
    HEAP32[$6>>2] = $$030;
    $13 = HEAP32[$9>>2]|0;
    __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($13,$1);
    $14 = (($$030) + 1)|0;
    $$030 = $14;
   }
  }
  }
 } while(0);
 __ZN12_GLOBAL__N_114SwapAndRestoreIjED2Ev($3);
 __ZN12_GLOBAL__N_114SwapAndRestoreIjED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_114SwapAndRestoreIjEC2ERjj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$1>>2]|0;
 HEAP32[$2>>2] = $3;
 $4 = ((($0)) + 8|0);
 HEAP8[$4>>0] = 1;
 HEAP32[$1>>2] = -1;
 return;
}
function __ZN12_GLOBAL__N_114SwapAndRestoreIjED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = ((($0)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = HEAP32[$0>>2]|0;
  HEAP32[$6>>2] = $5;
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA9_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,28)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $7 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,$3);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprC2ENS_10StringViewEPNS0_4NodeES2_($6,$$byval_copy,$7,$$byval_copy1);
 STACKTOP = sp;return ($6|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA12_KcRPNS2_4NodeES9_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$3>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8CastExprC2ENS_10StringViewEPKNS0_4NodeES5_($5,$$byval_copy,$6,$7);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8CastExprC2ENS_10StringViewEPKNS0_4NodeES5_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,48,1,1,1);
 HEAP32[$0>>2] = (15504);
 $4 = ((($0)) + 8|0);
 $5 = $1;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 $15 = ((($0)) + 16|0);
 HEAP32[$15>>2] = $2;
 $16 = ((($0)) + 20|0);
 HEAP32[$16>>2] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8CastExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 48|0;
 $$byval_copy = sp + 40|0;
 $tmpcast$byval_copy = sp + 32|0;
 $2 = sp;
 $3 = sp + 24|0;
 $4 = sp + 16|0;
 $5 = sp + 8|0;
 $6 = ((($0)) + 8|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $2;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26556);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $17 = ((($0)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($19)) + 16|0);
 $21 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_vii[$21 & 1023]($18,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,27562);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $22 = ((($0)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = HEAP32[$23>>2]|0;
 $25 = ((($24)) + 16|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_vii[$26 & 1023]($23,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26370);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8CastExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA17_KcRPNS2_4NodeES9_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$3>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8CastExprC2ENS_10StringViewEPKNS0_4NodeES5_($5,$$byval_copy,$6,$7);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15ConditionalExprEJRPNS2_4NodeES6_S6_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$3>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15ConditionalExprC2EPKNS0_4NodeES4_S4_($4,$5,$6,$7);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15ConditionalExprC2EPKNS0_4NodeES4_S4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,45,1,1,1);
 HEAP32[$0>>2] = (15548);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 12|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15ConditionalExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy3 = sp + 56|0;
 $$byval_copy2 = sp + 48|0;
 $$byval_copy1 = sp + 40|0;
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($7,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,27626);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($9,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,27632);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 $10 = ((($0)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($11,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26370);
 ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15ConditionalExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA11_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,28)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $7 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,$3);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprC2ENS_10StringViewEPNS0_4NodeES2_($6,$$byval_copy,$7,$$byval_copy1);
 STACKTOP = sp;return ($6|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_7NewExprEJRNS0_9NodeArrayERPNS0_4NodeES9_RbSD_EEESB_DpOT0_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 368|0);
 $7 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle7NewExprEJRNS2_9NodeArrayERPNS2_4NodeES5_RbS9_EEEPT_DpOT0_($6,$1,$2,$3,$4,$5)|0);
 return ($7|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_7NewExprEJRNS0_9NodeArrayERPNS0_4NodeES8_RbSD_EEESB_DpOT0_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 368|0);
 $7 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle7NewExprEJRNS2_9NodeArrayERPNS2_4NodeES4_RbS9_EEEPT_DpOT0_($6,$1,$2,$3,$4,$5)|0);
 return ($7|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle7NewExprEJRNS2_9NodeArrayERPNS2_4NodeES4_RbS9_EEEPT_DpOT0_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast6$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast6$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,32)|0);
 $9 = $1;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $6;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 $19 = HEAP32[$2>>2]|0;
 $20 = $3;
 $21 = $20;
 $22 = HEAP32[$21>>2]|0;
 $23 = (($20) + 4)|0;
 $24 = $23;
 $25 = HEAP32[$24>>2]|0;
 $26 = $7;
 $27 = $26;
 HEAP32[$27>>2] = $22;
 $28 = (($26) + 4)|0;
 $29 = $28;
 HEAP32[$29>>2] = $25;
 $30 = HEAP8[$4>>0]|0;
 $31 = ($30<<24>>24)!=(0);
 $32 = HEAP8[$5>>0]|0;
 $33 = ($32<<24>>24)!=(0);
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$tmpcast6$byval_copy>>2]=HEAP32[$7>>2]|0;HEAP32[$tmpcast6$byval_copy+4>>2]=HEAP32[$7+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle7NewExprC2ENS0_9NodeArrayEPNS0_4NodeES2_bb($8,$tmpcast$byval_copy,$19,$tmpcast6$byval_copy,$31,$33);
 STACKTOP = sp;return ($8|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle7NewExprC2ENS0_9NodeArrayEPNS0_4NodeES2_bb($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $4&1;
 $7 = $5&1;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,51,1,1,1);
 HEAP32[$0>>2] = (15592);
 $8 = ((($0)) + 8|0);
 $9 = $1;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $8;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 $19 = ((($0)) + 16|0);
 HEAP32[$19>>2] = $2;
 $20 = ((($0)) + 20|0);
 $21 = $3;
 $22 = $21;
 $23 = HEAP32[$22>>2]|0;
 $24 = (($21) + 4)|0;
 $25 = $24;
 $26 = HEAP32[$25>>2]|0;
 $27 = $20;
 $28 = $27;
 HEAP32[$28>>2] = $23;
 $29 = (($27) + 4)|0;
 $30 = $29;
 HEAP32[$30>>2] = $26;
 $31 = ((($0)) + 28|0);
 HEAP8[$31>>0] = $6;
 $32 = ((($0)) + 29|0);
 HEAP8[$32>>0] = $7;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle7NewExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $$byval_copy6 = sp + 104|0;
 $$byval_copy5 = sp + 96|0;
 $$byval_copy4 = sp + 88|0;
 $$byval_copy3 = sp + 80|0;
 $$byval_copy2 = sp + 72|0;
 $$byval_copy1 = sp + 64|0;
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 32|0;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 8|0;
 $8 = sp;
 $9 = ((($0)) + 28|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27710);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,27722);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $12 = ((($0)) + 29|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = ($13<<24>>24)==(0);
 if (!($14)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,27726);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 }
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
 $15 = ((($0)) + 8|0);
 $16 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5emptyEv($15)|0);
 if (!($16)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26374);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
  __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($15,$1);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6,26370);
  ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
 }
 $17 = ((($0)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($18,$1);
 $19 = ((($0)) + 20|0);
 $20 = (__ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5emptyEv($19)|0);
 if (!($20)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7,26374);
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy5);
  __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($19,$1);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($8,26370);
  ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;HEAP32[$$byval_copy6+4>>2]=HEAP32[$8+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy6);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle7NewExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray5emptyEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle7NewExprEJRNS2_9NodeArrayERPNS2_4NodeES5_RbS9_EEEPT_DpOT0_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast6$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast6$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,32)|0);
 $9 = $1;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $6;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 $19 = HEAP32[$2>>2]|0;
 $20 = $3;
 $21 = $20;
 $22 = HEAP32[$21>>2]|0;
 $23 = (($20) + 4)|0;
 $24 = $23;
 $25 = HEAP32[$24>>2]|0;
 $26 = $7;
 $27 = $26;
 HEAP32[$27>>2] = $22;
 $28 = (($26) + 4)|0;
 $29 = $28;
 HEAP32[$29>>2] = $25;
 $30 = HEAP8[$4>>0]|0;
 $31 = ($30<<24>>24)!=(0);
 $32 = HEAP8[$5>>0]|0;
 $33 = ($32<<24>>24)!=(0);
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
 ;HEAP32[$tmpcast6$byval_copy>>2]=HEAP32[$7>>2]|0;HEAP32[$tmpcast6$byval_copy+4>>2]=HEAP32[$7+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle7NewExprC2ENS0_9NodeArrayEPNS0_4NodeES2_bb($8,$tmpcast$byval_copy,$19,$tmpcast6$byval_copy,$31,$33);
 STACKTOP = sp;return ($8|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11PostfixExprEJRPNS2_4NodeERA3_KcEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$2);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11PostfixExprC2EPKNS0_4NodeENS_10StringViewE($4,$5,$$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle11PostfixExprC2EPKNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,44,1,1,1);
 HEAP32[$0>>2] = (15636);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle11PostfixExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $tmpcast$byval_copy = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $7 = ((($0)) + 12|0);
 $8 = $7;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($8) + 4)|0;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = $4;
 $15 = $14;
 HEAP32[$15>>2] = $10;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $13;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle11PostfixExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12InitListExprEJDnNS2_9NodeArrayEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $3;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12InitListExprC2EPKNS0_4NodeENS0_9NodeArrayE($4,0,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $1 = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 HEAP32[$1>>2] = 0;
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parsePositiveIntegerEPm($0,$1)|0);
 if ($4) {
  $$1 = 0;
 } else {
  $5 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($0)|0);
  $6 = HEAP32[$1>>2]|0;
  $7 = (($6) + -1)|0;
  $8 = ($7>>>0)<($5>>>0);
  if ($8) {
   $9 = HEAP32[$0>>2]|0;
   $10 = (($9) + ($6)|0);
   __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($2,$9,$10);
   $11 = HEAP32[$0>>2]|0;
   $12 = (($11) + ($6)|0);
   HEAP32[$0>>2] = $12;
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3,27929);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
   $13 = (__ZNK12_GLOBAL__N_110StringView10startsWithES0_($2,$$byval_copy)|0);
   if ($13) {
    $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA22_KcEEEPNS0_4NodeEDpOT0_($0)|0);
    $$0 = $14;
   } else {
    $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
    $$0 = $15;
   }
   $$1 = $$0;
  } else {
   $$1 = 0;
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BracedExprEJRPNS0_4NodeESA_bEEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10BracedExprEJRPNS2_4NodeES6_bEEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15BracedRangeExprEJRPNS0_4NodeESA_SA_EEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15BracedRangeExprEJRPNS2_4NodeES6_S6_EEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15BracedRangeExprEJRPNS2_4NodeES6_S6_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$3>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15BracedRangeExprC2EPKNS0_4NodeES4_S4_($4,$5,$6,$7);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15BracedRangeExprC2EPKNS0_4NodeES4_S4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,66,1,1,1);
 HEAP32[$0>>2] = (15680);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 12|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($0)) + 16|0);
 HEAP32[$6>>2] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15BracedRangeExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$off = 0, $$pre = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,91);
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($5,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27820);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $6 = ((($0)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($7,$1);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,93);
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($9)|0);
 $$off = (($10) + -65)<<24>>24;
 $switch = ($$off&255)<(2);
 if ($switch) {
  $11 = $9;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,27826);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  $$pre = HEAP32[$8>>2]|0;
  $11 = $$pre;
 }
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($11,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15BracedRangeExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10BracedExprEJRPNS2_4NodeES6_bEEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP8[$3>>0]|0;
 $8 = ($7<<24>>24)!=(0);
 __ZN12_GLOBAL__N_116itanium_demangle10BracedExprC2EPKNS0_4NodeES4_b($4,$5,$6,$8);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10BracedExprC2EPKNS0_4NodeES4_b($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $3&1;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,65,1,1,1);
 HEAP32[$0>>2] = (15724);
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $1;
 $6 = ((($0)) + 12|0);
 HEAP32[$6>>2] = $2;
 $7 = ((($0)) + 16|0);
 HEAP8[$7>>0] = $4;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10BracedExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$off = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_112OutputStreampLEc($1,46);
  $8 = ((($0)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($9,$1);
 } else {
  __ZN12_GLOBAL__N_112OutputStreampLEc($1,91);
  $6 = ((($0)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($7,$1);
  __ZN12_GLOBAL__N_112OutputStreampLEc($1,93);
 }
 $10 = ((($0)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($11)|0);
 $$off = (($12) + -65)<<24>>24;
 $switch = ($$off&255)<(2);
 if ($switch) {
  $13 = $11;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27826);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  $$pre = HEAP32[$10>>2]|0;
  $13 = $$pre;
 }
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($13,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10BracedExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parsePositiveIntegerEPm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$off = 0, $$off6 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$1>>2] = 0;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $$off = (($2) + -48)<<24>>24;
 $3 = ($$off&255)>(9);
 L1: do {
  if ($3) {
   $$0 = 1;
  } else {
   $7 = 0;
   while(1) {
    $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $$off6 = (($4) + -48)<<24>>24;
    $5 = ($$off6&255)<(10);
    if (!($5)) {
     $$0 = 0;
     break L1;
    }
    $6 = ($7*10)|0;
    HEAP32[$1>>2] = $6;
    $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7consumeEv($0)|0);
    $9 = $8 << 24 >> 24;
    $10 = (($9) + -48)|0;
    $11 = HEAP32[$1>>2]|0;
    $12 = (($10) + ($11))|0;
    HEAP32[$1>>2] = $12;
    $7 = $12;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZNK12_GLOBAL__N_110StringView10startsWithES0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$i = 0, $$08$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($1)|0);
 $3 = (__ZNK12_GLOBAL__N_110StringView4sizeEv($0)|0);
 $4 = ($2>>>0)>($3>>>0);
 L1: do {
  if ($4) {
   $$0 = 0;
  } else {
   $5 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
   $6 = (__ZNK12_GLOBAL__N_110StringView3endEv($1)|0);
   $7 = (__ZNK12_GLOBAL__N_110StringView5beginEv($0)|0);
   $$0$i$i = $7;$$08$i$i = $5;
   while(1) {
    $8 = ($$08$i$i|0)==($6|0);
    if ($8) {
     $$0 = 1;
     break L1;
    }
    $9 = HEAP8[$$08$i$i>>0]|0;
    $10 = HEAP8[$$0$i$i>>0]|0;
    $11 = ($9<<24>>24)==($10<<24>>24);
    if (!($11)) {
     $$0 = 0;
     break L1;
    }
    $12 = ((($$08$i$i)) + 1|0);
    $13 = ((($$0$i$i)) + 1|0);
    $$0$i$i = $13;$$08$i$i = $12;
   }
  }
 } while(0);
 return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA22_KcEEEPNS0_4NodeEDpOT0_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 368|0);
 $2 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA22_KcEEEPT_DpOT0_($1,27940)|0);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA22_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,7,1,1,1);
 HEAP32[$0>>2] = (15768);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8NameType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8NameType11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $0;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8NameTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7consumeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  $7 = 0;
 } else {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6;
 }
 return ($7|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle18ArraySubscriptExprEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle18ArraySubscriptExprC2EPKNS0_4NodeES4_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle18ArraySubscriptExprC2EPKNS0_4NodeES4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,43,1,1,1);
 HEAP32[$0>>2] = (15812);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle18ArraySubscriptExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,28006);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $7 = ((($0)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($8,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26008);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle18ArraySubscriptExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10MemberExprEJRPNS2_4NodeERA2_KcS6_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 $6 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$2);
 $7 = HEAP32[$3>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10MemberExprC2EPKNS0_4NodeENS_10StringViewES4_($5,$6,$$byval_copy,$7);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10MemberExprC2EPKNS0_4NodeENS_10StringViewES4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,46,1,1,1);
 HEAP32[$0>>2] = (15856);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 12|0);
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $5;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 $16 = ((($0)) + 20|0);
 HEAP32[$16>>2] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10MemberExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 $5 = ((($0)) + 12|0);
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $2;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 $16 = ((($0)) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($17,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10MemberExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10MemberExprEJRPNS2_4NodeERA3_KcS6_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 $6 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$2);
 $7 = HEAP32[$3>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10MemberExprC2EPKNS0_4NodeENS_10StringViewES4_($5,$6,$$byval_copy,$7);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 switch ($3<<24>>24) {
 case 84:  {
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($4)|0);
  HEAP32[$1>>2] = $5;
  $6 = ($5|0)==(0|0);
  if ($6) {
   $$0 = 0;
  } else {
   $7 = ((($0)) + 148|0);
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($7,$1);
   $$0 = $5;
  }
  $$2 = $$0;
  break;
 }
 case 68:  {
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv($8)|0);
  HEAP32[$2>>2] = $9;
  $10 = ($9|0)==(0|0);
  if ($10) {
   $$1 = 0;
  } else {
   $11 = ((($0)) + 148|0);
   __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($11,$2);
   $$1 = $9;
  }
  $$2 = $$1;
  break;
 }
 default: {
  $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($12)|0);
  $$2 = $13;
 }
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($3)|0);
 HEAP32[$1>>2] = $4;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$1 = 0;
 } else {
  $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
  $7 = ($6<<24>>24)==(73);
  if ($7) {
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($3,0)|0);
   HEAP32[$2>>2] = $8;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$0 = 0;
   } else {
    $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2)|0);
    $$0 = $10;
   }
   $$1 = $$0;
  } else {
   $$1 = $4;
  }
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13QualifiedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13QualifiedNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E23parseBaseUnresolvedNameEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $1 = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $6 = $5 << 24 >> 24;
 $isdigittmp = (($6) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 do {
  if ($isdigit) {
   $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($7)|0);
   $$2 = $8;
  } else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($1,28179);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
   $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
   if ($9) {
    $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseDestructorNameEv($10)|0);
    $$2 = $11;
    break;
   }
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28182);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$2+4>>2]|0;
   (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
   $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseOperatorNameEPNS5_9NameStateE($12,0)|0);
   HEAP32[$3>>2] = $13;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $$1 = 0;
   } else {
    $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $16 = ($15<<24>>24)==(73);
    if ($16) {
     $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($12,0)|0);
     HEAP32[$4>>2] = $17;
     $18 = ($17|0)==(0|0);
     if ($18) {
      $$0 = 0;
     } else {
      $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$3,$4)|0);
      $$0 = $19;
     }
     $$1 = $$0;
    } else {
     $$1 = $13;
    }
   }
   $$2 = $$1;
  }
 } while(0);
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19GlobalQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19GlobalQualifiedNameEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19GlobalQualifiedNameEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle19GlobalQualifiedNameC2EPNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle19GlobalQualifiedNameC2EPNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,33,1,1,1);
 HEAP32[$0>>2] = (15900);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19GlobalQualifiedName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28120);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19GlobalQualifiedName11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($0,$3);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle19GlobalQualifiedNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseDestructorNameEv($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $isdigit = 0, $isdigittmp = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $3 = $2 << 24 >> 24;
 $isdigittmp = (($3) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
 if ($isdigit) {
  $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseSimpleIdEv($4)|0);
  $storemerge = $5;
 } else {
  $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E19parseUnresolvedTypeEv($4)|0);
  $storemerge = $6;
 }
 HEAP32[$1>>2] = $storemerge;
 $7 = ($storemerge|0)==(0|0);
 if ($7) {
  $$0 = 0;
 } else {
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8DtorNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$1)|0);
  $$0 = $8;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseOperatorNameEPNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $isdigit = 0, $isdigittmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 24|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp;
 $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $8 = $7 << 24 >> 24;
 L1: do {
  switch ($8|0) {
  case 97:  {
   $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $10 = $9 << 24 >> 24;
   switch ($10|0) {
   case 97:  {
    $11 = HEAP32[$0>>2]|0;
    $12 = ((($11)) + 2|0);
    HEAP32[$0>>2] = $12;
    $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28185)|0);
    $$3 = $13;
    break L1;
    break;
   }
   case 110: case 100:  {
    $14 = HEAP32[$0>>2]|0;
    $15 = ((($14)) + 2|0);
    HEAP32[$0>>2] = $15;
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28196)|0);
    $$3 = $16;
    break L1;
    break;
   }
   case 78:  {
    $17 = HEAP32[$0>>2]|0;
    $18 = ((($17)) + 2|0);
    HEAP32[$0>>2] = $18;
    $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28206)|0);
    $$3 = $19;
    break L1;
    break;
   }
   case 83:  {
    $20 = HEAP32[$0>>2]|0;
    $21 = ((($20)) + 2|0);
    HEAP32[$0>>2] = $21;
    $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28217)|0);
    $$3 = $22;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 99:  {
   $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $24 = $23 << 24 >> 24;
   switch ($24|0) {
   case 108:  {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + 2|0);
    HEAP32[$0>>2] = $26;
    $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28227)|0);
    $$3 = $27;
    break L1;
    break;
   }
   case 109:  {
    $28 = HEAP32[$0>>2]|0;
    $29 = ((($28)) + 2|0);
    HEAP32[$0>>2] = $29;
    $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28238)|0);
    $$3 = $30;
    break L1;
    break;
   }
   case 111:  {
    $31 = HEAP32[$0>>2]|0;
    $32 = ((($31)) + 2|0);
    HEAP32[$0>>2] = $32;
    $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28248)|0);
    $$3 = $33;
    break L1;
    break;
   }
   case 118:  {
    $34 = HEAP32[$0>>2]|0;
    $35 = ((($34)) + 2|0);
    HEAP32[$0>>2] = $35;
    $36 = ((($0)) + 360|0);
    __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$36,0);
    $37 = ((($0)) + 361|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = ($38<<24>>24)!=(0);
    $40 = ($1|0)!=(0|0);
    $41 = $40 | $39;
    __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($3,$37,$41);
    $42 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $43 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($42)|0);
    HEAP32[$4>>2] = $43;
    $44 = ($43|0)==(0|0);
    if ($44) {
     $$0 = 0;
    } else {
     if ($40) {
      HEAP8[$1>>0] = 1;
     }
     $45 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ConversionOperatorTypeEJRPNS0_4NodeEEEES9_DpOT0_($0,$4)|0);
     $$0 = $45;
    }
    __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($3);
    __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
    $$3 = $$0;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 100:  {
   $46 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $47 = $46 << 24 >> 24;
   switch ($47|0) {
   case 97:  {
    $48 = HEAP32[$0>>2]|0;
    $49 = ((($48)) + 2|0);
    HEAP32[$0>>2] = $49;
    $50 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA18_KcEEEPNS0_4NodeEDpOT0_($0,28258)|0);
    $$3 = $50;
    break L1;
    break;
   }
   case 101:  {
    $51 = HEAP32[$0>>2]|0;
    $52 = ((($51)) + 2|0);
    HEAP32[$0>>2] = $52;
    $53 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28276)|0);
    $$3 = $53;
    break L1;
    break;
   }
   case 108:  {
    $54 = HEAP32[$0>>2]|0;
    $55 = ((($54)) + 2|0);
    HEAP32[$0>>2] = $55;
    $56 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA16_KcEEEPNS0_4NodeEDpOT0_($0)|0);
    $$3 = $56;
    break L1;
    break;
   }
   case 118:  {
    $57 = HEAP32[$0>>2]|0;
    $58 = ((($57)) + 2|0);
    HEAP32[$0>>2] = $58;
    $59 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28286)|0);
    $$3 = $59;
    break L1;
    break;
   }
   case 86:  {
    $60 = HEAP32[$0>>2]|0;
    $61 = ((($60)) + 2|0);
    HEAP32[$0>>2] = $61;
    $62 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28296)|0);
    $$3 = $62;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 101:  {
   $63 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $64 = $63 << 24 >> 24;
   switch ($64|0) {
   case 111:  {
    $65 = HEAP32[$0>>2]|0;
    $66 = ((($65)) + 2|0);
    HEAP32[$0>>2] = $66;
    $67 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28307)|0);
    $$3 = $67;
    break L1;
    break;
   }
   case 79:  {
    $68 = HEAP32[$0>>2]|0;
    $69 = ((($68)) + 2|0);
    HEAP32[$0>>2] = $69;
    $70 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28317)|0);
    $$3 = $70;
    break L1;
    break;
   }
   case 113:  {
    $71 = HEAP32[$0>>2]|0;
    $72 = ((($71)) + 2|0);
    HEAP32[$0>>2] = $72;
    $73 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28328)|0);
    $$3 = $73;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 103:  {
   $74 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $75 = $74 << 24 >> 24;
   switch ($75|0) {
   case 101:  {
    $76 = HEAP32[$0>>2]|0;
    $77 = ((($76)) + 2|0);
    HEAP32[$0>>2] = $77;
    $78 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28339)|0);
    $$3 = $78;
    break L1;
    break;
   }
   case 116:  {
    $79 = HEAP32[$0>>2]|0;
    $80 = ((($79)) + 2|0);
    HEAP32[$0>>2] = $80;
    $81 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28350)|0);
    $$3 = $81;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 105:  {
   $82 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $83 = ($82<<24>>24)==(120);
   if ($83) {
    $84 = HEAP32[$0>>2]|0;
    $85 = ((($84)) + 2|0);
    HEAP32[$0>>2] = $85;
    $86 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28360)|0);
    $$3 = $86;
   } else {
    $$3 = 0;
   }
   break;
  }
  case 108:  {
   $87 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $88 = $87 << 24 >> 24;
   switch ($88|0) {
   case 101:  {
    $89 = HEAP32[$0>>2]|0;
    $90 = ((($89)) + 2|0);
    HEAP32[$0>>2] = $90;
    $91 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28371)|0);
    $$3 = $91;
    break L1;
    break;
   }
   case 105:  {
    $92 = HEAP32[$0>>2]|0;
    $93 = ((($92)) + 2|0);
    HEAP32[$0>>2] = $93;
    $94 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $95 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($94)|0);
    HEAP32[$5>>2] = $95;
    $96 = ($95|0)==(0|0);
    if ($96) {
     $$1 = 0;
    } else {
     $97 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15LiteralOperatorEJRPNS0_4NodeEEEES9_DpOT0_($0,$5)|0);
     $$1 = $97;
    }
    $$3 = $$1;
    break L1;
    break;
   }
   case 115:  {
    $98 = HEAP32[$0>>2]|0;
    $99 = ((($98)) + 2|0);
    HEAP32[$0>>2] = $99;
    $100 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28382)|0);
    $$3 = $100;
    break L1;
    break;
   }
   case 83:  {
    $101 = HEAP32[$0>>2]|0;
    $102 = ((($101)) + 2|0);
    HEAP32[$0>>2] = $102;
    $103 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,28393)|0);
    $$3 = $103;
    break L1;
    break;
   }
   case 116:  {
    $104 = HEAP32[$0>>2]|0;
    $105 = ((($104)) + 2|0);
    HEAP32[$0>>2] = $105;
    $106 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28405)|0);
    $$3 = $106;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 109:  {
   $107 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $108 = $107 << 24 >> 24;
   switch ($108|0) {
   case 105:  {
    $109 = HEAP32[$0>>2]|0;
    $110 = ((($109)) + 2|0);
    HEAP32[$0>>2] = $110;
    $111 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28415)|0);
    $$3 = $111;
    break L1;
    break;
   }
   case 73:  {
    $112 = HEAP32[$0>>2]|0;
    $113 = ((($112)) + 2|0);
    HEAP32[$0>>2] = $113;
    $114 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28425)|0);
    $$3 = $114;
    break L1;
    break;
   }
   case 108:  {
    $115 = HEAP32[$0>>2]|0;
    $116 = ((($115)) + 2|0);
    HEAP32[$0>>2] = $116;
    $117 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28276)|0);
    $$3 = $117;
    break L1;
    break;
   }
   case 76:  {
    $118 = HEAP32[$0>>2]|0;
    $119 = ((($118)) + 2|0);
    HEAP32[$0>>2] = $119;
    $120 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28436)|0);
    $$3 = $120;
    break L1;
    break;
   }
   case 109:  {
    $121 = HEAP32[$0>>2]|0;
    $122 = ((($121)) + 2|0);
    HEAP32[$0>>2] = $122;
    $123 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28447)|0);
    $$3 = $123;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 110:  {
   $124 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $125 = $124 << 24 >> 24;
   switch ($125|0) {
   case 97:  {
    $126 = HEAP32[$0>>2]|0;
    $127 = ((($126)) + 2|0);
    HEAP32[$0>>2] = $127;
    $128 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0,28458)|0);
    $$3 = $128;
    break L1;
    break;
   }
   case 101:  {
    $129 = HEAP32[$0>>2]|0;
    $130 = ((($129)) + 2|0);
    HEAP32[$0>>2] = $130;
    $131 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28473)|0);
    $$3 = $131;
    break L1;
    break;
   }
   case 103:  {
    $132 = HEAP32[$0>>2]|0;
    $133 = ((($132)) + 2|0);
    HEAP32[$0>>2] = $133;
    $134 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28415)|0);
    $$3 = $134;
    break L1;
    break;
   }
   case 116:  {
    $135 = HEAP32[$0>>2]|0;
    $136 = ((($135)) + 2|0);
    HEAP32[$0>>2] = $136;
    $137 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28484)|0);
    $$3 = $137;
    break L1;
    break;
   }
   case 119:  {
    $138 = HEAP32[$0>>2]|0;
    $139 = ((($138)) + 2|0);
    HEAP32[$0>>2] = $139;
    $140 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA13_KcEEEPNS0_4NodeEDpOT0_($0,28494)|0);
    $$3 = $140;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 111:  {
   $141 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $142 = $141 << 24 >> 24;
   switch ($142|0) {
   case 111:  {
    $143 = HEAP32[$0>>2]|0;
    $144 = ((($143)) + 2|0);
    HEAP32[$0>>2] = $144;
    $145 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28507)|0);
    $$3 = $145;
    break L1;
    break;
   }
   case 114:  {
    $146 = HEAP32[$0>>2]|0;
    $147 = ((($146)) + 2|0);
    HEAP32[$0>>2] = $147;
    $148 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28518)|0);
    $$3 = $148;
    break L1;
    break;
   }
   case 82:  {
    $149 = HEAP32[$0>>2]|0;
    $150 = ((($149)) + 2|0);
    HEAP32[$0>>2] = $150;
    $151 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28528)|0);
    $$3 = $151;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 112:  {
   $152 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $153 = $152 << 24 >> 24;
   switch ($153|0) {
   case 109:  {
    $154 = HEAP32[$0>>2]|0;
    $155 = ((($154)) + 2|0);
    HEAP32[$0>>2] = $155;
    $156 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,28539)|0);
    $$3 = $156;
    break L1;
    break;
   }
   case 108:  {
    $157 = HEAP32[$0>>2]|0;
    $158 = ((($157)) + 2|0);
    HEAP32[$0>>2] = $158;
    $159 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28551)|0);
    $$3 = $159;
    break L1;
    break;
   }
   case 76:  {
    $160 = HEAP32[$0>>2]|0;
    $161 = ((($160)) + 2|0);
    HEAP32[$0>>2] = $161;
    $162 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28561)|0);
    $$3 = $162;
    break L1;
    break;
   }
   case 112:  {
    $163 = HEAP32[$0>>2]|0;
    $164 = ((($163)) + 2|0);
    HEAP32[$0>>2] = $164;
    $165 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28572)|0);
    $$3 = $165;
    break L1;
    break;
   }
   case 115:  {
    $166 = HEAP32[$0>>2]|0;
    $167 = ((($166)) + 2|0);
    HEAP32[$0>>2] = $167;
    $168 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28551)|0);
    $$3 = $168;
    break L1;
    break;
   }
   case 116:  {
    $169 = HEAP32[$0>>2]|0;
    $170 = ((($169)) + 2|0);
    HEAP32[$0>>2] = $170;
    $171 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28583)|0);
    $$3 = $171;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 113:  {
   $172 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $173 = ($172<<24>>24)==(117);
   if ($173) {
    $174 = HEAP32[$0>>2]|0;
    $175 = ((($174)) + 2|0);
    HEAP32[$0>>2] = $175;
    $176 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28594)|0);
    $$3 = $176;
   } else {
    $$3 = 0;
   }
   break;
  }
  case 114:  {
   $177 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $178 = $177 << 24 >> 24;
   switch ($178|0) {
   case 109:  {
    $179 = HEAP32[$0>>2]|0;
    $180 = ((($179)) + 2|0);
    HEAP32[$0>>2] = $180;
    $181 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA10_KcEEEPNS0_4NodeEDpOT0_($0,28604)|0);
    $$3 = $181;
    break L1;
    break;
   }
   case 77:  {
    $182 = HEAP32[$0>>2]|0;
    $183 = ((($182)) + 2|0);
    HEAP32[$0>>2] = $183;
    $184 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28614)|0);
    $$3 = $184;
    break L1;
    break;
   }
   case 115:  {
    $185 = HEAP32[$0>>2]|0;
    $186 = ((($185)) + 2|0);
    HEAP32[$0>>2] = $186;
    $187 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA11_KcEEEPNS0_4NodeEDpOT0_($0,28625)|0);
    $$3 = $187;
    break L1;
    break;
   }
   case 83:  {
    $188 = HEAP32[$0>>2]|0;
    $189 = ((($188)) + 2|0);
    HEAP32[$0>>2] = $189;
    $190 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,28636)|0);
    $$3 = $190;
    break L1;
    break;
   }
   default: {
    $$3 = 0;
    break L1;
   }
   }
   break;
  }
  case 115:  {
   $191 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $192 = ($191<<24>>24)==(115);
   if ($192) {
    $193 = HEAP32[$0>>2]|0;
    $194 = ((($193)) + 2|0);
    HEAP32[$0>>2] = $194;
    $195 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA12_KcEEEPNS0_4NodeEDpOT0_($0,28648)|0);
    $$3 = $195;
   } else {
    $$3 = 0;
   }
   break;
  }
  case 118:  {
   $196 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $197 = $196 << 24 >> 24;
   $isdigittmp = (($197) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $198 = HEAP32[$0>>2]|0;
    $199 = ((($198)) + 2|0);
    HEAP32[$0>>2] = $199;
    $200 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $201 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($200)|0);
    HEAP32[$6>>2] = $201;
    $202 = ($201|0)==(0|0);
    if ($202) {
     $$2 = 0;
    } else {
     $203 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ConversionOperatorTypeEJRPNS0_4NodeEEEES9_DpOT0_($0,$6)|0);
     $$2 = $203;
    }
    $$3 = $$2;
   } else {
    $$3 = 0;
   }
   break;
  }
  default: {
   $$3 = 0;
  }
  }
 } while(0);
 STACKTOP = sp;return ($$3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ConversionOperatorTypeEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle22ConversionOperatorTypeEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA16_KcEEEPNS0_4NodeEDpOT0_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 368|0);
 $2 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA16_KcEEEPT_DpOT0_($1,28724)|0);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15LiteralOperatorEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15LiteralOperatorEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15LiteralOperatorEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15LiteralOperatorC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15LiteralOperatorC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,19,1,1,1);
 HEAP32[$0>>2] = (15944);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15LiteralOperator9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28660);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15LiteralOperatorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA16_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle22ConversionOperatorTypeEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle22ConversionOperatorTypeC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22ConversionOperatorTypeC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,4,1,1,1);
 HEAP32[$0>>2] = (15988);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle22ConversionOperatorType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28740);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22ConversionOperatorTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8DtorNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8DtorNameEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8DtorNameEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8DtorNameC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8DtorNameC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,38,1,1,1);
 HEAP32[$0>>2] = (16032);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8DtorName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27107);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vii[$7 & 1023]($4,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8DtorNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13QualifiedNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13QualifiedNameC2EPKNS0_4NodeES4_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13QualifiedNameC2EPKNS0_4NodeES4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,22,1,1,1);
 HEAP32[$0>>2] = (16076);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13QualifiedName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28120);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13QualifiedName11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($0,$3);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13QualifiedNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA13_KcRPNS2_4NodeES9_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$3>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8CastExprC2ENS_10StringViewEPKNS0_4NodeES5_($5,$$byval_copy,$6,$7);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10DeleteExprEJRPNS2_4NodeERbbEEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAP8[$2>>0]|0;
 $7 = ($6<<24>>24)!=(0);
 $8 = HEAP8[$3>>0]|0;
 $9 = ($8<<24>>24)!=(0);
 __ZN12_GLOBAL__N_116itanium_demangle10DeleteExprC2EPNS0_4NodeEbb($4,$5,$7,$9);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10DeleteExprC2EPNS0_4NodeEbb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $2&1;
 $5 = $3&1;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,52,1,1,1);
 HEAP32[$0>>2] = (16120);
 $6 = ((($0)) + 8|0);
 HEAP32[$6>>2] = $1;
 $7 = ((($0)) + 12|0);
 HEAP8[$7>>0] = $4;
 $8 = ((($0)) + 13|0);
 HEAP8[$8>>0] = $5;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10DeleteExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 12|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28120);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,28916);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $8 = ((($0)) + 13|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)==(0);
 if (!($10)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,28923);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 }
 $11 = ((($0)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($12,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10DeleteExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14ConversionExprEJRPNS0_4NodeERNS0_9NodeArrayEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle14ConversionExprEJRPNS2_4NodeERNS2_9NodeArrayEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_14ConversionExprEJRPNS0_4NodeENS0_9NodeArrayEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle14ConversionExprEJRPNS2_4NodeENS2_9NodeArrayEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle14ConversionExprEJRPNS2_4NodeENS2_9NodeArrayEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle14ConversionExprC2EPKNS0_4NodeENS0_9NodeArrayE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14ConversionExprC2EPKNS0_4NodeENS0_9NodeArrayE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,55,1,1,1);
 HEAP32[$0>>2] = (16164);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle14ConversionExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,28977);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $7 = ((($0)) + 12|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($7,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26370);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14ConversionExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle14ConversionExprEJRPNS2_4NodeERNS2_9NodeArrayEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle14ConversionExprC2EPKNS0_4NodeENS0_9NodeArrayE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CallExprEJRPNS2_4NodeENS2_9NodeArrayEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8CallExprC2EPKNS0_4NodeENS0_9NodeArrayE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8CallExprC2EPKNS0_4NodeENS0_9NodeArrayE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,50,1,1,1);
 HEAP32[$0>>2] = (16208);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8CallExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($5,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $6 = ((($0)) + 12|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8CallExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8CastExprEJRA11_KcRPNS2_4NodeES9_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $6 = HEAP32[$2>>2]|0;
 $7 = HEAP32[$3>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8CastExprC2ENS_10StringViewEPKNS0_4NodeES5_($5,$$byval_copy,$6,$7);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13EnclosingExprEJRA10_KcRPNS2_4NodeERA2_S4_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,28)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,$1);
 $7 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,$3);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprC2ENS_10StringViewEPNS0_4NodeES2_($6,$$byval_copy,$7,$$byval_copy1);
 STACKTOP = sp;return ($6|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10PrefixExprEJRNS_10StringViewERPNS0_4NodeEEEESB_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10PrefixExprEJRNS_10StringViewERPNS2_4NodeEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10PrefixExprEJRNS_10StringViewERPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = $1;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $3;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 $15 = HEAP32[$2>>2]|0;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10PrefixExprC2ENS_10StringViewEPNS0_4NodeE($4,$tmpcast$byval_copy,$15);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10PrefixExprC2ENS_10StringViewEPNS0_4NodeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,53,1,1,1);
 HEAP32[$0>>2] = (16252);
 $3 = ((($0)) + 8|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10PrefixExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 40|0;
 $$byval_copy = sp + 32|0;
 $tmpcast$byval_copy = sp + 24|0;
 $2 = sp;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = ((($0)) + 8|0);
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $2;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $16 = ((($0)) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($17,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10PrefixExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10BinaryExprEJRPNS0_4NodeERNS_10StringViewESA_EEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10BinaryExprEJRPNS2_4NodeERNS_10StringViewES6_EEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10BinaryExprEJRPNS2_4NodeERNS_10StringViewES6_EEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 $6 = HEAP32[$1>>2]|0;
 $7 = $2;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $4;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 $17 = HEAP32[$3>>2]|0;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10BinaryExprC2EPKNS0_4NodeENS_10StringViewES4_($5,$6,$tmpcast$byval_copy,$17);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10BinaryExprC2EPKNS0_4NodeENS_10StringViewES4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,42,1,1,1);
 HEAP32[$0>>2] = (16296);
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($0)) + 12|0);
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $5;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 $16 = ((($0)) + 20|0);
 HEAP32[$16>>2] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10BinaryExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $$byval_copy5 = sp + 120|0;
 $$byval_copy4 = sp + 112|0;
 $$byval_copy3 = sp + 104|0;
 $tmpcast$byval_copy = sp + 96|0;
 $$byval_copy2 = sp + 88|0;
 $$byval_copy1 = sp + 80|0;
 $$byval_copy = sp + 72|0;
 $2 = sp + 64|0;
 $3 = sp + 56|0;
 $4 = sp + 48|0;
 $5 = sp + 40|0;
 $6 = sp;
 $7 = sp + 32|0;
 $8 = sp + 24|0;
 $9 = sp + 16|0;
 $10 = sp + 8|0;
 $11 = ((($0)) + 12|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26449);
 $12 = (__ZN12_GLOBAL__N_1eqERKNS_10StringViewES2_($11,$2)|0);
 if ($12) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26374);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26374);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $13 = ((($0)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($14,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,29133);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 $15 = $11;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($15) + 4)|0;
 $19 = $18;
 $20 = HEAP32[$19>>2]|0;
 $21 = $6;
 $22 = $21;
 HEAP32[$22>>2] = $17;
 $23 = (($21) + 4)|0;
 $24 = $23;
 HEAP32[$24>>2] = $20;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($7,29136);
 ;HEAP32[$$byval_copy3>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$7+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
 $25 = ((($0)) + 20|0);
 $26 = HEAP32[$25>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($26,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($8,26370);
 ;HEAP32[$$byval_copy4>>2]=HEAP32[$8>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$8+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($9,26449);
 $27 = (__ZN12_GLOBAL__N_1eqERKNS_10StringViewES2_($11,$9)|0);
 if ($27) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($10,26370);
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$10>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$10+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy5);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10BinaryExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8FoldExprEJRbRNS_10StringViewERPNS0_4NodeESD_EEESC_DpOT0_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 368|0);
 $6 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8FoldExprEJRbRNS_10StringViewERPNS2_4NodeES9_EEEPT_DpOT0_($5,$1,$2,$3,$4)|0);
 return ($6|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8FoldExprEJRbRNS_10StringViewERPNS2_4NodeES9_EEEPT_DpOT0_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $5 = sp;
 $6 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,28)|0);
 $7 = HEAP8[$1>>0]|0;
 $8 = ($7<<24>>24)!=(0);
 $9 = $2;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $5;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 $19 = HEAP32[$3>>2]|0;
 $20 = HEAP32[$4>>2]|0;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8FoldExprC2EbNS_10StringViewEPKNS0_4NodeES5_($6,$8,$tmpcast$byval_copy,$19,$20);
 STACKTOP = sp;return ($6|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8FoldExprC2EbNS_10StringViewEPKNS0_4NodeES5_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = $1&1;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,57,1,1,1);
 HEAP32[$0>>2] = (16340);
 $6 = ((($0)) + 8|0);
 HEAP32[$6>>2] = $3;
 $7 = ((($0)) + 12|0);
 HEAP32[$7>>2] = $4;
 $8 = ((($0)) + 16|0);
 $9 = $2;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $8;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 $19 = ((($0)) + 24|0);
 HEAP8[$19>>0] = $5;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$pre = 0, $$pre$phi22Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast18$byval_copy = 0, $tmpcast19$byval_copy = 0, $tmpcast20$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $tmpcast18$byval_copy = sp + 96|0;
 $$byval_copy1 = sp + 88|0;
 $tmpcast$byval_copy = sp + 80|0;
 $tmpcast19$byval_copy = sp + 72|0;
 $$byval_copy = sp + 64|0;
 $tmpcast20$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 24|0;
 $4 = sp + 40|0;
 $5 = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp + 32|0;
 $8 = sp;
 HEAP32[$2>>2] = $1;
 $9 = ((($2)) + 4|0);
 HEAP32[$9>>2] = $0;
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,40);
 $10 = ((($0)) + 24|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  __ZZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamEENKUlvE_clEv($2);
  __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
  $37 = ((($0)) + 16|0);
  $38 = $37;
  $39 = $38;
  $40 = HEAP32[$39>>2]|0;
  $41 = (($38) + 4)|0;
  $42 = $41;
  $43 = HEAP32[$42>>2]|0;
  $44 = $6;
  $45 = $44;
  HEAP32[$45>>2] = $40;
  $46 = (($44) + 4)|0;
  $47 = $46;
  HEAP32[$47>>2] = $43;
  ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7,29284);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  $48 = ((($0)) + 12|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($49|0)==(0|0);
  if (!($50)) {
   __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
   $51 = $37;
   $52 = $51;
   $53 = HEAP32[$52>>2]|0;
   $54 = (($51) + 4)|0;
   $55 = $54;
   $56 = HEAP32[$55>>2]|0;
   $57 = $8;
   $58 = $57;
   HEAP32[$58>>2] = $53;
   $59 = (($57) + 4)|0;
   $60 = $59;
   HEAP32[$60>>2] = $56;
   ;HEAP32[$tmpcast18$byval_copy>>2]=HEAP32[$8>>2]|0;HEAP32[$tmpcast18$byval_copy+4>>2]=HEAP32[$8+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast18$byval_copy);
   __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
   $61 = HEAP32[$48>>2]|0;
   __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($61,$1);
  }
 } else {
  $13 = ((($0)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)==(0|0);
  if ($15) {
   $$pre = ((($0)) + 16|0);
   $$pre$phi22Z2D = $$pre;
  } else {
   __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($14,$1);
   __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
   $16 = ((($0)) + 16|0);
   $17 = $16;
   $18 = $17;
   $19 = HEAP32[$18>>2]|0;
   $20 = (($17) + 4)|0;
   $21 = $20;
   $22 = HEAP32[$21>>2]|0;
   $23 = $3;
   $24 = $23;
   HEAP32[$24>>2] = $19;
   $25 = (($23) + 4)|0;
   $26 = $25;
   HEAP32[$26>>2] = $22;
   ;HEAP32[$tmpcast20$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast20$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast20$byval_copy);
   __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
   $$pre$phi22Z2D = $16;
  }
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,29279);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  $27 = $$pre$phi22Z2D;
  $28 = $27;
  $29 = HEAP32[$28>>2]|0;
  $30 = (($27) + 4)|0;
  $31 = $30;
  $32 = HEAP32[$31>>2]|0;
  $33 = $5;
  $34 = $33;
  HEAP32[$34>>2] = $29;
  $35 = (($33) + 4)|0;
  $36 = $35;
  HEAP32[$36>>2] = $32;
  ;HEAP32[$tmpcast19$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$tmpcast19$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast19$byval_copy);
  __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
  __ZZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamEENKUlvE_clEv($2);
 }
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,41);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8FoldExprD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamEENKUlvE_clEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$0>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLEc($4,40);
 $5 = ((($3)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionC2EPKNS0_4NodeE($1,$6);
 $7 = HEAP32[$0>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($1,$7);
 $8 = HEAP32[$0>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLEc($8,41);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = 0;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,114)|0);
 if ($2) {
  __ZN12_GLOBAL__N_116itanium_demangleoRERNS0_10QualifiersES1_($1,4);
 }
 $3 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,86)|0);
 if ($3) {
  __ZN12_GLOBAL__N_116itanium_demangleoRERNS0_10QualifiersES1_($1,2);
 }
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,75)|0);
 if ($4) {
  __ZN12_GLOBAL__N_116itanium_demangleoRERNS0_10QualifiersES1_($1,1);
 }
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13FunctionParamEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13FunctionParamEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13FunctionParamEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13FunctionParamC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13FunctionParamC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,54,1,1,1);
 HEAP32[$0>>2] = (16384);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13FunctionParam9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast$byval_copy = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29333);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $4 = ((($0)) + 8|0);
 $5 = $4;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $3;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13FunctionParamD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangleoRERNS0_10QualifiersES1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = $2 | $1;
 HEAP32[$0>>2] = $3;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = ((($0)) + 44|0);
 HEAP32[$3>>2] = $4;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_24ForwardTemplateReferenceEJRmEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle24ForwardTemplateReferenceEJRmEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE9push_backERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if ($6) {
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE4sizeEv($0)|0);
  $8 = $7 << 1;
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE7reserveEm($0,$8);
  $$pre = HEAP32[$2>>2]|0;
  $11 = $$pre;
 } else {
  $11 = $3;
 }
 $9 = HEAP32[$1>>2]|0;
 $10 = ((($11)) + 4|0);
 HEAP32[$2>>2] = $10;
 HEAP32[$11>>2] = $9;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEixEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE5beginEv($0)|0);
 $3 = (($2) + ($1<<2)|0);
 return ($3|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($2) - ($3))|0;
 $5 = $4 >> 2;
 return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE7reserveEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in = 0, $$pre$phi11Z2D = 0, $$pre10 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE4sizeEv($0)|0);
 $3 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE8isInlineEv($0)|0);
 do {
  if ($3) {
   $4 = $1 << 2;
   $5 = (_malloc($4)|0);
   $6 = ($5|0)==(0|0);
   if ($6) {
    __ZSt9terminatev();
    // unreachable;
   }
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($0)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $7;
   $11 = (($9) - ($10))|0;
   $12 = ($11|0)==(0);
   if (!($12)) {
    _memmove(($5|0),($7|0),($11|0))|0;
   }
   HEAP32[$0>>2] = $5;
   $$in = $5;$$pre$phi11Z2D = $8;
  } else {
   $13 = HEAP32[$0>>2]|0;
   $14 = $1 << 2;
   $15 = (_realloc($13,$14)|0);
   HEAP32[$0>>2] = $15;
   $16 = ($15|0)==(0|0);
   if ($16) {
    __ZSt9terminatev();
    // unreachable;
   } else {
    $$pre10 = ((($0)) + 4|0);
    $$in = $15;$$pre$phi11Z2D = $$pre10;
    break;
   }
  }
 } while(0);
 $17 = (($$in) + ($2<<2)|0);
 HEAP32[$$pre$phi11Z2D>>2] = $17;
 $18 = (($$in) + ($1<<2)|0);
 $19 = ((($0)) + 8|0);
 HEAP32[$19>>2] = $18;
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle24ForwardTemplateReferenceEJRmEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle24ForwardTemplateReferenceC2Em($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle24ForwardTemplateReferenceC2Em($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,31,2,2,2);
 HEAP32[$0>>2] = (16428);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 12|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 16|0);
 HEAP8[$4>>0] = 0;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$3,1);
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($7,$1)|0);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
  $$0 = $8;
 } else {
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference12hasArraySlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$3,1);
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($7,$1)|0);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
  $$0 = $8;
 } else {
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference15hasFunctionSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$3,1);
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($7,$1)|0);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
  $$0 = $8;
 } else {
  $$0 = 0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference13getSyntaxNodeERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$3,1);
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (FUNCTION_TABLE_iii[$10 & 1023]($7,$1)|0);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
  $$0 = $11;
 } else {
  $$0 = $0;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$3,1);
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 16|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 1023]($7,$1);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
 }
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($2,$3,1);
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$7>>2]|0;
  $9 = ((($8)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vii[$10 & 1023]($7,$1);
  __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($2);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle24ForwardTemplateReferenceD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 12|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp;
 (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,76)|0);
 $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 switch ($6<<24>>24) {
 case 78:  {
  $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateE($7,$1)|0);
  $$4 = $8;
  break;
 }
 case 90:  {
  $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseLocalNameEPNS5_9NameStateE($9,$1)|0);
  $$4 = $10;
  break;
 }
 case 83:  {
  $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
  $12 = ($11<<24>>24)==(116);
  if ($12) {
   label = 13;
  } else {
   $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($13)|0);
   HEAP32[$2>>2] = $14;
   $15 = ($14|0)==(0|0);
   if ($15) {
    $$1 = 0;
   } else {
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $17 = ($16<<24>>24)==(73);
    if ($17) {
     $18 = ($1|0)!=(0|0);
     $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($13,$18)|0);
     HEAP32[$3>>2] = $19;
     $20 = ($19|0)==(0|0);
     if ($20) {
      $$0 = 0;
     } else {
      if ($18) {
       $21 = ((($1)) + 1|0);
       HEAP8[$21>>0] = 1;
      }
      $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$2,$3)|0);
      $$0 = $22;
     }
     $$1 = $$0;
    } else {
     $$1 = 0;
    }
   }
   $$4 = $$1;
  }
  break;
 }
 default: {
  label = 13;
 }
 }
 if ((label|0) == 13) {
  $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseUnscopedNameEPNS5_9NameStateE($23,$1)|0);
  HEAP32[$4>>2] = $24;
  $25 = ($24|0)==(0|0);
  if ($25) {
   $$3 = 0;
  } else {
   $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   $27 = ($26<<24>>24)==(73);
   if ($27) {
    $28 = ((($0)) + 148|0);
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($28,$4);
    $29 = ($1|0)!=(0|0);
    $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($23,$29)|0);
    HEAP32[$5>>2] = $30;
    $31 = ($30|0)==(0|0);
    if ($31) {
     $$2 = 0;
    } else {
     if ($29) {
      $32 = ((($1)) + 1|0);
      HEAP8[$32>>0] = 1;
     }
     $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$4,$5)|0);
     $$2 = $33;
    }
    $$3 = $$2;
   } else {
    $$3 = $24;
   }
  }
  $$4 = $$3;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_22ElaboratedTypeSpefTypeEJRNS_10StringViewERPNS0_4NodeEEEESB_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle22ElaboratedTypeSpefTypeEJRNS_10StringViewERPNS2_4NodeEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle22ElaboratedTypeSpefTypeEJRNS_10StringViewERPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = $1;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $3;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 $15 = HEAP32[$2>>2]|0;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefTypeC2ENS_10StringViewEPNS0_4NodeE($4,$tmpcast$byval_copy,$15);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefTypeC2ENS_10StringViewEPNS0_4NodeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,6,1,1,1);
 HEAP32[$0>>2] = (16472);
 $3 = ((($0)) + 8|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
 $14 = ((($0)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($15,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$3 = 0, $$4 = 0, $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy = sp + 40|0;
 $2 = sp + 32|0;
 $3 = sp + 28|0;
 $4 = sp + 16|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 HEAP32[$2>>2] = $1;
 $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,78)|0);
 if ($8) {
  $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCVQualifiersEv($0)|0);
  $10 = ($1|0)==(0|0);
  if (!($10)) {
   $11 = ((($1)) + 4|0);
   HEAP32[$11>>2] = $9;
  }
  $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,79)|0);
  do {
   if ($12) {
    if (!($10)) {
     $13 = ((($1)) + 8|0);
     HEAP8[$13>>0] = 2;
    }
   } else {
    $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,82)|0);
    $15 = ($1|0)!=(0|0);
    if ($14) {
     if (!($15)) {
      break;
     }
     $16 = ((($1)) + 8|0);
     HEAP8[$16>>0] = 1;
     break;
    } else {
     if (!($15)) {
      break;
     }
     $17 = ((($1)) + 8|0);
     HEAP8[$17>>0] = 0;
     break;
    }
   }
  } while(0);
  HEAP32[$3>>2] = 0;
  HEAP32[$4>>2] = $0;
  $18 = ((($4)) + 4|0);
  HEAP32[$18>>2] = $3;
  $19 = ((($4)) + 8|0);
  HEAP32[$19>>2] = $2;
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,29540);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$5+4>>2]|0;
  $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
  if ($20) {
   $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA4_KcEEEPNS0_4NodeEDpOT0_($0,29858)|0);
   HEAP32[$3>>2] = $21;
  }
  $22 = ((($0)) + 148|0);
  L19: while(1) {
   $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
   if ($23) {
    label = 41;
    break;
   }
   (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,76)|0);
   $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,77)|0);
   L22: do {
    if ($24) {
     $25 = HEAP32[$3>>2]|0;
     $26 = ($25|0)==(0|0);
     if ($26) {
      $$3 = 0;
      break L19;
     }
    } else {
     $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
     L25: do {
      switch ($27<<24>>24) {
      case 84:  {
       $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       $29 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E18parseTemplateParamEv($28)|0);
       $30 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4,$29)|0);
       if (!($30)) {
        $$3 = 0;
        break L19;
       }
       __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($22,$3);
       break L22;
       break;
      }
      case 73:  {
       $31 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       $32 = HEAP32[$2>>2]|0;
       $33 = ($32|0)!=(0|0);
       $34 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseTemplateArgsEb($31,$33)|0);
       HEAP32[$6>>2] = $34;
       $35 = ($34|0)==(0|0);
       $36 = HEAP32[$3>>2]|0;
       $37 = ($36|0)==(0|0);
       $or$cond = $35 | $37;
       if ($or$cond) {
        label = 26;
        break L19;
       }
       $38 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20NameWithTemplateArgsEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$3,$6)|0);
       HEAP32[$3>>2] = $38;
       $39 = HEAP32[$2>>2]|0;
       $40 = ($39|0)==(0|0);
       if (!($40)) {
        $41 = ((($39)) + 1|0);
        HEAP8[$41>>0] = 1;
       }
       __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($22,$3);
       break L22;
       break;
      }
      case 68:  {
       $42 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
       switch ($42<<24>>24) {
       case 67:  {
        label = 39;
        break L25;
        break;
       }
       case 84: case 116:  {
        break;
       }
       default: {
        break L25;
       }
       }
       $43 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
       $44 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseDecltypeEv($43)|0);
       $45 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4,$44)|0);
       if (!($45)) {
        $$3 = 0;
        break L19;
       }
       __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($22,$3);
       break L22;
       break;
      }
      case 83:  {
       $46 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
       $47 = ($46<<24>>24)==(116);
       if ($47) {
        label = 39;
       } else {
        $48 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
        $49 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseSubstitutionEv($48)|0);
        HEAP32[$7>>2] = $49;
        $50 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4,$49)|0);
        if (!($50)) {
         label = 44;
         break L19;
        }
        $51 = HEAP32[$3>>2]|0;
        $52 = ($51|0)==($49|0);
        if (!($52)) {
         __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($22,$7);
        }
        break L22;
       }
       break;
      }
      case 67:  {
       break;
      }
      default: {
       label = 39;
      }
      }
     } while(0);
     if ((label|0) == 39) {
      label = 0;
      $62 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $63 = HEAP32[$2>>2]|0;
      $64 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE($62,$63)|0);
      $65 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4,$64)|0);
      if (!($65)) {
       $$3 = 0;
       break L19;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($22,$3);
      break;
     }
     $53 = HEAP32[$3>>2]|0;
     $54 = ($53|0)==(0|0);
     if ($54) {
      $$3 = 0;
      break L19;
     }
     $55 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
     $56 = HEAP32[$2>>2]|0;
     $57 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCtorDtorNameERPNS0_4NodeEPNS5_9NameStateE($55,$3,$56)|0);
     $58 = (__ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($4,$57)|0);
     if (!($58)) {
      $$3 = 0;
      break L19;
     }
     $59 = HEAP32[$3>>2]|0;
     $60 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE($55,$59)|0);
     HEAP32[$3>>2] = $60;
     $61 = ($60|0)==(0|0);
     if ($61) {
      $$3 = 0;
      break L19;
     }
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($22,$3);
    }
   } while(0);
  }
  if ((label|0) == 26) {
   $$3 = 0;
  }
  else if ((label|0) == 41) {
   $66 = HEAP32[$3>>2]|0;
   $67 = ($66|0)==(0|0);
   if ($67) {
    $$3 = 0;
   } else {
    $68 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE5emptyEv($22)|0);
    if ($68) {
     $$3 = 0;
    } else {
     __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8pop_backEv($22);
     $69 = HEAP32[$3>>2]|0;
     $$3 = $69;
    }
   }
  }
  else if ((label|0) == 44) {
   $$3 = 0;
  }
  $$4 = $$3;
 } else {
  $$4 = 0;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E14parseLocalNameEPNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp;
 $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,90)|0);
 if ($7) {
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($8)|0);
  HEAP32[$2>>2] = $9;
  $10 = ($9|0)==(0|0);
  do {
   if ($10) {
    $$3 = 0;
   } else {
    $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    if ($11) {
     $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,115)|0);
     if ($12) {
      $13 = HEAP32[$0>>2]|0;
      $14 = ((($0)) + 4|0);
      $15 = HEAP32[$14>>2]|0;
      $16 = (__ZN12_GLOBAL__N_116itanium_demangle19parse_discriminatorEPKcS2_($13,$15)|0);
      HEAP32[$0>>2] = $16;
      $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8NameTypeEJRA15_KcEEEPNS0_4NodeEDpOT0_($0,29798)|0);
      HEAP32[$3>>2] = $17;
      $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$2,$3)|0);
      $$3 = $18;
      break;
     }
     $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,100)|0);
     if (!($19)) {
      $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($8,$1)|0);
      HEAP32[$6>>2] = $24;
      $25 = ($24|0)==(0|0);
      if ($25) {
       $$2 = 0;
      } else {
       $26 = HEAP32[$0>>2]|0;
       $27 = ((($0)) + 4|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = (__ZN12_GLOBAL__N_116itanium_demangle19parse_discriminatorEPKcS2_($26,$28)|0);
       HEAP32[$0>>2] = $29;
       $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$2,$6)|0);
       $$2 = $30;
      }
      $$3 = $$2;
      break;
     }
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($4,$0,1);
     $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
     if ($20) {
      $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($8,$1)|0);
      HEAP32[$5>>2] = $21;
      $22 = ($21|0)==(0|0);
      if ($22) {
       $$1 = 0;
      } else {
       $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$2,$5)|0);
       $$1 = $23;
      }
      $$3 = $$1;
     } else {
      $$3 = 0;
     }
    } else {
     $$3 = 0;
    }
   }
  } while(0);
  $$4 = $$3;
 } else {
  $$4 = 0;
 }
 STACKTOP = sp;return ($$4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseUnscopedNameEPNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29536);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 if ($5) {
  label = 3;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,29540);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
  if ($6) {
   label = 3;
  } else {
   $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE($11,$1)|0);
   $$1 = $12;
  }
 }
 if ((label|0) == 3) {
  $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE($7,$1)|0);
  HEAP32[$4>>2] = $8;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = 0;
  } else {
   $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16StdQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$4)|0);
   $$0 = $10;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;return ($$1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnqualifiedNameEPNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$118 = 0, $$11823 = 0, $$2 = 0, $$byval_copy = 0, $$off = 0, $$pre = 0, $$pre$phi26Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $6 = ($5<<24>>24)==(85);
 do {
  if ($6) {
   $7 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnnamedTypeNameEPNS5_9NameStateE($7)|0);
   $$118 = $8;
   label = 12;
  } else {
   $$off = (($5) + -49)<<24>>24;
   $9 = ($$off&255)<(9);
   if ($9) {
    $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($10)|0);
    $$118 = $11;
    label = 12;
    break;
   }
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29602);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
   $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
   if (!($12)) {
    $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseOperatorNameEPNS5_9NameStateE($20,$1)|0);
    $$118 = $21;
    label = 12;
    break;
   }
   $13 = ((($0)) + 8|0);
   $14 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($13)|0);
   while(1) {
    $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseSourceNameEPNS5_9NameStateE($15)|0);
    HEAP32[$3>>2] = $16;
    $17 = ($16|0)==(0|0);
    if ($17) {
     label = 10;
     break;
    }
    __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($13,$3);
    $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
    if ($18) {
     label = 9;
     break;
    }
   }
   if ((label|0) == 9) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($4,$0,$14);
    $19 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_21StructuredBindingNameEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$4)|0);
    $$11823 = $19;$$pre$phi26Z2D = $15;
    label = 14;
    break;
   }
   else if ((label|0) == 10) {
    $$2 = 0;
    break;
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $22 = ($$118|0)==(0|0);
  if ($22) {
   $$2 = 0;
  } else {
   $$pre = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $$11823 = $$118;$$pre$phi26Z2D = $$pre;
   label = 14;
  }
 }
 if ((label|0) == 14) {
  $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E12parseAbiTagsEPNS0_4NodeE($$pre$phi26Z2D,$$11823)|0);
  $$2 = $23;
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16StdQualifiedNameEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16StdQualifiedNameEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16StdQualifiedNameEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle16StdQualifiedNameC2EPNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle16StdQualifiedNameC2EPNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,34,1,1,1);
 HEAP32[$0>>2] = (16516);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16StdQualifiedName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29543);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16StdQualifiedName11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($0,$3);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle16StdQualifiedNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20parseUnnamedTypeNameEPNS5_9NameStateE($0) {
 $0 = $0|0;
 var $$0 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy2 = sp + 80|0;
 $$byval_copy1 = sp + 72|0;
 $$byval_copy = sp + 64|0;
 $1 = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp;
 $5 = sp + 32|0;
 $6 = sp + 24|0;
 $7 = sp + 16|0;
 $8 = sp + 8|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($1,29663);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$1>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$1+4>>2]|0;
 $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy)|0);
 if ($9) {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2,$0,0);
  $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
  if ($10) {
   $11 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15UnnamedTypeNameEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$2)|0);
   $$0 = $11;
  } else {
   $$0 = 0;
  }
  $$5 = $$0;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,29666);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy1)|0);
  if ($12) {
   __ZN12_GLOBAL__N_116itanium_demangle9NodeArrayC2Ev($4);
   $13 = ((($0)) + 362|0);
   __ZN12_GLOBAL__N_114SwapAndRestoreIbEC2ERbb($5,$13,1);
   __ZN12_GLOBAL__N_110StringViewC2EPKc($6,29669);
   ;HEAP32[$$byval_copy2>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$6+4>>2]|0;
   $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfENS_10StringViewE($0,$$byval_copy2)|0);
   do {
    if ($14) {
     label = 12;
    } else {
     $15 = ((($0)) + 8|0);
     $16 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE4sizeEv($15)|0);
     while(1) {
      $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
      $18 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($17)|0);
      HEAP32[$7>>2] = $18;
      $19 = ($18|0)==(0|0);
      if ($19) {
       label = 11;
       break;
      }
      __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE9push_backERKS3_($15,$7);
      $20 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,69)|0);
      if ($20) {
       label = 10;
       break;
      }
     }
     if ((label|0) == 10) {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E20popTrailingNodeArrayEm($4,$0,$16);
      label = 12;
      break;
     }
     else if ((label|0) == 11) {
      $$4 = 0;
      break;
     }
    }
   } while(0);
   if ((label|0) == 12) {
    __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($8,$0,0);
    $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if ($21) {
     $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15ClosureTypeNameEJRNS0_9NodeArrayERNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$4,$8)|0);
     $$3 = $22;
    } else {
     $$3 = 0;
    }
    $$4 = $$3;
   }
   __ZN12_GLOBAL__N_114SwapAndRestoreIbED2Ev($5);
   $$5 = $$4;
  } else {
   $$5 = 0;
  }
 }
 STACKTOP = sp;return ($$5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_21StructuredBindingNameEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle21StructuredBindingNameEJNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle21StructuredBindingNameEJNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle21StructuredBindingNameC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle21StructuredBindingNameC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,41,1,1,1);
 HEAP32[$0>>2] = (16560);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle21StructuredBindingName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,91);
 $2 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($2,$1);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,93);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle21StructuredBindingNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15UnnamedTypeNameEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15UnnamedTypeNameEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15ClosureTypeNameEJRNS0_9NodeArrayERNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15ClosureTypeNameEJRNS2_9NodeArrayERNS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15ClosureTypeNameEJRNS2_9NodeArrayERNS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, $tmpcast3$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast3$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,24)|0);
 $6 = $1;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 $16 = $2;
 $17 = $16;
 $18 = HEAP32[$17>>2]|0;
 $19 = (($16) + 4)|0;
 $20 = $19;
 $21 = HEAP32[$20>>2]|0;
 $22 = $4;
 $23 = $22;
 HEAP32[$23>>2] = $18;
 $24 = (($22) + 4)|0;
 $25 = $24;
 HEAP32[$25>>2] = $21;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 ;HEAP32[$tmpcast3$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast3$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15ClosureTypeNameC2ENS0_9NodeArrayENS_10StringViewE($5,$tmpcast$byval_copy,$tmpcast3$byval_copy);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15ClosureTypeNameC2ENS0_9NodeArrayENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,40,1,1,1);
 HEAP32[$0>>2] = (16604);
 $3 = ((($0)) + 8|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = ((($0)) + 16|0);
 $15 = $2;
 $16 = $15;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($15) + 4)|0;
 $19 = $18;
 $20 = HEAP32[$19>>2]|0;
 $21 = $14;
 $22 = $21;
 HEAP32[$22>>2] = $17;
 $23 = (($21) + 4)|0;
 $24 = $23;
 HEAP32[$24>>2] = $20;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15ClosureTypeName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy2 = sp + 56|0;
 $$byval_copy1 = sp + 48|0;
 $tmpcast$byval_copy = sp + 40|0;
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp;
 $4 = sp + 16|0;
 $5 = sp + 8|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29672);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $6 = ((($0)) + 16|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,29680);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $17 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($17,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26370);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15ClosureTypeNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15UnnamedTypeNameEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15UnnamedTypeNameC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15UnnamedTypeNameC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,39,1,1,1);
 HEAP32[$0>>2] = (16648);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15UnnamedTypeName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 40|0;
 $tmpcast$byval_copy = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = sp + 8|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29735);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 $6 = $5;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,29744);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15UnnamedTypeNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle19parse_discriminatorEPKcS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$031 = 0, $$2 = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit34 = 0, $isdigit36 = 0, $isdigit38 = 0, $isdigittmp = 0, $isdigittmp33 = 0, $isdigittmp35 = 0, $isdigittmp37 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 L1: do {
  if ($2) {
   $$2 = $0;
  } else {
   $3 = HEAP8[$0>>0]|0;
   $4 = ($3<<24>>24)==(95);
   if (!($4)) {
    $18 = $3 << 24 >> 24;
    $isdigittmp = (($18) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if (!($isdigit)) {
     $$2 = $0;
     break;
    }
    $$pn = $0;
    while(1) {
     $$0 = ((($$pn)) + 1|0);
     $19 = ($$0|0)==($1|0);
     if ($19) {
      $$2 = $1;
      break L1;
     }
     $20 = HEAP8[$$0>>0]|0;
     $21 = $20 << 24 >> 24;
     $isdigittmp33 = (($21) + -48)|0;
     $isdigit34 = ($isdigittmp33>>>0)<(10);
     if ($isdigit34) {
      $$pn = $$0;
     } else {
      $$2 = $0;
      break L1;
     }
    }
   }
   $5 = ((($0)) + 1|0);
   $6 = ($5|0)==($1|0);
   if ($6) {
    $$2 = $0;
   } else {
    $7 = HEAP8[$5>>0]|0;
    $8 = $7 << 24 >> 24;
    $isdigittmp35 = (($8) + -48)|0;
    $isdigit36 = ($isdigittmp35>>>0)<(10);
    if ($isdigit36) {
     $9 = ((($0)) + 2|0);
     $$2 = $9;
     break;
    }
    $10 = ($7<<24>>24)==(95);
    if ($10) {
     $11 = ((($0)) + 2|0);
     $$031 = $11;
     while(1) {
      $12 = ($$031|0)==($1|0);
      if ($12) {
       $$2 = $0;
       break L1;
      }
      $13 = HEAP8[$$031>>0]|0;
      $14 = $13 << 24 >> 24;
      $isdigittmp37 = (($14) + -48)|0;
      $isdigit38 = ($isdigittmp37>>>0)<(10);
      if (!($isdigit38)) {
       break;
      }
      $15 = ((($$031)) + 1|0);
      $$031 = $15;
     }
     $16 = ($13<<24>>24)==(95);
     $17 = ((($$031)) + 1|0);
     $spec$select = $16 ? $17 : $0;
     return ($spec$select|0);
    } else {
     $$2 = $0;
    }
   }
  }
 } while(0);
 return ($$2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9LocalNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9LocalNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9LocalNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle9LocalNameC2EPNS0_4NodeES3_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle9LocalNameC2EPNS0_4NodeES3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,24,1,1,1);
 HEAP32[$0>>2] = (16692);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9LocalName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28120);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle9LocalNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseNestedNameEPNS5_9NameStateEENKUlPNS0_4NodeEE_clES9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $1;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($1|0)==(0|0);
 if ($4) {
  $$0 = 0;
 } else {
  $5 = ((($0)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   HEAP32[$6>>2] = $1;
  } else {
   $9 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10NestedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($3,$6,$2)|0);
   $10 = HEAP32[$5>>2]|0;
   HEAP32[$10>>2] = $9;
  }
  $11 = ((($0)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if (!($14)) {
   $15 = ((($13)) + 1|0);
   HEAP8[$15>>0] = 0;
  }
  $16 = HEAP32[$5>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)!=(0|0);
  $$0 = $18;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E17parseCtorDtorNameERPNS0_4NodeEPNS5_9NameStateE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $$3 = 0, $$off = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 $5 = sp + 13|0;
 $6 = sp;
 $7 = sp + 12|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node7getKindEv($8)|0);
 $10 = ($9<<24>>24)==(36);
 if ($10) {
  $11 = ((($8)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$3>>2] = $12;
  $$off = (($12) + -2)|0;
  $switch = ($$off>>>0)<(4);
  if ($switch) {
   $13 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_27ExpandedSpecialSubstitutionEJRNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$3)|0);
   HEAP32[$1>>2] = $13;
  }
 }
 $14 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,67)|0);
 L7: do {
  if ($14) {
   $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,73)|0);
   $16 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   switch ($16<<24>>24) {
   case 53: case 51: case 50: case 49:  {
    break;
   }
   default: {
    $$3 = 0;
    break L7;
   }
   }
   $17 = $16 << 24 >> 24;
   $18 = (($17) + -48)|0;
   HEAP32[$4>>2] = $18;
   $19 = HEAP32[$0>>2]|0;
   $20 = ((($19)) + 1|0);
   HEAP32[$0>>2] = $20;
   $21 = ($2|0)==(0|0);
   if (!($21)) {
    HEAP8[$2>>0] = 1;
   }
   if ($15) {
    $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $23 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($22,$2)|0);
    $24 = ($23|0)==(0|0);
    if ($24) {
     $$1 = 0;
    } else {
     label = 11;
    }
   } else {
    label = 11;
   }
   if ((label|0) == 11) {
    HEAP8[$5>>0] = 0;
    $25 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12CtorDtorNameEJRPNS0_4NodeEbRiEEES9_DpOT0_($0,$1,$5,$4)|0);
    $$1 = $25;
   }
   $$3 = $$1;
  } else {
   $26 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
   $27 = ($26<<24>>24)==(68);
   if ($27) {
    $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
    switch ($28<<24>>24) {
    case 53: case 50: case 49: case 48:  {
     break;
    }
    default: {
     $$3 = 0;
     break L7;
    }
    }
    $29 = $28 << 24 >> 24;
    $30 = (($29) + -48)|0;
    HEAP32[$6>>2] = $30;
    $31 = HEAP32[$0>>2]|0;
    $32 = ((($31)) + 2|0);
    HEAP32[$0>>2] = $32;
    $33 = ($2|0)==(0|0);
    if (!($33)) {
     HEAP8[$2>>0] = 1;
    }
    HEAP8[$7>>0] = 1;
    $34 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12CtorDtorNameEJRPNS0_4NodeEbRiEEES9_DpOT0_($0,$1,$7,$6)|0);
    $$3 = $34;
   } else {
    $$3 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EE8pop_backEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + -4|0);
 HEAP32[$1>>2] = $3;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_27ExpandedSpecialSubstitutionEJRNS0_14SpecialSubKindEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle27ExpandedSpecialSubstitutionEJRNS2_14SpecialSubKindEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12CtorDtorNameEJRPNS0_4NodeEbRiEEES9_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 368|0);
 $5 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12CtorDtorNameEJRPNS2_4NodeEbRiEEEPT_DpOT0_($4,$1,$2,$3)|0);
 return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12CtorDtorNameEJRPNS2_4NodeEbRiEEEPT_DpOT0_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAP8[$2>>0]|0;
 $7 = ($6<<24>>24)!=(0);
 $8 = HEAP32[$3>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12CtorDtorNameC2EPKNS0_4NodeEbi($4,$5,$7,$8);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle12CtorDtorNameC2EPKNS0_4NodeEbi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $2&1;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,37,1,1,1);
 HEAP32[$0>>2] = (16736);
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $1;
 $6 = ((($0)) + 12|0);
 HEAP8[$6>>0] = $4;
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $3;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12CtorDtorName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = ((($0)) + 12|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 if (!($6)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,27107);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 1023]($3,$8);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12CtorDtorNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle27ExpandedSpecialSubstitutionEJRNS2_14SpecialSubKindEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitutionC2ENS0_14SpecialSubKindE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitutionC2ENS0_14SpecialSubKindE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,35,1,1,1);
 HEAP32[$0>>2] = (16780);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitution9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $$byval_copy5 = sp + 88|0;
 $$byval_copy4 = sp + 80|0;
 $$byval_copy3 = sp + 72|0;
 $$byval_copy2 = sp + 64|0;
 $$byval_copy1 = sp + 56|0;
 $$byval_copy = sp + 48|0;
 $2 = sp + 40|0;
 $3 = sp + 32|0;
 $4 = sp + 24|0;
 $5 = sp + 16|0;
 $6 = sp + 8|0;
 $7 = sp;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 switch ($9|0) {
 case 0:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26152);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  break;
 }
 case 1:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26167);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  break;
 }
 case 2:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,29954);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
  break;
 }
 case 3:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,30025);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
  break;
 }
 case 4:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6,30075);
  ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
  break;
 }
 case 5:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7,30125);
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy5);
  break;
 }
 default: {
 }
 }
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitution11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 switch ($3|0) {
 case 0:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26097);
  break;
 }
 case 1:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26107);
  break;
 }
 case 2:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,26107);
  break;
 }
 case 3:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,29911);
  break;
 }
 case 4:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,29925);
  break;
 }
 case 5:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($0,29939);
  break;
 }
 default: {
  // unreachable;
 }
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitutionD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10NestedNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10NestedNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10NestedNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10NestedNameC2EPNS0_4NodeES3_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10NestedNameC2EPNS0_4NodeES3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,23,1,1,1);
 HEAP32[$0>>2] = (16824);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10NestedName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($4,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,28120);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10NestedName11getBaseNameEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($0,$3);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10NestedNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_19PointerToMemberTypeEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19PointerToMemberTypeEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle19PointerToMemberTypeEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle19PointerToMemberTypeC2EPKNS0_4NodeES4_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle19PointerToMemberTypeC2EPKNS0_4NodeES4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 5|0);
 $4 = HEAP8[$3>>0]|0;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,13,$4,1,1);
 HEAP32[$0>>2] = (16868);
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $1;
 $6 = ((($0)) + 12|0);
 HEAP32[$6>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($3,$1)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_vii[$9 & 1023]($6,$1);
 $10 = HEAP32[$5>>2]|0;
 $11 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($10,$1)|0);
 if ($11) {
  label = 3;
 } else {
  $12 = HEAP32[$5>>2]|0;
  $13 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($12,$1)|0);
  if ($13) {
   label = 3;
  } else {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26372);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  }
 }
 if ((label|0) == 3) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($15,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,30287);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($4,$1)|0);
 if ($5) {
  label = 3;
 } else {
  $6 = HEAP32[$3>>2]|0;
  $7 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($6,$1)|0);
  if ($7) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26370);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 $8 = HEAP32[$3>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 FUNCTION_TABLE_vii[$11 & 1023]($8,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle19PointerToMemberTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 0;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2ENS_10StringViewE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$09 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZNK12_GLOBAL__N_110StringView5beginEv($1)|0);
 $3 = (__ZNK12_GLOBAL__N_110StringView3endEv($1)|0);
 $4 = ($3|0)==(0|0);
 $5 = ((($2)) + 1|0);
 $6 = ((($3)) + 1|0);
 $$09 = $4 ? $5 : $2;
 $$0 = $4 ? $6 : $3;
 HEAP32[$0>>2] = $$09;
 $7 = ((($0)) + 4|0);
 HEAP32[$7>>2] = $$0;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2EPNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_9ArrayTypeEJRPNS0_4NodeERNS0_12NodeOrStringEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9ArrayTypeEJRPNS2_4NodeERNS2_12NodeOrStringEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9ArrayTypeEJRPNS2_4NodeERNS2_12NodeOrStringEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle9ArrayTypeC2EPKNS0_4NodeENS0_12NodeOrStringE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle9ArrayTypeC2EPKNS0_4NodeENS0_12NodeOrStringE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,14,0,0,1);
 HEAP32[$0>>2] = (16912);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9ArrayType19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9ArrayType12hasArraySlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9ArrayType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($3,$1);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9ArrayType10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $$byval_copy3 = sp + 56|0;
 $$byval_copy2 = sp + 48|0;
 $$byval_copy1 = sp + 40|0;
 $$byval_copy = sp + 32|0;
 $2 = sp + 24|0;
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp;
 $6 = (__ZNK12_GLOBAL__N_112OutputStream4backEv($1)|0);
 $7 = ($6<<24>>24)==(93);
 if (!($7)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26372);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,30347);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $8 = ((($0)) + 12|0);
 $9 = (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8isStringEv($8)|0);
 if ($9) {
  __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8asStringEv($4,$8);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 } else {
  $10 = (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6isNodeEv($8)|0);
  if ($10) {
   $11 = (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6asNodeEv($8)|0);
   __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($11,$1);
  }
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($5,26008);
 ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
 $12 = ((($0)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 FUNCTION_TABLE_vii[$16 & 1023]($13,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle9ArrayTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8isStringEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $6 = 0;
 } else {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)!=(0|0);
  $6 = $5;
 }
 return ($6|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8asStringEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($1)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 __ZN12_GLOBAL__N_110StringViewC2EPKcS2_($0,$2,$4);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6isNodeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = ((($0)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==(0|0);
  $6 = $5;
 }
 return ($6|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6asNodeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle22ParameterPackExpansionEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_15PixelVectorTypeEJRNS_10StringViewEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15PixelVectorTypeEJRNS_10StringViewEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10VectorTypeEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10VectorTypeEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_10VectorTypeEJRPNS0_4NodeENS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10VectorTypeEJRPNS2_4NodeENS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10VectorTypeEJRPNS2_4NodeENS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $6 = HEAP32[$1>>2]|0;
 $7 = $2;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $4;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10VectorTypeC2EPKNS0_4NodeENS0_12NodeOrStringE($5,$6,$$byval_copy);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle10VectorTypeC2EPKNS0_4NodeENS0_12NodeOrStringE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,25,1,1,1);
 HEAP32[$0>>2] = (16956);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle10VectorType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,30397);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $7 = ((($0)) + 12|0);
 $8 = (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6isNodeEv($7)|0);
 if ($8) {
  $9 = (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString6asNodeEv($7)|0);
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($9,$1);
 } else {
  $10 = (__ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8isStringEv($7)|0);
  if ($10) {
   __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8asStringEv($3,$7);
   ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  }
 }
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26008);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle10VectorTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10VectorTypeEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2EPNS0_4NodeE($3,$6);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10VectorTypeC2EPKNS0_4NodeENS0_12NodeOrStringE($4,$5,$$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle10VectorTypeEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $6 = HEAP32[$1>>2]|0;
 $7 = $2;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $4;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$4>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle10VectorTypeC2EPKNS0_4NodeENS0_12NodeOrStringE($5,$6,$$byval_copy);
 STACKTOP = sp;return ($5|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle15PixelVectorTypeEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy = sp + 24|0;
 $tmpcast$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $5 = $1;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $3;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12NodeOrStringC2ENS_10StringViewE($2,$tmpcast$byval_copy);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle15PixelVectorTypeC2ENS0_12NodeOrStringE($4,$$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle15PixelVectorTypeC2ENS0_12NodeOrStringE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,26,1,1,1);
 HEAP32[$0>>2] = (17000);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle15PixelVectorType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,30453);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $5 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle12NodeOrString8asStringEv($3,$5);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26008);
 ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle15PixelVectorTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRNS_10StringViewEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA11_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA7_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA18_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA9_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA19_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA10_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA13_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA4_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA15_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA6_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA14_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA12_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA8_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8NameTypeEJRA5_KcEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,$1);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8NameTypeC2ENS_10StringViewE($3,$$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_114SwapAndRestoreIPKcEC2ERS2_S2_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $2;
 HEAP32[$0>>2] = $1;
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$1>>2]|0;
 HEAP32[$4>>2] = $5;
 $6 = ((($0)) + 8|0);
 HEAP8[$6>>0] = 1;
 HEAP32[$1>>2] = $3;
 return;
}
function __ZN12_GLOBAL__N_114SwapAndRestoreIPKcED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = ((($0)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = HEAP32[$0>>2]|0;
  HEAP32[$6>>2] = $5;
 }
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_13ObjCProtoNameEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13ObjCProtoNameEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_17VendorExtQualTypeEJRPNS0_4NodeERNS_10StringViewEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle17VendorExtQualTypeEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_8QualTypeEJRPNS0_4NodeERNS0_10QualifiersEEEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8QualTypeEJRPNS2_4NodeERNS2_10QualifiersEEEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle8QualTypeEJRPNS2_4NodeERNS2_10QualifiersEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle8QualTypeC2EPKNS0_4NodeENS0_10QualifiersE($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle8QualTypeC2EPKNS0_4NodeENS0_10QualifiersE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 5|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ((($1)) + 6|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = ((($1)) + 7|0);
 $8 = HEAP8[$7>>0]|0;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,3,$4,$6,$8);
 HEAP32[$0>>2] = (17044);
 $9 = ((($0)) + 8|0);
 HEAP32[$9>>2] = $2;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8QualType19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($3,$1)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle8QualType12hasArraySlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node8hasArrayERNS_12OutputStreamE($3,$1)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle8QualType15hasFunctionSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node11hasFunctionERNS_12OutputStreamE($3,$1)|0);
 return ($4|0);
}
function __ZNK12_GLOBAL__N_116itanium_demangle8QualType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($3,$1);
 __ZNK12_GLOBAL__N_116itanium_demangle8QualType10printQualsERNS_12OutputStreamE($0,$1);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8QualType10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 FUNCTION_TABLE_vii[$6 & 1023]($3,$1);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle8QualTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle8QualType10printQualsERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$pre = 0, $$pre4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy2 = sp + 40|0;
 $$byval_copy1 = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp + 8|0;
 $4 = sp;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 1;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = $6;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($2,30565);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  $$pre = HEAP32[$5>>2]|0;
  $10 = $$pre;
 }
 $9 = $10 & 2;
 $11 = ($9|0)==(0);
 if ($11) {
  $13 = $10;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($3,30572);
  ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
  $$pre4 = HEAP32[$5>>2]|0;
  $13 = $$pre4;
 }
 $12 = $13 & 4;
 $14 = ($12|0)==(0);
 if (!($14)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,30582);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle17VendorExtQualTypeEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle17VendorExtQualTypeC2EPKNS0_4NodeENS_10StringViewE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle17VendorExtQualTypeC2EPKNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,2,1,1,1);
 HEAP32[$0>>2] = (17088);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle17VendorExtQualType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $tmpcast$byval_copy = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($5,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26372);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $6 = ((($0)) + 12|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 $15 = (($13) + 4)|0;
 $16 = $15;
 HEAP32[$16>>2] = $12;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle17VendorExtQualTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle13ObjCProtoNameEJRPNS2_4NodeERNS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle13ObjCProtoNameC2EPKNS0_4NodeENS_10StringViewE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle13ObjCProtoNameC2EPKNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,10,1,1,1);
 HEAP32[$0>>2] = (17132);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle13ObjCProtoName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 40|0;
 $tmpcast$byval_copy = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = sp + 8|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26556);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $7 = ((($0)) + 12|0);
 $8 = $7;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($8) + 4)|0;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = $3;
 $15 = $14;
 HEAP32[$15>>2] = $10;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $13;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26449);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle13ObjCProtoNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12NoexceptSpecEJRPNS0_4NodeEEEES9_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12NoexceptSpecEJRPNS2_4NodeEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_20DynamicExceptionSpecEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20DynamicExceptionSpecEJNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12FunctionTypeEJRPNS0_4NodeERNS0_9NodeArrayERNS0_10QualifiersERNS0_15FunctionRefQualESA_EEES9_DpOT0_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 368|0);
 $7 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12FunctionTypeEJRPNS2_4NodeERNS2_9NodeArrayERNS2_10QualifiersERNS2_15FunctionRefQualES6_EEEPT_DpOT0_($6,$1,$2,$3,$4,$5)|0);
 return ($7|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12FunctionTypeEJRPNS2_4NodeERNS2_9NodeArrayERNS2_10QualifiersERNS2_15FunctionRefQualES6_EEEPT_DpOT0_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $6 = sp;
 $7 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,32)|0);
 $8 = HEAP32[$1>>2]|0;
 $9 = $2;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $6;
 $16 = $15;
 HEAP32[$16>>2] = $11;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $14;
 $19 = HEAP32[$3>>2]|0;
 $20 = HEAP8[$4>>0]|0;
 $21 = HEAP32[$5>>2]|0;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$6>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$6+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12FunctionTypeC2EPKNS0_4NodeENS0_9NodeArrayENS0_10QualifiersENS0_15FunctionRefQualES4_($7,$8,$tmpcast$byval_copy,$19,$20,$21);
 STACKTOP = sp;return ($7|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle12FunctionTypeC2EPKNS0_4NodeENS0_9NodeArrayENS0_10QualifiersENS0_15FunctionRefQualES4_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,15,0,1,0);
 HEAP32[$0>>2] = (17176);
 $6 = ((($0)) + 8|0);
 HEAP32[$6>>2] = $1;
 $7 = ((($0)) + 12|0);
 $8 = $2;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($8) + 4)|0;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = $7;
 $15 = $14;
 HEAP32[$15>>2] = $10;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $13;
 $18 = ((($0)) + 20|0);
 HEAP32[$18>>2] = $3;
 $19 = ((($0)) + 24|0);
 HEAP8[$19>>0] = $4;
 $20 = ((($0)) + 28|0);
 HEAP32[$20>>2] = $5;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12FunctionType19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12FunctionType15hasFunctionSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12FunctionType9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vii[$7 & 1023]($4,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26372);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12FunctionType10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$pre = 0, $$pre12 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $$byval_copy6 = sp + 104|0;
 $$byval_copy5 = sp + 96|0;
 $$byval_copy4 = sp + 88|0;
 $$byval_copy3 = sp + 80|0;
 $$byval_copy2 = sp + 72|0;
 $$byval_copy1 = sp + 64|0;
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 32|0;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 8|0;
 $8 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $9 = ((($0)) + 12|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($9,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $10 = ((($0)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 20|0);
 $14 = HEAP32[$13>>2]|0;
 FUNCTION_TABLE_vii[$14 & 1023]($11,$1);
 $15 = ((($0)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 1;
 $18 = ($17|0)==(0);
 if ($18) {
  $20 = $16;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,30565);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
  $$pre = HEAP32[$15>>2]|0;
  $20 = $$pre;
 }
 $19 = $20 & 2;
 $21 = ($19|0)==(0);
 if ($21) {
  $23 = $20;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,30572);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
  $$pre12 = HEAP32[$15>>2]|0;
  $23 = $$pre12;
 }
 $22 = $23 & 4;
 $24 = ($22|0)==(0);
 if (!($24)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6,30582);
  ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
 }
 $25 = ((($0)) + 24|0);
 $26 = HEAP8[$25>>0]|0;
 switch ($26<<24>>24) {
 case 1:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7,30767);
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy5);
  break;
 }
 case 2:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($8,30770);
  ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;HEAP32[$$byval_copy6+4>>2]=HEAP32[$8+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy6);
  break;
 }
 default: {
 }
 }
 $27 = ((($0)) + 28|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  __ZN12_GLOBAL__N_112OutputStreampLEc($1,32);
  $30 = HEAP32[$27>>2]|0;
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($30,$1);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12FunctionTypeD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle20DynamicExceptionSpecEJNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpecC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpecC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,17,1,1,1);
 HEAP32[$0>>2] = (17220);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpec9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,30823);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($3,$1);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,41);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpecD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12NoexceptSpecEJRPNS2_4NodeEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,12)|0);
 $3 = HEAP32[$1>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12NoexceptSpecC2EPKNS0_4NodeE($2,$3);
 return ($2|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle12NoexceptSpecC2EPKNS0_4NodeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,16,1,1,1);
 HEAP32[$0>>2] = (17264);
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12NoexceptSpec9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,30887);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($5,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12NoexceptSpecD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA34_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,20,1,1,1);
 HEAP32[$0>>2] = (17308);
 $3 = ((($0)) + 8|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $3;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle11SpecialName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 $14 = ((($0)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($15,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle9DotSuffixEJRPNS2_4NodeENS_10StringViewEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = $2;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = (($6) + 4)|0;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 $14 = (($12) + 4)|0;
 $15 = $14;
 HEAP32[$15>>2] = $11;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle9DotSuffixC2EPKNS0_4NodeENS_10StringViewE($4,$5,$tmpcast$byval_copy);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle9DotSuffixC2EPKNS0_4NodeENS_10StringViewE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,1,1,1,1);
 HEAP32[$0>>2] = (17352);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + 4)|0;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = $11;
 HEAP32[$12>>2] = $7;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $10;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle9DotSuffix9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $$byval_copy1 = sp + 40|0;
 $tmpcast$byval_copy = sp + 32|0;
 $$byval_copy = sp + 24|0;
 $2 = sp + 16|0;
 $3 = sp;
 $4 = sp + 8|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($6,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,29136);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $7 = ((($0)) + 12|0);
 $8 = $7;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($8) + 4)|0;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = $3;
 $15 = $14;
 HEAP32[$15>>2] = $10;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $13;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$tmpcast$byval_copy);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($4,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$4+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle9DotSuffixD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E16parseSpecialNameEv($0) {
 $0 = $0|0;
 var $$0 = 0, $$1 = 0, $$11 = 0, $$12 = 0, $$13 = 0, $$14 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $brmerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $1 = sp + 60|0;
 $2 = sp + 56|0;
 $3 = sp + 52|0;
 $4 = sp + 48|0;
 $5 = sp + 44|0;
 $6 = sp + 40|0;
 $7 = sp + 32|0;
 $8 = sp + 24|0;
 $9 = sp + 20|0;
 $10 = sp + 16|0;
 $11 = sp + 12|0;
 $12 = sp + 8|0;
 $13 = sp + 4|0;
 $14 = sp;
 $15 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
 $16 = $15 << 24 >> 24;
 L1: do {
  switch ($16|0) {
  case 84:  {
   $17 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $18 = $17 << 24 >> 24;
   switch ($18|0) {
   case 86:  {
    $19 = HEAP32[$0>>2]|0;
    $20 = ((($19)) + 2|0);
    HEAP32[$0>>2] = $20;
    $21 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $22 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($21)|0);
    HEAP32[$1>>2] = $22;
    $23 = ($22|0)==(0|0);
    if ($23) {
     $$0 = 0;
    } else {
     $24 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA12_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1)|0);
     $$0 = $24;
    }
    $$14 = $$0;
    break L1;
    break;
   }
   case 84:  {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + 2|0);
    HEAP32[$0>>2] = $26;
    $27 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $28 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($27)|0);
    HEAP32[$2>>2] = $28;
    $29 = ($28|0)==(0|0);
    if ($29) {
     $$1 = 0;
    } else {
     $30 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA9_KcRPNS0_4NodeEEEESC_DpOT0_($0,$2)|0);
     $$1 = $30;
    }
    $$14 = $$1;
    break L1;
    break;
   }
   case 73:  {
    $31 = HEAP32[$0>>2]|0;
    $32 = ((($31)) + 2|0);
    HEAP32[$0>>2] = $32;
    $33 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $34 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($33)|0);
    HEAP32[$3>>2] = $34;
    $35 = ($34|0)==(0|0);
    if ($35) {
     $$2 = 0;
    } else {
     $36 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA14_KcRPNS0_4NodeEEEESC_DpOT0_($0,$3)|0);
     $$2 = $36;
    }
    $$14 = $$2;
    break L1;
    break;
   }
   case 83:  {
    $37 = HEAP32[$0>>2]|0;
    $38 = ((($37)) + 2|0);
    HEAP32[$0>>2] = $38;
    $39 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $40 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($39)|0);
    HEAP32[$4>>2] = $40;
    $41 = ($40|0)==(0|0);
    if ($41) {
     $$3 = 0;
    } else {
     $42 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA19_KcRPNS0_4NodeEEEESC_DpOT0_($0,$4)|0);
     $$3 = $42;
    }
    $$14 = $$3;
    break L1;
    break;
   }
   case 99:  {
    $43 = HEAP32[$0>>2]|0;
    $44 = ((($43)) + 2|0);
    HEAP32[$0>>2] = $44;
    $45 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0)|0);
    if ($45) {
     $$14 = 0;
     break L1;
    }
    $46 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0)|0);
    if ($46) {
     $$14 = 0;
     break L1;
    }
    $47 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $48 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($47)|0);
    HEAP32[$5>>2] = $48;
    $49 = ($48|0)==(0|0);
    if ($49) {
     $$4 = 0;
    } else {
     $50 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA27_KcRPNS0_4NodeEEEESC_DpOT0_($0,$5)|0);
     $$4 = $50;
    }
    $$14 = $$4;
    break L1;
    break;
   }
   case 67:  {
    $51 = HEAP32[$0>>2]|0;
    $52 = ((($51)) + 2|0);
    HEAP32[$0>>2] = $52;
    $53 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $54 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($53)|0);
    HEAP32[$6>>2] = $54;
    $55 = ($54|0)==(0|0);
    do {
     if ($55) {
      $$6 = 0;
     } else {
      __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($7,$0,1);
      $56 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($7)|0);
      if ($56) {
       $$6 = 0;
       break;
      }
      $57 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
      if ($57) {
       $58 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseTypeEv($53)|0);
       HEAP32[$8>>2] = $58;
       $59 = ($58|0)==(0|0);
       if ($59) {
        $$5 = 0;
       } else {
        $60 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_21CtorVtableSpecialNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$8,$6)|0);
        $$5 = $60;
       }
       $$6 = $$5;
      } else {
       $$6 = 0;
      }
     }
    } while(0);
    $$14 = $$6;
    break L1;
    break;
   }
   case 87:  {
    $61 = HEAP32[$0>>2]|0;
    $62 = ((($61)) + 2|0);
    HEAP32[$0>>2] = $62;
    $63 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $64 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($63,0)|0);
    HEAP32[$9>>2] = $64;
    $65 = ($64|0)==(0|0);
    if ($65) {
     $$7 = 0;
    } else {
     $66 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA34_KcRPNS0_4NodeEEEESC_DpOT0_($0,31168,$9)|0);
     $$7 = $66;
    }
    $$14 = $$7;
    break L1;
    break;
   }
   case 72:  {
    $67 = HEAP32[$0>>2]|0;
    $68 = ((($67)) + 2|0);
    HEAP32[$0>>2] = $68;
    $69 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $70 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($69,0)|0);
    HEAP32[$10>>2] = $70;
    $71 = ($70|0)==(0|0);
    if ($71) {
     $$8 = 0;
    } else {
     $72 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA41_KcRPNS0_4NodeEEEESC_DpOT0_($0,$10)|0);
     $$8 = $72;
    }
    $$14 = $$8;
    break L1;
    break;
   }
   default: {
    $73 = HEAP32[$0>>2]|0;
    $74 = ((($73)) + 1|0);
    HEAP32[$0>>2] = $74;
    $75 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,0)|0);
    $76 = ($75<<24>>24)==(118);
    $77 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0)|0);
    if ($77) {
     $$14 = 0;
     break L1;
    }
    $78 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $79 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEv($78)|0);
    HEAP32[$11>>2] = $79;
    $80 = ($79|0)==(0|0);
    do {
     if ($80) {
      $$9 = 0;
     } else {
      if ($76) {
       $81 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA18_KcRPNS0_4NodeEEEESC_DpOT0_($0,$11)|0);
       $$9 = $81;
       break;
      } else {
       $82 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA22_KcRPNS0_4NodeEEEESC_DpOT0_($0,$11)|0);
       $$9 = $82;
       break;
      }
     }
    } while(0);
    $$14 = $$9;
    break L1;
   }
   }
   break;
  }
  case 71:  {
   $83 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($0,1)|0);
   $84 = $83 << 24 >> 24;
   switch ($84|0) {
   case 86:  {
    $85 = HEAP32[$0>>2]|0;
    $86 = ((($85)) + 2|0);
    HEAP32[$0>>2] = $86;
    $87 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
    $88 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($87,0)|0);
    HEAP32[$12>>2] = $88;
    $89 = ($88|0)==(0|0);
    if ($89) {
     $$11 = 0;
    } else {
     $90 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA20_KcRPNS0_4NodeEEEESC_DpOT0_($0,$12)|0);
     $$11 = $90;
    }
    $$14 = $$11;
    break L1;
    break;
   }
   case 82:  {
    break;
   }
   default: {
    $$14 = 0;
    break L1;
   }
   }
   $91 = HEAP32[$0>>2]|0;
   $92 = ((($91)) + 2|0);
   HEAP32[$0>>2] = $92;
   $93 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10getDerivedEv($0)|0);
   $94 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseNameEPNS5_9NameStateE($93,0)|0);
   HEAP32[$13>>2] = $94;
   $95 = ($94|0)==(0|0);
   if ($95) {
    $$13 = 0;
   } else {
    $96 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E10parseSeqIdEPm($0,$14)|0);
    $97 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    $brmerge = $96 | $97;
    if ($brmerge) {
     $98 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA25_KcRPNS0_4NodeEEEESC_DpOT0_($0,$13)|0);
     $$12 = $98;
    } else {
     $$12 = 0;
    }
    $$13 = $$12;
   }
   $$14 = $$13;
   break;
  }
  default: {
   $$14 = 0;
  }
  }
 } while(0);
 STACKTOP = sp;return ($$14|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9NameStateC2EPS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$0>>0] = 0;
 $2 = ((($0)) + 1|0);
 HEAP8[$2>>0] = 0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 8|0);
 HEAP8[$4>>0] = 0;
 $5 = ((($0)) + 12|0);
 $6 = ((($1)) + 332|0);
 $7 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE4sizeEv($6)|0);
 HEAP32[$5>>2] = $7;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E26resolveForwardTemplateRefsERNS5_9NameStateE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$017 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 332|0);
 $5 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE4sizeEv($4)|0);
 $6 = ((($0)) + 288|0);
 $$017 = $3;
 while(1) {
  $7 = ($$017>>>0)<($5>>>0);
  if (!($7)) {
   label = 5;
   break;
  }
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EEixEm($4,$$017)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (__ZNK12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EE4sizeEv($6)|0);
  $13 = ($11>>>0)<($12>>>0);
  if (!($13)) {
   $$2 = 1;
   break;
  }
  $14 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEixEm($6,$11)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($9)) + 12|0);
  HEAP32[$16>>2] = $15;
  $17 = (($$017) + 1)|0;
  $$017 = $17;
 }
 if ((label|0) == 5) {
  __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE8dropBackEm($4,$3);
  $$2 = 0;
 }
 return ($$2|0);
}
function __ZZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E13parseEncodingEvENKUlvE_clEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNK12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E7numLeftEv($1)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4lookEj($1,0)|0);
  $5 = ($4<<24>>24)==(69);
  if (!($5)) {
   $6 = ($4<<24>>24)==(46);
   $7 = ($4<<24>>24)==(95);
   $spec$select = $6 | $7;
   return ($spec$select|0);
  }
 }
 return 1;
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_12EnableIfAttrEJNS0_9NodeArrayEEEEPNS0_4NodeEDpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12EnableIfAttrEJNS2_9NodeArrayEEEEPT_DpOT0_($2,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_16FunctionEncodingEJRPNS0_4NodeESA_NS0_9NodeArrayESA_RNS0_10QualifiersERNS0_15FunctionRefQualEEEES9_DpOT0_($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ((($0)) + 368|0);
 $8 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FunctionEncodingEJRPNS2_4NodeES6_NS2_9NodeArrayES6_RNS2_10QualifiersERNS2_15FunctionRefQualEEEEPT_DpOT0_($7,$1,$2,$3,$4,$5,$6)|0);
 return ($8|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle16FunctionEncodingEJRPNS2_4NodeES6_NS2_9NodeArrayES6_RNS2_10QualifiersERNS2_15FunctionRefQualEEEEPT_DpOT0_($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $7 = sp;
 $8 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,36)|0);
 $9 = HEAP32[$1>>2]|0;
 $10 = HEAP32[$2>>2]|0;
 $11 = $3;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = $7;
 $18 = $17;
 HEAP32[$18>>2] = $13;
 $19 = (($17) + 4)|0;
 $20 = $19;
 HEAP32[$20>>2] = $16;
 $21 = HEAP32[$4>>2]|0;
 $22 = HEAP32[$5>>2]|0;
 $23 = HEAP8[$6>>0]|0;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$7>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$7+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle16FunctionEncodingC2EPKNS0_4NodeES4_NS0_9NodeArrayES4_NS0_10QualifiersENS0_15FunctionRefQualE($8,$9,$10,$tmpcast$byval_copy,$21,$22,$23);
 STACKTOP = sp;return ($8|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle16FunctionEncodingC2EPKNS0_4NodeES4_NS0_9NodeArrayES4_NS0_10QualifiersENS0_15FunctionRefQualE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,18,0,1,0);
 HEAP32[$0>>2] = (17396);
 $7 = ((($0)) + 8|0);
 HEAP32[$7>>2] = $1;
 $8 = ((($0)) + 12|0);
 HEAP32[$8>>2] = $2;
 $9 = ((($0)) + 16|0);
 $10 = $3;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = (($10) + 4)|0;
 $14 = $13;
 $15 = HEAP32[$14>>2]|0;
 $16 = $9;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = $15;
 $20 = ((($0)) + 24|0);
 HEAP32[$20>>2] = $4;
 $21 = ((($0)) + 28|0);
 HEAP32[$21>>2] = $5;
 $22 = ((($0)) + 32|0);
 HEAP8[$22>>0] = $6;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding19hasRHSComponentSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding15hasFunctionSlowERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = HEAP32[$4>>2]|0;
  $7 = ((($6)) + 16|0);
  $8 = HEAP32[$7>>2]|0;
  FUNCTION_TABLE_vii[$8 & 1023]($4,$1);
  $9 = HEAP32[$3>>2]|0;
  $10 = (__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasRHSComponentERNS_12OutputStreamE($9,$1)|0);
  if (!($10)) {
   __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26372);
   ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
   __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
  }
 }
 $11 = ((($0)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($12,$1);
 STACKTOP = sp;return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding10printRightERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $$byval_copy6 = sp + 104|0;
 $$byval_copy5 = sp + 96|0;
 $$byval_copy4 = sp + 88|0;
 $$byval_copy3 = sp + 80|0;
 $$byval_copy2 = sp + 72|0;
 $$byval_copy1 = sp + 64|0;
 $$byval_copy = sp + 56|0;
 $2 = sp + 48|0;
 $3 = sp + 40|0;
 $4 = sp + 32|0;
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 8|0;
 $8 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,26374);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $9 = ((($0)) + 16|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($9,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,26370);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $10 = ((($0)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = HEAP32[$11>>2]|0;
  $14 = ((($13)) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  FUNCTION_TABLE_vii[$15 & 1023]($11,$1);
 }
 $16 = ((($0)) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & 1;
 $19 = ($18|0)==(0);
 if ($19) {
  $21 = $17;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($4,30565);
  ;HEAP32[$$byval_copy2>>2]=HEAP32[$4>>2]|0;HEAP32[$$byval_copy2+4>>2]=HEAP32[$4+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy2);
  $$pre = HEAP32[$16>>2]|0;
  $21 = $$pre;
 }
 $20 = $21 & 2;
 $22 = ($20|0)==(0);
 if ($22) {
  $24 = $21;
 } else {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($5,30572);
  ;HEAP32[$$byval_copy3>>2]=HEAP32[$5>>2]|0;HEAP32[$$byval_copy3+4>>2]=HEAP32[$5+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy3);
  $$pre11 = HEAP32[$16>>2]|0;
  $24 = $$pre11;
 }
 $23 = $24 & 4;
 $25 = ($23|0)==(0);
 if (!($25)) {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($6,30582);
  ;HEAP32[$$byval_copy4>>2]=HEAP32[$6>>2]|0;HEAP32[$$byval_copy4+4>>2]=HEAP32[$6+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy4);
 }
 $26 = ((($0)) + 32|0);
 $27 = HEAP8[$26>>0]|0;
 switch ($27<<24>>24) {
 case 1:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($7,30767);
  ;HEAP32[$$byval_copy5>>2]=HEAP32[$7>>2]|0;HEAP32[$$byval_copy5+4>>2]=HEAP32[$7+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy5);
  break;
 }
 case 2:  {
  __ZN12_GLOBAL__N_110StringViewC2EPKc($8,30770);
  ;HEAP32[$$byval_copy6>>2]=HEAP32[$8>>2]|0;HEAP32[$$byval_copy6+4>>2]=HEAP32[$8+4>>2]|0;
  __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy6);
  break;
 }
 default: {
 }
 }
 $28 = ((($0)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if (!($30)) {
  __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($29,$1);
 }
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle16FunctionEncodingD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle12EnableIfAttrEJNS2_9NodeArrayEEEEPT_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $tmpcast$byval_copy = sp + 8|0;
 $2 = sp;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = $1;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = $10;
 HEAP32[$11>>2] = $6;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 ;HEAP32[$tmpcast$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$tmpcast$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle12EnableIfAttrC2ENS0_9NodeArrayE($3,$tmpcast$byval_copy);
 STACKTOP = sp;return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle12EnableIfAttrC2ENS0_9NodeArrayE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,9,1,1,1);
 HEAP32[$0>>2] = (17440);
 $2 = ((($0)) + 8|0);
 $3 = $1;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 $10 = $9;
 HEAP32[$10>>2] = $5;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $8;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle12EnableIfAttr9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $2 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,31106);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $3 = ((($0)) + 8|0);
 __ZNK12_GLOBAL__N_116itanium_demangle9NodeArray14printWithCommaERNS_12OutputStreamE($3,$1);
 __ZN12_GLOBAL__N_112OutputStreampLEc($1,93);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle12EnableIfAttrD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EEixEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (__ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE5beginEv($0)|0);
 $3 = (($2) + ($1<<2)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE8dropBackEm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (($2) + ($1<<2)|0);
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = $3;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EE5beginEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA12_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA12_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31485,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA9_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA9_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31476,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA14_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA14_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31462,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA19_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA19_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31443,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E15parseCallOffsetEv($0) {
 $0 = $0|0;
 var $$03 = 0, $$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,104)|0);
 if ($4) {
  __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($1,$0,1);
  $5 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($1)|0);
  if ($5) {
   $14 = 1;
  } else {
   $6 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
   $7 = $6 ^ 1;
   $14 = $7;
  }
  $$03 = $14;
 } else {
  $8 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,118)|0);
  if ($8) {
   __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($2,$0,1);
   $9 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($2)|0);
   if ($9) {
    $15 = 1;
   } else {
    $10 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
    if ($10) {
     __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E11parseNumberEb($3,$0,1);
     $11 = (__ZNK12_GLOBAL__N_110StringView5emptyEv($3)|0);
     if ($11) {
      $$ph = 1;
     } else {
      $12 = (__ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9consumeIfEc($0,95)|0);
      $13 = $12 ^ 1;
      $$ph = $13;
     }
     $15 = $$ph;
    } else {
     $15 = 1;
    }
   }
   $$03 = $15;
  } else {
   $$03 = 1;
  }
 }
 STACKTOP = sp;return ($$03|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA27_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA27_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31416,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_21CtorVtableSpecialNameEJRPNS0_4NodeESA_EEES9_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 368|0);
 $4 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle21CtorVtableSpecialNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($3,$1,$2)|0);
 return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA41_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA41_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31287,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA18_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA18_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31269,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA22_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA22_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31247,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA20_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA20_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31227,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E4makeINS0_11SpecialNameEJRA25_KcRPNS0_4NodeEEEESC_DpOT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 368|0);
 $3 = (__ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA25_KcRPNS2_4NodeEEEEPT_DpOT0_($2,31202,$1)|0);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA25_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA20_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA22_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA18_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA41_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle21CtorVtableSpecialNameEJRPNS2_4NodeES6_EEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,16)|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialNameC2EPKNS0_4NodeES4_($3,$4,$5);
 return ($3|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialNameC2EPKNS0_4NodeES4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_116itanium_demangle4NodeC2ENS1_4KindENS1_5CacheES3_S3_($0,21,1,1,1);
 HEAP32[$0>>2] = (17484);
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = $1;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $2;
 return;
}
function __ZNK12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialName9printLeftERNS_12OutputStreamE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $$byval_copy1 = sp + 24|0;
 $$byval_copy = sp + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 __ZN12_GLOBAL__N_110StringViewC2EPKc($2,31328);
 ;HEAP32[$$byval_copy>>2]=HEAP32[$2>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$2+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy);
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($5,$1);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,31353);
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy1+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_112OutputStreampLENS_10StringViewE($1,$$byval_copy1);
 $6 = ((($0)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 __ZNK12_GLOBAL__N_116itanium_demangle4Node5printERNS_12OutputStreamE($7,$1);
 STACKTOP = sp;return;
}
function __ZN12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialNameD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA27_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA19_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA14_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA9_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116DefaultAllocator8makeNodeINS_16itanium_demangle11SpecialNameEJRA12_KcRPNS2_4NodeEEEEPT_DpOT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 8|0;
 $3 = sp;
 $4 = (__ZN12_GLOBAL__N_120BumpPointerAllocator8allocateEm($0,20)|0);
 __ZN12_GLOBAL__N_110StringViewC2EPKc($3,$1);
 $5 = HEAP32[$2>>2]|0;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$3>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$3+4>>2]|0;
 __ZN12_GLOBAL__N_116itanium_demangle11SpecialNameC2ENS_10StringViewEPKNS0_4NodeE($4,$$byval_copy,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_EC2EPKcS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 $4 = ((($0)) + 8|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEC2Ev($4);
 $5 = ((($0)) + 148|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEC2Ev($5);
 $6 = ((($0)) + 288|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm8EEC2Ev($6);
 $7 = ((($0)) + 332|0);
 __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EEC2Ev($7);
 $8 = ((($0)) + 360|0);
 HEAP8[$8>>0] = 1;
 $9 = ((($0)) + 361|0);
 HEAP8[$9>>0] = 0;
 $10 = ((($0)) + 362|0);
 HEAP8[$10>>0] = 0;
 $11 = ((($0)) + 368|0);
 __ZN12_GLOBAL__N_116DefaultAllocatorC2Ev($11);
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_4NodeELm32EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = ((($0)) + 140|0);
 HEAP32[$3>>2] = $4;
 return;
}
function __ZN12_GLOBAL__N_116itanium_demangle14PODSmallVectorIPNS0_24ForwardTemplateReferenceELm4EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 HEAP32[$0>>2] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = ((($0)) + 28|0);
 HEAP32[$3>>2] = $4;
 return;
}
function __ZN12_GLOBAL__N_116DefaultAllocatorC2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN12_GLOBAL__N_120BumpPointerAllocatorC2Ev($0);
 return;
}
function __ZN12_GLOBAL__N_120BumpPointerAllocatorC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4096|0);
 HEAP32[$0>>2] = 0;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 HEAP32[$1>>2] = $0;
 return;
}
function __ZNSt9exceptionD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9exceptionD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNKSt9exception4whatEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (31497|0);
}
function __ZNSt11logic_errorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (17548);
 $1 = ((($0)) + 4|0);
 __ZNSt3__218__libcpp_refstringD2Ev($1);
 return;
}
function __ZNSt11logic_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt11logic_error4whatEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = (__ZNKSt3__218__libcpp_refstring5c_strEv($1)|0);
 return ($2|0);
}
function __ZNKSt3__218__libcpp_refstring5c_strEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__218__libcpp_refstringD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0)|0);
 if ($1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = (__ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_834($2)|0);
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + -1)|0;
  HEAP32[$4>>2] = $6;
  $7 = ($5|0)<(1);
  if ($7) {
   __ZdlPv($3);
  }
 }
 return;
}
function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_834($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + -12|0);
 return ($1|0);
}
function __ZNSt13runtime_errorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (17568);
 $1 = ((($0)) + 4|0);
 __ZNSt3__218__libcpp_refstringD2Ev($1);
 return;
}
function __ZNSt13runtime_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt13runtime_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt13runtime_error4whatEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = (__ZNKSt3__218__libcpp_refstring5c_strEv($1)|0);
 return ($2|0);
}
function __ZNSt12length_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (__ZL8is_equalPKSt9type_infoS1_b($0,$1,0)|0);
 return ($3|0);
}
function __ZN10__cxxabiv119__pointer_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$6 = 0, $$pr = 0, $$pr50 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $phitmp = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp;
 $4 = (__ZL8is_equalPKSt9type_infoS1_b($1,9904,0)|0);
 do {
  if ($4) {
   HEAP32[$2>>2] = 0;
   $$6 = 1;
  } else {
   $5 = (__ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,0)|0);
   if ($5) {
    $6 = HEAP32[$2>>2]|0;
    $7 = ($6|0)==(0|0);
    if ($7) {
     $$6 = 1;
     break;
    }
    $8 = HEAP32[$6>>2]|0;
    HEAP32[$2>>2] = $8;
    $$6 = 1;
    break;
   }
   $9 = ($1|0)==(0|0);
   if ($9) {
    $$6 = 0;
   } else {
    $10 = (___dynamic_cast($1,8648,9832,0)|0);
    $11 = ($10|0)==(0|0);
    if ($11) {
     $$6 = 0;
    } else {
     $12 = HEAP32[$2>>2]|0;
     $13 = ($12|0)==(0|0);
     if (!($13)) {
      $14 = HEAP32[$12>>2]|0;
      HEAP32[$2>>2] = $14;
     }
     $15 = ((($10)) + 8|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ((($0)) + 8|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $18 ^ 7;
     $20 = $16 & 7;
     $21 = $20 & $19;
     $22 = ($21|0)==(0);
     if ($22) {
      $23 = $16 & 96;
      $24 = $23 ^ 96;
      $25 = $24 & $18;
      $26 = ($25|0)==(0);
      if ($26) {
       $27 = ((($0)) + 12|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($10)) + 12|0);
       $30 = HEAP32[$29>>2]|0;
       $31 = (__ZL8is_equalPKSt9type_infoS1_b($28,$30,0)|0);
       if ($31) {
        $$6 = 1;
       } else {
        $32 = (__ZL8is_equalPKSt9type_infoS1_b($28,9896,0)|0);
        if ($32) {
         $33 = ($30|0)==(0|0);
         if ($33) {
          $$6 = 1;
          break;
         }
         $34 = (___dynamic_cast($30,8648,9848,0)|0);
         $phitmp = ($34|0)==(0|0);
         $$6 = $phitmp;
         break;
        }
        $35 = ($28|0)==(0|0);
        if ($35) {
         $$6 = 0;
        } else {
         $36 = (___dynamic_cast($28,8648,9832,0)|0);
         $37 = ($36|0)==(0|0);
         if (!($37)) {
          $38 = HEAP32[$17>>2]|0;
          $39 = $38 & 1;
          $40 = ($39|0)==(0);
          if ($40) {
           $$6 = 0;
           break;
          }
          $41 = HEAP32[$29>>2]|0;
          $42 = (__ZNK10__cxxabiv119__pointer_type_info16can_catch_nestedEPKNS_16__shim_type_infoE($36,$41)|0);
          $$6 = $42;
          break;
         }
         $$pr = HEAP32[$27>>2]|0;
         $43 = ($$pr|0)==(0|0);
         if ($43) {
          $$6 = 0;
         } else {
          $44 = (___dynamic_cast($$pr,8648,9864,0)|0);
          $45 = ($44|0)==(0|0);
          if (!($45)) {
           $46 = HEAP32[$17>>2]|0;
           $47 = $46 & 1;
           $48 = ($47|0)==(0);
           if ($48) {
            $$6 = 0;
            break;
           }
           $49 = HEAP32[$29>>2]|0;
           $50 = (__ZNK10__cxxabiv129__pointer_to_member_type_info16can_catch_nestedEPKNS_16__shim_type_infoE($44,$49)|0);
           $$6 = $50;
           break;
          }
          $$pr50 = HEAP32[$27>>2]|0;
          $51 = ($$pr50|0)==(0|0);
          if ($51) {
           $$6 = 0;
          } else {
           $52 = (___dynamic_cast($$pr50,8648,8632,0)|0);
           $53 = ($52|0)==(0|0);
           if ($53) {
            $$6 = 0;
           } else {
            $54 = HEAP32[$29>>2]|0;
            $55 = ($54|0)==(0|0);
            if ($55) {
             $$6 = 0;
            } else {
             $56 = (___dynamic_cast($54,8648,8632,0)|0);
             $57 = ($56|0)==(0|0);
             if ($57) {
              $$6 = 0;
             } else {
              HEAP32[$3>>2] = $56;
              $58 = ((($3)) + 4|0);
              HEAP32[$58>>2] = 0;
              $59 = ((($3)) + 8|0);
              HEAP32[$59>>2] = $52;
              $60 = ((($3)) + 12|0);
              HEAP32[$60>>2] = -1;
              $61 = ((($3)) + 16|0);
              $62 = ((($3)) + 24|0);
              $63 = ((($3)) + 48|0);
              dest=$61; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$61+36>>1]=0|0;HEAP8[$61+38>>0]=0|0;
              HEAP32[$63>>2] = 1;
              $64 = HEAP32[$56>>2]|0;
              $65 = ((($64)) + 28|0);
              $66 = HEAP32[$65>>2]|0;
              $67 = HEAP32[$2>>2]|0;
              FUNCTION_TABLE_viiii[$66 & 1023]($56,$3,$67,1);
              $68 = HEAP32[$62>>2]|0;
              $69 = ($68|0)==(1);
              do {
               if ($69) {
                $70 = HEAP32[$2>>2]|0;
                $71 = ($70|0)==(0|0);
                if ($71) {
                 $$0 = 1;
                 break;
                }
                $72 = HEAP32[$61>>2]|0;
                HEAP32[$2>>2] = $72;
                $$0 = 1;
               } else {
                $$0 = 0;
               }
              } while(0);
              $$6 = $$0;
             }
            }
           }
          }
         }
        }
       }
      } else {
       $$6 = 0;
      }
     } else {
      $$6 = 0;
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$6|0);
}
function __ZNK10__cxxabiv117__pbase_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$1 = 0, $$111$off0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 24;
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = ($1|0)==(0|0);
  if ($7) {
   $$1 = 0;
  } else {
   $8 = (___dynamic_cast($1,8648,9816,0)|0);
   $9 = ($8|0)==(0|0);
   if ($9) {
    $$1 = 0;
   } else {
    $10 = ((($8)) + 8|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = $11 & 24;
    $13 = ($12|0)!=(0);
    $$111$off0 = $13;
    label = 5;
   }
  }
 } else {
  $$111$off0 = 1;
  label = 5;
 }
 if ((label|0) == 5) {
  $14 = (__ZL8is_equalPKSt9type_infoS1_b($0,$1,$$111$off0)|0);
  $$1 = $14;
 }
 return ($$1|0);
}
function __ZNK10__cxxabiv119__pointer_type_info16can_catch_nestedEPKNS_16__shim_type_infoE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $$pr = 0, $$tr = 0, $$tr20 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$tr = $0;$$tr20 = $1;
 while(1) {
  $2 = ($$tr20|0)==(0|0);
  if ($2) {
   $$2 = 0;
   break;
  }
  $3 = (___dynamic_cast($$tr20,8648,9832,0)|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $$2 = 0;
   break;
  }
  $5 = ((($3)) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($$tr)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 ^ -1;
  $10 = $6 & $9;
  $11 = ($10|0)==(0);
  if (!($11)) {
   $$2 = 0;
   break;
  }
  $12 = ((($$tr)) + 12|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($3)) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (__ZL8is_equalPKSt9type_infoS1_b($13,$15,0)|0);
  if ($16) {
   $$2 = 1;
   break;
  }
  $17 = $8 & 1;
  $18 = ($17|0)==(0);
  $19 = ($13|0)==(0|0);
  $or$cond = $18 | $19;
  if ($or$cond) {
   $$2 = 0;
   break;
  }
  $20 = (___dynamic_cast($13,8648,9832,0)|0);
  $21 = ($20|0)==(0|0);
  if ($21) {
   label = 9;
   break;
  }
  $22 = HEAP32[$14>>2]|0;
  $$tr = $20;$$tr20 = $22;
 }
 if ((label|0) == 9) {
  $$pr = HEAP32[$12>>2]|0;
  $23 = ($$pr|0)==(0|0);
  if ($23) {
   $$2 = 0;
  } else {
   $24 = (___dynamic_cast($$pr,8648,9864,0)|0);
   $25 = ($24|0)==(0|0);
   if ($25) {
    $$2 = 0;
   } else {
    $26 = HEAP32[$14>>2]|0;
    $27 = (__ZNK10__cxxabiv129__pointer_to_member_type_info16can_catch_nestedEPKNS_16__shim_type_infoE($24,$26)|0);
    $$2 = $27;
   }
  }
 }
 return ($$2|0);
}
function __ZNK10__cxxabiv129__pointer_to_member_type_info16can_catch_nestedEPKNS_16__shim_type_infoE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (___dynamic_cast($1,8648,9864,0)|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ((($0)) + 8|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = $6 ^ -1;
   $8 = ((($3)) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $9 & $7;
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = ((($0)) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ((($3)) + 12|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (__ZL8is_equalPKSt9type_infoS1_b($13,$15,0)|0);
    if ($16) {
     $17 = ((($0)) + 16|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ((($3)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = (__ZL8is_equalPKSt9type_infoS1_b($18,$20,0)|0);
     $$0 = $21;
    } else {
     $$0 = 0;
    }
   } else {
    $$0 = 0;
   }
  }
 }
 return ($$0|0);
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$046 = 0, $$047 = 0, $$1$off0 = 0, $$1$off0$in = 0, $$148$off0 = 0, $$148$off0$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZL8is_equalPKSt9type_infoS1_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 } else {
  $9 = ((($1)) + 52|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = ((($1)) + 53|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ((($0)) + 16|0);
  $14 = ((($0)) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (((($0)) + 16|0) + ($15<<3)|0);
  HEAP8[$9>>0] = 0;
  HEAP8[$11>>0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($13,$1,$2,$3,$4,$5);
  $17 = HEAP8[$9>>0]|0;
  $18 = $17 | $10;
  $19 = HEAP8[$11>>0]|0;
  $20 = $19 | $12;
  $21 = ($15|0)>(1);
  L4: do {
   if ($21) {
    $22 = ((($0)) + 24|0);
    $23 = ((($1)) + 24|0);
    $24 = ((($0)) + 8|0);
    $25 = ((($1)) + 54|0);
    $$0 = $22;$$046 = $18;$$047 = $20;$30 = $17;$37 = $19;
    while(1) {
     $26 = HEAP8[$25>>0]|0;
     $27 = ($26<<24>>24)==(0);
     $28 = $$047 & 1;
     $29 = $$046 & 1;
     if (!($27)) {
      $$1$off0$in = $29;$$148$off0$in = $28;
      break L4;
     }
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $38 = ($37<<24>>24)==(0);
      if (!($38)) {
       $39 = HEAP32[$24>>2]|0;
       $40 = $39 & 1;
       $41 = ($40|0)==(0);
       if ($41) {
        $$1$off0$in = $29;$$148$off0$in = $28;
        break L4;
       }
      }
     } else {
      $32 = HEAP32[$23>>2]|0;
      $33 = ($32|0)==(1);
      if ($33) {
       $$1$off0$in = $29;$$148$off0$in = $28;
       break L4;
      }
      $34 = HEAP32[$24>>2]|0;
      $35 = $34 & 2;
      $36 = ($35|0)==(0);
      if ($36) {
       $$1$off0$in = $29;$$148$off0$in = $28;
       break L4;
      }
     }
     HEAP8[$9>>0] = 0;
     HEAP8[$11>>0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$0,$1,$2,$3,$4,$5);
     $42 = HEAP8[$9>>0]|0;
     $43 = $42 | $29;
     $44 = HEAP8[$11>>0]|0;
     $45 = $44 | $28;
     $46 = ((($$0)) + 8|0);
     $47 = ($46>>>0)<($16>>>0);
     if ($47) {
      $$0 = $46;$$046 = $43;$$047 = $45;$30 = $42;$37 = $44;
     } else {
      $$1$off0$in = $43;$$148$off0$in = $45;
      break;
     }
    }
   } else {
    $$1$off0$in = $18;$$148$off0$in = $20;
   }
  } while(0);
  $$1$off0 = ($$1$off0$in<<24>>24)!=(0);
  $$148$off0 = ($$148$off0$in<<24>>24)!=(0);
  $48 = $$1$off0&1;
  HEAP8[$9>>0] = $48;
  $49 = $$148$off0&1;
  HEAP8[$11>>0] = $49;
 }
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$081 = 0, $$084 = 0, $$085$off0 = 0, $$1 = 0, $$182 = 0, $$186$off0 = 0, $$2 = 0, $$28392 = 0, $$28393 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $extract$t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZL8is_equalPKSt9type_infoS1_b($0,$6,$4)|0);
 L1: do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZL8is_equalPKSt9type_infoS1_b($0,$8,$4)|0);
   if (!($9)) {
    $59 = ((($0)) + 16|0);
    $60 = ((($0)) + 12|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = (((($0)) + 16|0) + ($61<<3)|0);
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($59,$1,$2,$3,$4);
    $63 = ((($0)) + 24|0);
    $64 = ($61|0)>(1);
    if (!($64)) {
     break;
    }
    $65 = ((($0)) + 8|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = $66 & 2;
    $68 = ($67|0)==(0);
    if ($68) {
     $69 = ((($1)) + 36|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($70|0)==(1);
     if (!($71)) {
      $77 = $66 & 1;
      $78 = ($77|0)==(0);
      if ($78) {
       $89 = ((($1)) + 54|0);
       $$2 = $63;
       while(1) {
        $90 = HEAP8[$89>>0]|0;
        $91 = ($90<<24>>24)==(0);
        if (!($91)) {
         break L1;
        }
        $92 = HEAP32[$69>>2]|0;
        $93 = ($92|0)==(1);
        if ($93) {
         break L1;
        }
        __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$2,$1,$2,$3,$4);
        $94 = ((($$2)) + 8|0);
        $95 = ($94>>>0)<($62>>>0);
        if ($95) {
         $$2 = $94;
        } else {
         break L1;
        }
       }
      }
      $79 = ((($1)) + 24|0);
      $80 = ((($1)) + 54|0);
      $$1 = $63;
      while(1) {
       $81 = HEAP8[$80>>0]|0;
       $82 = ($81<<24>>24)==(0);
       if (!($82)) {
        break L1;
       }
       $83 = HEAP32[$69>>2]|0;
       $84 = ($83|0)==(1);
       if ($84) {
        $85 = HEAP32[$79>>2]|0;
        $86 = ($85|0)==(1);
        if ($86) {
         break L1;
        }
       }
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$1,$1,$2,$3,$4);
       $87 = ((($$1)) + 8|0);
       $88 = ($87>>>0)<($62>>>0);
       if ($88) {
        $$1 = $87;
       } else {
        break L1;
       }
      }
     }
    }
    $72 = ((($1)) + 54|0);
    $$0 = $63;
    while(1) {
     $73 = HEAP8[$72>>0]|0;
     $74 = ($73<<24>>24)==(0);
     if (!($74)) {
      break L1;
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$0,$1,$2,$3,$4);
     $75 = ((($$0)) + 8|0);
     $76 = ($75>>>0)<($62>>>0);
     if ($76) {
      $$0 = $75;
     } else {
      break L1;
     }
    }
   }
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==($2|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==($2|0);
    if (!($15)) {
     $18 = ((($1)) + 32|0);
     HEAP32[$18>>2] = $3;
     $19 = ((($1)) + 44|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(4);
     if (!($21)) {
      $22 = ((($0)) + 16|0);
      $23 = ((($0)) + 12|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = (((($0)) + 16|0) + ($24<<3)|0);
      $26 = ((($1)) + 52|0);
      $27 = ((($1)) + 53|0);
      $28 = ((($1)) + 54|0);
      $29 = ((($0)) + 8|0);
      $30 = ((($1)) + 24|0);
      $$081 = 0;$$084 = $22;$$085$off0 = 0;
      L33: while(1) {
       $31 = ($$084>>>0)<($25>>>0);
       if (!($31)) {
        label = 18;
        break;
       }
       HEAP8[$26>>0] = 0;
       HEAP8[$27>>0] = 0;
       __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$084,$1,$2,$2,1,$4);
       $32 = HEAP8[$28>>0]|0;
       $33 = ($32<<24>>24)==(0);
       if (!($33)) {
        label = 18;
        break;
       }
       $34 = HEAP8[$27>>0]|0;
       $35 = ($34<<24>>24)==(0);
       do {
        if ($35) {
         $$182 = $$081;$$186$off0 = $$085$off0;
        } else {
         $36 = HEAP8[$26>>0]|0;
         $37 = ($36<<24>>24)==(0);
         if ($37) {
          $43 = HEAP32[$29>>2]|0;
          $44 = $43 & 1;
          $45 = ($44|0)==(0);
          if ($45) {
           $$28393 = $$081;
           label = 19;
           break L33;
          } else {
           $$182 = $$081;$$186$off0 = 1;
           break;
          }
         }
         $38 = HEAP32[$30>>2]|0;
         $39 = ($38|0)==(1);
         if ($39) {
          $$28393 = 1;
          label = 19;
          break L33;
         }
         $40 = HEAP32[$29>>2]|0;
         $41 = $40 & 2;
         $42 = ($41|0)==(0);
         if ($42) {
          $$28393 = 1;
          label = 19;
          break L33;
         } else {
          $$182 = 1;$$186$off0 = 1;
         }
        }
       } while(0);
       $46 = ((($$084)) + 8|0);
       $$081 = $$182;$$084 = $46;$$085$off0 = $$186$off0;
      }
      if ((label|0) == 18) {
       if ($$085$off0) {
        $$28393 = $$081;
        label = 19;
       } else {
        $$28392 = $$081;$47 = 4;
       }
      }
      if ((label|0) == 19) {
       $$28392 = $$28393;$47 = 3;
      }
      HEAP32[$19>>2] = $47;
      $48 = $$28392 & 1;
      $extract$t = ($48<<24>>24)==(0);
      if (!($extract$t)) {
       break;
      }
     }
     HEAP32[$13>>2] = $2;
     $49 = ((($1)) + 40|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = (($50) + 1)|0;
     HEAP32[$49>>2] = $51;
     $52 = ((($1)) + 36|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ($53|0)==(1);
     if (!($54)) {
      break;
     }
     $55 = ((($1)) + 24|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($56|0)==(2);
     if (!($57)) {
      break;
     }
     $58 = ((($1)) + 54|0);
     HEAP8[$58>>0] = 1;
     break;
    }
   }
   $16 = ($3|0)==(1);
   if ($16) {
    $17 = ((($1)) + 32|0);
    HEAP32[$17>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZL8is_equalPKSt9type_infoS1_b($0,$5,0)|0);
 L1: do {
  if ($6) {
   __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
  } else {
   $7 = ((($0)) + 16|0);
   $8 = ((($0)) + 12|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (((($0)) + 16|0) + ($9<<3)|0);
   __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($7,$1,$2,$3);
   $11 = ($9|0)>(1);
   if ($11) {
    $12 = ((($0)) + 24|0);
    $13 = ((($1)) + 54|0);
    $$0 = $12;
    while(1) {
     __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($$0,$1,$2,$3);
     $14 = HEAP8[$13>>0]|0;
     $15 = ($14<<24>>24)==(0);
     if (!($15)) {
      break L1;
     }
     $16 = ((($$0)) + 8|0);
     $17 = ($16>>>0)<($10>>>0);
     if ($17) {
      $$0 = $16;
     } else {
      break;
     }
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($2|0)==(0|0);
 $$phi$trans$insert = ((($0)) + 4|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 if ($4) {
  $$0 = 0;
 } else {
  $5 = $$pre >> 8;
  $6 = $$pre & 1;
  $7 = ($6|0)==(0);
  if ($7) {
   $$0 = $5;
  } else {
   $8 = HEAP32[$2>>2]|0;
   $9 = (($8) + ($5)|0);
   $10 = HEAP32[$9>>2]|0;
   $$0 = $10;
  }
 }
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 28|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($2) + ($$0)|0);
 $16 = $$pre & 2;
 $17 = ($16|0)==(0);
 $18 = $17 ? 2 : $3;
 FUNCTION_TABLE_viiii[$14 & 1023]($11,$1,$15,$18);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 >> 8;
 $9 = $7 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  $$0 = $8;
 } else {
  $11 = HEAP32[$3>>2]|0;
  $12 = (($11) + ($8)|0);
  $13 = HEAP32[$12>>2]|0;
  $$0 = $13;
 }
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($3) + ($$0)|0);
 $19 = $7 & 2;
 $20 = ($19|0)==(0);
 $21 = $20 ? 2 : $4;
 FUNCTION_TABLE_viiiiii[$17 & 1023]($14,$1,$2,$18,$21,$5);
 return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 >> 8;
 $8 = $6 & 1;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = $7;
 } else {
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + ($7)|0);
  $12 = HEAP32[$11>>2]|0;
  $$0 = $12;
 }
 $13 = HEAP32[$0>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 24|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($2) + ($$0)|0);
 $18 = $6 & 2;
 $19 = ($18|0)==(0);
 $20 = $19 ? 2 : $3;
 FUNCTION_TABLE_viiiii[$16 & 1023]($13,$1,$17,$20,$4);
 return;
}
function ___cxa_guard_acquire($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZN10__cxxabiv112_GLOBAL__N_114is_initializedEPj($0)|0);
 $2 = $1 ^ 1;
 $3 = $2&1;
 return ($3|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_114is_initializedEPj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)!=(0);
 return ($2|0);
}
function ___cxa_guard_release($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 __ZN10__cxxabiv112_GLOBAL__N_115set_initializedEPj($0);
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_115set_initializedEPj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 | 1;
 HEAP32[$0>>2] = $2;
 return;
}
function __ZSt15get_new_handlerv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function ___cxa_can_catch($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $4;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 1023]($0,$1,$3)|0);
 $9 = $8&1;
 if ($8) {
  $10 = HEAP32[$3>>2]|0;
  HEAP32[$2>>2] = $10;
 }
 STACKTOP = sp;return ($9|0);
}
function ___cxa_is_pointer_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, $phitmp1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $3 = 0;
 } else {
  $2 = (___dynamic_cast($0,8648,9832,0)|0);
  $phitmp = ($2|0)!=(0|0);
  $phitmp1 = $phitmp&1;
  $3 = $phitmp1;
 }
 return ($3|0);
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (setTempRet0(((($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0) | 0), 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = (getTempRet0() | 0);
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (setTempRet0((((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0) | 0), 0 | $1$0 & -1) | 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((setTempRet0((h) | 0),l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((setTempRet0((h) | 0),l|0)|0);
}
function _llvm_cttz_i32(x) { // Note: Currently doesn't take isZeroUndef()
    x = x | 0;
    return (x ? (31 - (Math_clz32((x ^ (x - 1))) | 0) | 0) : 32) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = (getTempRet0() | 0);
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = (getTempRet0() | 0);
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = (getTempRet0() | 0);
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (setTempRet0(($_0$1) | 0), $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      setTempRet0((high >> bits) | 0);
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    setTempRet0(((high|0) < 0 ? -1 : 0) | 0);
    return (high >> (bits - 32))|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      setTempRet0((high >>> bits) | 0);
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    setTempRet0((0) | 0);
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      setTempRet0(((high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits))) | 0);
      return low << bits;
    }
    setTempRet0((low << (bits - 32)) | 0);
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >= 8192) {
      _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
      return dest|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      block_aligned_end = (aligned_end - 64)|0;

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _pthread_cond_broadcast(x) {
    x = x | 0;
    return 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    totalMemory = _emscripten_get_heap_size()|0;

      oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
      newDynamicTop = oldDynamicTop + increment | 0;

      if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
        | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
        abortOnCannotGrowMemory(newDynamicTop|0)|0;
        ___setErrNo(12);
        return -1;
      }

      if ((newDynamicTop|0) > (totalMemory|0)) {
        if (_emscripten_resize_heap(newDynamicTop|0)|0) {
          // We resized the heap. Start another loop iteration if we need to.
        } else {
          // We failed to resize the heap.
          ___setErrNo(12);
          return -1;
        }
      }

      HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop|0;

    return oldDynamicTop|0;
}


function dynCall_i(index) {
  index = index|0;

  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_iidiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=+a2; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iidiiii[index&1023](a1|0,+a2,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&511](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_iiiiid(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=+a5;
  return FUNCTION_TABLE_iiiiid[index&255](a1|0,a2|0,a3|0,a4|0,+a5)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
  return FUNCTION_TABLE_iiiiiid[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,+a6)|0;
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_v(index) {
  index = index|0;

  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&1023](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}

function b0() {
 ; nullFunc_i(0);return 0;
}
function b1(p0) {
 p0 = p0|0; nullFunc_ii(1);return 0;
}
function b2(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = +p1;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iidiiii(2);return 0;
}
function b3(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(3);return 0;
}
function b4(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(4);return 0;
}
function b5(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(5);return 0;
}
function b6(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = +p4; nullFunc_iiiiid(6);return 0;
}
function b7(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(7);return 0;
}
function b8(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; nullFunc_iiiiiid(8);return 0;
}
function b9(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(9);return 0;
}
function b10(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(10);return 0;
}
function b11(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(11);return 0;
}
function b12() {
 ; nullFunc_v(12);
}
function ___cxa_pure_virtual__wrapper() {
 ; ___cxa_pure_virtual();
}
function b13(p0) {
 p0 = p0|0; nullFunc_vi(13);
}
function b14(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(14);
}
function b15(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(15);
}
function b16(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(16);
}
function b17(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(17);
}
function b18(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(18);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_i = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,__ZN10emscripten8internal12operator_newI6LASZipJEEEPT_DpOT0_,b0,b0,b0,b0,b0,b0,b0,__ZN10emscripten8internal12operator_newI12ChunkDecoderJEEEPT_DpOT0_,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_ii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNKSt13runtime_error4whatEv,__ZNSt3__210__function8__policy13__large_cloneINS0_12__alloc_funcINS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvPhiEJPS8_RKNS_12placeholders4__phILi1EEERKNSE_ILi2EEEEEENS_9allocatorISL_EEFvS9_mEEEEEPvPKv,b1,b1,b1
,__ZNK7lazperf7laz_vlr4sizeEv,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,b1,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,b1,b1,b1,__ZNSt3__210__function8__policy13__large_cloneINS0_12__alloc_funcINS_6__bindIMN7lazperf12InFileStream7PrivateEFvPhmEJPS7_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEENS_9allocatorISK_EEFvS8_mEEEEEPvPKv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,___stdio_close,b1,b1,b1,b1,b1,b1,b1
,__ZNKSt3__217bad_function_call4whatEv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,b1,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNSt3__211__stdoutbufIwE4syncEv,b1,b1,b1,b1,__ZNSt3__211__stdoutbufIcE4syncEv,b1,b1,b1,b1,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,b1,b1,b1,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,b1
,b1,b1,b1,b1,b1,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,b1,b1,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,b1,b1,b1,b1,b1,b1,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,b1,b1
,b1,b1,b1,b1,b1,b1,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv,b1,b1,b1,b1,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,b1,b1,b1,b1,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,b1,b1,b1,b1,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,b1,b1,b1,b1,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv
,b1,b1,b1,b1,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,b1,b1,b1,b1,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,b1,b1,b1,b1,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,b1,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,b1,b1,b1,b1,b1,b1,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv
,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,b1,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNKSt3__28numpunctIcE16do_decimal_pointEv,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,b1,b1,b1,b1,b1,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,b1,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv,b1,b1,b1,b1,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,b1,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNKSt9exception4whatEv,b1,b1,__ZNKSt11logic_error4whatEv,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,__ZN10emscripten8internal13getActualTypeI6LASZipEEPKvPT_,b1,b1,b1,__ZNK6LASZip14getPointLengthEv,__ZNK6LASZip14getPointFormatEv,b1,__ZNK6LASZip8getCountEv,__ZN10emscripten8internal13getActualTypeI12ChunkDecoderEEPKvPT_,b1,b1,b1,b1,__ZN10emscripten8internal7InvokerIP6LASZipJEE6invokeEPFS3_vE,b1,b1,b1,__ZN10emscripten8internal7InvokerIP12ChunkDecoderJEE6invokeEPFS3_vE,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_iidiiii = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_fmt_fp,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_iii = [b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,b3,__ZN7lazperf11LeExtractorrsERh,__ZN7lazperf11LeExtractorrsERa,__ZN7lazperf11LeExtractorrsERt,__ZN7lazperf11LeExtractorrsERs,__ZN7lazperf11LeExtractorrsERj,__ZN7lazperf11LeExtractorrsERi,__ZN7lazperf11LeExtractorrsERy,__ZN7lazperf11LeExtractorrsERx,__ZN7lazperf11LeExtractorrsERf,__ZN7lazperf11LeExtractorrsERd,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,b3,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,b3,b3,b3,b3,__ZN7lazperf20point_decompressor_010decompressEPc,b3,b3,__ZN7lazperf20point_decompressor_110decompressEPc,b3,b3,__ZN7lazperf20point_decompressor_210decompressEPc,b3
,b3,__ZN7lazperf20point_decompressor_310decompressEPc,b3,b3,__ZN7lazperf20point_decompressor_610decompressEPc,b3,b3,b3,b3,__ZN7lazperf20point_decompressor_710decompressEPc,b3,b3,__ZN7lazperf20point_decompressor_810decompressEPc,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3
,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,__ZNKSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE13__get_deleterERKSt9type_info,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,b3,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNSt3__211__stdoutbufIwE8overflowEj,b3,b3,b3,b3,__ZNSt3__211__stdoutbufIcE8overflowEi,b3,b3,b3,b3,__ZNSt3__210__stdinbufIwE9pbackfailEj,b3,b3,b3,b3,__ZNSt3__210__stdinbufIcE9pbackfailEi,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,__ZNKSt3__25ctypeIcE10do_toupperEc,b3,__ZNKSt3__25ctypeIcE10do_tolowerEc,b3,__ZNKSt3__25ctypeIcE8do_widenEc,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,__ZNKSt3__25ctypeIwE10do_toupperEw,b3,__ZNKSt3__25ctypeIwE10do_tolowerEw,b3,__ZNKSt3__25ctypeIwE8do_widenEc,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle4Node19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle4Node12hasArraySlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle4Node15hasFunctionSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle4Node13getSyntaxNodeERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,__ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType19hasRHSComponentSlowERNS_12OutputStreamE,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle11PointerType19hasRHSComponentSlowERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack12hasArraySlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack15hasFunctionSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack13getSyntaxNodeERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference12hasArraySlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference15hasFunctionSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference13getSyntaxNodeERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,__ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType19hasRHSComponentSlowERNS_12OutputStreamE,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle9ArrayType19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle9ArrayType12hasArraySlowERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle8QualType19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle8QualType12hasArraySlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle8QualType15hasFunctionSlowERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle12FunctionType19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle12FunctionType15hasFunctionSlowERNS_12OutputStreamE,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,__ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding19hasRHSComponentSlowERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding15hasFunctionSlowERNS_12OutputStreamE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN10emscripten8internal13MethodInvokerIM6LASZipKFjvEjPKS2_JEE6invokeERKS4_S6_,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iiii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl,b4,b4,b4,b4,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl,b4,b4,b4,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,___stdio_write,b4,___stdio_read,___stdout_write,_sn_write,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl,b4,b4,b4,b4,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl,b4,b4,b4,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNSt3__211__stdoutbufIwE6xsputnEPKwl,b4,b4,b4,b4,__ZNSt3__211__stdoutbufIcE6xsputnEPKcl,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,__ZNKSt3__27collateIcE7do_hashEPKcS3_,b4,b4,b4,b4,__ZNKSt3__27collateIwE7do_hashEPKwS3_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b4,b4,b4,b4,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,b4,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,b4,b4,__ZNKSt3__25ctypeIcE9do_narrowEcc,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,__ZNKSt3__25ctypeIwE5do_isEtw,b4,b4,b4,b4,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,b4,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,b4,b4,__ZNKSt3__25ctypeIwE9do_narrowEwc,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,__ZNK10__cxxabiv119__pointer_type_info9can_catchEPKNS_16__shim_type_infoERPv,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_do_read
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_iiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,___stdio_seek,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,b5,b5,b5,b5,b5,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_iiiiid = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,b6,b6,b6,b6,b6,b6,b6,b6,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiii = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,b7,b7,b7,b7,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,b7,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,b7,b7,b7,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,b7,b7,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,b7,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,b7,b7,b7,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b7,b7,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m,b7,b7,b7,b7,b7,b7,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b7
,b7,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,b7,b7,b7,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b7,b7,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m,b7,b7,b7,b7,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,b7,b7,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7];
var FUNCTION_TABLE_iiiiiid = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,b8
,b8,b8,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8];
var FUNCTION_TABLE_iiiiiii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b9,b9,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_
,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,b9,b9,b9,b9,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,b9,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,b9,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,b9,b9,b9,b9,b9,b9,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE
,b9,b9,b9,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_iiiiiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,b10,b10,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,b10,b10,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10];
var FUNCTION_TABLE_iiiiiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,b11,b11,b11,b11,b11,b11,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11];
var FUNCTION_TABLE_v = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,___cxa_pure_virtual__wrapper,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,__ZL28demangling_terminate_handlerv,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12];
var FUNCTION_TABLE_vi = [b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader8mem_fileENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf6reader18chunk_decompressorENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN7lazperf5errorD2Ev,__ZN7lazperf5errorD0Ev,b13,b13,__ZNSt3__210__function8__policy15__large_destroyINS0_12__alloc_funcINS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvPhiEJPS8_RKNS_12placeholders4__phILi1EEERKNSE_ILi2EEEEEENS_9allocatorISL_EEFvS9_mEEEEEvPv,__ZN7lazperf7laz_vlrD2Ev,__ZN7lazperf7laz_vlrD0Ev
,b13,b13,__ZN7lazperf3vlrD2Ev,__ZN7lazperf3vlrD0Ev,__ZN7lazperf7charbufD2Ev,__ZN7lazperf7charbufD0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__210__function8__policy15__large_destroyINS0_12__alloc_funcINS_6__bindIMN7lazperf12InFileStream7PrivateEFvPhmEJPS7_RKNS_12placeholders4__phILi1EEERKNSD_ILi2EEEEEENS_9allocatorISK_EEFvS8_mEEEEEvPv,__ZN7lazperf27point_decompressor_base_1_2D2Ev,__ZN7lazperf27point_decompressor_base_1_2D0Ev,b13,__ZN7lazperf20point_decompressor_0D2Ev,__ZN7lazperf20point_decompressor_0D0Ev,b13,__ZN7lazperf20point_decompressor_1D2Ev,__ZN7lazperf20point_decompressor_1D0Ev,b13,__ZN7lazperf20point_decompressor_2D2Ev
,__ZN7lazperf20point_decompressor_2D0Ev,b13,__ZN7lazperf20point_decompressor_3D2Ev,__ZN7lazperf20point_decompressor_3D0Ev,b13,__ZN7lazperf20point_decompressor_6D2Ev,__ZN7lazperf20point_decompressor_6D0Ev,__ZN7lazperf27point_decompressor_base_1_4D2Ev,__ZN7lazperf27point_decompressor_base_1_4D0Ev,b13,__ZN7lazperf20point_decompressor_7D2Ev,__ZN7lazperf20point_decompressor_7D0Ev,b13,__ZN7lazperf20point_decompressor_8D2Ev,__ZN7lazperf20point_decompressor_8D0Ev,__ZN7lazperf16las_decompressorD2Ev,__ZN7lazperf16las_decompressorD0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_8ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_7ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv
,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_6ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_3ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_2ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_1ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE16__on_zero_sharedEv,b13,__ZNSt3__220__shared_ptr_pointerIPN7lazperf20point_decompressor_0ENS_14default_deleteIS2_EENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,b13,b13,b13,b13,b13,b13,__ZNSt3__217bad_function_callD2Ev,__ZNSt3__217bad_function_callD0Ev
,b13,__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev,__ZNSt3__29basic_iosIcNS_11char_traitsIcEEED0Ev,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,b13,b13,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev
,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__211__stdoutbufIwED0Ev,b13,b13,b13,b13,__ZNSt3__211__stdoutbufIcED0Ev,b13,b13,b13,b13,__ZNSt3__210__stdinbufIwED0Ev,b13,b13,b13,b13,__ZNSt3__210__stdinbufIcED0Ev,b13,b13,b13,b13,__ZNSt3__27collateIcED2Ev
,__ZNSt3__27collateIcED0Ev,__ZNSt3__26locale5facet16__on_zero_sharedEv,b13,b13,b13,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,b13,b13,b13,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev
,b13,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b13,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev,b13,b13
,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__210moneypunctIwLb1EED2Ev,__ZNSt3__210moneypunctIwLb1EED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b13,b13,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b13,b13,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,b13,b13
,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,b13,b13,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,b13,b13,b13,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,b13,b13,b13,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILm32EED0Ev,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__217__widen_from_utf8ILm32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev,b13,b13,b13,b13
,b13,b13,b13,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,b13,b13,b13,b13,b13,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,b13,b13,b13,b13,b13,__ZNSt3__26locale5facetD0Ev
,__ZNSt3__25ctypeIwED0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev
,__ZNSt3__214__shared_countD2Ev,__ZNSt3__214__shared_countD0Ev,__ZNSt3__219__shared_weak_countD0Ev,b13,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b13,b13,b13,b13,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle4NodeD2Ev,__ZN12_GLOBAL__N_116itanium_demangle10AbiTagAttrD0Ev,__ZN12_GLOBAL__N_116itanium_demangle4NodeD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle19SpecialSubstitutionD0Ev,b13
,__ZN12_GLOBAL__N_116itanium_demangle20PostfixQualifiedTypeD0Ev,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle13ReferenceTypeD0Ev,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle11PointerTypeD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgsD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle12TemplateArgsD0Ev,b13,b13,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle13ParameterPackD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15IntegerCastExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeED0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdED0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfED0Ev,b13
,__ZN12_GLOBAL__N_116itanium_demangle8BoolExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle14IntegerLiteralD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle20TemplateArgumentPackD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle9ThrowExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle12InitListExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle13NodeArrayNodeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle13EnclosingExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle19SizeofParamPackExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle22ParameterPackExpansionD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle8CastExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15ConditionalExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle7NewExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle11PostfixExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15BracedRangeExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle10BracedExprD0Ev,b13
,b13,__ZN12_GLOBAL__N_116itanium_demangle8NameTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle18ArraySubscriptExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle10MemberExprD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle19GlobalQualifiedNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15LiteralOperatorD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle22ConversionOperatorTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle8DtorNameD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle13QualifiedNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle10DeleteExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle14ConversionExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle8CallExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle10PrefixExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle10BinaryExprD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle8FoldExprD0Ev
,b13,__ZN12_GLOBAL__N_116itanium_demangle13FunctionParamD0Ev,b13,b13,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle24ForwardTemplateReferenceD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefTypeD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle16StdQualifiedNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle21StructuredBindingNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15ClosureTypeNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15UnnamedTypeNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle9LocalNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle12CtorDtorNameD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitutionD0Ev,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle10NestedNameD0Ev
,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle19PointerToMemberTypeD0Ev,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle9ArrayTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle10VectorTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle15PixelVectorTypeD0Ev,b13,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle8QualTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle17VendorExtQualTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle13ObjCProtoNameD0Ev,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle12FunctionTypeD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpecD0Ev
,b13,__ZN12_GLOBAL__N_116itanium_demangle12NoexceptSpecD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle11SpecialNameD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle9DotSuffixD0Ev,b13,b13,b13,b13,__ZN12_GLOBAL__N_116itanium_demangle16FunctionEncodingD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle12EnableIfAttrD0Ev,b13,__ZN12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialNameD0Ev,__ZNSt9exceptionD2Ev,__ZNSt9exceptionD0Ev,b13,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b13,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,b13,__ZN10__cxxabiv119__pointer_type_infoD0Ev,b13,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,b13
,b13,b13,b13,__ZN10emscripten8internal14raw_destructorI6LASZipEEvPT_,b13,b13,b13,b13,b13,b13,b13,__ZN10emscripten8internal14raw_destructorI12ChunkDecoderEEvPT_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,__ZNSt3__26locale2id6__initEv,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,__ZNSt3__212__do_nothingEPv,_free,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_vii = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,__ZNK7lazperf7laz_vlr6headerEv,b14,b14,b14,b14,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,b14,b14,b14,b14,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,b14,b14,b14,b14,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE,b14,b14,b14,b14,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,b14,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,b14,b14,b14,b14,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,b14,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,b14,b14,b14,b14
,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,b14,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,b14,b14,b14,b14,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv,b14,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__28messagesIcE8do_closeEl,b14,b14,b14,b14,__ZNKSt3__28messagesIwE8do_closeEl,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv,b14,b14,b14,b14,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle10AbiTagAttr9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle4Node10printRightERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle4Node11getBaseNameEv,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle19SpecialSubstitution9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle19SpecialSubstitution11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle20PostfixQualifiedType9printLeftERNS_12OutputStreamE
,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle13ReferenceType10printRightERNS_12OutputStreamE,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle11PointerType9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle11PointerType10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgs9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle20NameWithTemplateArgs11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle12TemplateArgs9printLeftERNS_12OutputStreamE,b14,b14,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle13ParameterPack10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle15IntegerCastExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIeE9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIdE9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle16FloatLiteralImplIfE9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle8BoolExpr9printLeftERNS_12OutputStreamE
,b14,__ZNK12_GLOBAL__N_116itanium_demangle14IntegerLiteral9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle20TemplateArgumentPack9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle9ThrowExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle12InitListExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle13NodeArrayNode9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle13EnclosingExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle19SizeofParamPackExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle22ParameterPackExpansion9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle8CastExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle15ConditionalExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle7NewExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle11PostfixExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle15BracedRangeExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle10BracedExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle8NameType9printLeftERNS_12OutputStreamE
,__ZNK12_GLOBAL__N_116itanium_demangle8NameType11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle18ArraySubscriptExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle10MemberExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle19GlobalQualifiedName9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle19GlobalQualifiedName11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle15LiteralOperator9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle22ConversionOperatorType9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle8DtorName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle13QualifiedName9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle13QualifiedName11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle10DeleteExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle14ConversionExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle8CallExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle10PrefixExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle10BinaryExpr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle8FoldExpr9printLeftERNS_12OutputStreamE,b14
,__ZNK12_GLOBAL__N_116itanium_demangle13FunctionParam9printLeftERNS_12OutputStreamE,b14,b14,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle24ForwardTemplateReference10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle22ElaboratedTypeSpefType9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle16StdQualifiedName9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle16StdQualifiedName11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle21StructuredBindingName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle15ClosureTypeName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle15UnnamedTypeName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle9LocalName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle12CtorDtorName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitution9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle27ExpandedSpecialSubstitution11getBaseNameEv,b14,__ZNK12_GLOBAL__N_116itanium_demangle10NestedName9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle10NestedName11getBaseNameEv,b14
,b14,__ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle19PointerToMemberType10printRightERNS_12OutputStreamE,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle9ArrayType9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle9ArrayType10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle10VectorType9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle15PixelVectorType9printLeftERNS_12OutputStreamE,b14,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle8QualType9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle8QualType10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle17VendorExtQualType9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle13ObjCProtoName9printLeftERNS_12OutputStreamE,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle12FunctionType9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle12FunctionType10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle20DynamicExceptionSpec9printLeftERNS_12OutputStreamE,b14
,__ZNK12_GLOBAL__N_116itanium_demangle12NoexceptSpec9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle11SpecialName9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle9DotSuffix9printLeftERNS_12OutputStreamE,b14,b14,b14,__ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding9printLeftERNS_12OutputStreamE,__ZNK12_GLOBAL__N_116itanium_demangle16FunctionEncoding10printRightERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle12EnableIfAttr9printLeftERNS_12OutputStreamE,b14,__ZNK12_GLOBAL__N_116itanium_demangle21CtorVtableSpecialName9printLeftERNS_12OutputStreamE,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,__ZN6LASZip8getPointEi,b14,b14,b14,b14,b14,__ZN12ChunkDecoder8getPointEj,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,_pop_arg_long_double,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_viii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,__ZN6LASZip4openEjm,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN10emscripten8internal13MethodInvokerIM6LASZipFviEvPS2_JiEE6invokeERKS4_S5_i,b15,b15,__ZN10emscripten8internal13MethodInvokerIM12ChunkDecoderFvjEvPS2_JjEE6invokeERKS4_S5_j,__ZN7lazperf6reader18chunk_decompressor7Private8getBytesEPhi,__ZNSt3__210__function16__policy_invokerIFvPhmEE12__call_emptyEPKNS0_16__policy_storageES2_m,__ZNSt3__210__function16__policy_invokerIFvPhmEE11__call_implINS0_12__alloc_funcINS_6__bindIMN7lazperf6reader18chunk_decompressor7PrivateEFvS2_iEJPSB_RKNS_12placeholders4__phILi1EEERKNSG_ILi2EEEEEENS_9allocatorISN_EES3_EEEEvPKNS0_16__policy_storageES2_m,__ZN7lazperf12InFileStream7Private8getBytesEPhm,__ZNSt3__210__function16__policy_invokerIFvPhmEE11__call_implINS0_12__alloc_funcINS_6__bindIMN7lazperf12InFileStream7PrivateEFvS2_mEJPSA_RKNS_12placeholders4__phILi1EEERKNSF_ILi2EEEEEENS_9allocatorISM_EES3_EEEEvPKNS0_16__policy_storageES2_m,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZN7lazperf7charbuf7seekposENSt3__24fposI11__mbstate_tEEj,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,b16,b16,b16,b16,b16,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,__ZNKSt3__27collateIcE12do_transformEPKcS3_,b16,b16,b16,b16,__ZNKSt3__27collateIwE12do_transformEPKwS3_,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,__ZN12ChunkDecoder4openEiij,b16,b16,__ZN10emscripten8internal13MethodInvokerIM6LASZipFvjmEvPS2_JjmEE6invokeERKS4_S5_jm,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16];
var FUNCTION_TABLE_viiiii = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b17,b17,b17,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZN10emscripten8internal13MethodInvokerIM12ChunkDecoderFviijEvPS2_JiijEE6invokeERKS4_S5_iij,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viiiiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,__ZN7lazperf7charbuf7seekoffExNSt3__28ios_base7seekdirEj,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,b18,b18,b18,b18,b18,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b18,b18,b18,b18,__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b18,b18,b18,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];

  return { __ZSt18uncaught_exceptionv: __ZSt18uncaught_exceptionv, ___cxa_can_catch: ___cxa_can_catch, ___cxa_is_pointer_type: ___cxa_is_pointer_type, ___embind_register_native_and_builtin_types: ___embind_register_native_and_builtin_types, ___errno_location: ___errno_location, ___getTypeName: ___getTypeName, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, _bitshift64Ashr: _bitshift64Ashr, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _pthread_cond_broadcast: _pthread_cond_broadcast, _sbrk: _sbrk, dynCall_i: dynCall_i, dynCall_ii: dynCall_ii, dynCall_iidiiii: dynCall_iidiiii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, establishStackSpace: establishStackSpace, globalCtors: globalCtors, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(asmGlobalArg, asmLibraryArg, buffer);

var real___ZSt18uncaught_exceptionv = asm["__ZSt18uncaught_exceptionv"];
asm["__ZSt18uncaught_exceptionv"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___ZSt18uncaught_exceptionv.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"];
asm["___cxa_can_catch"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_can_catch.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"];
asm["___cxa_is_pointer_type"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_is_pointer_type.apply(null, arguments);
};

var real____embind_register_native_and_builtin_types = asm["___embind_register_native_and_builtin_types"];
asm["___embind_register_native_and_builtin_types"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____embind_register_native_and_builtin_types.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"];
asm["___errno_location"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____errno_location.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"];
asm["___getTypeName"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____getTypeName.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"];
asm["___muldi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____muldi3.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"];
asm["___udivdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____udivdi3.apply(null, arguments);
};

var real__bitshift64Ashr = asm["_bitshift64Ashr"];
asm["_bitshift64Ashr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Ashr.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"];
asm["_bitshift64Lshr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"];
asm["_bitshift64Shl"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"];
asm["_fflush"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__fflush.apply(null, arguments);
};

var real__free = asm["_free"];
asm["_free"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__free.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"];
asm["_i64Add"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Add.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"];
asm["_i64Subtract"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Subtract.apply(null, arguments);
};

var real__malloc = asm["_malloc"];
asm["_malloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__malloc.apply(null, arguments);
};

var real__memmove = asm["_memmove"];
asm["_memmove"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__memmove.apply(null, arguments);
};

var real__pthread_cond_broadcast = asm["_pthread_cond_broadcast"];
asm["_pthread_cond_broadcast"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__pthread_cond_broadcast.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"];
asm["_sbrk"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__sbrk.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"];
asm["establishStackSpace"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_establishStackSpace.apply(null, arguments);
};

var real_globalCtors = asm["globalCtors"];
asm["globalCtors"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_globalCtors.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"];
asm["stackAlloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackAlloc.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"];
asm["stackRestore"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackRestore.apply(null, arguments);
};

var real_stackSave = asm["stackSave"];
asm["stackSave"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackSave.apply(null, arguments);
};
var __ZSt18uncaught_exceptionv = Module["__ZSt18uncaught_exceptionv"] = asm["__ZSt18uncaught_exceptionv"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var ___embind_register_native_and_builtin_types = Module["___embind_register_native_and_builtin_types"] = asm["___embind_register_native_and_builtin_types"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var _bitshift64Ashr = Module["_bitshift64Ashr"] = asm["_bitshift64Ashr"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _free = Module["_free"] = asm["_free"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var globalCtors = Module["globalCtors"] = asm["globalCtors"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iidiiii = Module["dynCall_iidiiii"] = asm["dynCall_iidiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
;



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;

if (!Object.getOwnPropertyDescriptor(Module, "intArrayFromString")) Module["intArrayFromString"] = function() { abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "intArrayToString")) Module["intArrayToString"] = function() { abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "ccall")) Module["ccall"] = function() { abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "cwrap")) Module["cwrap"] = function() { abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setValue")) Module["setValue"] = function() { abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getValue")) Module["getValue"] = function() { abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "allocate")) Module["allocate"] = function() { abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getMemory")) Module["getMemory"] = function() { abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "AsciiToString")) Module["AsciiToString"] = function() { abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToAscii")) Module["stringToAscii"] = function() { abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF8ArrayToString")) Module["UTF8ArrayToString"] = function() { abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF8ToString")) Module["UTF8ToString"] = function() { abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF8Array")) Module["stringToUTF8Array"] = function() { abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF8")) Module["stringToUTF8"] = function() { abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF8")) Module["lengthBytesUTF8"] = function() { abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF16ToString")) Module["UTF16ToString"] = function() { abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF16")) Module["stringToUTF16"] = function() { abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF16")) Module["lengthBytesUTF16"] = function() { abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "UTF32ToString")) Module["UTF32ToString"] = function() { abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stringToUTF32")) Module["stringToUTF32"] = function() { abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "lengthBytesUTF32")) Module["lengthBytesUTF32"] = function() { abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "allocateUTF8")) Module["allocateUTF8"] = function() { abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackTrace")) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnPreRun")) Module["addOnPreRun"] = function() { abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnInit")) Module["addOnInit"] = function() { abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnPreMain")) Module["addOnPreMain"] = function() { abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnExit")) Module["addOnExit"] = function() { abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addOnPostRun")) Module["addOnPostRun"] = function() { abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeStringToMemory")) Module["writeStringToMemory"] = function() { abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeArrayToMemory")) Module["writeArrayToMemory"] = function() { abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "writeAsciiToMemory")) Module["writeAsciiToMemory"] = function() { abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addRunDependency")) Module["addRunDependency"] = function() { abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "removeRunDependency")) Module["removeRunDependency"] = function() { abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "ENV")) Module["ENV"] = function() { abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "FS")) Module["FS"] = function() { abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createFolder")) Module["FS_createFolder"] = function() { abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createPath")) Module["FS_createPath"] = function() { abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createDataFile")) Module["FS_createDataFile"] = function() { abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createPreloadedFile")) Module["FS_createPreloadedFile"] = function() { abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createLazyFile")) Module["FS_createLazyFile"] = function() { abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createLink")) Module["FS_createLink"] = function() { abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_createDevice")) Module["FS_createDevice"] = function() { abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "FS_unlink")) Module["FS_unlink"] = function() { abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Object.getOwnPropertyDescriptor(Module, "GL")) Module["GL"] = function() { abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "dynamicAlloc")) Module["dynamicAlloc"] = function() { abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "loadDynamicLibrary")) Module["loadDynamicLibrary"] = function() { abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "loadWebAssemblyModule")) Module["loadWebAssemblyModule"] = function() { abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getLEB")) Module["getLEB"] = function() { abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getFunctionTables")) Module["getFunctionTables"] = function() { abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "alignFunctionTables")) Module["alignFunctionTables"] = function() { abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "registerFunctions")) Module["registerFunctions"] = function() { abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "addFunction")) Module["addFunction"] = function() { abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "removeFunction")) Module["removeFunction"] = function() { abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getFuncWrapper")) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "prettyPrint")) Module["prettyPrint"] = function() { abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "makeBigInt")) Module["makeBigInt"] = function() { abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "dynCall")) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getCompilerSetting")) Module["getCompilerSetting"] = function() { abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackSave")) Module["stackSave"] = function() { abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackRestore")) Module["stackRestore"] = function() { abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "stackAlloc")) Module["stackAlloc"] = function() { abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "establishStackSpace")) Module["establishStackSpace"] = function() { abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "print")) Module["print"] = function() { abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "printErr")) Module["printErr"] = function() { abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "getTempRet0")) Module["getTempRet0"] = function() { abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "setTempRet0")) Module["setTempRet0"] = function() { abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "callMain")) Module["callMain"] = function() { abort("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "Pointer_stringify")) Module["Pointer_stringify"] = function() { abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "warnOnce")) Module["warnOnce"] = function() { abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "intArrayFromBase64")) Module["intArrayFromBase64"] = function() { abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Object.getOwnPropertyDescriptor(Module, "tryParseAsDataURI")) Module["tryParseAsDataURI"] = function() { abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_NORMAL")) Object.defineProperty(Module, "ALLOC_NORMAL", { get: function() { abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_STACK")) Object.defineProperty(Module, "ALLOC_STACK", { get: function() { abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_DYNAMIC")) Object.defineProperty(Module, "ALLOC_DYNAMIC", { get: function() { abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Object.getOwnPropertyDescriptor(Module, "ALLOC_NONE")) Object.defineProperty(Module, "ALLOC_NONE", { get: function() { abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Object.getOwnPropertyDescriptor(Module, "calledRun")) Object.defineProperty(Module, "calledRun", { get: function() { abort("'calledRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") } });

if (memoryInitializer) {
  if (!isDataURI(memoryInitializer)) {
    memoryInitializer = locateFile(memoryInitializer);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = readBinary(memoryInitializer);
    HEAPU8.set(data, GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[GLOBAL_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    };
    var doBrowserLoad = function() {
      readAsync(memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    };
    var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
    if (memoryInitializerBytes) {
      applyMemoryInitializer(memoryInitializerBytes.buffer);
    } else
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      var useRequest = function() {
        var request = Module['memoryInitializerRequest'];
        var response = request.response;
        if (request.status !== 200 && request.status !== 0) {
          var data = tryParseAsDataURI(Module['memoryInitializerRequestURL']);
          if (data) {
            response = data.buffer;
          } else {
            // If you see this warning, the issue may be that you are using locateFile and defining it in JS. That
            // means that the HTML file doesn't know about it, and when it tries to create the mem init request early, does it to the wrong place.
            // Look in your browser's devtools network console to see what's going on.
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
            doBrowserLoad();
            return;
          }
        }
        applyMemoryInitializer(response);
      };
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}


var calledRun;


/**
 * @constructor
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
}

var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!calledRun) run();
  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
};





/** @type {function(Array=)} */
function run(args) {
  args = args || arguments_;

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later

  function doRun() {
    // run may have just been called through dependencies being fulfilled just in this very frame,
    // or while the async setStatus time below was happening
    if (calledRun) return;
    calledRun = true;

    if (ABORT) return;

    initRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else
  {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = run;

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var print = out;
  var printErr = err;
  var has = false;
  out = err = function(x) {
    has = true;
  }
  try { // it doesn't matter if it fails
    var flush = Module['_fflush'];
    if (flush) flush(0);
    // also flush in the JS FS layer
    ['stdout', 'stderr'].forEach(function(name) {
      var info = FS.analyzePath('/dev/' + name);
      if (!info) return;
      var stream = info.object;
      var rdev = stream.rdev;
      var tty = TTY.ttys[rdev];
      if (tty && tty.output && tty.output.length) {
        has = true;
      }
    });
  } catch(e) {}
  out = print;
  err = printErr;
  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');
  }
}

function exit(status, implicit) {
  checkUnflushedContent();

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && noExitRuntime && status === 0) {
    return;
  }

  if (noExitRuntime) {
    // if exit() was called, we may warn the user if the runtime isn't actually being shut down
    if (!implicit) {
      err('exit(' + status + ') called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)');
    }
  } else {

    ABORT = true;
    EXITSTATUS = status;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  quit_(status, new ExitStatus(status));
}

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  what += '';
  out(what);
  err(what);

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';
  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = abort;

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}


  noExitRuntime = true;

run();





// {{MODULE_ADDITIONS}}



